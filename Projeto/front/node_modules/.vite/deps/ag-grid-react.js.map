{
  "version": 3,
  "sources": ["../../react-dom/cjs/react-dom-server-legacy.browser.development.js", "../../react-dom/cjs/react-dom-server.browser.development.js", "../../react-dom/server.browser.js", "../../ag-grid-react/dist/package/index.esm.mjs", "../../ag-grid-community/dist/package/main.esm.mjs"],
  "sourcesContent": ["/**\n * @license React\n * react-dom-server-legacy.browser.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\nvar ReactVersion = '18.2.0';\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nfunction scheduleWork(callback) {\n  callback();\n}\nfunction beginWriting(destination) {}\nfunction writeChunk(destination, chunk) {\n  writeChunkAndReturn(destination, chunk);\n}\nfunction writeChunkAndReturn(destination, chunk) {\n  return destination.push(chunk);\n}\nfunction completeWriting(destination) {}\nfunction close(destination) {\n  destination.push(null);\n}\nfunction stringToChunk(content) {\n  return content;\n}\nfunction stringToPrecomputedChunk(content) {\n  return content;\n}\nfunction closeWithError(destination, error) {\n  // $FlowFixMe: This is an Error object or the destination accepts other types.\n  destination.destroy(error);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\n\nfunction checkAttributeStringCoercion(value, attributeName) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided `%s` attribute is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', attributeName, typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\nfunction checkCSSPropertyStringCoercion(value, propName) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided `%s` CSS property is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', propName, typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\nfunction checkHtmlStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided HTML markup uses a value of unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n// A reserved attribute.\n// It is handled by React separately and shouldn't be written to the DOM.\nvar RESERVED = 0; // A simple string attribute.\n// Attributes that aren't in the filter are presumed to have this type.\n\nvar STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n// When true, it should be set to a \"true\" string.\n// When false, it should be set to a \"false\" string.\n\nvar BOOLEANISH_STRING = 2; // A real boolean attribute.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n\nvar BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n// For any other value, should be present with that value.\n\nvar OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.\n// When falsy, it should be removed.\n\nvar NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.\n// When falsy, it should be removed.\n\nvar POSITIVE_NUMERIC = 6;\n\n/* eslint-disable max-len */\nvar ATTRIBUTE_NAME_START_CHAR = \":A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\n/* eslint-enable max-len */\n\nvar ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + \"\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {\n    return true;\n  }\n\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {\n    return false;\n  }\n\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n\n  illegalAttributeNameCache[attributeName] = true;\n\n  {\n    error('Invalid attribute name: `%s`', attributeName);\n  }\n\n  return false;\n}\nfunction shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {\n  if (propertyInfo !== null && propertyInfo.type === RESERVED) {\n    return false;\n  }\n\n  switch (typeof value) {\n    case 'function': // $FlowIssue symbol is perfectly valid here\n\n    case 'symbol':\n      // eslint-disable-line\n      return true;\n\n    case 'boolean':\n      {\n        if (isCustomComponentTag) {\n          return false;\n        }\n\n        if (propertyInfo !== null) {\n          return !propertyInfo.acceptsBooleans;\n        } else {\n          var prefix = name.toLowerCase().slice(0, 5);\n          return prefix !== 'data-' && prefix !== 'aria-';\n        }\n      }\n\n    default:\n      return false;\n  }\n}\nfunction getPropertyInfo(name) {\n  return properties.hasOwnProperty(name) ? properties[name] : null;\n}\n\nfunction PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {\n  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;\n  this.attributeName = attributeName;\n  this.attributeNamespace = attributeNamespace;\n  this.mustUseProperty = mustUseProperty;\n  this.propertyName = name;\n  this.type = type;\n  this.sanitizeURL = sanitizeURL;\n  this.removeEmptyString = removeEmptyString;\n} // When adding attributes to this list, be sure to also add them to\n// the `possibleStandardNames` module to ensure casing and incorrect\n// name warnings.\n\n\nvar properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.\n\nvar reservedProps = ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular\n// elements (not just inputs). Now that ReactDOMInput assigns to the\n// defaultValue property -- do we need this?\n'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'];\n\nreservedProps.forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // A few React string attributes have a different name.\n// This is a mapping from React prop names to the attribute names.\n\n[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {\n  var name = _ref[0],\n      attributeName = _ref[1];\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n\n['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n// Since these are SVG attributes, their attribute names are case-sensitive.\n\n['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML boolean attributes.\n\n['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM\n// on the client side because the browsers are inconsistent. Instead we call focus().\n'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'disableRemotePlayback', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata\n'itemScope'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are the few React props that we set as DOM properties\n// rather than attributes. These are all booleans.\n\n['checked', // Note: `option.selected` is not updated if `select.multiple` is\n// disabled with `removeAttribute`. We have special logic for handling this.\n'multiple', 'muted', 'selected' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that are \"overloaded booleans\": they behave like\n// booleans, but can also accept a string value.\n\n['capture', 'download' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that must be positive numbers.\n\n['cols', 'rows', 'size', 'span' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that must be numbers.\n\n['rowSpan', 'start'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n});\nvar CAMELIZE = /[\\-\\:]([a-z])/g;\n\nvar capitalize = function (token) {\n  return token[1].toUpperCase();\n}; // This is a list of all SVG attributes that need special casing, namespacing,\n// or boolean value assignment. Regular attributes that just accept strings\n// and have the same names are omitted, just like in the HTML attribute filter.\n// Some of these attributes can be hard to find. This list was created by\n// scraping the MDN documentation.\n\n\n['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // String SVG attributes with the xlink namespace.\n\n['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, 'http://www.w3.org/1999/xlink', false, // sanitizeURL\n  false);\n}); // String SVG attributes with the xml namespace.\n\n['xml:base', 'xml:lang', 'xml:space' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, 'http://www.w3.org/XML/1998/namespace', false, // sanitizeURL\n  false);\n}); // These attribute exists both in HTML and SVG.\n// The attribute name is case-sensitive in SVG so we can't just use\n// the React name like we do for attributes that exist only in HTML.\n\n['tabIndex', 'crossOrigin'].forEach(function (attributeName) {\n  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty\n  attributeName.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These attributes accept URLs. These must not allow javascript: URLS.\n// These will also need to accept Trusted Types object in the future.\n\nvar xlinkHref = 'xlinkHref';\nproperties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty\n'xlink:href', 'http://www.w3.org/1999/xlink', true, // sanitizeURL\nfalse);\n['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {\n  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty\n  attributeName.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  true, // sanitizeURL\n  true);\n});\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridArea: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\n\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\n\n\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\n\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\nvar hasReadOnlyValue = {\n  button: true,\n  checkbox: true,\n  image: true,\n  hidden: true,\n  radio: true,\n  reset: true,\n  submit: true\n};\nfunction checkControlledValueProps(tagName, props) {\n  {\n    if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {\n      error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n    }\n\n    if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {\n      error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n    }\n  }\n}\n\nfunction isCustomComponent(tagName, props) {\n  if (tagName.indexOf('-') === -1) {\n    return typeof props.is === 'string';\n  }\n\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this list too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n\n    default:\n      return true;\n  }\n}\n\nvar ariaProperties = {\n  'aria-current': 0,\n  // state\n  'aria-description': 0,\n  'aria-details': 0,\n  'aria-disabled': 0,\n  // state\n  'aria-hidden': 0,\n  // state\n  'aria-invalid': 0,\n  // state\n  'aria-keyshortcuts': 0,\n  'aria-label': 0,\n  'aria-roledescription': 0,\n  // Widget Attributes\n  'aria-autocomplete': 0,\n  'aria-checked': 0,\n  'aria-expanded': 0,\n  'aria-haspopup': 0,\n  'aria-level': 0,\n  'aria-modal': 0,\n  'aria-multiline': 0,\n  'aria-multiselectable': 0,\n  'aria-orientation': 0,\n  'aria-placeholder': 0,\n  'aria-pressed': 0,\n  'aria-readonly': 0,\n  'aria-required': 0,\n  'aria-selected': 0,\n  'aria-sort': 0,\n  'aria-valuemax': 0,\n  'aria-valuemin': 0,\n  'aria-valuenow': 0,\n  'aria-valuetext': 0,\n  // Live Region Attributes\n  'aria-atomic': 0,\n  'aria-busy': 0,\n  'aria-live': 0,\n  'aria-relevant': 0,\n  // Drag-and-Drop Attributes\n  'aria-dropeffect': 0,\n  'aria-grabbed': 0,\n  // Relationship Attributes\n  'aria-activedescendant': 0,\n  'aria-colcount': 0,\n  'aria-colindex': 0,\n  'aria-colspan': 0,\n  'aria-controls': 0,\n  'aria-describedby': 0,\n  'aria-errormessage': 0,\n  'aria-flowto': 0,\n  'aria-labelledby': 0,\n  'aria-owns': 0,\n  'aria-posinset': 0,\n  'aria-rowcount': 0,\n  'aria-rowindex': 0,\n  'aria-rowspan': 0,\n  'aria-setsize': 0\n};\n\nvar warnedProperties = {};\nvar rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\nvar rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\nfunction validateProperty(tagName, name) {\n  {\n    if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {\n      return true;\n    }\n\n    if (rARIACamel.test(name)) {\n      var ariaName = 'aria-' + name.slice(4).toLowerCase();\n      var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM\n      // DOM properties, then it is an invalid aria-* attribute.\n\n      if (correctName == null) {\n        error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);\n\n        warnedProperties[name] = true;\n        return true;\n      } // aria-* attributes should be lowercase; suggest the lowercase version.\n\n\n      if (name !== correctName) {\n        error('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);\n\n        warnedProperties[name] = true;\n        return true;\n      }\n    }\n\n    if (rARIA.test(name)) {\n      var lowerCasedName = name.toLowerCase();\n      var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM\n      // DOM properties, then it is an invalid aria-* attribute.\n\n      if (standardName == null) {\n        warnedProperties[name] = true;\n        return false;\n      } // aria-* attributes should be lowercase; suggest the lowercase version.\n\n\n      if (name !== standardName) {\n        error('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);\n\n        warnedProperties[name] = true;\n        return true;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction warnInvalidARIAProps(type, props) {\n  {\n    var invalidProps = [];\n\n    for (var key in props) {\n      var isValid = validateProperty(type, key);\n\n      if (!isValid) {\n        invalidProps.push(key);\n      }\n    }\n\n    var unknownPropString = invalidProps.map(function (prop) {\n      return '`' + prop + '`';\n    }).join(', ');\n\n    if (invalidProps.length === 1) {\n      error('Invalid aria prop %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);\n    } else if (invalidProps.length > 1) {\n      error('Invalid aria props %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);\n    }\n  }\n}\n\nfunction validateProperties(type, props) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n\n  warnInvalidARIAProps(type, props);\n}\n\nvar didWarnValueNull = false;\nfunction validateProperties$1(type, props) {\n  {\n    if (type !== 'input' && type !== 'textarea' && type !== 'select') {\n      return;\n    }\n\n    if (props != null && props.value === null && !didWarnValueNull) {\n      didWarnValueNull = true;\n\n      if (type === 'select' && props.multiple) {\n        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);\n      } else {\n        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);\n      }\n    }\n  }\n}\n\n// When adding attributes to the HTML or SVG allowed attribute list, be sure to\n// also add them to this module to ensure casing and incorrect name\n// warnings.\nvar possibleStandardNames = {\n  // HTML\n  accept: 'accept',\n  acceptcharset: 'acceptCharset',\n  'accept-charset': 'acceptCharset',\n  accesskey: 'accessKey',\n  action: 'action',\n  allowfullscreen: 'allowFullScreen',\n  alt: 'alt',\n  as: 'as',\n  async: 'async',\n  autocapitalize: 'autoCapitalize',\n  autocomplete: 'autoComplete',\n  autocorrect: 'autoCorrect',\n  autofocus: 'autoFocus',\n  autoplay: 'autoPlay',\n  autosave: 'autoSave',\n  capture: 'capture',\n  cellpadding: 'cellPadding',\n  cellspacing: 'cellSpacing',\n  challenge: 'challenge',\n  charset: 'charSet',\n  checked: 'checked',\n  children: 'children',\n  cite: 'cite',\n  class: 'className',\n  classid: 'classID',\n  classname: 'className',\n  cols: 'cols',\n  colspan: 'colSpan',\n  content: 'content',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  controls: 'controls',\n  controlslist: 'controlsList',\n  coords: 'coords',\n  crossorigin: 'crossOrigin',\n  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',\n  data: 'data',\n  datetime: 'dateTime',\n  default: 'default',\n  defaultchecked: 'defaultChecked',\n  defaultvalue: 'defaultValue',\n  defer: 'defer',\n  dir: 'dir',\n  disabled: 'disabled',\n  disablepictureinpicture: 'disablePictureInPicture',\n  disableremoteplayback: 'disableRemotePlayback',\n  download: 'download',\n  draggable: 'draggable',\n  enctype: 'encType',\n  enterkeyhint: 'enterKeyHint',\n  for: 'htmlFor',\n  form: 'form',\n  formmethod: 'formMethod',\n  formaction: 'formAction',\n  formenctype: 'formEncType',\n  formnovalidate: 'formNoValidate',\n  formtarget: 'formTarget',\n  frameborder: 'frameBorder',\n  headers: 'headers',\n  height: 'height',\n  hidden: 'hidden',\n  high: 'high',\n  href: 'href',\n  hreflang: 'hrefLang',\n  htmlfor: 'htmlFor',\n  httpequiv: 'httpEquiv',\n  'http-equiv': 'httpEquiv',\n  icon: 'icon',\n  id: 'id',\n  imagesizes: 'imageSizes',\n  imagesrcset: 'imageSrcSet',\n  innerhtml: 'innerHTML',\n  inputmode: 'inputMode',\n  integrity: 'integrity',\n  is: 'is',\n  itemid: 'itemID',\n  itemprop: 'itemProp',\n  itemref: 'itemRef',\n  itemscope: 'itemScope',\n  itemtype: 'itemType',\n  keyparams: 'keyParams',\n  keytype: 'keyType',\n  kind: 'kind',\n  label: 'label',\n  lang: 'lang',\n  list: 'list',\n  loop: 'loop',\n  low: 'low',\n  manifest: 'manifest',\n  marginwidth: 'marginWidth',\n  marginheight: 'marginHeight',\n  max: 'max',\n  maxlength: 'maxLength',\n  media: 'media',\n  mediagroup: 'mediaGroup',\n  method: 'method',\n  min: 'min',\n  minlength: 'minLength',\n  multiple: 'multiple',\n  muted: 'muted',\n  name: 'name',\n  nomodule: 'noModule',\n  nonce: 'nonce',\n  novalidate: 'noValidate',\n  open: 'open',\n  optimum: 'optimum',\n  pattern: 'pattern',\n  placeholder: 'placeholder',\n  playsinline: 'playsInline',\n  poster: 'poster',\n  preload: 'preload',\n  profile: 'profile',\n  radiogroup: 'radioGroup',\n  readonly: 'readOnly',\n  referrerpolicy: 'referrerPolicy',\n  rel: 'rel',\n  required: 'required',\n  reversed: 'reversed',\n  role: 'role',\n  rows: 'rows',\n  rowspan: 'rowSpan',\n  sandbox: 'sandbox',\n  scope: 'scope',\n  scoped: 'scoped',\n  scrolling: 'scrolling',\n  seamless: 'seamless',\n  selected: 'selected',\n  shape: 'shape',\n  size: 'size',\n  sizes: 'sizes',\n  span: 'span',\n  spellcheck: 'spellCheck',\n  src: 'src',\n  srcdoc: 'srcDoc',\n  srclang: 'srcLang',\n  srcset: 'srcSet',\n  start: 'start',\n  step: 'step',\n  style: 'style',\n  summary: 'summary',\n  tabindex: 'tabIndex',\n  target: 'target',\n  title: 'title',\n  type: 'type',\n  usemap: 'useMap',\n  value: 'value',\n  width: 'width',\n  wmode: 'wmode',\n  wrap: 'wrap',\n  // SVG\n  about: 'about',\n  accentheight: 'accentHeight',\n  'accent-height': 'accentHeight',\n  accumulate: 'accumulate',\n  additive: 'additive',\n  alignmentbaseline: 'alignmentBaseline',\n  'alignment-baseline': 'alignmentBaseline',\n  allowreorder: 'allowReorder',\n  alphabetic: 'alphabetic',\n  amplitude: 'amplitude',\n  arabicform: 'arabicForm',\n  'arabic-form': 'arabicForm',\n  ascent: 'ascent',\n  attributename: 'attributeName',\n  attributetype: 'attributeType',\n  autoreverse: 'autoReverse',\n  azimuth: 'azimuth',\n  basefrequency: 'baseFrequency',\n  baselineshift: 'baselineShift',\n  'baseline-shift': 'baselineShift',\n  baseprofile: 'baseProfile',\n  bbox: 'bbox',\n  begin: 'begin',\n  bias: 'bias',\n  by: 'by',\n  calcmode: 'calcMode',\n  capheight: 'capHeight',\n  'cap-height': 'capHeight',\n  clip: 'clip',\n  clippath: 'clipPath',\n  'clip-path': 'clipPath',\n  clippathunits: 'clipPathUnits',\n  cliprule: 'clipRule',\n  'clip-rule': 'clipRule',\n  color: 'color',\n  colorinterpolation: 'colorInterpolation',\n  'color-interpolation': 'colorInterpolation',\n  colorinterpolationfilters: 'colorInterpolationFilters',\n  'color-interpolation-filters': 'colorInterpolationFilters',\n  colorprofile: 'colorProfile',\n  'color-profile': 'colorProfile',\n  colorrendering: 'colorRendering',\n  'color-rendering': 'colorRendering',\n  contentscripttype: 'contentScriptType',\n  contentstyletype: 'contentStyleType',\n  cursor: 'cursor',\n  cx: 'cx',\n  cy: 'cy',\n  d: 'd',\n  datatype: 'datatype',\n  decelerate: 'decelerate',\n  descent: 'descent',\n  diffuseconstant: 'diffuseConstant',\n  direction: 'direction',\n  display: 'display',\n  divisor: 'divisor',\n  dominantbaseline: 'dominantBaseline',\n  'dominant-baseline': 'dominantBaseline',\n  dur: 'dur',\n  dx: 'dx',\n  dy: 'dy',\n  edgemode: 'edgeMode',\n  elevation: 'elevation',\n  enablebackground: 'enableBackground',\n  'enable-background': 'enableBackground',\n  end: 'end',\n  exponent: 'exponent',\n  externalresourcesrequired: 'externalResourcesRequired',\n  fill: 'fill',\n  fillopacity: 'fillOpacity',\n  'fill-opacity': 'fillOpacity',\n  fillrule: 'fillRule',\n  'fill-rule': 'fillRule',\n  filter: 'filter',\n  filterres: 'filterRes',\n  filterunits: 'filterUnits',\n  floodopacity: 'floodOpacity',\n  'flood-opacity': 'floodOpacity',\n  floodcolor: 'floodColor',\n  'flood-color': 'floodColor',\n  focusable: 'focusable',\n  fontfamily: 'fontFamily',\n  'font-family': 'fontFamily',\n  fontsize: 'fontSize',\n  'font-size': 'fontSize',\n  fontsizeadjust: 'fontSizeAdjust',\n  'font-size-adjust': 'fontSizeAdjust',\n  fontstretch: 'fontStretch',\n  'font-stretch': 'fontStretch',\n  fontstyle: 'fontStyle',\n  'font-style': 'fontStyle',\n  fontvariant: 'fontVariant',\n  'font-variant': 'fontVariant',\n  fontweight: 'fontWeight',\n  'font-weight': 'fontWeight',\n  format: 'format',\n  from: 'from',\n  fx: 'fx',\n  fy: 'fy',\n  g1: 'g1',\n  g2: 'g2',\n  glyphname: 'glyphName',\n  'glyph-name': 'glyphName',\n  glyphorientationhorizontal: 'glyphOrientationHorizontal',\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n  glyphorientationvertical: 'glyphOrientationVertical',\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\n  glyphref: 'glyphRef',\n  gradienttransform: 'gradientTransform',\n  gradientunits: 'gradientUnits',\n  hanging: 'hanging',\n  horizadvx: 'horizAdvX',\n  'horiz-adv-x': 'horizAdvX',\n  horizoriginx: 'horizOriginX',\n  'horiz-origin-x': 'horizOriginX',\n  ideographic: 'ideographic',\n  imagerendering: 'imageRendering',\n  'image-rendering': 'imageRendering',\n  in2: 'in2',\n  in: 'in',\n  inlist: 'inlist',\n  intercept: 'intercept',\n  k1: 'k1',\n  k2: 'k2',\n  k3: 'k3',\n  k4: 'k4',\n  k: 'k',\n  kernelmatrix: 'kernelMatrix',\n  kernelunitlength: 'kernelUnitLength',\n  kerning: 'kerning',\n  keypoints: 'keyPoints',\n  keysplines: 'keySplines',\n  keytimes: 'keyTimes',\n  lengthadjust: 'lengthAdjust',\n  letterspacing: 'letterSpacing',\n  'letter-spacing': 'letterSpacing',\n  lightingcolor: 'lightingColor',\n  'lighting-color': 'lightingColor',\n  limitingconeangle: 'limitingConeAngle',\n  local: 'local',\n  markerend: 'markerEnd',\n  'marker-end': 'markerEnd',\n  markerheight: 'markerHeight',\n  markermid: 'markerMid',\n  'marker-mid': 'markerMid',\n  markerstart: 'markerStart',\n  'marker-start': 'markerStart',\n  markerunits: 'markerUnits',\n  markerwidth: 'markerWidth',\n  mask: 'mask',\n  maskcontentunits: 'maskContentUnits',\n  maskunits: 'maskUnits',\n  mathematical: 'mathematical',\n  mode: 'mode',\n  numoctaves: 'numOctaves',\n  offset: 'offset',\n  opacity: 'opacity',\n  operator: 'operator',\n  order: 'order',\n  orient: 'orient',\n  orientation: 'orientation',\n  origin: 'origin',\n  overflow: 'overflow',\n  overlineposition: 'overlinePosition',\n  'overline-position': 'overlinePosition',\n  overlinethickness: 'overlineThickness',\n  'overline-thickness': 'overlineThickness',\n  paintorder: 'paintOrder',\n  'paint-order': 'paintOrder',\n  panose1: 'panose1',\n  'panose-1': 'panose1',\n  pathlength: 'pathLength',\n  patterncontentunits: 'patternContentUnits',\n  patterntransform: 'patternTransform',\n  patternunits: 'patternUnits',\n  pointerevents: 'pointerEvents',\n  'pointer-events': 'pointerEvents',\n  points: 'points',\n  pointsatx: 'pointsAtX',\n  pointsaty: 'pointsAtY',\n  pointsatz: 'pointsAtZ',\n  prefix: 'prefix',\n  preservealpha: 'preserveAlpha',\n  preserveaspectratio: 'preserveAspectRatio',\n  primitiveunits: 'primitiveUnits',\n  property: 'property',\n  r: 'r',\n  radius: 'radius',\n  refx: 'refX',\n  refy: 'refY',\n  renderingintent: 'renderingIntent',\n  'rendering-intent': 'renderingIntent',\n  repeatcount: 'repeatCount',\n  repeatdur: 'repeatDur',\n  requiredextensions: 'requiredExtensions',\n  requiredfeatures: 'requiredFeatures',\n  resource: 'resource',\n  restart: 'restart',\n  result: 'result',\n  results: 'results',\n  rotate: 'rotate',\n  rx: 'rx',\n  ry: 'ry',\n  scale: 'scale',\n  security: 'security',\n  seed: 'seed',\n  shaperendering: 'shapeRendering',\n  'shape-rendering': 'shapeRendering',\n  slope: 'slope',\n  spacing: 'spacing',\n  specularconstant: 'specularConstant',\n  specularexponent: 'specularExponent',\n  speed: 'speed',\n  spreadmethod: 'spreadMethod',\n  startoffset: 'startOffset',\n  stddeviation: 'stdDeviation',\n  stemh: 'stemh',\n  stemv: 'stemv',\n  stitchtiles: 'stitchTiles',\n  stopcolor: 'stopColor',\n  'stop-color': 'stopColor',\n  stopopacity: 'stopOpacity',\n  'stop-opacity': 'stopOpacity',\n  strikethroughposition: 'strikethroughPosition',\n  'strikethrough-position': 'strikethroughPosition',\n  strikethroughthickness: 'strikethroughThickness',\n  'strikethrough-thickness': 'strikethroughThickness',\n  string: 'string',\n  stroke: 'stroke',\n  strokedasharray: 'strokeDasharray',\n  'stroke-dasharray': 'strokeDasharray',\n  strokedashoffset: 'strokeDashoffset',\n  'stroke-dashoffset': 'strokeDashoffset',\n  strokelinecap: 'strokeLinecap',\n  'stroke-linecap': 'strokeLinecap',\n  strokelinejoin: 'strokeLinejoin',\n  'stroke-linejoin': 'strokeLinejoin',\n  strokemiterlimit: 'strokeMiterlimit',\n  'stroke-miterlimit': 'strokeMiterlimit',\n  strokewidth: 'strokeWidth',\n  'stroke-width': 'strokeWidth',\n  strokeopacity: 'strokeOpacity',\n  'stroke-opacity': 'strokeOpacity',\n  suppresscontenteditablewarning: 'suppressContentEditableWarning',\n  suppresshydrationwarning: 'suppressHydrationWarning',\n  surfacescale: 'surfaceScale',\n  systemlanguage: 'systemLanguage',\n  tablevalues: 'tableValues',\n  targetx: 'targetX',\n  targety: 'targetY',\n  textanchor: 'textAnchor',\n  'text-anchor': 'textAnchor',\n  textdecoration: 'textDecoration',\n  'text-decoration': 'textDecoration',\n  textlength: 'textLength',\n  textrendering: 'textRendering',\n  'text-rendering': 'textRendering',\n  to: 'to',\n  transform: 'transform',\n  typeof: 'typeof',\n  u1: 'u1',\n  u2: 'u2',\n  underlineposition: 'underlinePosition',\n  'underline-position': 'underlinePosition',\n  underlinethickness: 'underlineThickness',\n  'underline-thickness': 'underlineThickness',\n  unicode: 'unicode',\n  unicodebidi: 'unicodeBidi',\n  'unicode-bidi': 'unicodeBidi',\n  unicoderange: 'unicodeRange',\n  'unicode-range': 'unicodeRange',\n  unitsperem: 'unitsPerEm',\n  'units-per-em': 'unitsPerEm',\n  unselectable: 'unselectable',\n  valphabetic: 'vAlphabetic',\n  'v-alphabetic': 'vAlphabetic',\n  values: 'values',\n  vectoreffect: 'vectorEffect',\n  'vector-effect': 'vectorEffect',\n  version: 'version',\n  vertadvy: 'vertAdvY',\n  'vert-adv-y': 'vertAdvY',\n  vertoriginx: 'vertOriginX',\n  'vert-origin-x': 'vertOriginX',\n  vertoriginy: 'vertOriginY',\n  'vert-origin-y': 'vertOriginY',\n  vhanging: 'vHanging',\n  'v-hanging': 'vHanging',\n  videographic: 'vIdeographic',\n  'v-ideographic': 'vIdeographic',\n  viewbox: 'viewBox',\n  viewtarget: 'viewTarget',\n  visibility: 'visibility',\n  vmathematical: 'vMathematical',\n  'v-mathematical': 'vMathematical',\n  vocab: 'vocab',\n  widths: 'widths',\n  wordspacing: 'wordSpacing',\n  'word-spacing': 'wordSpacing',\n  writingmode: 'writingMode',\n  'writing-mode': 'writingMode',\n  x1: 'x1',\n  x2: 'x2',\n  x: 'x',\n  xchannelselector: 'xChannelSelector',\n  xheight: 'xHeight',\n  'x-height': 'xHeight',\n  xlinkactuate: 'xlinkActuate',\n  'xlink:actuate': 'xlinkActuate',\n  xlinkarcrole: 'xlinkArcrole',\n  'xlink:arcrole': 'xlinkArcrole',\n  xlinkhref: 'xlinkHref',\n  'xlink:href': 'xlinkHref',\n  xlinkrole: 'xlinkRole',\n  'xlink:role': 'xlinkRole',\n  xlinkshow: 'xlinkShow',\n  'xlink:show': 'xlinkShow',\n  xlinktitle: 'xlinkTitle',\n  'xlink:title': 'xlinkTitle',\n  xlinktype: 'xlinkType',\n  'xlink:type': 'xlinkType',\n  xmlbase: 'xmlBase',\n  'xml:base': 'xmlBase',\n  xmllang: 'xmlLang',\n  'xml:lang': 'xmlLang',\n  xmlns: 'xmlns',\n  'xml:space': 'xmlSpace',\n  xmlnsxlink: 'xmlnsXlink',\n  'xmlns:xlink': 'xmlnsXlink',\n  xmlspace: 'xmlSpace',\n  y1: 'y1',\n  y2: 'y2',\n  y: 'y',\n  ychannelselector: 'yChannelSelector',\n  z: 'z',\n  zoomandpan: 'zoomAndPan'\n};\n\nvar validateProperty$1 = function () {};\n\n{\n  var warnedProperties$1 = {};\n  var EVENT_NAME_REGEX = /^on./;\n  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;\n  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\n  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\n  validateProperty$1 = function (tagName, name, value, eventRegistry) {\n    if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {\n      return true;\n    }\n\n    var lowerCasedName = name.toLowerCase();\n\n    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {\n      error('React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');\n\n      warnedProperties$1[name] = true;\n      return true;\n    } // We can't rely on the event system being injected on the server.\n\n\n    if (eventRegistry != null) {\n      var registrationNameDependencies = eventRegistry.registrationNameDependencies,\n          possibleRegistrationNames = eventRegistry.possibleRegistrationNames;\n\n      if (registrationNameDependencies.hasOwnProperty(name)) {\n        return true;\n      }\n\n      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;\n\n      if (registrationName != null) {\n        error('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);\n\n        warnedProperties$1[name] = true;\n        return true;\n      }\n\n      if (EVENT_NAME_REGEX.test(name)) {\n        error('Unknown event handler property `%s`. It will be ignored.', name);\n\n        warnedProperties$1[name] = true;\n        return true;\n      }\n    } else if (EVENT_NAME_REGEX.test(name)) {\n      // If no event plugins have been injected, we are in a server environment.\n      // So we can't tell if the event name is correct for sure, but we can filter\n      // out known bad ones like `onclick`. We can't suggest a specific replacement though.\n      if (INVALID_EVENT_NAME_REGEX.test(name)) {\n        error('Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);\n      }\n\n      warnedProperties$1[name] = true;\n      return true;\n    } // Let the ARIA attribute hook validate ARIA attributes\n\n\n    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {\n      return true;\n    }\n\n    if (lowerCasedName === 'innerhtml') {\n      error('Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (lowerCasedName === 'aria') {\n      error('The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {\n      error('Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      error('Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    var propertyInfo = getPropertyInfo(name);\n    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.\n\n    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      var standardName = possibleStandardNames[lowerCasedName];\n\n      if (standardName !== name) {\n        error('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);\n\n        warnedProperties$1[name] = true;\n        return true;\n      }\n    } else if (!isReserved && name !== lowerCasedName) {\n      // Unknown attributes should have lowercase casing since that's how they\n      // will be cased anyway with server rendering.\n      error('React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\n      if (value) {\n        error('Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()}.', value, name, name, value, name);\n      } else {\n        error('Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()}.\\n\\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);\n      }\n\n      warnedProperties$1[name] = true;\n      return true;\n    } // Now that we've validated casing, do not validate\n    // data types for reserved props\n\n\n    if (isReserved) {\n      return true;\n    } // Warn when a known attribute is a bad type\n\n\n    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\n      warnedProperties$1[name] = true;\n      return false;\n    } // Warn when passing the strings 'false' or 'true' into a boolean prop\n\n\n    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {\n      error('Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value);\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    return true;\n  };\n}\n\nvar warnUnknownProperties = function (type, props, eventRegistry) {\n  {\n    var unknownProps = [];\n\n    for (var key in props) {\n      var isValid = validateProperty$1(type, key, props[key], eventRegistry);\n\n      if (!isValid) {\n        unknownProps.push(key);\n      }\n    }\n\n    var unknownPropString = unknownProps.map(function (prop) {\n      return '`' + prop + '`';\n    }).join(', ');\n\n    if (unknownProps.length === 1) {\n      error('Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);\n    } else if (unknownProps.length > 1) {\n      error('Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);\n    }\n  }\n};\n\nfunction validateProperties$2(type, props, eventRegistry) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n\n  warnUnknownProperties(type, props, eventRegistry);\n}\n\nvar warnValidStyle = function () {};\n\n{\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon\n\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n  var warnedForInfinityValue = false;\n\n  var camelize = function (string) {\n    return string.replace(hyphenPattern, function (_, character) {\n      return character.toUpperCase();\n    });\n  };\n\n  var warnHyphenatedStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n\n    error('Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests\n    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n    // is converted to lowercase `ms`.\n    camelize(name.replace(msPattern, 'ms-')));\n  };\n\n  var warnBadVendoredStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n\n    error('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n\n    error(\"Style property values shouldn't contain a semicolon. \" + 'Try \"%s: %s\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));\n  };\n\n  var warnStyleValueIsNaN = function (name, value) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n\n    error('`NaN` is an invalid value for the `%s` css style property.', name);\n  };\n\n  var warnStyleValueIsInfinity = function (name, value) {\n    if (warnedForInfinityValue) {\n      return;\n    }\n\n    warnedForInfinityValue = true;\n\n    error('`Infinity` is an invalid value for the `%s` css style property.', name);\n  };\n\n  warnValidStyle = function (name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n\n    if (typeof value === 'number') {\n      if (isNaN(value)) {\n        warnStyleValueIsNaN(name, value);\n      } else if (!isFinite(value)) {\n        warnStyleValueIsInfinity(name, value);\n      }\n    }\n  };\n}\n\nvar warnValidStyle$1 = warnValidStyle;\n\n// code copied and modified from escape-html\nvar matchHtmlRegExp = /[\"'&<>]/;\n/**\n * Escapes special characters and HTML entities in a given html string.\n *\n * @param  {string} string HTML string to escape for later insertion\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  {\n    checkHtmlStringCoercion(string);\n  }\n\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        // \"\n        escape = '&quot;';\n        break;\n\n      case 38:\n        // &\n        escape = '&amp;';\n        break;\n\n      case 39:\n        // '\n        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n\n        break;\n\n      case 60:\n        // <\n        escape = '&lt;';\n        break;\n\n      case 62:\n        // >\n        escape = '&gt;';\n        break;\n\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n} // end code copied and modified from escape-html\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\n\n\nfunction escapeTextForBrowser(text) {\n  if (typeof text === 'boolean' || typeof text === 'number') {\n    // this shortcircuit helps perf for types that we know will never have\n    // special characters, especially given that this function is used often\n    // for numeric dom ids.\n    return '' + text;\n  }\n\n  return escapeHtml(text);\n}\n\nvar uppercasePattern = /([A-Z])/g;\nvar msPattern$1 = /^ms-/;\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n */\n\nfunction hyphenateStyleName(name) {\n  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern$1, '-ms-');\n}\n\n// and any newline or tab are filtered out as if they're not part of the URL.\n// https://url.spec.whatwg.org/#url-parsing\n// Tab or newline are defined as \\r\\n\\t:\n// https://infra.spec.whatwg.org/#ascii-tab-or-newline\n// A C0 control is a code point in the range \\u0000 NULL to \\u001F\n// INFORMATION SEPARATOR ONE, inclusive:\n// https://infra.spec.whatwg.org/#c0-control-or-space\n\n/* eslint-disable max-len */\n\nvar isJavaScriptProtocol = /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*\\:/i;\nvar didWarn = false;\n\nfunction sanitizeURL(url) {\n  {\n    if (!didWarn && isJavaScriptProtocol.test(url)) {\n      didWarn = true;\n\n      error('A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url));\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\nvar startInlineScript = stringToPrecomputedChunk('<script>');\nvar endInlineScript = stringToPrecomputedChunk('</script>');\nvar startScriptSrc = stringToPrecomputedChunk('<script src=\"');\nvar startModuleSrc = stringToPrecomputedChunk('<script type=\"module\" src=\"');\nvar endAsyncScript = stringToPrecomputedChunk('\" async=\"\"></script>');\n/**\n * This escaping function is designed to work with bootstrapScriptContent only.\n * because we know we are escaping the entire script. We can avoid for instance\n * escaping html comment string sequences that are valid javascript as well because\n * if there are no sebsequent <script sequences the html parser will never enter\n * script data double escaped state (see: https://www.w3.org/TR/html53/syntax.html#script-data-double-escaped-state)\n *\n * While untrusted script content should be made safe before using this api it will\n * ensure that the script cannot be early terminated or never terminated state\n */\n\nfunction escapeBootstrapScriptContent(scriptText) {\n  {\n    checkHtmlStringCoercion(scriptText);\n  }\n\n  return ('' + scriptText).replace(scriptRegex, scriptReplacer);\n}\n\nvar scriptRegex = /(<\\/|<)(s)(cript)/gi;\n\nvar scriptReplacer = function (match, prefix, s, suffix) {\n  return \"\" + prefix + (s === 's' ? \"\\\\u0073\" : \"\\\\u0053\") + suffix;\n}; // Allows us to keep track of what we've already written so we can refer back to it.\n\n\nfunction createResponseState(identifierPrefix, nonce, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {\n  var idPrefix = identifierPrefix === undefined ? '' : identifierPrefix;\n  var inlineScriptWithNonce = nonce === undefined ? startInlineScript : stringToPrecomputedChunk('<script nonce=\"' + escapeTextForBrowser(nonce) + '\">');\n  var bootstrapChunks = [];\n\n  if (bootstrapScriptContent !== undefined) {\n    bootstrapChunks.push(inlineScriptWithNonce, stringToChunk(escapeBootstrapScriptContent(bootstrapScriptContent)), endInlineScript);\n  }\n\n  if (bootstrapScripts !== undefined) {\n    for (var i = 0; i < bootstrapScripts.length; i++) {\n      bootstrapChunks.push(startScriptSrc, stringToChunk(escapeTextForBrowser(bootstrapScripts[i])), endAsyncScript);\n    }\n  }\n\n  if (bootstrapModules !== undefined) {\n    for (var _i = 0; _i < bootstrapModules.length; _i++) {\n      bootstrapChunks.push(startModuleSrc, stringToChunk(escapeTextForBrowser(bootstrapModules[_i])), endAsyncScript);\n    }\n  }\n\n  return {\n    bootstrapChunks: bootstrapChunks,\n    startInlineScript: inlineScriptWithNonce,\n    placeholderPrefix: stringToPrecomputedChunk(idPrefix + 'P:'),\n    segmentPrefix: stringToPrecomputedChunk(idPrefix + 'S:'),\n    boundaryPrefix: idPrefix + 'B:',\n    idPrefix: idPrefix,\n    nextSuspenseID: 0,\n    sentCompleteSegmentFunction: false,\n    sentCompleteBoundaryFunction: false,\n    sentClientRenderFunction: false\n  };\n} // Constants for the insertion mode we're currently writing in. We don't encode all HTML5 insertion\n// modes. We only include the variants as they matter for the sake of our purposes.\n// We don't actually provide the namespace therefore we use constants instead of the string.\n\nvar ROOT_HTML_MODE = 0; // Used for the root most element tag.\n\nvar HTML_MODE = 1;\nvar SVG_MODE = 2;\nvar MATHML_MODE = 3;\nvar HTML_TABLE_MODE = 4;\nvar HTML_TABLE_BODY_MODE = 5;\nvar HTML_TABLE_ROW_MODE = 6;\nvar HTML_COLGROUP_MODE = 7; // We have a greater than HTML_TABLE_MODE check elsewhere. If you add more cases here, make sure it\n// still makes sense\n\nfunction createFormatContext(insertionMode, selectedValue) {\n  return {\n    insertionMode: insertionMode,\n    selectedValue: selectedValue\n  };\n}\nfunction getChildFormatContext(parentContext, type, props) {\n  switch (type) {\n    case 'select':\n      return createFormatContext(HTML_MODE, props.value != null ? props.value : props.defaultValue);\n\n    case 'svg':\n      return createFormatContext(SVG_MODE, null);\n\n    case 'math':\n      return createFormatContext(MATHML_MODE, null);\n\n    case 'foreignObject':\n      return createFormatContext(HTML_MODE, null);\n    // Table parents are special in that their children can only be created at all if they're\n    // wrapped in a table parent. So we need to encode that we're entering this mode.\n\n    case 'table':\n      return createFormatContext(HTML_TABLE_MODE, null);\n\n    case 'thead':\n    case 'tbody':\n    case 'tfoot':\n      return createFormatContext(HTML_TABLE_BODY_MODE, null);\n\n    case 'colgroup':\n      return createFormatContext(HTML_COLGROUP_MODE, null);\n\n    case 'tr':\n      return createFormatContext(HTML_TABLE_ROW_MODE, null);\n  }\n\n  if (parentContext.insertionMode >= HTML_TABLE_MODE) {\n    // Whatever tag this was, it wasn't a table parent or other special parent, so we must have\n    // entered plain HTML again.\n    return createFormatContext(HTML_MODE, null);\n  }\n\n  if (parentContext.insertionMode === ROOT_HTML_MODE) {\n    // We've emitted the root and is now in plain HTML mode.\n    return createFormatContext(HTML_MODE, null);\n  }\n\n  return parentContext;\n}\nvar UNINITIALIZED_SUSPENSE_BOUNDARY_ID = null;\nfunction assignSuspenseBoundaryID(responseState) {\n  var generatedID = responseState.nextSuspenseID++;\n  return stringToPrecomputedChunk(responseState.boundaryPrefix + generatedID.toString(16));\n}\nfunction makeId(responseState, treeId, localId) {\n  var idPrefix = responseState.idPrefix;\n  var id = ':' + idPrefix + 'R' + treeId; // Unless this is the first id at this level, append a number at the end\n  // that represents the position of this useId hook among all the useId\n  // hooks for this fiber.\n\n  if (localId > 0) {\n    id += 'H' + localId.toString(32);\n  }\n\n  return id + ':';\n}\n\nfunction encodeHTMLTextNode(text) {\n  return escapeTextForBrowser(text);\n}\n\nvar textSeparator = stringToPrecomputedChunk('<!-- -->');\nfunction pushTextInstance(target, text, responseState, textEmbedded) {\n  if (text === '') {\n    // Empty text doesn't have a DOM node representation and the hydration is aware of this.\n    return textEmbedded;\n  }\n\n  if (textEmbedded) {\n    target.push(textSeparator);\n  }\n\n  target.push(stringToChunk(encodeHTMLTextNode(text)));\n  return true;\n} // Called when Fizz is done with a Segment. Currently the only purpose is to conditionally\n// emit a text separator when we don't know for sure it is safe to omit\n\nfunction pushSegmentFinale(target, responseState, lastPushedText, textEmbedded) {\n  if (lastPushedText && textEmbedded) {\n    target.push(textSeparator);\n  }\n}\nvar styleNameCache = new Map();\n\nfunction processStyleName(styleName) {\n  var chunk = styleNameCache.get(styleName);\n\n  if (chunk !== undefined) {\n    return chunk;\n  }\n\n  var result = stringToPrecomputedChunk(escapeTextForBrowser(hyphenateStyleName(styleName)));\n  styleNameCache.set(styleName, result);\n  return result;\n}\n\nvar styleAttributeStart = stringToPrecomputedChunk(' style=\"');\nvar styleAssign = stringToPrecomputedChunk(':');\nvar styleSeparator = stringToPrecomputedChunk(';');\n\nfunction pushStyle(target, responseState, style) {\n  if (typeof style !== 'object') {\n    throw new Error('The `style` prop expects a mapping from style properties to values, ' + \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" + 'using JSX.');\n  }\n\n  var isFirst = true;\n\n  for (var styleName in style) {\n    if (!hasOwnProperty.call(style, styleName)) {\n      continue;\n    } // If you provide unsafe user data here they can inject arbitrary CSS\n    // which may be problematic (I couldn't repro this):\n    // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n    // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n    // This is not an XSS hole but instead a potential CSS injection issue\n    // which has lead to a greater discussion about how we're going to\n    // trust URLs moving forward. See #2115901\n\n\n    var styleValue = style[styleName];\n\n    if (styleValue == null || typeof styleValue === 'boolean' || styleValue === '') {\n      // TODO: We used to set empty string as a style with an empty value. Does that ever make sense?\n      continue;\n    }\n\n    var nameChunk = void 0;\n    var valueChunk = void 0;\n    var isCustomProperty = styleName.indexOf('--') === 0;\n\n    if (isCustomProperty) {\n      nameChunk = stringToChunk(escapeTextForBrowser(styleName));\n\n      {\n        checkCSSPropertyStringCoercion(styleValue, styleName);\n      }\n\n      valueChunk = stringToChunk(escapeTextForBrowser(('' + styleValue).trim()));\n    } else {\n      {\n        warnValidStyle$1(styleName, styleValue);\n      }\n\n      nameChunk = processStyleName(styleName);\n\n      if (typeof styleValue === 'number') {\n        if (styleValue !== 0 && !hasOwnProperty.call(isUnitlessNumber, styleName)) {\n          valueChunk = stringToChunk(styleValue + 'px'); // Presumes implicit 'px' suffix for unitless numbers\n        } else {\n          valueChunk = stringToChunk('' + styleValue);\n        }\n      } else {\n        {\n          checkCSSPropertyStringCoercion(styleValue, styleName);\n        }\n\n        valueChunk = stringToChunk(escapeTextForBrowser(('' + styleValue).trim()));\n      }\n    }\n\n    if (isFirst) {\n      isFirst = false; // If it's first, we don't need any separators prefixed.\n\n      target.push(styleAttributeStart, nameChunk, styleAssign, valueChunk);\n    } else {\n      target.push(styleSeparator, nameChunk, styleAssign, valueChunk);\n    }\n  }\n\n  if (!isFirst) {\n    target.push(attributeEnd);\n  }\n}\n\nvar attributeSeparator = stringToPrecomputedChunk(' ');\nvar attributeAssign = stringToPrecomputedChunk('=\"');\nvar attributeEnd = stringToPrecomputedChunk('\"');\nvar attributeEmptyString = stringToPrecomputedChunk('=\"\"');\n\nfunction pushAttribute(target, responseState, name, value) {\n  switch (name) {\n    case 'style':\n      {\n        pushStyle(target, responseState, value);\n        return;\n      }\n\n    case 'defaultValue':\n    case 'defaultChecked': // These shouldn't be set as attributes on generic HTML elements.\n\n    case 'innerHTML': // Must use dangerouslySetInnerHTML instead.\n\n    case 'suppressContentEditableWarning':\n    case 'suppressHydrationWarning':\n      // Ignored. These are built-in to React on the client.\n      return;\n  }\n\n  if ( // shouldIgnoreAttribute\n  // We have already filtered out null/undefined and reserved words.\n  name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {\n    return;\n  }\n\n  var propertyInfo = getPropertyInfo(name);\n\n  if (propertyInfo !== null) {\n    // shouldRemoveAttribute\n    switch (typeof value) {\n      case 'function': // $FlowIssue symbol is perfectly valid here\n\n      case 'symbol':\n        // eslint-disable-line\n        return;\n\n      case 'boolean':\n        {\n          if (!propertyInfo.acceptsBooleans) {\n            return;\n          }\n        }\n    }\n\n    var attributeName = propertyInfo.attributeName;\n    var attributeNameChunk = stringToChunk(attributeName); // TODO: If it's known we can cache the chunk.\n\n    switch (propertyInfo.type) {\n      case BOOLEAN:\n        if (value) {\n          target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);\n        }\n\n        return;\n\n      case OVERLOADED_BOOLEAN:\n        if (value === true) {\n          target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);\n        } else if (value === false) ; else {\n          target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);\n        }\n\n        return;\n\n      case NUMERIC:\n        if (!isNaN(value)) {\n          target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);\n        }\n\n        break;\n\n      case POSITIVE_NUMERIC:\n        if (!isNaN(value) && value >= 1) {\n          target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);\n        }\n\n        break;\n\n      default:\n        if (propertyInfo.sanitizeURL) {\n          {\n            checkAttributeStringCoercion(value, attributeName);\n          }\n\n          value = '' + value;\n          sanitizeURL(value);\n        }\n\n        target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);\n    }\n  } else if (isAttributeNameSafe(name)) {\n    // shouldRemoveAttribute\n    switch (typeof value) {\n      case 'function': // $FlowIssue symbol is perfectly valid here\n\n      case 'symbol':\n        // eslint-disable-line\n        return;\n\n      case 'boolean':\n        {\n          var prefix = name.toLowerCase().slice(0, 5);\n\n          if (prefix !== 'data-' && prefix !== 'aria-') {\n            return;\n          }\n        }\n    }\n\n    target.push(attributeSeparator, stringToChunk(name), attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);\n  }\n}\n\nvar endOfStartTag = stringToPrecomputedChunk('>');\nvar endOfStartTagSelfClosing = stringToPrecomputedChunk('/>');\n\nfunction pushInnerHTML(target, innerHTML, children) {\n  if (innerHTML != null) {\n    if (children != null) {\n      throw new Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.');\n    }\n\n    if (typeof innerHTML !== 'object' || !('__html' in innerHTML)) {\n      throw new Error('`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://reactjs.org/link/dangerously-set-inner-html ' + 'for more information.');\n    }\n\n    var html = innerHTML.__html;\n\n    if (html !== null && html !== undefined) {\n      {\n        checkHtmlStringCoercion(html);\n      }\n\n      target.push(stringToChunk('' + html));\n    }\n  }\n} // TODO: Move these to ResponseState so that we warn for every request.\n// It would help debugging in stateful servers (e.g. service worker).\n\n\nvar didWarnDefaultInputValue = false;\nvar didWarnDefaultChecked = false;\nvar didWarnDefaultSelectValue = false;\nvar didWarnDefaultTextareaValue = false;\nvar didWarnInvalidOptionChildren = false;\nvar didWarnInvalidOptionInnerHTML = false;\nvar didWarnSelectedSetOnOption = false;\n\nfunction checkSelectProp(props, propName) {\n  {\n    var value = props[propName];\n\n    if (value != null) {\n      var array = isArray(value);\n\n      if (props.multiple && !array) {\n        error('The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.', propName);\n      } else if (!props.multiple && array) {\n        error('The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.', propName);\n      }\n    }\n  }\n}\n\nfunction pushStartSelect(target, props, responseState) {\n  {\n    checkControlledValueProps('select', props);\n    checkSelectProp(props, 'value');\n    checkSelectProp(props, 'defaultValue');\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultSelectValue) {\n      error('Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components');\n\n      didWarnDefaultSelectValue = true;\n    }\n  }\n\n  target.push(startChunkForTag('select'));\n  var children = null;\n  var innerHTML = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n\n        case 'dangerouslySetInnerHTML':\n          // TODO: This doesn't really make sense for select since it can't use the controlled\n          // value in the innerHTML.\n          innerHTML = propValue;\n          break;\n\n        case 'defaultValue':\n        case 'value':\n          // These are set on the Context instead and applied to the nested options.\n          break;\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  return children;\n}\n\nfunction flattenOptionChildren(children) {\n  var content = ''; // Flatten children and warn if they aren't strings or numbers;\n  // invalid types are ignored.\n\n  React.Children.forEach(children, function (child) {\n    if (child == null) {\n      return;\n    }\n\n    content += child;\n\n    {\n      if (!didWarnInvalidOptionChildren && typeof child !== 'string' && typeof child !== 'number') {\n        didWarnInvalidOptionChildren = true;\n\n        error('Cannot infer the option value of complex children. ' + 'Pass a `value` prop or use a plain string as children to <option>.');\n      }\n    }\n  });\n  return content;\n}\n\nvar selectedMarkerAttribute = stringToPrecomputedChunk(' selected=\"\"');\n\nfunction pushStartOption(target, props, responseState, formatContext) {\n  var selectedValue = formatContext.selectedValue;\n  target.push(startChunkForTag('option'));\n  var children = null;\n  var value = null;\n  var selected = null;\n  var innerHTML = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n\n        case 'selected':\n          // ignore\n          selected = propValue;\n\n          {\n            // TODO: Remove support for `selected` in <option>.\n            if (!didWarnSelectedSetOnOption) {\n              error('Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');\n\n              didWarnSelectedSetOnOption = true;\n            }\n          }\n\n          break;\n\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n        // eslint-disable-next-line-no-fallthrough\n\n        case 'value':\n          value = propValue;\n        // We intentionally fallthrough to also set the attribute on the node.\n        // eslint-disable-next-line-no-fallthrough\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  if (selectedValue != null) {\n    var stringValue;\n\n    if (value !== null) {\n      {\n        checkAttributeStringCoercion(value, 'value');\n      }\n\n      stringValue = '' + value;\n    } else {\n      {\n        if (innerHTML !== null) {\n          if (!didWarnInvalidOptionInnerHTML) {\n            didWarnInvalidOptionInnerHTML = true;\n\n            error('Pass a `value` prop if you set dangerouslyInnerHTML so React knows ' + 'which value should be selected.');\n          }\n        }\n      }\n\n      stringValue = flattenOptionChildren(children);\n    }\n\n    if (isArray(selectedValue)) {\n      // multiple\n      for (var i = 0; i < selectedValue.length; i++) {\n        {\n          checkAttributeStringCoercion(selectedValue[i], 'value');\n        }\n\n        var v = '' + selectedValue[i];\n\n        if (v === stringValue) {\n          target.push(selectedMarkerAttribute);\n          break;\n        }\n      }\n    } else {\n      {\n        checkAttributeStringCoercion(selectedValue, 'select.value');\n      }\n\n      if ('' + selectedValue === stringValue) {\n        target.push(selectedMarkerAttribute);\n      }\n    }\n  } else if (selected) {\n    target.push(selectedMarkerAttribute);\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  return children;\n}\n\nfunction pushInput(target, props, responseState) {\n  {\n    checkControlledValueProps('input', props);\n\n    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnDefaultChecked) {\n      error('%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', 'A component', props.type);\n\n      didWarnDefaultChecked = true;\n    }\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultInputValue) {\n      error('%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', 'A component', props.type);\n\n      didWarnDefaultInputValue = true;\n    }\n  }\n\n  target.push(startChunkForTag('input'));\n  var value = null;\n  var defaultValue = null;\n  var checked = null;\n  var defaultChecked = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n        case 'dangerouslySetInnerHTML':\n          throw new Error('input' + \" is a self-closing tag and must neither have `children` nor \" + 'use `dangerouslySetInnerHTML`.');\n        // eslint-disable-next-line-no-fallthrough\n\n        case 'defaultChecked':\n          defaultChecked = propValue;\n          break;\n\n        case 'defaultValue':\n          defaultValue = propValue;\n          break;\n\n        case 'checked':\n          checked = propValue;\n          break;\n\n        case 'value':\n          value = propValue;\n          break;\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  if (checked !== null) {\n    pushAttribute(target, responseState, 'checked', checked);\n  } else if (defaultChecked !== null) {\n    pushAttribute(target, responseState, 'checked', defaultChecked);\n  }\n\n  if (value !== null) {\n    pushAttribute(target, responseState, 'value', value);\n  } else if (defaultValue !== null) {\n    pushAttribute(target, responseState, 'value', defaultValue);\n  }\n\n  target.push(endOfStartTagSelfClosing);\n  return null;\n}\n\nfunction pushStartTextArea(target, props, responseState) {\n  {\n    checkControlledValueProps('textarea', props);\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultTextareaValue) {\n      error('Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components');\n\n      didWarnDefaultTextareaValue = true;\n    }\n  }\n\n  target.push(startChunkForTag('textarea'));\n  var value = null;\n  var defaultValue = null;\n  var children = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n\n        case 'value':\n          value = propValue;\n          break;\n\n        case 'defaultValue':\n          defaultValue = propValue;\n          break;\n\n        case 'dangerouslySetInnerHTML':\n          throw new Error('`dangerouslySetInnerHTML` does not make sense on <textarea>.');\n        // eslint-disable-next-line-no-fallthrough\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  if (value === null && defaultValue !== null) {\n    value = defaultValue;\n  }\n\n  target.push(endOfStartTag); // TODO (yungsters): Remove support for children content in <textarea>.\n\n  if (children != null) {\n    {\n      error('Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');\n    }\n\n    if (value != null) {\n      throw new Error('If you supply `defaultValue` on a <textarea>, do not pass children.');\n    }\n\n    if (isArray(children)) {\n      if (children.length > 1) {\n        throw new Error('<textarea> can only have at most one child.');\n      } // TODO: remove the coercion and the DEV check below because it will\n      // always be overwritten by the coercion several lines below it. #22309\n\n\n      {\n        checkHtmlStringCoercion(children[0]);\n      }\n\n      value = '' + children[0];\n    }\n\n    {\n      checkHtmlStringCoercion(children);\n    }\n\n    value = '' + children;\n  }\n\n  if (typeof value === 'string' && value[0] === '\\n') {\n    // text/html ignores the first character in these tags if it's a newline\n    // Prefer to break application/xml over text/html (for now) by adding\n    // a newline specifically to get eaten by the parser. (Alternately for\n    // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n    // \\r is normalized out by HTMLTextAreaElement#value.)\n    // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n    // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n    // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n    // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n    //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n    target.push(leadingNewline);\n  } // ToString and push directly instead of recurse over children.\n  // We don't really support complex children in the value anyway.\n  // This also currently avoids a trailing comment node which breaks textarea.\n\n\n  if (value !== null) {\n    {\n      checkAttributeStringCoercion(value, 'value');\n    }\n\n    target.push(stringToChunk(encodeHTMLTextNode('' + value)));\n  }\n\n  return null;\n}\n\nfunction pushSelfClosing(target, props, tag, responseState) {\n  target.push(startChunkForTag(tag));\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n        case 'dangerouslySetInnerHTML':\n          throw new Error(tag + \" is a self-closing tag and must neither have `children` nor \" + 'use `dangerouslySetInnerHTML`.');\n        // eslint-disable-next-line-no-fallthrough\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTagSelfClosing);\n  return null;\n}\n\nfunction pushStartMenuItem(target, props, responseState) {\n  target.push(startChunkForTag('menuitem'));\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n        case 'dangerouslySetInnerHTML':\n          throw new Error('menuitems cannot have `children` nor `dangerouslySetInnerHTML`.');\n        // eslint-disable-next-line-no-fallthrough\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  return null;\n}\n\nfunction pushStartTitle(target, props, responseState) {\n  target.push(startChunkForTag('title'));\n  var children = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n\n        case 'dangerouslySetInnerHTML':\n          throw new Error('`dangerouslySetInnerHTML` does not make sense on <title>.');\n        // eslint-disable-next-line-no-fallthrough\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n\n  {\n    var child = Array.isArray(children) && children.length < 2 ? children[0] || null : children;\n\n    if (Array.isArray(children) && children.length > 1) {\n      error('A title element received an array with more than 1 element as children. ' + 'In browsers title Elements can only have Text Nodes as children. If ' + 'the children being rendered output more than a single text node in aggregate the browser ' + 'will display markup and comments as text in the title and hydration will likely fail and ' + 'fall back to client rendering');\n    } else if (child != null && child.$$typeof != null) {\n      error('A title element received a React element for children. ' + 'In the browser title Elements can only have Text Nodes as children. If ' + 'the children being rendered output more than a single text node in aggregate the browser ' + 'will display markup and comments as text in the title and hydration will likely fail and ' + 'fall back to client rendering');\n    } else if (child != null && typeof child !== 'string' && typeof child !== 'number') {\n      error('A title element received a value that was not a string or number for children. ' + 'In the browser title Elements can only have Text Nodes as children. If ' + 'the children being rendered output more than a single text node in aggregate the browser ' + 'will display markup and comments as text in the title and hydration will likely fail and ' + 'fall back to client rendering');\n    }\n  }\n\n  return children;\n}\n\nfunction pushStartGenericElement(target, props, tag, responseState) {\n  target.push(startChunkForTag(tag));\n  var children = null;\n  var innerHTML = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n\n  if (typeof children === 'string') {\n    // Special case children as a string to avoid the unnecessary comment.\n    // TODO: Remove this special case after the general optimization is in place.\n    target.push(stringToChunk(encodeHTMLTextNode(children)));\n    return null;\n  }\n\n  return children;\n}\n\nfunction pushStartCustomElement(target, props, tag, responseState) {\n  target.push(startChunkForTag(tag));\n  var children = null;\n  var innerHTML = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n\n        case 'style':\n          pushStyle(target, responseState, propValue);\n          break;\n\n        case 'suppressContentEditableWarning':\n        case 'suppressHydrationWarning':\n          // Ignored. These are built-in to React on the client.\n          break;\n\n        default:\n          if (isAttributeNameSafe(propKey) && typeof propValue !== 'function' && typeof propValue !== 'symbol') {\n            target.push(attributeSeparator, stringToChunk(propKey), attributeAssign, stringToChunk(escapeTextForBrowser(propValue)), attributeEnd);\n          }\n\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  return children;\n}\n\nvar leadingNewline = stringToPrecomputedChunk('\\n');\n\nfunction pushStartPreformattedElement(target, props, tag, responseState) {\n  target.push(startChunkForTag(tag));\n  var children = null;\n  var innerHTML = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag); // text/html ignores the first character in these tags if it's a newline\n  // Prefer to break application/xml over text/html (for now) by adding\n  // a newline specifically to get eaten by the parser. (Alternately for\n  // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n  // \\r is normalized out by HTMLTextAreaElement#value.)\n  // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n  // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n  // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n  // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n  //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n  // TODO: This doesn't deal with the case where the child is an array\n  // or component that returns a string.\n\n  if (innerHTML != null) {\n    if (children != null) {\n      throw new Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.');\n    }\n\n    if (typeof innerHTML !== 'object' || !('__html' in innerHTML)) {\n      throw new Error('`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://reactjs.org/link/dangerously-set-inner-html ' + 'for more information.');\n    }\n\n    var html = innerHTML.__html;\n\n    if (html !== null && html !== undefined) {\n      if (typeof html === 'string' && html.length > 0 && html[0] === '\\n') {\n        target.push(leadingNewline, stringToChunk(html));\n      } else {\n        {\n          checkHtmlStringCoercion(html);\n        }\n\n        target.push(stringToChunk('' + html));\n      }\n    }\n  }\n\n  if (typeof children === 'string' && children[0] === '\\n') {\n    target.push(leadingNewline);\n  }\n\n  return children;\n} // We accept any tag to be rendered but since this gets injected into arbitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\n\nvar validatedTagCache = new Map();\n\nfunction startChunkForTag(tag) {\n  var tagStartChunk = validatedTagCache.get(tag);\n\n  if (tagStartChunk === undefined) {\n    if (!VALID_TAG_REGEX.test(tag)) {\n      throw new Error(\"Invalid tag: \" + tag);\n    }\n\n    tagStartChunk = stringToPrecomputedChunk('<' + tag);\n    validatedTagCache.set(tag, tagStartChunk);\n  }\n\n  return tagStartChunk;\n}\n\nvar DOCTYPE = stringToPrecomputedChunk('<!DOCTYPE html>');\nfunction pushStartInstance(target, type, props, responseState, formatContext) {\n  {\n    validateProperties(type, props);\n    validateProperties$1(type, props);\n    validateProperties$2(type, props, null);\n\n    if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {\n      error('A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.');\n    }\n\n    if (formatContext.insertionMode !== SVG_MODE && formatContext.insertionMode !== MATHML_MODE) {\n      if (type.indexOf('-') === -1 && typeof props.is !== 'string' && type.toLowerCase() !== type) {\n        error('<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type);\n      }\n    }\n  }\n\n  switch (type) {\n    // Special tags\n    case 'select':\n      return pushStartSelect(target, props, responseState);\n\n    case 'option':\n      return pushStartOption(target, props, responseState, formatContext);\n\n    case 'textarea':\n      return pushStartTextArea(target, props, responseState);\n\n    case 'input':\n      return pushInput(target, props, responseState);\n\n    case 'menuitem':\n      return pushStartMenuItem(target, props, responseState);\n\n    case 'title':\n      return pushStartTitle(target, props, responseState);\n    // Newline eating tags\n\n    case 'listing':\n    case 'pre':\n      {\n        return pushStartPreformattedElement(target, props, type, responseState);\n      }\n    // Omitted close tags\n\n    case 'area':\n    case 'base':\n    case 'br':\n    case 'col':\n    case 'embed':\n    case 'hr':\n    case 'img':\n    case 'keygen':\n    case 'link':\n    case 'meta':\n    case 'param':\n    case 'source':\n    case 'track':\n    case 'wbr':\n      {\n        return pushSelfClosing(target, props, type, responseState);\n      }\n    // These are reserved SVG and MathML elements, that are never custom elements.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      {\n        return pushStartGenericElement(target, props, type, responseState);\n      }\n\n    case 'html':\n      {\n        if (formatContext.insertionMode === ROOT_HTML_MODE) {\n          // If we're rendering the html tag and we're at the root (i.e. not in foreignObject)\n          // then we also emit the DOCTYPE as part of the root content as a convenience for\n          // rendering the whole document.\n          target.push(DOCTYPE);\n        }\n\n        return pushStartGenericElement(target, props, type, responseState);\n      }\n\n    default:\n      {\n        if (type.indexOf('-') === -1 && typeof props.is !== 'string') {\n          // Generic element\n          return pushStartGenericElement(target, props, type, responseState);\n        } else {\n          // Custom element\n          return pushStartCustomElement(target, props, type, responseState);\n        }\n      }\n  }\n}\nvar endTag1 = stringToPrecomputedChunk('</');\nvar endTag2 = stringToPrecomputedChunk('>');\nfunction pushEndInstance(target, type, props) {\n  switch (type) {\n    // Omitted close tags\n    // TODO: Instead of repeating this switch we could try to pass a flag from above.\n    // That would require returning a tuple. Which might be ok if it gets inlined.\n    case 'area':\n    case 'base':\n    case 'br':\n    case 'col':\n    case 'embed':\n    case 'hr':\n    case 'img':\n    case 'input':\n    case 'keygen':\n    case 'link':\n    case 'meta':\n    case 'param':\n    case 'source':\n    case 'track':\n    case 'wbr':\n      {\n        // No close tag needed.\n        break;\n      }\n\n    default:\n      {\n        target.push(endTag1, stringToChunk(type), endTag2);\n      }\n  }\n}\nfunction writeCompletedRoot(destination, responseState) {\n  var bootstrapChunks = responseState.bootstrapChunks;\n  var i = 0;\n\n  for (; i < bootstrapChunks.length - 1; i++) {\n    writeChunk(destination, bootstrapChunks[i]);\n  }\n\n  if (i < bootstrapChunks.length) {\n    return writeChunkAndReturn(destination, bootstrapChunks[i]);\n  }\n\n  return true;\n} // Structural Nodes\n// A placeholder is a node inside a hidden partial tree that can be filled in later, but before\n// display. It's never visible to users. We use the template tag because it can be used in every\n// type of parent. <script> tags also work in every other tag except <colgroup>.\n\nvar placeholder1 = stringToPrecomputedChunk('<template id=\"');\nvar placeholder2 = stringToPrecomputedChunk('\"></template>');\nfunction writePlaceholder(destination, responseState, id) {\n  writeChunk(destination, placeholder1);\n  writeChunk(destination, responseState.placeholderPrefix);\n  var formattedID = stringToChunk(id.toString(16));\n  writeChunk(destination, formattedID);\n  return writeChunkAndReturn(destination, placeholder2);\n} // Suspense boundaries are encoded as comments.\n\nvar startCompletedSuspenseBoundary = stringToPrecomputedChunk('<!--$-->');\nvar startPendingSuspenseBoundary1 = stringToPrecomputedChunk('<!--$?--><template id=\"');\nvar startPendingSuspenseBoundary2 = stringToPrecomputedChunk('\"></template>');\nvar startClientRenderedSuspenseBoundary = stringToPrecomputedChunk('<!--$!-->');\nvar endSuspenseBoundary = stringToPrecomputedChunk('<!--/$-->');\nvar clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk('<template');\nvar clientRenderedSuspenseBoundaryErrorAttrInterstitial = stringToPrecomputedChunk('\"');\nvar clientRenderedSuspenseBoundaryError1A = stringToPrecomputedChunk(' data-dgst=\"');\nvar clientRenderedSuspenseBoundaryError1B = stringToPrecomputedChunk(' data-msg=\"');\nvar clientRenderedSuspenseBoundaryError1C = stringToPrecomputedChunk(' data-stck=\"');\nvar clientRenderedSuspenseBoundaryError2 = stringToPrecomputedChunk('></template>');\nfunction writeStartCompletedSuspenseBoundary(destination, responseState) {\n  return writeChunkAndReturn(destination, startCompletedSuspenseBoundary);\n}\nfunction writeStartPendingSuspenseBoundary(destination, responseState, id) {\n  writeChunk(destination, startPendingSuspenseBoundary1);\n\n  if (id === null) {\n    throw new Error('An ID must have been assigned before we can complete the boundary.');\n  }\n\n  writeChunk(destination, id);\n  return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);\n}\nfunction writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMesssage, errorComponentStack) {\n  var result;\n  result = writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);\n  writeChunk(destination, clientRenderedSuspenseBoundaryError1);\n\n  if (errorDigest) {\n    writeChunk(destination, clientRenderedSuspenseBoundaryError1A);\n    writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest)));\n    writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);\n  }\n\n  {\n    if (errorMesssage) {\n      writeChunk(destination, clientRenderedSuspenseBoundaryError1B);\n      writeChunk(destination, stringToChunk(escapeTextForBrowser(errorMesssage)));\n      writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);\n    }\n\n    if (errorComponentStack) {\n      writeChunk(destination, clientRenderedSuspenseBoundaryError1C);\n      writeChunk(destination, stringToChunk(escapeTextForBrowser(errorComponentStack)));\n      writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);\n    }\n  }\n\n  result = writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);\n  return result;\n}\nfunction writeEndCompletedSuspenseBoundary(destination, responseState) {\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\nfunction writeEndPendingSuspenseBoundary(destination, responseState) {\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\nfunction writeEndClientRenderedSuspenseBoundary(destination, responseState) {\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\nvar startSegmentHTML = stringToPrecomputedChunk('<div hidden id=\"');\nvar startSegmentHTML2 = stringToPrecomputedChunk('\">');\nvar endSegmentHTML = stringToPrecomputedChunk('</div>');\nvar startSegmentSVG = stringToPrecomputedChunk('<svg aria-hidden=\"true\" style=\"display:none\" id=\"');\nvar startSegmentSVG2 = stringToPrecomputedChunk('\">');\nvar endSegmentSVG = stringToPrecomputedChunk('</svg>');\nvar startSegmentMathML = stringToPrecomputedChunk('<math aria-hidden=\"true\" style=\"display:none\" id=\"');\nvar startSegmentMathML2 = stringToPrecomputedChunk('\">');\nvar endSegmentMathML = stringToPrecomputedChunk('</math>');\nvar startSegmentTable = stringToPrecomputedChunk('<table hidden id=\"');\nvar startSegmentTable2 = stringToPrecomputedChunk('\">');\nvar endSegmentTable = stringToPrecomputedChunk('</table>');\nvar startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id=\"');\nvar startSegmentTableBody2 = stringToPrecomputedChunk('\">');\nvar endSegmentTableBody = stringToPrecomputedChunk('</tbody></table>');\nvar startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id=\"');\nvar startSegmentTableRow2 = stringToPrecomputedChunk('\">');\nvar endSegmentTableRow = stringToPrecomputedChunk('</tr></table>');\nvar startSegmentColGroup = stringToPrecomputedChunk('<table hidden><colgroup id=\"');\nvar startSegmentColGroup2 = stringToPrecomputedChunk('\">');\nvar endSegmentColGroup = stringToPrecomputedChunk('</colgroup></table>');\nfunction writeStartSegment(destination, responseState, formatContext, id) {\n  switch (formatContext.insertionMode) {\n    case ROOT_HTML_MODE:\n    case HTML_MODE:\n      {\n        writeChunk(destination, startSegmentHTML);\n        writeChunk(destination, responseState.segmentPrefix);\n        writeChunk(destination, stringToChunk(id.toString(16)));\n        return writeChunkAndReturn(destination, startSegmentHTML2);\n      }\n\n    case SVG_MODE:\n      {\n        writeChunk(destination, startSegmentSVG);\n        writeChunk(destination, responseState.segmentPrefix);\n        writeChunk(destination, stringToChunk(id.toString(16)));\n        return writeChunkAndReturn(destination, startSegmentSVG2);\n      }\n\n    case MATHML_MODE:\n      {\n        writeChunk(destination, startSegmentMathML);\n        writeChunk(destination, responseState.segmentPrefix);\n        writeChunk(destination, stringToChunk(id.toString(16)));\n        return writeChunkAndReturn(destination, startSegmentMathML2);\n      }\n\n    case HTML_TABLE_MODE:\n      {\n        writeChunk(destination, startSegmentTable);\n        writeChunk(destination, responseState.segmentPrefix);\n        writeChunk(destination, stringToChunk(id.toString(16)));\n        return writeChunkAndReturn(destination, startSegmentTable2);\n      }\n    // TODO: For the rest of these, there will be extra wrapper nodes that never\n    // get deleted from the document. We need to delete the table too as part\n    // of the injected scripts. They are invisible though so it's not too terrible\n    // and it's kind of an edge case to suspend in a table. Totally supported though.\n\n    case HTML_TABLE_BODY_MODE:\n      {\n        writeChunk(destination, startSegmentTableBody);\n        writeChunk(destination, responseState.segmentPrefix);\n        writeChunk(destination, stringToChunk(id.toString(16)));\n        return writeChunkAndReturn(destination, startSegmentTableBody2);\n      }\n\n    case HTML_TABLE_ROW_MODE:\n      {\n        writeChunk(destination, startSegmentTableRow);\n        writeChunk(destination, responseState.segmentPrefix);\n        writeChunk(destination, stringToChunk(id.toString(16)));\n        return writeChunkAndReturn(destination, startSegmentTableRow2);\n      }\n\n    case HTML_COLGROUP_MODE:\n      {\n        writeChunk(destination, startSegmentColGroup);\n        writeChunk(destination, responseState.segmentPrefix);\n        writeChunk(destination, stringToChunk(id.toString(16)));\n        return writeChunkAndReturn(destination, startSegmentColGroup2);\n      }\n\n    default:\n      {\n        throw new Error('Unknown insertion mode. This is a bug in React.');\n      }\n  }\n}\nfunction writeEndSegment(destination, formatContext) {\n  switch (formatContext.insertionMode) {\n    case ROOT_HTML_MODE:\n    case HTML_MODE:\n      {\n        return writeChunkAndReturn(destination, endSegmentHTML);\n      }\n\n    case SVG_MODE:\n      {\n        return writeChunkAndReturn(destination, endSegmentSVG);\n      }\n\n    case MATHML_MODE:\n      {\n        return writeChunkAndReturn(destination, endSegmentMathML);\n      }\n\n    case HTML_TABLE_MODE:\n      {\n        return writeChunkAndReturn(destination, endSegmentTable);\n      }\n\n    case HTML_TABLE_BODY_MODE:\n      {\n        return writeChunkAndReturn(destination, endSegmentTableBody);\n      }\n\n    case HTML_TABLE_ROW_MODE:\n      {\n        return writeChunkAndReturn(destination, endSegmentTableRow);\n      }\n\n    case HTML_COLGROUP_MODE:\n      {\n        return writeChunkAndReturn(destination, endSegmentColGroup);\n      }\n\n    default:\n      {\n        throw new Error('Unknown insertion mode. This is a bug in React.');\n      }\n  }\n} // Instruction Set\n// The following code is the source scripts that we then minify and inline below,\n// with renamed function names that we hope don't collide:\n// const COMMENT_NODE = 8;\n// const SUSPENSE_START_DATA = '$';\n// const SUSPENSE_END_DATA = '/$';\n// const SUSPENSE_PENDING_START_DATA = '$?';\n// const SUSPENSE_FALLBACK_START_DATA = '$!';\n//\n// function clientRenderBoundary(suspenseBoundaryID, errorDigest, errorMsg, errorComponentStack) {\n//   // Find the fallback's first element.\n//   const suspenseIdNode = document.getElementById(suspenseBoundaryID);\n//   if (!suspenseIdNode) {\n//     // The user must have already navigated away from this tree.\n//     // E.g. because the parent was hydrated.\n//     return;\n//   }\n//   // Find the boundary around the fallback. This is always the previous node.\n//   const suspenseNode = suspenseIdNode.previousSibling;\n//   // Tag it to be client rendered.\n//   suspenseNode.data = SUSPENSE_FALLBACK_START_DATA;\n//   // assign error metadata to first sibling\n//   let dataset = suspenseIdNode.dataset;\n//   if (errorDigest) dataset.dgst = errorDigest;\n//   if (errorMsg) dataset.msg = errorMsg;\n//   if (errorComponentStack) dataset.stck = errorComponentStack;\n//   // Tell React to retry it if the parent already hydrated.\n//   if (suspenseNode._reactRetry) {\n//     suspenseNode._reactRetry();\n//   }\n// }\n//\n// function completeBoundary(suspenseBoundaryID, contentID) {\n//   // Find the fallback's first element.\n//   const suspenseIdNode = document.getElementById(suspenseBoundaryID);\n//   const contentNode = document.getElementById(contentID);\n//   // We'll detach the content node so that regardless of what happens next we don't leave in the tree.\n//   // This might also help by not causing recalcing each time we move a child from here to the target.\n//   contentNode.parentNode.removeChild(contentNode);\n//   if (!suspenseIdNode) {\n//     // The user must have already navigated away from this tree.\n//     // E.g. because the parent was hydrated. That's fine there's nothing to do\n//     // but we have to make sure that we already deleted the container node.\n//     return;\n//   }\n//   // Find the boundary around the fallback. This is always the previous node.\n//   const suspenseNode = suspenseIdNode.previousSibling;\n//\n//   // Clear all the existing children. This is complicated because\n//   // there can be embedded Suspense boundaries in the fallback.\n//   // This is similar to clearSuspenseBoundary in ReactDOMHostConfig.\n//   // TODO: We could avoid this if we never emitted suspense boundaries in fallback trees.\n//   // They never hydrate anyway. However, currently we support incrementally loading the fallback.\n//   const parentInstance = suspenseNode.parentNode;\n//   let node = suspenseNode.nextSibling;\n//   let depth = 0;\n//   do {\n//     if (node && node.nodeType === COMMENT_NODE) {\n//       const data = node.data;\n//       if (data === SUSPENSE_END_DATA) {\n//         if (depth === 0) {\n//           break;\n//         } else {\n//           depth--;\n//         }\n//       } else if (\n//         data === SUSPENSE_START_DATA ||\n//         data === SUSPENSE_PENDING_START_DATA ||\n//         data === SUSPENSE_FALLBACK_START_DATA\n//       ) {\n//         depth++;\n//       }\n//     }\n//\n//     const nextNode = node.nextSibling;\n//     parentInstance.removeChild(node);\n//     node = nextNode;\n//   } while (node);\n//\n//   const endOfBoundary = node;\n//\n//   // Insert all the children from the contentNode between the start and end of suspense boundary.\n//   while (contentNode.firstChild) {\n//     parentInstance.insertBefore(contentNode.firstChild, endOfBoundary);\n//   }\n//   suspenseNode.data = SUSPENSE_START_DATA;\n//   if (suspenseNode._reactRetry) {\n//     suspenseNode._reactRetry();\n//   }\n// }\n//\n// function completeSegment(containerID, placeholderID) {\n//   const segmentContainer = document.getElementById(containerID);\n//   const placeholderNode = document.getElementById(placeholderID);\n//   // We always expect both nodes to exist here because, while we might\n//   // have navigated away from the main tree, we still expect the detached\n//   // tree to exist.\n//   segmentContainer.parentNode.removeChild(segmentContainer);\n//   while (segmentContainer.firstChild) {\n//     placeholderNode.parentNode.insertBefore(\n//       segmentContainer.firstChild,\n//       placeholderNode,\n//     );\n//   }\n//   placeholderNode.parentNode.removeChild(placeholderNode);\n// }\n\nvar completeSegmentFunction = 'function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}';\nvar completeBoundaryFunction = 'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if(\"/$\"===d)if(0===e)break;else e--;else\"$\"!==d&&\"$?\"!==d&&\"$!\"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data=\"$\";a._reactRetry&&a._reactRetry()}}';\nvar clientRenderFunction = 'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data=\"$!\",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}';\nvar completeSegmentScript1Full = stringToPrecomputedChunk(completeSegmentFunction + ';$RS(\"');\nvar completeSegmentScript1Partial = stringToPrecomputedChunk('$RS(\"');\nvar completeSegmentScript2 = stringToPrecomputedChunk('\",\"');\nvar completeSegmentScript3 = stringToPrecomputedChunk('\")</script>');\nfunction writeCompletedSegmentInstruction(destination, responseState, contentSegmentID) {\n  writeChunk(destination, responseState.startInlineScript);\n\n  if (!responseState.sentCompleteSegmentFunction) {\n    // The first time we write this, we'll need to include the full implementation.\n    responseState.sentCompleteSegmentFunction = true;\n    writeChunk(destination, completeSegmentScript1Full);\n  } else {\n    // Future calls can just reuse the same function.\n    writeChunk(destination, completeSegmentScript1Partial);\n  }\n\n  writeChunk(destination, responseState.segmentPrefix);\n  var formattedID = stringToChunk(contentSegmentID.toString(16));\n  writeChunk(destination, formattedID);\n  writeChunk(destination, completeSegmentScript2);\n  writeChunk(destination, responseState.placeholderPrefix);\n  writeChunk(destination, formattedID);\n  return writeChunkAndReturn(destination, completeSegmentScript3);\n}\nvar completeBoundaryScript1Full = stringToPrecomputedChunk(completeBoundaryFunction + ';$RC(\"');\nvar completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(\"');\nvar completeBoundaryScript2 = stringToPrecomputedChunk('\",\"');\nvar completeBoundaryScript3 = stringToPrecomputedChunk('\")</script>');\nfunction writeCompletedBoundaryInstruction(destination, responseState, boundaryID, contentSegmentID) {\n  writeChunk(destination, responseState.startInlineScript);\n\n  if (!responseState.sentCompleteBoundaryFunction) {\n    // The first time we write this, we'll need to include the full implementation.\n    responseState.sentCompleteBoundaryFunction = true;\n    writeChunk(destination, completeBoundaryScript1Full);\n  } else {\n    // Future calls can just reuse the same function.\n    writeChunk(destination, completeBoundaryScript1Partial);\n  }\n\n  if (boundaryID === null) {\n    throw new Error('An ID must have been assigned before we can complete the boundary.');\n  }\n\n  var formattedContentID = stringToChunk(contentSegmentID.toString(16));\n  writeChunk(destination, boundaryID);\n  writeChunk(destination, completeBoundaryScript2);\n  writeChunk(destination, responseState.segmentPrefix);\n  writeChunk(destination, formattedContentID);\n  return writeChunkAndReturn(destination, completeBoundaryScript3);\n}\nvar clientRenderScript1Full = stringToPrecomputedChunk(clientRenderFunction + ';$RX(\"');\nvar clientRenderScript1Partial = stringToPrecomputedChunk('$RX(\"');\nvar clientRenderScript1A = stringToPrecomputedChunk('\"');\nvar clientRenderScript2 = stringToPrecomputedChunk(')</script>');\nvar clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(',');\nfunction writeClientRenderBoundaryInstruction(destination, responseState, boundaryID, errorDigest, errorMessage, errorComponentStack) {\n  writeChunk(destination, responseState.startInlineScript);\n\n  if (!responseState.sentClientRenderFunction) {\n    // The first time we write this, we'll need to include the full implementation.\n    responseState.sentClientRenderFunction = true;\n    writeChunk(destination, clientRenderScript1Full);\n  } else {\n    // Future calls can just reuse the same function.\n    writeChunk(destination, clientRenderScript1Partial);\n  }\n\n  if (boundaryID === null) {\n    throw new Error('An ID must have been assigned before we can complete the boundary.');\n  }\n\n  writeChunk(destination, boundaryID);\n  writeChunk(destination, clientRenderScript1A);\n\n  if (errorDigest || errorMessage || errorComponentStack) {\n    writeChunk(destination, clientRenderErrorScriptArgInterstitial);\n    writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorDigest || '')));\n  }\n\n  if (errorMessage || errorComponentStack) {\n    writeChunk(destination, clientRenderErrorScriptArgInterstitial);\n    writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorMessage || '')));\n  }\n\n  if (errorComponentStack) {\n    writeChunk(destination, clientRenderErrorScriptArgInterstitial);\n    writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorComponentStack)));\n  }\n\n  return writeChunkAndReturn(destination, clientRenderScript2);\n}\nvar regexForJSStringsInScripts = /[<\\u2028\\u2029]/g;\n\nfunction escapeJSStringsForInstructionScripts(input) {\n  var escaped = JSON.stringify(input);\n  return escaped.replace(regexForJSStringsInScripts, function (match) {\n    switch (match) {\n      // santizing breaking out of strings and script tags\n      case '<':\n        return \"\\\\u003c\";\n\n      case \"\\u2028\":\n        return \"\\\\u2028\";\n\n      case \"\\u2029\":\n        return \"\\\\u2029\";\n\n      default:\n        {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          throw new Error('escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React');\n        }\n    }\n  });\n}\n\nfunction createResponseState$1(generateStaticMarkup, identifierPrefix) {\n  var responseState = createResponseState(identifierPrefix, undefined);\n  return {\n    // Keep this in sync with ReactDOMServerFormatConfig\n    bootstrapChunks: responseState.bootstrapChunks,\n    startInlineScript: responseState.startInlineScript,\n    placeholderPrefix: responseState.placeholderPrefix,\n    segmentPrefix: responseState.segmentPrefix,\n    boundaryPrefix: responseState.boundaryPrefix,\n    idPrefix: responseState.idPrefix,\n    nextSuspenseID: responseState.nextSuspenseID,\n    sentCompleteSegmentFunction: responseState.sentCompleteSegmentFunction,\n    sentCompleteBoundaryFunction: responseState.sentCompleteBoundaryFunction,\n    sentClientRenderFunction: responseState.sentClientRenderFunction,\n    // This is an extra field for the legacy renderer\n    generateStaticMarkup: generateStaticMarkup\n  };\n}\nfunction createRootFormatContext() {\n  return {\n    insertionMode: HTML_MODE,\n    // We skip the root mode because we don't want to emit the DOCTYPE in legacy mode.\n    selectedValue: null\n  };\n}\nfunction pushTextInstance$1(target, text, responseState, textEmbedded) {\n  if (responseState.generateStaticMarkup) {\n    target.push(stringToChunk(escapeTextForBrowser(text)));\n    return false;\n  } else {\n    return pushTextInstance(target, text, responseState, textEmbedded);\n  }\n}\nfunction pushSegmentFinale$1(target, responseState, lastPushedText, textEmbedded) {\n  if (responseState.generateStaticMarkup) {\n    return;\n  } else {\n    return pushSegmentFinale(target, responseState, lastPushedText, textEmbedded);\n  }\n}\nfunction writeStartCompletedSuspenseBoundary$1(destination, responseState) {\n  if (responseState.generateStaticMarkup) {\n    // A completed boundary is done and doesn't need a representation in the HTML\n    // if we're not going to be hydrating it.\n    return true;\n  }\n\n  return writeStartCompletedSuspenseBoundary(destination);\n}\nfunction writeStartClientRenderedSuspenseBoundary$1(destination, responseState, // flushing these error arguments are not currently supported in this legacy streaming format.\nerrorDigest, errorMessage, errorComponentStack) {\n  if (responseState.generateStaticMarkup) {\n    // A client rendered boundary is done and doesn't need a representation in the HTML\n    // since we'll never hydrate it. This is arguably an error in static generation.\n    return true;\n  }\n\n  return writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMessage, errorComponentStack);\n}\nfunction writeEndCompletedSuspenseBoundary$1(destination, responseState) {\n  if (responseState.generateStaticMarkup) {\n    return true;\n  }\n\n  return writeEndCompletedSuspenseBoundary(destination);\n}\nfunction writeEndClientRenderedSuspenseBoundary$1(destination, responseState) {\n  if (responseState.generateStaticMarkup) {\n    return true;\n  }\n\n  return writeEndClientRenderedSuspenseBoundary(destination);\n}\n\nvar assign = Object.assign;\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_SCOPE_TYPE = Symbol.for('react.scope');\nvar REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');\nvar REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\nvar REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for('react.default_value');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\n\nfunction describeClassComponentFrame(ctor, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(ctor, true);\n  }\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar warnedAboutMissingGetChildContext;\n\n{\n  warnedAboutMissingGetChildContext = {};\n}\n\nvar emptyContextObject = {};\n\n{\n  Object.freeze(emptyContextObject);\n}\n\nfunction getMaskedContext(type, unmaskedContext) {\n  {\n    var contextTypes = type.contextTypes;\n\n    if (!contextTypes) {\n      return emptyContextObject;\n    }\n\n    var context = {};\n\n    for (var key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    {\n      var name = getComponentNameFromType(type) || 'Unknown';\n      checkPropTypes(contextTypes, context, 'context', name);\n    }\n\n    return context;\n  }\n}\nfunction processChildContext(instance, type, parentContext, childContextTypes) {\n  {\n    // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n    if (typeof instance.getChildContext !== 'function') {\n      {\n        var componentName = getComponentNameFromType(type) || 'Unknown';\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n\n          error('%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);\n        }\n      }\n\n      return parentContext;\n    }\n\n    var childContext = instance.getChildContext();\n\n    for (var contextKey in childContext) {\n      if (!(contextKey in childContextTypes)) {\n        throw new Error((getComponentNameFromType(type) || 'Unknown') + \".getChildContext(): key \\\"\" + contextKey + \"\\\" is not defined in childContextTypes.\");\n      }\n    }\n\n    {\n      var name = getComponentNameFromType(type) || 'Unknown';\n      checkPropTypes(childContextTypes, childContext, 'child context', name);\n    }\n\n    return assign({}, parentContext, childContext);\n  }\n}\n\nvar rendererSigil;\n\n{\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n} // Used to store the parent path of all context overrides in a shared linked list.\n// Forming a reverse tree.\n\n\nvar rootContextSnapshot = null; // We assume that this runtime owns the \"current\" field on all ReactContext instances.\n// This global (actually thread local) state represents what state all those \"current\",\n// fields are currently in.\n\nvar currentActiveSnapshot = null;\n\nfunction popNode(prev) {\n  {\n    prev.context._currentValue2 = prev.parentValue;\n  }\n}\n\nfunction pushNode(next) {\n  {\n    next.context._currentValue2 = next.value;\n  }\n}\n\nfunction popToNearestCommonAncestor(prev, next) {\n  if (prev === next) ; else {\n    popNode(prev);\n    var parentPrev = prev.parent;\n    var parentNext = next.parent;\n\n    if (parentPrev === null) {\n      if (parentNext !== null) {\n        throw new Error('The stacks must reach the root at the same time. This is a bug in React.');\n      }\n    } else {\n      if (parentNext === null) {\n        throw new Error('The stacks must reach the root at the same time. This is a bug in React.');\n      }\n\n      popToNearestCommonAncestor(parentPrev, parentNext);\n    } // On the way back, we push the new ones that weren't common.\n\n\n    pushNode(next);\n  }\n}\n\nfunction popAllPrevious(prev) {\n  popNode(prev);\n  var parentPrev = prev.parent;\n\n  if (parentPrev !== null) {\n    popAllPrevious(parentPrev);\n  }\n}\n\nfunction pushAllNext(next) {\n  var parentNext = next.parent;\n\n  if (parentNext !== null) {\n    pushAllNext(parentNext);\n  }\n\n  pushNode(next);\n}\n\nfunction popPreviousToCommonLevel(prev, next) {\n  popNode(prev);\n  var parentPrev = prev.parent;\n\n  if (parentPrev === null) {\n    throw new Error('The depth must equal at least at zero before reaching the root. This is a bug in React.');\n  }\n\n  if (parentPrev.depth === next.depth) {\n    // We found the same level. Now we just need to find a shared ancestor.\n    popToNearestCommonAncestor(parentPrev, next);\n  } else {\n    // We must still be deeper.\n    popPreviousToCommonLevel(parentPrev, next);\n  }\n}\n\nfunction popNextToCommonLevel(prev, next) {\n  var parentNext = next.parent;\n\n  if (parentNext === null) {\n    throw new Error('The depth must equal at least at zero before reaching the root. This is a bug in React.');\n  }\n\n  if (prev.depth === parentNext.depth) {\n    // We found the same level. Now we just need to find a shared ancestor.\n    popToNearestCommonAncestor(prev, parentNext);\n  } else {\n    // We must still be deeper.\n    popNextToCommonLevel(prev, parentNext);\n  }\n\n  pushNode(next);\n} // Perform context switching to the new snapshot.\n// To make it cheap to read many contexts, while not suspending, we make the switch eagerly by\n// updating all the context's current values. That way reads, always just read the current value.\n// At the cost of updating contexts even if they're never read by this subtree.\n\n\nfunction switchContext(newSnapshot) {\n  // The basic algorithm we need to do is to pop back any contexts that are no longer on the stack.\n  // We also need to update any new contexts that are now on the stack with the deepest value.\n  // The easiest way to update new contexts is to just reapply them in reverse order from the\n  // perspective of the backpointers. To avoid allocating a lot when switching, we use the stack\n  // for that. Therefore this algorithm is recursive.\n  // 1) First we pop which ever snapshot tree was deepest. Popping old contexts as we go.\n  // 2) Then we find the nearest common ancestor from there. Popping old contexts as we go.\n  // 3) Then we reapply new contexts on the way back up the stack.\n  var prev = currentActiveSnapshot;\n  var next = newSnapshot;\n\n  if (prev !== next) {\n    if (prev === null) {\n      // $FlowFixMe: This has to be non-null since it's not equal to prev.\n      pushAllNext(next);\n    } else if (next === null) {\n      popAllPrevious(prev);\n    } else if (prev.depth === next.depth) {\n      popToNearestCommonAncestor(prev, next);\n    } else if (prev.depth > next.depth) {\n      popPreviousToCommonLevel(prev, next);\n    } else {\n      popNextToCommonLevel(prev, next);\n    }\n\n    currentActiveSnapshot = next;\n  }\n}\nfunction pushProvider(context, nextValue) {\n  var prevValue;\n\n  {\n    prevValue = context._currentValue2;\n    context._currentValue2 = nextValue;\n\n    {\n      if (context._currentRenderer2 !== undefined && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil) {\n        error('Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.');\n      }\n\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n\n  var prevNode = currentActiveSnapshot;\n  var newNode = {\n    parent: prevNode,\n    depth: prevNode === null ? 0 : prevNode.depth + 1,\n    context: context,\n    parentValue: prevValue,\n    value: nextValue\n  };\n  currentActiveSnapshot = newNode;\n  return newNode;\n}\nfunction popProvider(context) {\n  var prevSnapshot = currentActiveSnapshot;\n\n  if (prevSnapshot === null) {\n    throw new Error('Tried to pop a Context at the root of the app. This is a bug in React.');\n  }\n\n  {\n    if (prevSnapshot.context !== context) {\n      error('The parent context is not the expected context. This is probably a bug in React.');\n    }\n  }\n\n  {\n    var _value = prevSnapshot.parentValue;\n\n    if (_value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n      prevSnapshot.context._currentValue2 = prevSnapshot.context._defaultValue;\n    } else {\n      prevSnapshot.context._currentValue2 = _value;\n    }\n\n    {\n      if (context._currentRenderer2 !== undefined && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil) {\n        error('Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.');\n      }\n\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n\n  return currentActiveSnapshot = prevSnapshot.parent;\n}\nfunction getActiveContext() {\n  return currentActiveSnapshot;\n}\nfunction readContext(context) {\n  var value =  context._currentValue2;\n  return value;\n}\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\nfunction get(key) {\n  return key._reactInternals;\n}\nfunction set(key, value) {\n  key._reactInternals = value;\n}\n\nvar didWarnAboutNoopUpdateForComponent = {};\nvar didWarnAboutDeprecatedWillMount = {};\nvar didWarnAboutUninitializedState;\nvar didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nvar didWarnAboutLegacyLifecyclesAndDerivedState;\nvar didWarnAboutUndefinedDerivedState;\nvar warnOnUndefinedDerivedState;\nvar warnOnInvalidCallback;\nvar didWarnAboutDirectlyAssigningPropsToState;\nvar didWarnAboutContextTypeAndContextTypes;\nvar didWarnAboutInvalidateContextType;\n\n{\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n  var didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function (callback, callerName) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n\n    var key = callerName + '_' + callback;\n\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n\n      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);\n    }\n  };\n\n  warnOnUndefinedDerivedState = function (type, partialState) {\n    if (partialState === undefined) {\n      var componentName = getComponentNameFromType(type) || 'Component';\n\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n\n        error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);\n      }\n    }\n  };\n}\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && getComponentNameFromType(_constructor) || 'ReactClass';\n    var warningKey = componentName + '.' + callerName;\n\n    if (didWarnAboutNoopUpdateForComponent[warningKey]) {\n      return;\n    }\n\n    error('%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op.\\n\\nPlease check the code for the %s component.', callerName, callerName, componentName);\n\n    didWarnAboutNoopUpdateForComponent[warningKey] = true;\n  }\n}\n\nvar classComponentUpdater = {\n  isMounted: function (inst) {\n    return false;\n  },\n  enqueueSetState: function (inst, payload, callback) {\n    var internals = get(inst);\n\n    if (internals.queue === null) {\n      warnNoop(inst, 'setState');\n    } else {\n      internals.queue.push(payload);\n\n      {\n        if (callback !== undefined && callback !== null) {\n          warnOnInvalidCallback(callback, 'setState');\n        }\n      }\n    }\n  },\n  enqueueReplaceState: function (inst, payload, callback) {\n    var internals = get(inst);\n    internals.replace = true;\n    internals.queue = [payload];\n\n    {\n      if (callback !== undefined && callback !== null) {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n    }\n  },\n  enqueueForceUpdate: function (inst, callback) {\n    var internals = get(inst);\n\n    if (internals.queue === null) {\n      warnNoop(inst, 'forceUpdate');\n    } else {\n      {\n        if (callback !== undefined && callback !== null) {\n          warnOnInvalidCallback(callback, 'setState');\n        }\n      }\n    }\n  }\n};\n\nfunction applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, prevState, nextProps) {\n  var partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  {\n    warnOnUndefinedDerivedState(ctor, partialState);\n  } // Merge the partial state and the previous state.\n\n\n  var newState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);\n  return newState;\n}\n\nfunction constructClassInstance(ctor, props, maskedLegacyContext) {\n  var context = emptyContextObject;\n  var contextType = ctor.contextType;\n\n  {\n    if ('contextType' in ctor) {\n      var isValid = // Allow null for conditional declaration\n      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n        var addendum = '';\n\n        if (contextType === undefined) {\n          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';\n        }\n\n        error('%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentNameFromType(ctor) || 'Component', addendum);\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext(contextType);\n  } else {\n    context = maskedLegacyContext;\n  }\n\n  var instance = new ctor(props, context);\n\n  {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && (instance.state === null || instance.state === undefined)) {\n      var componentName = getComponentNameFromType(ctor) || 'Component';\n\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n\n        error('`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);\n      }\n    } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n\n\n    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {\n      var foundWillMountName = null;\n      var foundWillReceivePropsName = null;\n      var foundWillUpdateName = null;\n\n      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n\n      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n\n      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n\n      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n        var _componentName = getComponentNameFromType(ctor) || 'Component';\n\n        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\n\n          error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' + 'The above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://reactjs.org/link/unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? \"\\n  \" + foundWillMountName : '', foundWillReceivePropsName !== null ? \"\\n  \" + foundWillReceivePropsName : '', foundWillUpdateName !== null ? \"\\n  \" + foundWillUpdateName : '');\n        }\n      }\n    }\n  }\n\n  return instance;\n}\n\nfunction checkClassInstance(instance, ctor, newProps) {\n  {\n    var name = getComponentNameFromType(ctor) || 'Component';\n    var renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        error('%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);\n      } else {\n        error('%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);\n      }\n    }\n\n    if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {\n      error('getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);\n    }\n\n    if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);\n    }\n\n    if (instance.propTypes) {\n      error('propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);\n    }\n\n    if (instance.contextType) {\n      error('contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name);\n    }\n\n    {\n      if (instance.contextTypes) {\n        error('contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);\n      }\n\n      if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n\n        error('%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === 'function') {\n      error('%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);\n    }\n\n    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {\n      error('%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentNameFromType(ctor) || 'A pure component');\n    }\n\n    if (typeof instance.componentDidUnmount === 'function') {\n      error('%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);\n    }\n\n    if (typeof instance.componentDidReceiveProps === 'function') {\n      error('%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name);\n    }\n\n    if (typeof instance.componentWillRecieveProps === 'function') {\n      error('%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);\n    }\n\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\n      error('%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name);\n    }\n\n    var hasMutatedProps = instance.props !== newProps;\n\n    if (instance.props !== undefined && hasMutatedProps) {\n      error('%s(...): When calling super() in `%s`, make sure to pass ' + \"up the same props that your component's constructor was passed.\", name, name);\n    }\n\n    if (instance.defaultProps) {\n      error('Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n\n      error('%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentNameFromType(ctor));\n    }\n\n    if (typeof instance.getDerivedStateFromProps === 'function') {\n      error('%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);\n    }\n\n    if (typeof instance.getDerivedStateFromError === 'function') {\n      error('%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);\n    }\n\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\n      error('%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name);\n    }\n\n    var _state = instance.state;\n\n    if (_state && (typeof _state !== 'object' || isArray(_state))) {\n      error('%s.state: must be set to an object or null', name);\n    }\n\n    if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') {\n      error('%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name);\n    }\n  }\n}\n\nfunction callComponentWillMount(type, instance) {\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    {\n      if ( instance.componentWillMount.__suppressDeprecationWarning !== true) {\n        var componentName = getComponentNameFromType(type) || 'Unknown';\n\n        if (!didWarnAboutDeprecatedWillMount[componentName]) {\n          warn( // keep this warning in sync with ReactStrictModeWarning.js\n          'componentWillMount has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move code from componentWillMount to componentDidMount (preferred in most cases) ' + 'or the constructor.\\n' + '\\nPlease update the following components: %s', componentName);\n\n          didWarnAboutDeprecatedWillMount[componentName] = true;\n        }\n      }\n    }\n\n    instance.componentWillMount();\n  }\n\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    {\n      error('%s.componentWillMount(): Assigning directly to this.state is ' + \"deprecated (except inside a component's \" + 'constructor). Use setState instead.', getComponentNameFromType(type) || 'Component');\n    }\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction processUpdateQueue(internalInstance, inst, props, maskedLegacyContext) {\n  if (internalInstance.queue !== null && internalInstance.queue.length > 0) {\n    var oldQueue = internalInstance.queue;\n    var oldReplace = internalInstance.replace;\n    internalInstance.queue = null;\n    internalInstance.replace = false;\n\n    if (oldReplace && oldQueue.length === 1) {\n      inst.state = oldQueue[0];\n    } else {\n      var nextState = oldReplace ? oldQueue[0] : inst.state;\n      var dontMutate = true;\n\n      for (var i = oldReplace ? 1 : 0; i < oldQueue.length; i++) {\n        var partial = oldQueue[i];\n        var partialState = typeof partial === 'function' ? partial.call(inst, nextState, props, maskedLegacyContext) : partial;\n\n        if (partialState != null) {\n          if (dontMutate) {\n            dontMutate = false;\n            nextState = assign({}, nextState, partialState);\n          } else {\n            assign(nextState, partialState);\n          }\n        }\n      }\n\n      inst.state = nextState;\n    }\n  } else {\n    internalInstance.queue = null;\n  }\n} // Invokes the mount life-cycles on a previously never rendered instance.\n\n\nfunction mountClassInstance(instance, ctor, newProps, maskedLegacyContext) {\n  {\n    checkClassInstance(instance, ctor, newProps);\n  }\n\n  var initialState = instance.state !== undefined ? instance.state : null;\n  instance.updater = classComponentUpdater;\n  instance.props = newProps;\n  instance.state = initialState; // We don't bother initializing the refs object on the server, since we're not going to resolve them anyway.\n  // The internal instance will be used to manage updates that happen during this mount.\n\n  var internalInstance = {\n    queue: [],\n    replace: false\n  };\n  set(instance, internalInstance);\n  var contextType = ctor.contextType;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else {\n    instance.context = maskedLegacyContext;\n  }\n\n  {\n    if (instance.state === newProps) {\n      var componentName = getComponentNameFromType(ctor) || 'Component';\n\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n\n        error('%s: It is not recommended to assign props directly to state ' + \"because updates to props won't be reflected in state. \" + 'In most cases, it is better to use props directly.', componentName);\n      }\n    }\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    instance.state = applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, initialState, newProps);\n  } // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n\n  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\n    callComponentWillMount(ctor, instance); // If we had additional state updates during this life-cycle, let's\n    // process them now.\n\n    processUpdateQueue(internalInstance, instance, newProps, maskedLegacyContext);\n  }\n}\n\n// Ids are base 32 strings whose binary representation corresponds to the\n// position of a node in a tree.\n// Every time the tree forks into multiple children, we add additional bits to\n// the left of the sequence that represent the position of the child within the\n// current level of children.\n//\n//      00101       00010001011010101\n//      ╰─┬─╯       ╰───────┬───────╯\n//   Fork 5 of 20       Parent id\n//\n// The leading 0s are important. In the above example, you only need 3 bits to\n// represent slot 5. However, you need 5 bits to represent all the forks at\n// the current level, so we must account for the empty bits at the end.\n//\n// For this same reason, slots are 1-indexed instead of 0-indexed. Otherwise,\n// the zeroth id at a level would be indistinguishable from its parent.\n//\n// If a node has only one child, and does not materialize an id (i.e. does not\n// contain a useId hook), then we don't need to allocate any space in the\n// sequence. It's treated as a transparent indirection. For example, these two\n// trees produce the same ids:\n//\n// <>                          <>\n//   <Indirection>               <A />\n//     <A />                     <B />\n//   </Indirection>            </>\n//   <B />\n// </>\n//\n// However, we cannot skip any node that materializes an id. Otherwise, a parent\n// id that does not fork would be indistinguishable from its child id. For\n// example, this tree does not fork, but the parent and child must have\n// different ids.\n//\n// <Parent>\n//   <Child />\n// </Parent>\n//\n// To handle this scenario, every time we materialize an id, we allocate a\n// new level with a single slot. You can think of this as a fork with only one\n// prong, or an array of children with length 1.\n//\n// It's possible for the size of the sequence to exceed 32 bits, the max\n// size for bitwise operations. When this happens, we make more room by\n// converting the right part of the id to a string and storing it in an overflow\n// variable. We use a base 32 string representation, because 32 is the largest\n// power of 2 that is supported by toString(). We want the base to be large so\n// that the resulting ids are compact, and we want the base to be a power of 2\n// because every log2(base) bits corresponds to a single character, i.e. every\n// log2(32) = 5 bits. That means we can lop bits off the end 5 at a time without\n// affecting the final result.\nvar emptyTreeContext = {\n  id: 1,\n  overflow: ''\n};\nfunction getTreeId(context) {\n  var overflow = context.overflow;\n  var idWithLeadingBit = context.id;\n  var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);\n  return id.toString(32) + overflow;\n}\nfunction pushTreeContext(baseContext, totalChildren, index) {\n  var baseIdWithLeadingBit = baseContext.id;\n  var baseOverflow = baseContext.overflow; // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part\n  // of the id; we use it to account for leading 0s.\n\n  var baseLength = getBitLength(baseIdWithLeadingBit) - 1;\n  var baseId = baseIdWithLeadingBit & ~(1 << baseLength);\n  var slot = index + 1;\n  var length = getBitLength(totalChildren) + baseLength; // 30 is the max length we can store without overflowing, taking into\n  // consideration the leading 1 we use to mark the end of the sequence.\n\n  if (length > 30) {\n    // We overflowed the bitwise-safe range. Fall back to slower algorithm.\n    // This branch assumes the length of the base id is greater than 5; it won't\n    // work for smaller ids, because you need 5 bits per character.\n    //\n    // We encode the id in multiple steps: first the base id, then the\n    // remaining digits.\n    //\n    // Each 5 bit sequence corresponds to a single base 32 character. So for\n    // example, if the current id is 23 bits long, we can convert 20 of those\n    // bits into a string of 4 characters, with 3 bits left over.\n    //\n    // First calculate how many bits in the base id represent a complete\n    // sequence of characters.\n    var numberOfOverflowBits = baseLength - baseLength % 5; // Then create a bitmask that selects only those bits.\n\n    var newOverflowBits = (1 << numberOfOverflowBits) - 1; // Select the bits, and convert them to a base 32 string.\n\n    var newOverflow = (baseId & newOverflowBits).toString(32); // Now we can remove those bits from the base id.\n\n    var restOfBaseId = baseId >> numberOfOverflowBits;\n    var restOfBaseLength = baseLength - numberOfOverflowBits; // Finally, encode the rest of the bits using the normal algorithm. Because\n    // we made more room, this time it won't overflow.\n\n    var restOfLength = getBitLength(totalChildren) + restOfBaseLength;\n    var restOfNewBits = slot << restOfBaseLength;\n    var id = restOfNewBits | restOfBaseId;\n    var overflow = newOverflow + baseOverflow;\n    return {\n      id: 1 << restOfLength | id,\n      overflow: overflow\n    };\n  } else {\n    // Normal path\n    var newBits = slot << baseLength;\n\n    var _id = newBits | baseId;\n\n    var _overflow = baseOverflow;\n    return {\n      id: 1 << length | _id,\n      overflow: _overflow\n    };\n  }\n}\n\nfunction getBitLength(number) {\n  return 32 - clz32(number);\n}\n\nfunction getLeadingBit(id) {\n  return 1 << getBitLength(id) - 1;\n} // TODO: Math.clz32 is supported in Node 12+. Maybe we can drop the fallback.\n\n\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\nvar log = Math.log;\nvar LN2 = Math.LN2;\n\nfunction clz32Fallback(x) {\n  var asUint = x >>> 0;\n\n  if (asUint === 0) {\n    return 32;\n  }\n\n  return 31 - (log(asUint) / LN2 | 0) | 0;\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar currentlyRenderingComponent = null;\nvar currentlyRenderingTask = null;\nvar firstWorkInProgressHook = null;\nvar workInProgressHook = null; // Whether the work-in-progress hook is a re-rendered hook\n\nvar isReRender = false; // Whether an update was scheduled during the currently executing render pass.\n\nvar didScheduleRenderPhaseUpdate = false; // Counts the number of useId hooks in this component\n\nvar localIdCounter = 0; // Lazily created map of render-phase updates\n\nvar renderPhaseUpdates = null; // Counter to prevent infinite loops.\n\nvar numberOfReRenders = 0;\nvar RE_RENDER_LIMIT = 25;\nvar isInHookUserCodeInDev = false; // In DEV, this is the name of the currently executing primitive hook\n\nvar currentHookNameInDev;\n\nfunction resolveCurrentlyRenderingComponent() {\n  if (currentlyRenderingComponent === null) {\n    throw new Error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n  }\n\n  {\n    if (isInHookUserCodeInDev) {\n      error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://reactjs.org/link/rules-of-hooks');\n    }\n  }\n\n  return currentlyRenderingComponent;\n}\n\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  if (prevDeps === null) {\n    {\n      error('%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);\n    }\n\n    return false;\n  }\n\n  {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      error('The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\\n\\n' + 'Previous: %s\\n' + 'Incoming: %s', currentHookNameInDev, \"[\" + nextDeps.join(', ') + \"]\", \"[\" + prevDeps.join(', ') + \"]\");\n    }\n  }\n\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (objectIs(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction createHook() {\n  if (numberOfReRenders > 0) {\n    throw new Error('Rendered more hooks than during the previous render');\n  }\n\n  return {\n    memoizedState: null,\n    queue: null,\n    next: null\n  };\n}\n\nfunction createWorkInProgressHook() {\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    if (firstWorkInProgressHook === null) {\n      isReRender = false;\n      firstWorkInProgressHook = workInProgressHook = createHook();\n    } else {\n      // There's already a work-in-progress. Reuse it.\n      isReRender = true;\n      workInProgressHook = firstWorkInProgressHook;\n    }\n  } else {\n    if (workInProgressHook.next === null) {\n      isReRender = false; // Append to the end of the list\n\n      workInProgressHook = workInProgressHook.next = createHook();\n    } else {\n      // There's already a work-in-progress. Reuse it.\n      isReRender = true;\n      workInProgressHook = workInProgressHook.next;\n    }\n  }\n\n  return workInProgressHook;\n}\n\nfunction prepareToUseHooks(task, componentIdentity) {\n  currentlyRenderingComponent = componentIdentity;\n  currentlyRenderingTask = task;\n\n  {\n    isInHookUserCodeInDev = false;\n  } // The following should have already been reset\n  // didScheduleRenderPhaseUpdate = false;\n  // localIdCounter = 0;\n  // firstWorkInProgressHook = null;\n  // numberOfReRenders = 0;\n  // renderPhaseUpdates = null;\n  // workInProgressHook = null;\n\n\n  localIdCounter = 0;\n}\nfunction finishHooks(Component, props, children, refOrContext) {\n  // This must be called after every function component to prevent hooks from\n  // being used in classes.\n  while (didScheduleRenderPhaseUpdate) {\n    // Updates were scheduled during the render phase. They are stored in\n    // the `renderPhaseUpdates` map. Call the component again, reusing the\n    // work-in-progress hooks and applying the additional updates on top. Keep\n    // restarting until no more updates are scheduled.\n    didScheduleRenderPhaseUpdate = false;\n    localIdCounter = 0;\n    numberOfReRenders += 1; // Start over from the beginning of the list\n\n    workInProgressHook = null;\n    children = Component(props, refOrContext);\n  }\n\n  resetHooksState();\n  return children;\n}\nfunction checkDidRenderIdHook() {\n  // This should be called immediately after every finishHooks call.\n  // Conceptually, it's part of the return value of finishHooks; it's only a\n  // separate function to avoid using an array tuple.\n  var didRenderIdHook = localIdCounter !== 0;\n  return didRenderIdHook;\n} // Reset the internal hooks state if an error occurs while rendering a component\n\nfunction resetHooksState() {\n  {\n    isInHookUserCodeInDev = false;\n  }\n\n  currentlyRenderingComponent = null;\n  currentlyRenderingTask = null;\n  didScheduleRenderPhaseUpdate = false;\n  firstWorkInProgressHook = null;\n  numberOfReRenders = 0;\n  renderPhaseUpdates = null;\n  workInProgressHook = null;\n}\n\nfunction readContext$1(context) {\n  {\n    if (isInHookUserCodeInDev) {\n      error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\n    }\n  }\n\n  return readContext(context);\n}\n\nfunction useContext(context) {\n  {\n    currentHookNameInDev = 'useContext';\n  }\n\n  resolveCurrentlyRenderingComponent();\n  return readContext(context);\n}\n\nfunction basicStateReducer(state, action) {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction useState(initialState) {\n  {\n    currentHookNameInDev = 'useState';\n  }\n\n  return useReducer(basicStateReducer, // useReducer has a special case to support lazy useState initializers\n  initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  {\n    if (reducer !== basicStateReducer) {\n      currentHookNameInDev = 'useReducer';\n    }\n  }\n\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n\n  if (isReRender) {\n    // This is a re-render. Apply the new render phase updates to the previous\n    // current hook.\n    var queue = workInProgressHook.queue;\n    var dispatch = queue.dispatch;\n\n    if (renderPhaseUpdates !== null) {\n      // Render phase updates are stored in a map of queue -> linked list\n      var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);\n\n      if (firstRenderPhaseUpdate !== undefined) {\n        renderPhaseUpdates.delete(queue);\n        var newState = workInProgressHook.memoizedState;\n        var update = firstRenderPhaseUpdate;\n\n        do {\n          // Process this render phase update. We don't have to check the\n          // priority because it will always be the same as the current\n          // render's.\n          var action = update.action;\n\n          {\n            isInHookUserCodeInDev = true;\n          }\n\n          newState = reducer(newState, action);\n\n          {\n            isInHookUserCodeInDev = false;\n          }\n\n          update = update.next;\n        } while (update !== null);\n\n        workInProgressHook.memoizedState = newState;\n        return [newState, dispatch];\n      }\n    }\n\n    return [workInProgressHook.memoizedState, dispatch];\n  } else {\n    {\n      isInHookUserCodeInDev = true;\n    }\n\n    var initialState;\n\n    if (reducer === basicStateReducer) {\n      // Special case for `useState`.\n      initialState = typeof initialArg === 'function' ? initialArg() : initialArg;\n    } else {\n      initialState = init !== undefined ? init(initialArg) : initialArg;\n    }\n\n    {\n      isInHookUserCodeInDev = false;\n    }\n\n    workInProgressHook.memoizedState = initialState;\n\n    var _queue = workInProgressHook.queue = {\n      last: null,\n      dispatch: null\n    };\n\n    var _dispatch = _queue.dispatch = dispatchAction.bind(null, currentlyRenderingComponent, _queue);\n\n    return [workInProgressHook.memoizedState, _dispatch];\n  }\n}\n\nfunction useMemo(nextCreate, deps) {\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n\n  if (workInProgressHook !== null) {\n    var prevState = workInProgressHook.memoizedState;\n\n    if (prevState !== null) {\n      if (nextDeps !== null) {\n        var prevDeps = prevState[1];\n\n        if (areHookInputsEqual(nextDeps, prevDeps)) {\n          return prevState[0];\n        }\n      }\n    }\n  }\n\n  {\n    isInHookUserCodeInDev = true;\n  }\n\n  var nextValue = nextCreate();\n\n  {\n    isInHookUserCodeInDev = false;\n  }\n\n  workInProgressHook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction useRef(initialValue) {\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n  var previousRef = workInProgressHook.memoizedState;\n\n  if (previousRef === null) {\n    var ref = {\n      current: initialValue\n    };\n\n    {\n      Object.seal(ref);\n    }\n\n    workInProgressHook.memoizedState = ref;\n    return ref;\n  } else {\n    return previousRef;\n  }\n}\n\nfunction useLayoutEffect(create, inputs) {\n  {\n    currentHookNameInDev = 'useLayoutEffect';\n\n    error('useLayoutEffect does nothing on the server, because its effect cannot ' + \"be encoded into the server renderer's output format. This will lead \" + 'to a mismatch between the initial, non-hydrated UI and the intended ' + 'UI. To avoid this, useLayoutEffect should only be used in ' + 'components that render exclusively on the client. ' + 'See https://reactjs.org/link/uselayouteffect-ssr for common fixes.');\n  }\n}\n\nfunction dispatchAction(componentIdentity, queue, action) {\n  if (numberOfReRenders >= RE_RENDER_LIMIT) {\n    throw new Error('Too many re-renders. React limits the number of renders to prevent ' + 'an infinite loop.');\n  }\n\n  if (componentIdentity === currentlyRenderingComponent) {\n    // This is a render phase update. Stash it in a lazily-created map of\n    // queue -> linked list of updates. After this render pass, we'll restart\n    // and apply the stashed updates on top of the work-in-progress hook.\n    didScheduleRenderPhaseUpdate = true;\n    var update = {\n      action: action,\n      next: null\n    };\n\n    if (renderPhaseUpdates === null) {\n      renderPhaseUpdates = new Map();\n    }\n\n    var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);\n\n    if (firstRenderPhaseUpdate === undefined) {\n      renderPhaseUpdates.set(queue, update);\n    } else {\n      // Append the update to the end of the list.\n      var lastRenderPhaseUpdate = firstRenderPhaseUpdate;\n\n      while (lastRenderPhaseUpdate.next !== null) {\n        lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n      }\n\n      lastRenderPhaseUpdate.next = update;\n    }\n  }\n}\n\nfunction useCallback(callback, deps) {\n  return useMemo(function () {\n    return callback;\n  }, deps);\n} // TODO Decide on how to implement this hook for server rendering.\n// If a mutation occurs during render, consider triggering a Suspense boundary\n// and falling back to client rendering.\n\nfunction useMutableSource(source, getSnapshot, subscribe) {\n  resolveCurrentlyRenderingComponent();\n  return getSnapshot(source._source);\n}\n\nfunction useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  if (getServerSnapshot === undefined) {\n    throw new Error('Missing getServerSnapshot, which is required for ' + 'server-rendered content. Will revert to client rendering.');\n  }\n\n  return getServerSnapshot();\n}\n\nfunction useDeferredValue(value) {\n  resolveCurrentlyRenderingComponent();\n  return value;\n}\n\nfunction unsupportedStartTransition() {\n  throw new Error('startTransition cannot be called during server rendering.');\n}\n\nfunction useTransition() {\n  resolveCurrentlyRenderingComponent();\n  return [false, unsupportedStartTransition];\n}\n\nfunction useId() {\n  var task = currentlyRenderingTask;\n  var treeId = getTreeId(task.treeContext);\n  var responseState = currentResponseState;\n\n  if (responseState === null) {\n    throw new Error('Invalid hook call. Hooks can only be called inside of the body of a function component.');\n  }\n\n  var localId = localIdCounter++;\n  return makeId(responseState, treeId, localId);\n}\n\nfunction noop() {}\n\nvar Dispatcher = {\n  readContext: readContext$1,\n  useContext: useContext,\n  useMemo: useMemo,\n  useReducer: useReducer,\n  useRef: useRef,\n  useState: useState,\n  useInsertionEffect: noop,\n  useLayoutEffect: useLayoutEffect,\n  useCallback: useCallback,\n  // useImperativeHandle is not run in the server environment\n  useImperativeHandle: noop,\n  // Effects are not run in the server environment.\n  useEffect: noop,\n  // Debugging effect\n  useDebugValue: noop,\n  useDeferredValue: useDeferredValue,\n  useTransition: useTransition,\n  useId: useId,\n  // Subscriptions are not setup in a server environment.\n  useMutableSource: useMutableSource,\n  useSyncExternalStore: useSyncExternalStore\n};\n\nvar currentResponseState = null;\nfunction setCurrentResponseState(responseState) {\n  currentResponseState = responseState;\n}\n\nfunction getStackByComponentStackNode(componentStack) {\n  try {\n    var info = '';\n    var node = componentStack;\n\n    do {\n      switch (node.tag) {\n        case 0:\n          info += describeBuiltInComponentFrame(node.type, null, null);\n          break;\n\n        case 1:\n          info += describeFunctionComponentFrame(node.type, null, null);\n          break;\n\n        case 2:\n          info += describeClassComponentFrame(node.type, null, null);\n          break;\n      }\n\n      node = node.parent;\n    } while (node);\n\n    return info;\n  } catch (x) {\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\nvar PENDING = 0;\nvar COMPLETED = 1;\nvar FLUSHED = 2;\nvar ABORTED = 3;\nvar ERRORED = 4;\nvar OPEN = 0;\nvar CLOSING = 1;\nvar CLOSED = 2;\n// This is a default heuristic for how to split up the HTML content into progressive\n// loading. Our goal is to be able to display additional new content about every 500ms.\n// Faster than that is unnecessary and should be throttled on the client. It also\n// adds unnecessary overhead to do more splits. We don't know if it's a higher or lower\n// end device but higher end suffer less from the overhead than lower end does from\n// not getting small enough pieces. We error on the side of low end.\n// We base this on low end 3G speeds which is about 500kbits per second. We assume\n// that there can be a reasonable drop off from max bandwidth which leaves you with\n// as little as 80%. We can receive half of that each 500ms - at best. In practice,\n// a little bandwidth is lost to processing and contention - e.g. CSS and images that\n// are downloaded along with the main content. So we estimate about half of that to be\n// the lower end throughput. In other words, we expect that you can at least show\n// about 12.5kb of content per 500ms. Not counting starting latency for the first\n// paint.\n// 500 * 1024 / 8 * .8 * 0.5 / 2\nvar DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;\n\nfunction defaultErrorHandler(error) {\n  console['error'](error); // Don't transform to our wrapper\n\n  return null;\n}\n\nfunction noop$1() {}\n\nfunction createRequest(children, responseState, rootFormatContext, progressiveChunkSize, onError, onAllReady, onShellReady, onShellError, onFatalError) {\n  var pingedTasks = [];\n  var abortSet = new Set();\n  var request = {\n    destination: null,\n    responseState: responseState,\n    progressiveChunkSize: progressiveChunkSize === undefined ? DEFAULT_PROGRESSIVE_CHUNK_SIZE : progressiveChunkSize,\n    status: OPEN,\n    fatalError: null,\n    nextSegmentId: 0,\n    allPendingTasks: 0,\n    pendingRootTasks: 0,\n    completedRootSegment: null,\n    abortableTasks: abortSet,\n    pingedTasks: pingedTasks,\n    clientRenderedBoundaries: [],\n    completedBoundaries: [],\n    partialBoundaries: [],\n    onError: onError === undefined ? defaultErrorHandler : onError,\n    onAllReady: onAllReady === undefined ? noop$1 : onAllReady,\n    onShellReady: onShellReady === undefined ? noop$1 : onShellReady,\n    onShellError: onShellError === undefined ? noop$1 : onShellError,\n    onFatalError: onFatalError === undefined ? noop$1 : onFatalError\n  }; // This segment represents the root fallback.\n\n  var rootSegment = createPendingSegment(request, 0, null, rootFormatContext, // Root segments are never embedded in Text on either edge\n  false, false); // There is no parent so conceptually, we're unblocked to flush this segment.\n\n  rootSegment.parentFlushed = true;\n  var rootTask = createTask(request, children, null, rootSegment, abortSet, emptyContextObject, rootContextSnapshot, emptyTreeContext);\n  pingedTasks.push(rootTask);\n  return request;\n}\n\nfunction pingTask(request, task) {\n  var pingedTasks = request.pingedTasks;\n  pingedTasks.push(task);\n\n  if (pingedTasks.length === 1) {\n    scheduleWork(function () {\n      return performWork(request);\n    });\n  }\n}\n\nfunction createSuspenseBoundary(request, fallbackAbortableTasks) {\n  return {\n    id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,\n    rootSegmentID: -1,\n    parentFlushed: false,\n    pendingTasks: 0,\n    forceClientRender: false,\n    completedSegments: [],\n    byteSize: 0,\n    fallbackAbortableTasks: fallbackAbortableTasks,\n    errorDigest: null\n  };\n}\n\nfunction createTask(request, node, blockedBoundary, blockedSegment, abortSet, legacyContext, context, treeContext) {\n  request.allPendingTasks++;\n\n  if (blockedBoundary === null) {\n    request.pendingRootTasks++;\n  } else {\n    blockedBoundary.pendingTasks++;\n  }\n\n  var task = {\n    node: node,\n    ping: function () {\n      return pingTask(request, task);\n    },\n    blockedBoundary: blockedBoundary,\n    blockedSegment: blockedSegment,\n    abortSet: abortSet,\n    legacyContext: legacyContext,\n    context: context,\n    treeContext: treeContext\n  };\n\n  {\n    task.componentStack = null;\n  }\n\n  abortSet.add(task);\n  return task;\n}\n\nfunction createPendingSegment(request, index, boundary, formatContext, lastPushedText, textEmbedded) {\n  return {\n    status: PENDING,\n    id: -1,\n    // lazily assigned later\n    index: index,\n    parentFlushed: false,\n    chunks: [],\n    children: [],\n    formatContext: formatContext,\n    boundary: boundary,\n    lastPushedText: lastPushedText,\n    textEmbedded: textEmbedded\n  };\n} // DEV-only global reference to the currently executing task\n\n\nvar currentTaskInDEV = null;\n\nfunction getCurrentStackInDEV() {\n  {\n    if (currentTaskInDEV === null || currentTaskInDEV.componentStack === null) {\n      return '';\n    }\n\n    return getStackByComponentStackNode(currentTaskInDEV.componentStack);\n  }\n}\n\nfunction pushBuiltInComponentStackInDEV(task, type) {\n  {\n    task.componentStack = {\n      tag: 0,\n      parent: task.componentStack,\n      type: type\n    };\n  }\n}\n\nfunction pushFunctionComponentStackInDEV(task, type) {\n  {\n    task.componentStack = {\n      tag: 1,\n      parent: task.componentStack,\n      type: type\n    };\n  }\n}\n\nfunction pushClassComponentStackInDEV(task, type) {\n  {\n    task.componentStack = {\n      tag: 2,\n      parent: task.componentStack,\n      type: type\n    };\n  }\n}\n\nfunction popComponentStackInDEV(task) {\n  {\n    if (task.componentStack === null) {\n      error('Unexpectedly popped too many stack frames. This is a bug in React.');\n    } else {\n      task.componentStack = task.componentStack.parent;\n    }\n  }\n} // stash the component stack of an unwinding error until it is processed\n\n\nvar lastBoundaryErrorComponentStackDev = null;\n\nfunction captureBoundaryErrorDetailsDev(boundary, error) {\n  {\n    var errorMessage;\n\n    if (typeof error === 'string') {\n      errorMessage = error;\n    } else if (error && typeof error.message === 'string') {\n      errorMessage = error.message;\n    } else {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      errorMessage = String(error);\n    }\n\n    var errorComponentStack = lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();\n    lastBoundaryErrorComponentStackDev = null;\n    boundary.errorMessage = errorMessage;\n    boundary.errorComponentStack = errorComponentStack;\n  }\n}\n\nfunction logRecoverableError(request, error) {\n  // If this callback errors, we intentionally let that error bubble up to become a fatal error\n  // so that someone fixes the error reporting instead of hiding it.\n  var errorDigest = request.onError(error);\n\n  if (errorDigest != null && typeof errorDigest !== 'string') {\n    // eslint-disable-next-line react-internal/prod-error-codes\n    throw new Error(\"onError returned something with a type other than \\\"string\\\". onError should return a string and may return null or undefined but must not return anything else. It received something of type \\\"\" + typeof errorDigest + \"\\\" instead\");\n  }\n\n  return errorDigest;\n}\n\nfunction fatalError(request, error) {\n  // This is called outside error handling code such as if the root errors outside\n  // a suspense boundary or if the root suspense boundary's fallback errors.\n  // It's also called if React itself or its host configs errors.\n  var onShellError = request.onShellError;\n  onShellError(error);\n  var onFatalError = request.onFatalError;\n  onFatalError(error);\n\n  if (request.destination !== null) {\n    request.status = CLOSED;\n    closeWithError(request.destination, error);\n  } else {\n    request.status = CLOSING;\n    request.fatalError = error;\n  }\n}\n\nfunction renderSuspenseBoundary(request, task, props) {\n  pushBuiltInComponentStackInDEV(task, 'Suspense');\n  var parentBoundary = task.blockedBoundary;\n  var parentSegment = task.blockedSegment; // Each time we enter a suspense boundary, we split out into a new segment for\n  // the fallback so that we can later replace that segment with the content.\n  // This also lets us split out the main content even if it doesn't suspend,\n  // in case it ends up generating a large subtree of content.\n\n  var fallback = props.fallback;\n  var content = props.children;\n  var fallbackAbortSet = new Set();\n  var newBoundary = createSuspenseBoundary(request, fallbackAbortSet);\n  var insertionIndex = parentSegment.chunks.length; // The children of the boundary segment is actually the fallback.\n\n  var boundarySegment = createPendingSegment(request, insertionIndex, newBoundary, parentSegment.formatContext, // boundaries never require text embedding at their edges because comment nodes bound them\n  false, false);\n  parentSegment.children.push(boundarySegment); // The parentSegment has a child Segment at this index so we reset the lastPushedText marker on the parent\n\n  parentSegment.lastPushedText = false; // This segment is the actual child content. We can start rendering that immediately.\n\n  var contentRootSegment = createPendingSegment(request, 0, null, parentSegment.formatContext, // boundaries never require text embedding at their edges because comment nodes bound them\n  false, false); // We mark the root segment as having its parent flushed. It's not really flushed but there is\n  // no parent segment so there's nothing to wait on.\n\n  contentRootSegment.parentFlushed = true; // Currently this is running synchronously. We could instead schedule this to pingedTasks.\n  // I suspect that there might be some efficiency benefits from not creating the suspended task\n  // and instead just using the stack if possible.\n  // TODO: Call this directly instead of messing with saving and restoring contexts.\n  // We can reuse the current context and task to render the content immediately without\n  // context switching. We just need to temporarily switch which boundary and which segment\n  // we're writing to. If something suspends, it'll spawn new suspended task with that context.\n\n  task.blockedBoundary = newBoundary;\n  task.blockedSegment = contentRootSegment;\n\n  try {\n    // We use the safe form because we don't handle suspending here. Only error handling.\n    renderNode(request, task, content);\n    pushSegmentFinale$1(contentRootSegment.chunks, request.responseState, contentRootSegment.lastPushedText, contentRootSegment.textEmbedded);\n    contentRootSegment.status = COMPLETED;\n    queueCompletedSegment(newBoundary, contentRootSegment);\n\n    if (newBoundary.pendingTasks === 0) {\n      // This must have been the last segment we were waiting on. This boundary is now complete.\n      // Therefore we won't need the fallback. We early return so that we don't have to create\n      // the fallback.\n      popComponentStackInDEV(task);\n      return;\n    }\n  } catch (error) {\n    contentRootSegment.status = ERRORED;\n    newBoundary.forceClientRender = true;\n    newBoundary.errorDigest = logRecoverableError(request, error);\n\n    {\n      captureBoundaryErrorDetailsDev(newBoundary, error);\n    } // We don't need to decrement any task numbers because we didn't spawn any new task.\n    // We don't need to schedule any task because we know the parent has written yet.\n    // We do need to fallthrough to create the fallback though.\n\n  } finally {\n    task.blockedBoundary = parentBoundary;\n    task.blockedSegment = parentSegment;\n  } // We create suspended task for the fallback because we don't want to actually work\n  // on it yet in case we finish the main content, so we queue for later.\n\n\n  var suspendedFallbackTask = createTask(request, fallback, parentBoundary, boundarySegment, fallbackAbortSet, task.legacyContext, task.context, task.treeContext);\n\n  {\n    suspendedFallbackTask.componentStack = task.componentStack;\n  } // TODO: This should be queued at a separate lower priority queue so that we only work\n  // on preparing fallbacks if we don't have any more main content to task on.\n\n\n  request.pingedTasks.push(suspendedFallbackTask);\n  popComponentStackInDEV(task);\n}\n\nfunction renderHostElement(request, task, type, props) {\n  pushBuiltInComponentStackInDEV(task, type);\n  var segment = task.blockedSegment;\n  var children = pushStartInstance(segment.chunks, type, props, request.responseState, segment.formatContext);\n  segment.lastPushedText = false;\n  var prevContext = segment.formatContext;\n  segment.formatContext = getChildFormatContext(prevContext, type, props); // We use the non-destructive form because if something suspends, we still\n  // need to pop back up and finish this subtree of HTML.\n\n  renderNode(request, task, children); // We expect that errors will fatal the whole task and that we don't need\n  // the correct context. Therefore this is not in a finally.\n\n  segment.formatContext = prevContext;\n  pushEndInstance(segment.chunks, type);\n  segment.lastPushedText = false;\n  popComponentStackInDEV(task);\n}\n\nfunction shouldConstruct$1(Component) {\n  return Component.prototype && Component.prototype.isReactComponent;\n}\n\nfunction renderWithHooks(request, task, Component, props, secondArg) {\n  var componentIdentity = {};\n  prepareToUseHooks(task, componentIdentity);\n  var result = Component(props, secondArg);\n  return finishHooks(Component, props, result, secondArg);\n}\n\nfunction finishClassComponent(request, task, instance, Component, props) {\n  var nextChildren = instance.render();\n\n  {\n    if (instance.props !== props) {\n      if (!didWarnAboutReassigningProps) {\n        error('It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentNameFromType(Component) || 'a component');\n      }\n\n      didWarnAboutReassigningProps = true;\n    }\n  }\n\n  {\n    var childContextTypes = Component.childContextTypes;\n\n    if (childContextTypes !== null && childContextTypes !== undefined) {\n      var previousContext = task.legacyContext;\n      var mergedContext = processChildContext(instance, Component, previousContext, childContextTypes);\n      task.legacyContext = mergedContext;\n      renderNodeDestructive(request, task, nextChildren);\n      task.legacyContext = previousContext;\n      return;\n    }\n  }\n\n  renderNodeDestructive(request, task, nextChildren);\n}\n\nfunction renderClassComponent(request, task, Component, props) {\n  pushClassComponentStackInDEV(task, Component);\n  var maskedContext =  getMaskedContext(Component, task.legacyContext) ;\n  var instance = constructClassInstance(Component, props, maskedContext);\n  mountClassInstance(instance, Component, props, maskedContext);\n  finishClassComponent(request, task, instance, Component, props);\n  popComponentStackInDEV(task);\n}\n\nvar didWarnAboutBadClass = {};\nvar didWarnAboutModulePatternComponent = {};\nvar didWarnAboutContextTypeOnFunctionComponent = {};\nvar didWarnAboutGetDerivedStateOnFunctionComponent = {};\nvar didWarnAboutReassigningProps = false;\nvar didWarnAboutGenerators = false;\nvar didWarnAboutMaps = false;\nvar hasWarnedAboutUsingContextAsConsumer = false; // This would typically be a function component but we still support module pattern\n// components for some reason.\n\nfunction renderIndeterminateComponent(request, task, Component, props) {\n  var legacyContext;\n\n  {\n    legacyContext = getMaskedContext(Component, task.legacyContext);\n  }\n\n  pushFunctionComponentStackInDEV(task, Component);\n\n  {\n    if (Component.prototype && typeof Component.prototype.render === 'function') {\n      var componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);\n\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n  }\n\n  var value = renderWithHooks(request, task, Component, props, legacyContext);\n  var hasId = checkDidRenderIdHook();\n\n  {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\n      var _componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutModulePatternComponent[_componentName]) {\n        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);\n\n        didWarnAboutModulePatternComponent[_componentName] = true;\n      }\n    }\n  }\n\n  if ( // Run these checks in production only if the flag is off.\n  // Eventually we'll delete this branch altogether.\n   typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\n    {\n      var _componentName2 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutModulePatternComponent[_componentName2]) {\n        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + 'cannot be called with `new` by React.', _componentName2, _componentName2, _componentName2);\n\n        didWarnAboutModulePatternComponent[_componentName2] = true;\n      }\n    }\n\n    mountClassInstance(value, Component, props, legacyContext);\n    finishClassComponent(request, task, value, Component, props);\n  } else {\n\n    {\n      validateFunctionComponentInDev(Component);\n    } // We're now successfully past this task, and we don't have to pop back to\n    // the previous task every again, so we can use the destructive recursive form.\n\n\n    if (hasId) {\n      // This component materialized an id. We treat this as its own level, with\n      // a single \"child\" slot.\n      var prevTreeContext = task.treeContext;\n      var totalChildren = 1;\n      var index = 0;\n      task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);\n\n      try {\n        renderNodeDestructive(request, task, value);\n      } finally {\n        task.treeContext = prevTreeContext;\n      }\n    } else {\n      renderNodeDestructive(request, task, value);\n    }\n  }\n\n  popComponentStackInDEV(task);\n}\n\nfunction validateFunctionComponentInDev(Component) {\n  {\n    if (Component) {\n      if (Component.childContextTypes) {\n        error('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      var _componentName3 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {\n        error('%s: Function components do not support getDerivedStateFromProps.', _componentName3);\n\n        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;\n      }\n    }\n\n    if (typeof Component.contextType === 'object' && Component.contextType !== null) {\n      var _componentName4 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {\n        error('%s: Function components do not support contextType.', _componentName4);\n\n        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;\n      }\n    }\n  }\n}\n\nfunction resolveDefaultProps(Component, baseProps) {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    var props = assign({}, baseProps);\n    var defaultProps = Component.defaultProps;\n\n    for (var propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n\n    return props;\n  }\n\n  return baseProps;\n}\n\nfunction renderForwardRef(request, task, type, props, ref) {\n  pushFunctionComponentStackInDEV(task, type.render);\n  var children = renderWithHooks(request, task, type.render, props, ref);\n  var hasId = checkDidRenderIdHook();\n\n  if (hasId) {\n    // This component materialized an id. We treat this as its own level, with\n    // a single \"child\" slot.\n    var prevTreeContext = task.treeContext;\n    var totalChildren = 1;\n    var index = 0;\n    task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);\n\n    try {\n      renderNodeDestructive(request, task, children);\n    } finally {\n      task.treeContext = prevTreeContext;\n    }\n  } else {\n    renderNodeDestructive(request, task, children);\n  }\n\n  popComponentStackInDEV(task);\n}\n\nfunction renderMemo(request, task, type, props, ref) {\n  var innerType = type.type;\n  var resolvedProps = resolveDefaultProps(innerType, props);\n  renderElement(request, task, innerType, resolvedProps, ref);\n}\n\nfunction renderContextConsumer(request, task, context, props) {\n  // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n  {\n    if (context._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n\n          error('Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n        }\n      }\n    } else {\n      context = context._context;\n    }\n  }\n\n  var render = props.children;\n\n  {\n    if (typeof render !== 'function') {\n      error('A context consumer was rendered with multiple children, or a child ' + \"that isn't a function. A context consumer expects a single child \" + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.');\n    }\n  }\n\n  var newValue = readContext(context);\n  var newChildren = render(newValue);\n  renderNodeDestructive(request, task, newChildren);\n}\n\nfunction renderContextProvider(request, task, type, props) {\n  var context = type._context;\n  var value = props.value;\n  var children = props.children;\n  var prevSnapshot;\n\n  {\n    prevSnapshot = task.context;\n  }\n\n  task.context = pushProvider(context, value);\n  renderNodeDestructive(request, task, children);\n  task.context = popProvider(context);\n\n  {\n    if (prevSnapshot !== task.context) {\n      error('Popping the context provider did not return back to the original snapshot. This is a bug in React.');\n    }\n  }\n}\n\nfunction renderLazyComponent(request, task, lazyComponent, props, ref) {\n  pushBuiltInComponentStackInDEV(task, 'Lazy');\n  var payload = lazyComponent._payload;\n  var init = lazyComponent._init;\n  var Component = init(payload);\n  var resolvedProps = resolveDefaultProps(Component, props);\n  renderElement(request, task, Component, resolvedProps, ref);\n  popComponentStackInDEV(task);\n}\n\nfunction renderElement(request, task, type, props, ref) {\n  if (typeof type === 'function') {\n    if (shouldConstruct$1(type)) {\n      renderClassComponent(request, task, type, props);\n      return;\n    } else {\n      renderIndeterminateComponent(request, task, type, props);\n      return;\n    }\n  }\n\n  if (typeof type === 'string') {\n    renderHostElement(request, task, type, props);\n    return;\n  }\n\n  switch (type) {\n    // TODO: LegacyHidden acts the same as a fragment. This only works\n    // because we currently assume that every instance of LegacyHidden is\n    // accompanied by a host component wrapper. In the hidden mode, the host\n    // component is given a `hidden` attribute, which ensures that the\n    // initial HTML is not visible. To support the use of LegacyHidden as a\n    // true fragment, without an extra DOM node, we would have to hide the\n    // initial HTML in some other way.\n    // TODO: Add REACT_OFFSCREEN_TYPE here too with the same capability.\n    case REACT_LEGACY_HIDDEN_TYPE:\n    case REACT_DEBUG_TRACING_MODE_TYPE:\n    case REACT_STRICT_MODE_TYPE:\n    case REACT_PROFILER_TYPE:\n    case REACT_FRAGMENT_TYPE:\n      {\n        renderNodeDestructive(request, task, props.children);\n        return;\n      }\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      {\n        pushBuiltInComponentStackInDEV(task, 'SuspenseList'); // TODO: SuspenseList should control the boundaries.\n\n        renderNodeDestructive(request, task, props.children);\n        popComponentStackInDEV(task);\n        return;\n      }\n\n    case REACT_SCOPE_TYPE:\n      {\n\n        throw new Error('ReactDOMServer does not yet support scope components.');\n      }\n    // eslint-disable-next-line-no-fallthrough\n\n    case REACT_SUSPENSE_TYPE:\n      {\n        {\n          renderSuspenseBoundary(request, task, props);\n        }\n\n        return;\n      }\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        {\n          renderForwardRef(request, task, type, props, ref);\n          return;\n        }\n\n      case REACT_MEMO_TYPE:\n        {\n          renderMemo(request, task, type, props, ref);\n          return;\n        }\n\n      case REACT_PROVIDER_TYPE:\n        {\n          renderContextProvider(request, task, type, props);\n          return;\n        }\n\n      case REACT_CONTEXT_TYPE:\n        {\n          renderContextConsumer(request, task, type, props);\n          return;\n        }\n\n      case REACT_LAZY_TYPE:\n        {\n          renderLazyComponent(request, task, type, props);\n          return;\n        }\n    }\n  }\n\n  var info = '';\n\n  {\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and \" + 'named imports.';\n    }\n  }\n\n  throw new Error('Element type is invalid: expected a string (for built-in ' + 'components) or a class/function (for composite components) ' + (\"but got: \" + (type == null ? type : typeof type) + \".\" + info));\n}\n\nfunction validateIterable(iterable, iteratorFn) {\n  {\n    // We don't support rendering Generators because it's a mutation.\n    // See https://github.com/facebook/react/issues/12995\n    if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag\n    iterable[Symbol.toStringTag] === 'Generator') {\n      if (!didWarnAboutGenerators) {\n        error('Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.');\n      }\n\n      didWarnAboutGenerators = true;\n    } // Warn about using Maps as children\n\n\n    if (iterable.entries === iteratorFn) {\n      if (!didWarnAboutMaps) {\n        error('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n      }\n\n      didWarnAboutMaps = true;\n    }\n  }\n}\n\nfunction renderNodeDestructive(request, task, node) {\n  {\n    // In Dev we wrap renderNodeDestructiveImpl in a try / catch so we can capture\n    // a component stack at the right place in the tree. We don't do this in renderNode\n    // becuase it is not called at every layer of the tree and we may lose frames\n    try {\n      return renderNodeDestructiveImpl(request, task, node);\n    } catch (x) {\n      if (typeof x === 'object' && x !== null && typeof x.then === 'function') ; else {\n        // This is an error, stash the component stack if it is null.\n        lastBoundaryErrorComponentStackDev = lastBoundaryErrorComponentStackDev !== null ? lastBoundaryErrorComponentStackDev : getCurrentStackInDEV();\n      } // rethrow so normal suspense logic can handle thrown value accordingly\n\n\n      throw x;\n    }\n  }\n} // This function by it self renders a node and consumes the task by mutating it\n// to update the current execution state.\n\n\nfunction renderNodeDestructiveImpl(request, task, node) {\n  // Stash the node we're working on. We'll pick up from this task in case\n  // something suspends.\n  task.node = node; // Handle object types\n\n  if (typeof node === 'object' && node !== null) {\n    switch (node.$$typeof) {\n      case REACT_ELEMENT_TYPE:\n        {\n          var element = node;\n          var type = element.type;\n          var props = element.props;\n          var ref = element.ref;\n          renderElement(request, task, type, props, ref);\n          return;\n        }\n\n      case REACT_PORTAL_TYPE:\n        throw new Error('Portals are not currently supported by the server renderer. ' + 'Render them conditionally so that they only appear on the client render.');\n      // eslint-disable-next-line-no-fallthrough\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyNode = node;\n          var payload = lazyNode._payload;\n          var init = lazyNode._init;\n          var resolvedNode;\n\n          {\n            try {\n              resolvedNode = init(payload);\n            } catch (x) {\n              if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n                // this Lazy initializer is suspending. push a temporary frame onto the stack so it can be\n                // popped off in spawnNewSuspendedTask. This aligns stack behavior between Lazy in element position\n                // vs Component position. We do not want the frame for Errors so we exclusively do this in\n                // the wakeable branch\n                pushBuiltInComponentStackInDEV(task, 'Lazy');\n              }\n\n              throw x;\n            }\n          }\n\n          renderNodeDestructive(request, task, resolvedNode);\n          return;\n        }\n    }\n\n    if (isArray(node)) {\n      renderChildrenArray(request, task, node);\n      return;\n    }\n\n    var iteratorFn = getIteratorFn(node);\n\n    if (iteratorFn) {\n      {\n        validateIterable(node, iteratorFn);\n      }\n\n      var iterator = iteratorFn.call(node);\n\n      if (iterator) {\n        // We need to know how many total children are in this set, so that we\n        // can allocate enough id slots to acommodate them. So we must exhaust\n        // the iterator before we start recursively rendering the children.\n        // TODO: This is not great but I think it's inherent to the id\n        // generation algorithm.\n        var step = iterator.next(); // If there are not entries, we need to push an empty so we start by checking that.\n\n        if (!step.done) {\n          var children = [];\n\n          do {\n            children.push(step.value);\n            step = iterator.next();\n          } while (!step.done);\n\n          renderChildrenArray(request, task, children);\n          return;\n        }\n\n        return;\n      }\n    }\n\n    var childString = Object.prototype.toString.call(node);\n    throw new Error(\"Objects are not valid as a React child (found: \" + (childString === '[object Object]' ? 'object with keys {' + Object.keys(node).join(', ') + '}' : childString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n  }\n\n  if (typeof node === 'string') {\n    var segment = task.blockedSegment;\n    segment.lastPushedText = pushTextInstance$1(task.blockedSegment.chunks, node, request.responseState, segment.lastPushedText);\n    return;\n  }\n\n  if (typeof node === 'number') {\n    var _segment = task.blockedSegment;\n    _segment.lastPushedText = pushTextInstance$1(task.blockedSegment.chunks, '' + node, request.responseState, _segment.lastPushedText);\n    return;\n  }\n\n  {\n    if (typeof node === 'function') {\n      error('Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');\n    }\n  }\n}\n\nfunction renderChildrenArray(request, task, children) {\n  var totalChildren = children.length;\n\n  for (var i = 0; i < totalChildren; i++) {\n    var prevTreeContext = task.treeContext;\n    task.treeContext = pushTreeContext(prevTreeContext, totalChildren, i);\n\n    try {\n      // We need to use the non-destructive form so that we can safely pop back\n      // up and render the sibling if something suspends.\n      renderNode(request, task, children[i]);\n    } finally {\n      task.treeContext = prevTreeContext;\n    }\n  }\n}\n\nfunction spawnNewSuspendedTask(request, task, x) {\n  // Something suspended, we'll need to create a new segment and resolve it later.\n  var segment = task.blockedSegment;\n  var insertionIndex = segment.chunks.length;\n  var newSegment = createPendingSegment(request, insertionIndex, null, segment.formatContext, // Adopt the parent segment's leading text embed\n  segment.lastPushedText, // Assume we are text embedded at the trailing edge\n  true);\n  segment.children.push(newSegment); // Reset lastPushedText for current Segment since the new Segment \"consumed\" it\n\n  segment.lastPushedText = false;\n  var newTask = createTask(request, task.node, task.blockedBoundary, newSegment, task.abortSet, task.legacyContext, task.context, task.treeContext);\n\n  {\n    if (task.componentStack !== null) {\n      // We pop one task off the stack because the node that suspended will be tried again,\n      // which will add it back onto the stack.\n      newTask.componentStack = task.componentStack.parent;\n    }\n  }\n\n  var ping = newTask.ping;\n  x.then(ping, ping);\n} // This is a non-destructive form of rendering a node. If it suspends it spawns\n// a new task and restores the context of this task to what it was before.\n\n\nfunction renderNode(request, task, node) {\n  // TODO: Store segment.children.length here and reset it in case something\n  // suspended partially through writing something.\n  // Snapshot the current context in case something throws to interrupt the\n  // process.\n  var previousFormatContext = task.blockedSegment.formatContext;\n  var previousLegacyContext = task.legacyContext;\n  var previousContext = task.context;\n  var previousComponentStack = null;\n\n  {\n    previousComponentStack = task.componentStack;\n  }\n\n  try {\n    return renderNodeDestructive(request, task, node);\n  } catch (x) {\n    resetHooksState();\n\n    if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n      spawnNewSuspendedTask(request, task, x); // Restore the context. We assume that this will be restored by the inner\n      // functions in case nothing throws so we don't use \"finally\" here.\n\n      task.blockedSegment.formatContext = previousFormatContext;\n      task.legacyContext = previousLegacyContext;\n      task.context = previousContext; // Restore all active ReactContexts to what they were before.\n\n      switchContext(previousContext);\n\n      {\n        task.componentStack = previousComponentStack;\n      }\n\n      return;\n    } else {\n      // Restore the context. We assume that this will be restored by the inner\n      // functions in case nothing throws so we don't use \"finally\" here.\n      task.blockedSegment.formatContext = previousFormatContext;\n      task.legacyContext = previousLegacyContext;\n      task.context = previousContext; // Restore all active ReactContexts to what they were before.\n\n      switchContext(previousContext);\n\n      {\n        task.componentStack = previousComponentStack;\n      } // We assume that we don't need the correct context.\n      // Let's terminate the rest of the tree and don't render any siblings.\n\n\n      throw x;\n    }\n  }\n}\n\nfunction erroredTask(request, boundary, segment, error) {\n  // Report the error to a global handler.\n  var errorDigest = logRecoverableError(request, error);\n\n  if (boundary === null) {\n    fatalError(request, error);\n  } else {\n    boundary.pendingTasks--;\n\n    if (!boundary.forceClientRender) {\n      boundary.forceClientRender = true;\n      boundary.errorDigest = errorDigest;\n\n      {\n        captureBoundaryErrorDetailsDev(boundary, error);\n      } // Regardless of what happens next, this boundary won't be displayed,\n      // so we can flush it, if the parent already flushed.\n\n\n      if (boundary.parentFlushed) {\n        // We don't have a preference where in the queue this goes since it's likely\n        // to error on the client anyway. However, intentionally client-rendered\n        // boundaries should be flushed earlier so that they can start on the client.\n        // We reuse the same queue for errors.\n        request.clientRenderedBoundaries.push(boundary);\n      }\n    }\n  }\n\n  request.allPendingTasks--;\n\n  if (request.allPendingTasks === 0) {\n    var onAllReady = request.onAllReady;\n    onAllReady();\n  }\n}\n\nfunction abortTaskSoft(task) {\n  // This aborts task without aborting the parent boundary that it blocks.\n  // It's used for when we didn't need this task to complete the tree.\n  // If task was needed, then it should use abortTask instead.\n  var request = this;\n  var boundary = task.blockedBoundary;\n  var segment = task.blockedSegment;\n  segment.status = ABORTED;\n  finishedTask(request, boundary, segment);\n}\n\nfunction abortTask(task, request, reason) {\n  // This aborts the task and aborts the parent that it blocks, putting it into\n  // client rendered mode.\n  var boundary = task.blockedBoundary;\n  var segment = task.blockedSegment;\n  segment.status = ABORTED;\n\n  if (boundary === null) {\n    request.allPendingTasks--; // We didn't complete the root so we have nothing to show. We can close\n    // the request;\n\n    if (request.status !== CLOSED) {\n      request.status = CLOSED;\n\n      if (request.destination !== null) {\n        close(request.destination);\n      }\n    }\n  } else {\n    boundary.pendingTasks--;\n\n    if (!boundary.forceClientRender) {\n      boundary.forceClientRender = true;\n\n      var _error = reason === undefined ? new Error('The render was aborted by the server without a reason.') : reason;\n\n      boundary.errorDigest = request.onError(_error);\n\n      {\n        var errorPrefix = 'The server did not finish this Suspense boundary: ';\n\n        if (_error && typeof _error.message === 'string') {\n          _error = errorPrefix + _error.message;\n        } else {\n          // eslint-disable-next-line react-internal/safe-string-coercion\n          _error = errorPrefix + String(_error);\n        }\n\n        var previousTaskInDev = currentTaskInDEV;\n        currentTaskInDEV = task;\n\n        try {\n          captureBoundaryErrorDetailsDev(boundary, _error);\n        } finally {\n          currentTaskInDEV = previousTaskInDev;\n        }\n      }\n\n      if (boundary.parentFlushed) {\n        request.clientRenderedBoundaries.push(boundary);\n      }\n    } // If this boundary was still pending then we haven't already cancelled its fallbacks.\n    // We'll need to abort the fallbacks, which will also error that parent boundary.\n\n\n    boundary.fallbackAbortableTasks.forEach(function (fallbackTask) {\n      return abortTask(fallbackTask, request, reason);\n    });\n    boundary.fallbackAbortableTasks.clear();\n    request.allPendingTasks--;\n\n    if (request.allPendingTasks === 0) {\n      var onAllReady = request.onAllReady;\n      onAllReady();\n    }\n  }\n}\n\nfunction queueCompletedSegment(boundary, segment) {\n  if (segment.chunks.length === 0 && segment.children.length === 1 && segment.children[0].boundary === null) {\n    // This is an empty segment. There's nothing to write, so we can instead transfer the ID\n    // to the child. That way any existing references point to the child.\n    var childSegment = segment.children[0];\n    childSegment.id = segment.id;\n    childSegment.parentFlushed = true;\n\n    if (childSegment.status === COMPLETED) {\n      queueCompletedSegment(boundary, childSegment);\n    }\n  } else {\n    var completedSegments = boundary.completedSegments;\n    completedSegments.push(segment);\n  }\n}\n\nfunction finishedTask(request, boundary, segment) {\n  if (boundary === null) {\n    if (segment.parentFlushed) {\n      if (request.completedRootSegment !== null) {\n        throw new Error('There can only be one root segment. This is a bug in React.');\n      }\n\n      request.completedRootSegment = segment;\n    }\n\n    request.pendingRootTasks--;\n\n    if (request.pendingRootTasks === 0) {\n      // We have completed the shell so the shell can't error anymore.\n      request.onShellError = noop$1;\n      var onShellReady = request.onShellReady;\n      onShellReady();\n    }\n  } else {\n    boundary.pendingTasks--;\n\n    if (boundary.forceClientRender) ; else if (boundary.pendingTasks === 0) {\n      // This must have been the last segment we were waiting on. This boundary is now complete.\n      if (segment.parentFlushed) {\n        // Our parent segment already flushed, so we need to schedule this segment to be emitted.\n        // If it is a segment that was aborted, we'll write other content instead so we don't need\n        // to emit it.\n        if (segment.status === COMPLETED) {\n          queueCompletedSegment(boundary, segment);\n        }\n      }\n\n      if (boundary.parentFlushed) {\n        // The segment might be part of a segment that didn't flush yet, but if the boundary's\n        // parent flushed, we need to schedule the boundary to be emitted.\n        request.completedBoundaries.push(boundary);\n      } // We can now cancel any pending task on the fallback since we won't need to show it anymore.\n      // This needs to happen after we read the parentFlushed flags because aborting can finish\n      // work which can trigger user code, which can start flushing, which can change those flags.\n\n\n      boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request);\n      boundary.fallbackAbortableTasks.clear();\n    } else {\n      if (segment.parentFlushed) {\n        // Our parent already flushed, so we need to schedule this segment to be emitted.\n        // If it is a segment that was aborted, we'll write other content instead so we don't need\n        // to emit it.\n        if (segment.status === COMPLETED) {\n          queueCompletedSegment(boundary, segment);\n          var completedSegments = boundary.completedSegments;\n\n          if (completedSegments.length === 1) {\n            // This is the first time since we last flushed that we completed anything.\n            // We can schedule this boundary to emit its partially completed segments early\n            // in case the parent has already been flushed.\n            if (boundary.parentFlushed) {\n              request.partialBoundaries.push(boundary);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  request.allPendingTasks--;\n\n  if (request.allPendingTasks === 0) {\n    // This needs to be called at the very end so that we can synchronously write the result\n    // in the callback if needed.\n    var onAllReady = request.onAllReady;\n    onAllReady();\n  }\n}\n\nfunction retryTask(request, task) {\n  var segment = task.blockedSegment;\n\n  if (segment.status !== PENDING) {\n    // We completed this by other means before we had a chance to retry it.\n    return;\n  } // We restore the context to what it was when we suspended.\n  // We don't restore it after we leave because it's likely that we'll end up\n  // needing a very similar context soon again.\n\n\n  switchContext(task.context);\n  var prevTaskInDEV = null;\n\n  {\n    prevTaskInDEV = currentTaskInDEV;\n    currentTaskInDEV = task;\n  }\n\n  try {\n    // We call the destructive form that mutates this task. That way if something\n    // suspends again, we can reuse the same task instead of spawning a new one.\n    renderNodeDestructive(request, task, task.node);\n    pushSegmentFinale$1(segment.chunks, request.responseState, segment.lastPushedText, segment.textEmbedded);\n    task.abortSet.delete(task);\n    segment.status = COMPLETED;\n    finishedTask(request, task.blockedBoundary, segment);\n  } catch (x) {\n    resetHooksState();\n\n    if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n      // Something suspended again, let's pick it back up later.\n      var ping = task.ping;\n      x.then(ping, ping);\n    } else {\n      task.abortSet.delete(task);\n      segment.status = ERRORED;\n      erroredTask(request, task.blockedBoundary, segment, x);\n    }\n  } finally {\n    {\n      currentTaskInDEV = prevTaskInDEV;\n    }\n  }\n}\n\nfunction performWork(request) {\n  if (request.status === CLOSED) {\n    return;\n  }\n\n  var prevContext = getActiveContext();\n  var prevDispatcher = ReactCurrentDispatcher$1.current;\n  ReactCurrentDispatcher$1.current = Dispatcher;\n  var prevGetCurrentStackImpl;\n\n  {\n    prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack;\n    ReactDebugCurrentFrame$1.getCurrentStack = getCurrentStackInDEV;\n  }\n\n  var prevResponseState = currentResponseState;\n  setCurrentResponseState(request.responseState);\n\n  try {\n    var pingedTasks = request.pingedTasks;\n    var i;\n\n    for (i = 0; i < pingedTasks.length; i++) {\n      var task = pingedTasks[i];\n      retryTask(request, task);\n    }\n\n    pingedTasks.splice(0, i);\n\n    if (request.destination !== null) {\n      flushCompletedQueues(request, request.destination);\n    }\n  } catch (error) {\n    logRecoverableError(request, error);\n    fatalError(request, error);\n  } finally {\n    setCurrentResponseState(prevResponseState);\n    ReactCurrentDispatcher$1.current = prevDispatcher;\n\n    {\n      ReactDebugCurrentFrame$1.getCurrentStack = prevGetCurrentStackImpl;\n    }\n\n    if (prevDispatcher === Dispatcher) {\n      // This means that we were in a reentrant work loop. This could happen\n      // in a renderer that supports synchronous work like renderToString,\n      // when it's called from within another renderer.\n      // Normally we don't bother switching the contexts to their root/default\n      // values when leaving because we'll likely need the same or similar\n      // context again. However, when we're inside a synchronous loop like this\n      // we'll to restore the context to what it was before returning.\n      switchContext(prevContext);\n    }\n  }\n}\n\nfunction flushSubtree(request, destination, segment) {\n  segment.parentFlushed = true;\n\n  switch (segment.status) {\n    case PENDING:\n      {\n        // We're emitting a placeholder for this segment to be filled in later.\n        // Therefore we'll need to assign it an ID - to refer to it by.\n        var segmentID = segment.id = request.nextSegmentId++; // When this segment finally completes it won't be embedded in text since it will flush separately\n\n        segment.lastPushedText = false;\n        segment.textEmbedded = false;\n        return writePlaceholder(destination, request.responseState, segmentID);\n      }\n\n    case COMPLETED:\n      {\n        segment.status = FLUSHED;\n        var r = true;\n        var chunks = segment.chunks;\n        var chunkIdx = 0;\n        var children = segment.children;\n\n        for (var childIdx = 0; childIdx < children.length; childIdx++) {\n          var nextChild = children[childIdx]; // Write all the chunks up until the next child.\n\n          for (; chunkIdx < nextChild.index; chunkIdx++) {\n            writeChunk(destination, chunks[chunkIdx]);\n          }\n\n          r = flushSegment(request, destination, nextChild);\n        } // Finally just write all the remaining chunks\n\n\n        for (; chunkIdx < chunks.length - 1; chunkIdx++) {\n          writeChunk(destination, chunks[chunkIdx]);\n        }\n\n        if (chunkIdx < chunks.length) {\n          r = writeChunkAndReturn(destination, chunks[chunkIdx]);\n        }\n\n        return r;\n      }\n\n    default:\n      {\n        throw new Error('Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.');\n      }\n  }\n}\n\nfunction flushSegment(request, destination, segment) {\n  var boundary = segment.boundary;\n\n  if (boundary === null) {\n    // Not a suspense boundary.\n    return flushSubtree(request, destination, segment);\n  }\n\n  boundary.parentFlushed = true; // This segment is a Suspense boundary. We need to decide whether to\n  // emit the content or the fallback now.\n\n  if (boundary.forceClientRender) {\n    // Emit a client rendered suspense boundary wrapper.\n    // We never queue the inner boundary so we'll never emit its content or partial segments.\n    writeStartClientRenderedSuspenseBoundary$1(destination, request.responseState, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack); // Flush the fallback.\n\n    flushSubtree(request, destination, segment);\n    return writeEndClientRenderedSuspenseBoundary$1(destination, request.responseState);\n  } else if (boundary.pendingTasks > 0) {\n    // This boundary is still loading. Emit a pending suspense boundary wrapper.\n    // Assign an ID to refer to the future content by.\n    boundary.rootSegmentID = request.nextSegmentId++;\n\n    if (boundary.completedSegments.length > 0) {\n      // If this is at least partially complete, we can queue it to be partially emitted early.\n      request.partialBoundaries.push(boundary);\n    } /// This is the first time we should have referenced this ID.\n\n\n    var id = boundary.id = assignSuspenseBoundaryID(request.responseState);\n    writeStartPendingSuspenseBoundary(destination, request.responseState, id); // Flush the fallback.\n\n    flushSubtree(request, destination, segment);\n    return writeEndPendingSuspenseBoundary(destination, request.responseState);\n  } else if (boundary.byteSize > request.progressiveChunkSize) {\n    // This boundary is large and will be emitted separately so that we can progressively show\n    // other content. We add it to the queue during the flush because we have to ensure that\n    // the parent flushes first so that there's something to inject it into.\n    // We also have to make sure that it's emitted into the queue in a deterministic slot.\n    // I.e. we can't insert it here when it completes.\n    // Assign an ID to refer to the future content by.\n    boundary.rootSegmentID = request.nextSegmentId++;\n    request.completedBoundaries.push(boundary); // Emit a pending rendered suspense boundary wrapper.\n\n    writeStartPendingSuspenseBoundary(destination, request.responseState, boundary.id); // Flush the fallback.\n\n    flushSubtree(request, destination, segment);\n    return writeEndPendingSuspenseBoundary(destination, request.responseState);\n  } else {\n    // We can inline this boundary's content as a complete boundary.\n    writeStartCompletedSuspenseBoundary$1(destination, request.responseState);\n    var completedSegments = boundary.completedSegments;\n\n    if (completedSegments.length !== 1) {\n      throw new Error('A previously unvisited boundary must have exactly one root segment. This is a bug in React.');\n    }\n\n    var contentSegment = completedSegments[0];\n    flushSegment(request, destination, contentSegment);\n    return writeEndCompletedSuspenseBoundary$1(destination, request.responseState);\n  }\n}\n\nfunction flushClientRenderedBoundary(request, destination, boundary) {\n  return writeClientRenderBoundaryInstruction(destination, request.responseState, boundary.id, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);\n}\n\nfunction flushSegmentContainer(request, destination, segment) {\n  writeStartSegment(destination, request.responseState, segment.formatContext, segment.id);\n  flushSegment(request, destination, segment);\n  return writeEndSegment(destination, segment.formatContext);\n}\n\nfunction flushCompletedBoundary(request, destination, boundary) {\n  var completedSegments = boundary.completedSegments;\n  var i = 0;\n\n  for (; i < completedSegments.length; i++) {\n    var segment = completedSegments[i];\n    flushPartiallyCompletedSegment(request, destination, boundary, segment);\n  }\n\n  completedSegments.length = 0;\n  return writeCompletedBoundaryInstruction(destination, request.responseState, boundary.id, boundary.rootSegmentID);\n}\n\nfunction flushPartialBoundary(request, destination, boundary) {\n  var completedSegments = boundary.completedSegments;\n  var i = 0;\n\n  for (; i < completedSegments.length; i++) {\n    var segment = completedSegments[i];\n\n    if (!flushPartiallyCompletedSegment(request, destination, boundary, segment)) {\n      i++;\n      completedSegments.splice(0, i); // Only write as much as the buffer wants. Something higher priority\n      // might want to write later.\n\n      return false;\n    }\n  }\n\n  completedSegments.splice(0, i);\n  return true;\n}\n\nfunction flushPartiallyCompletedSegment(request, destination, boundary, segment) {\n  if (segment.status === FLUSHED) {\n    // We've already flushed this inline.\n    return true;\n  }\n\n  var segmentID = segment.id;\n\n  if (segmentID === -1) {\n    // This segment wasn't previously referred to. This happens at the root of\n    // a boundary. We make kind of a leap here and assume this is the root.\n    var rootSegmentID = segment.id = boundary.rootSegmentID;\n\n    if (rootSegmentID === -1) {\n      throw new Error('A root segment ID must have been assigned by now. This is a bug in React.');\n    }\n\n    return flushSegmentContainer(request, destination, segment);\n  } else {\n    flushSegmentContainer(request, destination, segment);\n    return writeCompletedSegmentInstruction(destination, request.responseState, segmentID);\n  }\n}\n\nfunction flushCompletedQueues(request, destination) {\n\n  try {\n    // The structure of this is to go through each queue one by one and write\n    // until the sink tells us to stop. When we should stop, we still finish writing\n    // that item fully and then yield. At that point we remove the already completed\n    // items up until the point we completed them.\n    // TODO: Emit preloading.\n    // TODO: It's kind of unfortunate to keep checking this array after we've already\n    // emitted the root.\n    var completedRootSegment = request.completedRootSegment;\n\n    if (completedRootSegment !== null && request.pendingRootTasks === 0) {\n      flushSegment(request, destination, completedRootSegment);\n      request.completedRootSegment = null;\n      writeCompletedRoot(destination, request.responseState);\n    } // We emit client rendering instructions for already emitted boundaries first.\n    // This is so that we can signal to the client to start client rendering them as\n    // soon as possible.\n\n\n    var clientRenderedBoundaries = request.clientRenderedBoundaries;\n    var i;\n\n    for (i = 0; i < clientRenderedBoundaries.length; i++) {\n      var boundary = clientRenderedBoundaries[i];\n\n      if (!flushClientRenderedBoundary(request, destination, boundary)) {\n        request.destination = null;\n        i++;\n        clientRenderedBoundaries.splice(0, i);\n        return;\n      }\n    }\n\n    clientRenderedBoundaries.splice(0, i); // Next we emit any complete boundaries. It's better to favor boundaries\n    // that are completely done since we can actually show them, than it is to emit\n    // any individual segments from a partially complete boundary.\n\n    var completedBoundaries = request.completedBoundaries;\n\n    for (i = 0; i < completedBoundaries.length; i++) {\n      var _boundary = completedBoundaries[i];\n\n      if (!flushCompletedBoundary(request, destination, _boundary)) {\n        request.destination = null;\n        i++;\n        completedBoundaries.splice(0, i);\n        return;\n      }\n    }\n\n    completedBoundaries.splice(0, i); // Allow anything written so far to flush to the underlying sink before\n    // we continue with lower priorities.\n\n    completeWriting(destination);\n    beginWriting(destination); // TODO: Here we'll emit data used by hydration.\n    // Next we emit any segments of any boundaries that are partially complete\n    // but not deeply complete.\n\n    var partialBoundaries = request.partialBoundaries;\n\n    for (i = 0; i < partialBoundaries.length; i++) {\n      var _boundary2 = partialBoundaries[i];\n\n      if (!flushPartialBoundary(request, destination, _boundary2)) {\n        request.destination = null;\n        i++;\n        partialBoundaries.splice(0, i);\n        return;\n      }\n    }\n\n    partialBoundaries.splice(0, i); // Next we check the completed boundaries again. This may have had\n    // boundaries added to it in case they were too larged to be inlined.\n    // New ones might be added in this loop.\n\n    var largeBoundaries = request.completedBoundaries;\n\n    for (i = 0; i < largeBoundaries.length; i++) {\n      var _boundary3 = largeBoundaries[i];\n\n      if (!flushCompletedBoundary(request, destination, _boundary3)) {\n        request.destination = null;\n        i++;\n        largeBoundaries.splice(0, i);\n        return;\n      }\n    }\n\n    largeBoundaries.splice(0, i);\n  } finally {\n\n    if (request.allPendingTasks === 0 && request.pingedTasks.length === 0 && request.clientRenderedBoundaries.length === 0 && request.completedBoundaries.length === 0 // We don't need to check any partially completed segments because\n    // either they have pending task or they're complete.\n    ) {\n        {\n          if (request.abortableTasks.size !== 0) {\n            error('There was still abortable task at the root when we closed. This is a bug in React.');\n          }\n        } // We're done.\n\n\n        close(destination);\n      }\n  }\n}\n\nfunction startWork(request) {\n  scheduleWork(function () {\n    return performWork(request);\n  });\n}\nfunction startFlowing(request, destination) {\n  if (request.status === CLOSING) {\n    request.status = CLOSED;\n    closeWithError(destination, request.fatalError);\n    return;\n  }\n\n  if (request.status === CLOSED) {\n    return;\n  }\n\n  if (request.destination !== null) {\n    // We're already flowing.\n    return;\n  }\n\n  request.destination = destination;\n\n  try {\n    flushCompletedQueues(request, destination);\n  } catch (error) {\n    logRecoverableError(request, error);\n    fatalError(request, error);\n  }\n} // This is called to early terminate a request. It puts all pending boundaries in client rendered state.\n\nfunction abort(request, reason) {\n  try {\n    var abortableTasks = request.abortableTasks;\n    abortableTasks.forEach(function (task) {\n      return abortTask(task, request, reason);\n    });\n    abortableTasks.clear();\n\n    if (request.destination !== null) {\n      flushCompletedQueues(request, request.destination);\n    }\n  } catch (error) {\n    logRecoverableError(request, error);\n    fatalError(request, error);\n  }\n}\n\nfunction onError() {// Non-fatal errors are ignored.\n}\n\nfunction renderToStringImpl(children, options, generateStaticMarkup, abortReason) {\n  var didFatal = false;\n  var fatalError = null;\n  var result = '';\n  var destination = {\n    push: function (chunk) {\n      if (chunk !== null) {\n        result += chunk;\n      }\n\n      return true;\n    },\n    destroy: function (error) {\n      didFatal = true;\n      fatalError = error;\n    }\n  };\n  var readyToStream = false;\n\n  function onShellReady() {\n    readyToStream = true;\n  }\n\n  var request = createRequest(children, createResponseState$1(generateStaticMarkup, options ? options.identifierPrefix : undefined), createRootFormatContext(), Infinity, onError, undefined, onShellReady, undefined, undefined);\n  startWork(request); // If anything suspended and is still pending, we'll abort it before writing.\n  // That way we write only client-rendered boundaries from the start.\n\n  abort(request, abortReason);\n  startFlowing(request, destination);\n\n  if (didFatal) {\n    throw fatalError;\n  }\n\n  if (!readyToStream) {\n    // Note: This error message is the one we use on the client. It doesn't\n    // really make sense here. But this is the legacy server renderer, anyway.\n    // We're going to delete it soon.\n    throw new Error('A component suspended while responding to synchronous input. This ' + 'will cause the UI to be replaced with a loading indicator. To fix, ' + 'updates that suspend should be wrapped with startTransition.');\n  }\n\n  return result;\n}\n\nfunction renderToString(children, options) {\n  return renderToStringImpl(children, options, false, 'The server used \"renderToString\" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to \"renderToReadableStream\" which supports Suspense on the server');\n}\n\nfunction renderToStaticMarkup(children, options) {\n  return renderToStringImpl(children, options, true, 'The server used \"renderToStaticMarkup\" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to \"renderToReadableStream\" which supports Suspense on the server');\n}\n\nfunction renderToNodeStream() {\n  throw new Error('ReactDOMServer.renderToNodeStream(): The streaming API is not available ' + 'in the browser. Use ReactDOMServer.renderToString() instead.');\n}\n\nfunction renderToStaticNodeStream() {\n  throw new Error('ReactDOMServer.renderToStaticNodeStream(): The streaming API is not available ' + 'in the browser. Use ReactDOMServer.renderToStaticMarkup() instead.');\n}\n\nexports.renderToNodeStream = renderToNodeStream;\nexports.renderToStaticMarkup = renderToStaticMarkup;\nexports.renderToStaticNodeStream = renderToStaticNodeStream;\nexports.renderToString = renderToString;\nexports.version = ReactVersion;\n  })();\n}\n", "/**\n * @license React\n * react-dom-server.browser.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\nvar ReactVersion = '18.2.0';\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nfunction scheduleWork(callback) {\n  callback();\n}\nvar VIEW_SIZE = 512;\nvar currentView = null;\nvar writtenBytes = 0;\nfunction beginWriting(destination) {\n  currentView = new Uint8Array(VIEW_SIZE);\n  writtenBytes = 0;\n}\nfunction writeChunk(destination, chunk) {\n  if (chunk.length === 0) {\n    return;\n  }\n\n  if (chunk.length > VIEW_SIZE) {\n    // this chunk may overflow a single view which implies it was not\n    // one that is cached by the streaming renderer. We will enqueu\n    // it directly and expect it is not re-used\n    if (writtenBytes > 0) {\n      destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes));\n      currentView = new Uint8Array(VIEW_SIZE);\n      writtenBytes = 0;\n    }\n\n    destination.enqueue(chunk);\n    return;\n  }\n\n  var bytesToWrite = chunk;\n  var allowableBytes = currentView.length - writtenBytes;\n\n  if (allowableBytes < bytesToWrite.length) {\n    // this chunk would overflow the current view. We enqueue a full view\n    // and start a new view with the remaining chunk\n    if (allowableBytes === 0) {\n      // the current view is already full, send it\n      destination.enqueue(currentView);\n    } else {\n      // fill up the current view and apply the remaining chunk bytes\n      // to a new view.\n      currentView.set(bytesToWrite.subarray(0, allowableBytes), writtenBytes); // writtenBytes += allowableBytes; // this can be skipped because we are going to immediately reset the view\n\n      destination.enqueue(currentView);\n      bytesToWrite = bytesToWrite.subarray(allowableBytes);\n    }\n\n    currentView = new Uint8Array(VIEW_SIZE);\n    writtenBytes = 0;\n  }\n\n  currentView.set(bytesToWrite, writtenBytes);\n  writtenBytes += bytesToWrite.length;\n}\nfunction writeChunkAndReturn(destination, chunk) {\n  writeChunk(destination, chunk); // in web streams there is no backpressure so we can alwas write more\n\n  return true;\n}\nfunction completeWriting(destination) {\n  if (currentView && writtenBytes > 0) {\n    destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes));\n    currentView = null;\n    writtenBytes = 0;\n  }\n}\nfunction close(destination) {\n  destination.close();\n}\nvar textEncoder = new TextEncoder();\nfunction stringToChunk(content) {\n  return textEncoder.encode(content);\n}\nfunction stringToPrecomputedChunk(content) {\n  return textEncoder.encode(content);\n}\nfunction closeWithError(destination, error) {\n  if (typeof destination.error === 'function') {\n    // $FlowFixMe: This is an Error object or the destination accepts other types.\n    destination.error(error);\n  } else {\n    // Earlier implementations doesn't support this method. In that environment you're\n    // supposed to throw from a promise returned but we don't return a promise in our\n    // approach. We could fork this implementation but this is environment is an edge\n    // case to begin with. It's even less common to run this in an older environment.\n    // Even then, this is not where errors are supposed to happen and they get reported\n    // to a global callback in addition to this anyway. So it's fine just to close this.\n    destination.close();\n  }\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\n\nfunction checkAttributeStringCoercion(value, attributeName) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided `%s` attribute is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', attributeName, typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\nfunction checkCSSPropertyStringCoercion(value, propName) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided `%s` CSS property is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', propName, typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\nfunction checkHtmlStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided HTML markup uses a value of unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n// A reserved attribute.\n// It is handled by React separately and shouldn't be written to the DOM.\nvar RESERVED = 0; // A simple string attribute.\n// Attributes that aren't in the filter are presumed to have this type.\n\nvar STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n// When true, it should be set to a \"true\" string.\n// When false, it should be set to a \"false\" string.\n\nvar BOOLEANISH_STRING = 2; // A real boolean attribute.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n\nvar BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n// For any other value, should be present with that value.\n\nvar OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.\n// When falsy, it should be removed.\n\nvar NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.\n// When falsy, it should be removed.\n\nvar POSITIVE_NUMERIC = 6;\n\n/* eslint-disable max-len */\nvar ATTRIBUTE_NAME_START_CHAR = \":A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\n/* eslint-enable max-len */\n\nvar ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + \"\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {\n    return true;\n  }\n\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {\n    return false;\n  }\n\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n\n  illegalAttributeNameCache[attributeName] = true;\n\n  {\n    error('Invalid attribute name: `%s`', attributeName);\n  }\n\n  return false;\n}\nfunction shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {\n  if (propertyInfo !== null && propertyInfo.type === RESERVED) {\n    return false;\n  }\n\n  switch (typeof value) {\n    case 'function': // $FlowIssue symbol is perfectly valid here\n\n    case 'symbol':\n      // eslint-disable-line\n      return true;\n\n    case 'boolean':\n      {\n        if (isCustomComponentTag) {\n          return false;\n        }\n\n        if (propertyInfo !== null) {\n          return !propertyInfo.acceptsBooleans;\n        } else {\n          var prefix = name.toLowerCase().slice(0, 5);\n          return prefix !== 'data-' && prefix !== 'aria-';\n        }\n      }\n\n    default:\n      return false;\n  }\n}\nfunction getPropertyInfo(name) {\n  return properties.hasOwnProperty(name) ? properties[name] : null;\n}\n\nfunction PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {\n  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;\n  this.attributeName = attributeName;\n  this.attributeNamespace = attributeNamespace;\n  this.mustUseProperty = mustUseProperty;\n  this.propertyName = name;\n  this.type = type;\n  this.sanitizeURL = sanitizeURL;\n  this.removeEmptyString = removeEmptyString;\n} // When adding attributes to this list, be sure to also add them to\n// the `possibleStandardNames` module to ensure casing and incorrect\n// name warnings.\n\n\nvar properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.\n\nvar reservedProps = ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular\n// elements (not just inputs). Now that ReactDOMInput assigns to the\n// defaultValue property -- do we need this?\n'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'];\n\nreservedProps.forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // A few React string attributes have a different name.\n// This is a mapping from React prop names to the attribute names.\n\n[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {\n  var name = _ref[0],\n      attributeName = _ref[1];\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n\n['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n// Since these are SVG attributes, their attribute names are case-sensitive.\n\n['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML boolean attributes.\n\n['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM\n// on the client side because the browsers are inconsistent. Instead we call focus().\n'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'disableRemotePlayback', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata\n'itemScope'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are the few React props that we set as DOM properties\n// rather than attributes. These are all booleans.\n\n['checked', // Note: `option.selected` is not updated if `select.multiple` is\n// disabled with `removeAttribute`. We have special logic for handling this.\n'multiple', 'muted', 'selected' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that are \"overloaded booleans\": they behave like\n// booleans, but can also accept a string value.\n\n['capture', 'download' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that must be positive numbers.\n\n['cols', 'rows', 'size', 'span' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that must be numbers.\n\n['rowSpan', 'start'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n});\nvar CAMELIZE = /[\\-\\:]([a-z])/g;\n\nvar capitalize = function (token) {\n  return token[1].toUpperCase();\n}; // This is a list of all SVG attributes that need special casing, namespacing,\n// or boolean value assignment. Regular attributes that just accept strings\n// and have the same names are omitted, just like in the HTML attribute filter.\n// Some of these attributes can be hard to find. This list was created by\n// scraping the MDN documentation.\n\n\n['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // String SVG attributes with the xlink namespace.\n\n['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, 'http://www.w3.org/1999/xlink', false, // sanitizeURL\n  false);\n}); // String SVG attributes with the xml namespace.\n\n['xml:base', 'xml:lang', 'xml:space' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, 'http://www.w3.org/XML/1998/namespace', false, // sanitizeURL\n  false);\n}); // These attribute exists both in HTML and SVG.\n// The attribute name is case-sensitive in SVG so we can't just use\n// the React name like we do for attributes that exist only in HTML.\n\n['tabIndex', 'crossOrigin'].forEach(function (attributeName) {\n  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty\n  attributeName.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These attributes accept URLs. These must not allow javascript: URLS.\n// These will also need to accept Trusted Types object in the future.\n\nvar xlinkHref = 'xlinkHref';\nproperties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty\n'xlink:href', 'http://www.w3.org/1999/xlink', true, // sanitizeURL\nfalse);\n['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {\n  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty\n  attributeName.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  true, // sanitizeURL\n  true);\n});\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridArea: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\n\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\n\n\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\n\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\nvar hasReadOnlyValue = {\n  button: true,\n  checkbox: true,\n  image: true,\n  hidden: true,\n  radio: true,\n  reset: true,\n  submit: true\n};\nfunction checkControlledValueProps(tagName, props) {\n  {\n    if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {\n      error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n    }\n\n    if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {\n      error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n    }\n  }\n}\n\nfunction isCustomComponent(tagName, props) {\n  if (tagName.indexOf('-') === -1) {\n    return typeof props.is === 'string';\n  }\n\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this list too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n\n    default:\n      return true;\n  }\n}\n\nvar ariaProperties = {\n  'aria-current': 0,\n  // state\n  'aria-description': 0,\n  'aria-details': 0,\n  'aria-disabled': 0,\n  // state\n  'aria-hidden': 0,\n  // state\n  'aria-invalid': 0,\n  // state\n  'aria-keyshortcuts': 0,\n  'aria-label': 0,\n  'aria-roledescription': 0,\n  // Widget Attributes\n  'aria-autocomplete': 0,\n  'aria-checked': 0,\n  'aria-expanded': 0,\n  'aria-haspopup': 0,\n  'aria-level': 0,\n  'aria-modal': 0,\n  'aria-multiline': 0,\n  'aria-multiselectable': 0,\n  'aria-orientation': 0,\n  'aria-placeholder': 0,\n  'aria-pressed': 0,\n  'aria-readonly': 0,\n  'aria-required': 0,\n  'aria-selected': 0,\n  'aria-sort': 0,\n  'aria-valuemax': 0,\n  'aria-valuemin': 0,\n  'aria-valuenow': 0,\n  'aria-valuetext': 0,\n  // Live Region Attributes\n  'aria-atomic': 0,\n  'aria-busy': 0,\n  'aria-live': 0,\n  'aria-relevant': 0,\n  // Drag-and-Drop Attributes\n  'aria-dropeffect': 0,\n  'aria-grabbed': 0,\n  // Relationship Attributes\n  'aria-activedescendant': 0,\n  'aria-colcount': 0,\n  'aria-colindex': 0,\n  'aria-colspan': 0,\n  'aria-controls': 0,\n  'aria-describedby': 0,\n  'aria-errormessage': 0,\n  'aria-flowto': 0,\n  'aria-labelledby': 0,\n  'aria-owns': 0,\n  'aria-posinset': 0,\n  'aria-rowcount': 0,\n  'aria-rowindex': 0,\n  'aria-rowspan': 0,\n  'aria-setsize': 0\n};\n\nvar warnedProperties = {};\nvar rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\nvar rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\nfunction validateProperty(tagName, name) {\n  {\n    if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {\n      return true;\n    }\n\n    if (rARIACamel.test(name)) {\n      var ariaName = 'aria-' + name.slice(4).toLowerCase();\n      var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM\n      // DOM properties, then it is an invalid aria-* attribute.\n\n      if (correctName == null) {\n        error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);\n\n        warnedProperties[name] = true;\n        return true;\n      } // aria-* attributes should be lowercase; suggest the lowercase version.\n\n\n      if (name !== correctName) {\n        error('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);\n\n        warnedProperties[name] = true;\n        return true;\n      }\n    }\n\n    if (rARIA.test(name)) {\n      var lowerCasedName = name.toLowerCase();\n      var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM\n      // DOM properties, then it is an invalid aria-* attribute.\n\n      if (standardName == null) {\n        warnedProperties[name] = true;\n        return false;\n      } // aria-* attributes should be lowercase; suggest the lowercase version.\n\n\n      if (name !== standardName) {\n        error('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);\n\n        warnedProperties[name] = true;\n        return true;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction warnInvalidARIAProps(type, props) {\n  {\n    var invalidProps = [];\n\n    for (var key in props) {\n      var isValid = validateProperty(type, key);\n\n      if (!isValid) {\n        invalidProps.push(key);\n      }\n    }\n\n    var unknownPropString = invalidProps.map(function (prop) {\n      return '`' + prop + '`';\n    }).join(', ');\n\n    if (invalidProps.length === 1) {\n      error('Invalid aria prop %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);\n    } else if (invalidProps.length > 1) {\n      error('Invalid aria props %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);\n    }\n  }\n}\n\nfunction validateProperties(type, props) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n\n  warnInvalidARIAProps(type, props);\n}\n\nvar didWarnValueNull = false;\nfunction validateProperties$1(type, props) {\n  {\n    if (type !== 'input' && type !== 'textarea' && type !== 'select') {\n      return;\n    }\n\n    if (props != null && props.value === null && !didWarnValueNull) {\n      didWarnValueNull = true;\n\n      if (type === 'select' && props.multiple) {\n        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);\n      } else {\n        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);\n      }\n    }\n  }\n}\n\n// When adding attributes to the HTML or SVG allowed attribute list, be sure to\n// also add them to this module to ensure casing and incorrect name\n// warnings.\nvar possibleStandardNames = {\n  // HTML\n  accept: 'accept',\n  acceptcharset: 'acceptCharset',\n  'accept-charset': 'acceptCharset',\n  accesskey: 'accessKey',\n  action: 'action',\n  allowfullscreen: 'allowFullScreen',\n  alt: 'alt',\n  as: 'as',\n  async: 'async',\n  autocapitalize: 'autoCapitalize',\n  autocomplete: 'autoComplete',\n  autocorrect: 'autoCorrect',\n  autofocus: 'autoFocus',\n  autoplay: 'autoPlay',\n  autosave: 'autoSave',\n  capture: 'capture',\n  cellpadding: 'cellPadding',\n  cellspacing: 'cellSpacing',\n  challenge: 'challenge',\n  charset: 'charSet',\n  checked: 'checked',\n  children: 'children',\n  cite: 'cite',\n  class: 'className',\n  classid: 'classID',\n  classname: 'className',\n  cols: 'cols',\n  colspan: 'colSpan',\n  content: 'content',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  controls: 'controls',\n  controlslist: 'controlsList',\n  coords: 'coords',\n  crossorigin: 'crossOrigin',\n  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',\n  data: 'data',\n  datetime: 'dateTime',\n  default: 'default',\n  defaultchecked: 'defaultChecked',\n  defaultvalue: 'defaultValue',\n  defer: 'defer',\n  dir: 'dir',\n  disabled: 'disabled',\n  disablepictureinpicture: 'disablePictureInPicture',\n  disableremoteplayback: 'disableRemotePlayback',\n  download: 'download',\n  draggable: 'draggable',\n  enctype: 'encType',\n  enterkeyhint: 'enterKeyHint',\n  for: 'htmlFor',\n  form: 'form',\n  formmethod: 'formMethod',\n  formaction: 'formAction',\n  formenctype: 'formEncType',\n  formnovalidate: 'formNoValidate',\n  formtarget: 'formTarget',\n  frameborder: 'frameBorder',\n  headers: 'headers',\n  height: 'height',\n  hidden: 'hidden',\n  high: 'high',\n  href: 'href',\n  hreflang: 'hrefLang',\n  htmlfor: 'htmlFor',\n  httpequiv: 'httpEquiv',\n  'http-equiv': 'httpEquiv',\n  icon: 'icon',\n  id: 'id',\n  imagesizes: 'imageSizes',\n  imagesrcset: 'imageSrcSet',\n  innerhtml: 'innerHTML',\n  inputmode: 'inputMode',\n  integrity: 'integrity',\n  is: 'is',\n  itemid: 'itemID',\n  itemprop: 'itemProp',\n  itemref: 'itemRef',\n  itemscope: 'itemScope',\n  itemtype: 'itemType',\n  keyparams: 'keyParams',\n  keytype: 'keyType',\n  kind: 'kind',\n  label: 'label',\n  lang: 'lang',\n  list: 'list',\n  loop: 'loop',\n  low: 'low',\n  manifest: 'manifest',\n  marginwidth: 'marginWidth',\n  marginheight: 'marginHeight',\n  max: 'max',\n  maxlength: 'maxLength',\n  media: 'media',\n  mediagroup: 'mediaGroup',\n  method: 'method',\n  min: 'min',\n  minlength: 'minLength',\n  multiple: 'multiple',\n  muted: 'muted',\n  name: 'name',\n  nomodule: 'noModule',\n  nonce: 'nonce',\n  novalidate: 'noValidate',\n  open: 'open',\n  optimum: 'optimum',\n  pattern: 'pattern',\n  placeholder: 'placeholder',\n  playsinline: 'playsInline',\n  poster: 'poster',\n  preload: 'preload',\n  profile: 'profile',\n  radiogroup: 'radioGroup',\n  readonly: 'readOnly',\n  referrerpolicy: 'referrerPolicy',\n  rel: 'rel',\n  required: 'required',\n  reversed: 'reversed',\n  role: 'role',\n  rows: 'rows',\n  rowspan: 'rowSpan',\n  sandbox: 'sandbox',\n  scope: 'scope',\n  scoped: 'scoped',\n  scrolling: 'scrolling',\n  seamless: 'seamless',\n  selected: 'selected',\n  shape: 'shape',\n  size: 'size',\n  sizes: 'sizes',\n  span: 'span',\n  spellcheck: 'spellCheck',\n  src: 'src',\n  srcdoc: 'srcDoc',\n  srclang: 'srcLang',\n  srcset: 'srcSet',\n  start: 'start',\n  step: 'step',\n  style: 'style',\n  summary: 'summary',\n  tabindex: 'tabIndex',\n  target: 'target',\n  title: 'title',\n  type: 'type',\n  usemap: 'useMap',\n  value: 'value',\n  width: 'width',\n  wmode: 'wmode',\n  wrap: 'wrap',\n  // SVG\n  about: 'about',\n  accentheight: 'accentHeight',\n  'accent-height': 'accentHeight',\n  accumulate: 'accumulate',\n  additive: 'additive',\n  alignmentbaseline: 'alignmentBaseline',\n  'alignment-baseline': 'alignmentBaseline',\n  allowreorder: 'allowReorder',\n  alphabetic: 'alphabetic',\n  amplitude: 'amplitude',\n  arabicform: 'arabicForm',\n  'arabic-form': 'arabicForm',\n  ascent: 'ascent',\n  attributename: 'attributeName',\n  attributetype: 'attributeType',\n  autoreverse: 'autoReverse',\n  azimuth: 'azimuth',\n  basefrequency: 'baseFrequency',\n  baselineshift: 'baselineShift',\n  'baseline-shift': 'baselineShift',\n  baseprofile: 'baseProfile',\n  bbox: 'bbox',\n  begin: 'begin',\n  bias: 'bias',\n  by: 'by',\n  calcmode: 'calcMode',\n  capheight: 'capHeight',\n  'cap-height': 'capHeight',\n  clip: 'clip',\n  clippath: 'clipPath',\n  'clip-path': 'clipPath',\n  clippathunits: 'clipPathUnits',\n  cliprule: 'clipRule',\n  'clip-rule': 'clipRule',\n  color: 'color',\n  colorinterpolation: 'colorInterpolation',\n  'color-interpolation': 'colorInterpolation',\n  colorinterpolationfilters: 'colorInterpolationFilters',\n  'color-interpolation-filters': 'colorInterpolationFilters',\n  colorprofile: 'colorProfile',\n  'color-profile': 'colorProfile',\n  colorrendering: 'colorRendering',\n  'color-rendering': 'colorRendering',\n  contentscripttype: 'contentScriptType',\n  contentstyletype: 'contentStyleType',\n  cursor: 'cursor',\n  cx: 'cx',\n  cy: 'cy',\n  d: 'd',\n  datatype: 'datatype',\n  decelerate: 'decelerate',\n  descent: 'descent',\n  diffuseconstant: 'diffuseConstant',\n  direction: 'direction',\n  display: 'display',\n  divisor: 'divisor',\n  dominantbaseline: 'dominantBaseline',\n  'dominant-baseline': 'dominantBaseline',\n  dur: 'dur',\n  dx: 'dx',\n  dy: 'dy',\n  edgemode: 'edgeMode',\n  elevation: 'elevation',\n  enablebackground: 'enableBackground',\n  'enable-background': 'enableBackground',\n  end: 'end',\n  exponent: 'exponent',\n  externalresourcesrequired: 'externalResourcesRequired',\n  fill: 'fill',\n  fillopacity: 'fillOpacity',\n  'fill-opacity': 'fillOpacity',\n  fillrule: 'fillRule',\n  'fill-rule': 'fillRule',\n  filter: 'filter',\n  filterres: 'filterRes',\n  filterunits: 'filterUnits',\n  floodopacity: 'floodOpacity',\n  'flood-opacity': 'floodOpacity',\n  floodcolor: 'floodColor',\n  'flood-color': 'floodColor',\n  focusable: 'focusable',\n  fontfamily: 'fontFamily',\n  'font-family': 'fontFamily',\n  fontsize: 'fontSize',\n  'font-size': 'fontSize',\n  fontsizeadjust: 'fontSizeAdjust',\n  'font-size-adjust': 'fontSizeAdjust',\n  fontstretch: 'fontStretch',\n  'font-stretch': 'fontStretch',\n  fontstyle: 'fontStyle',\n  'font-style': 'fontStyle',\n  fontvariant: 'fontVariant',\n  'font-variant': 'fontVariant',\n  fontweight: 'fontWeight',\n  'font-weight': 'fontWeight',\n  format: 'format',\n  from: 'from',\n  fx: 'fx',\n  fy: 'fy',\n  g1: 'g1',\n  g2: 'g2',\n  glyphname: 'glyphName',\n  'glyph-name': 'glyphName',\n  glyphorientationhorizontal: 'glyphOrientationHorizontal',\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n  glyphorientationvertical: 'glyphOrientationVertical',\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\n  glyphref: 'glyphRef',\n  gradienttransform: 'gradientTransform',\n  gradientunits: 'gradientUnits',\n  hanging: 'hanging',\n  horizadvx: 'horizAdvX',\n  'horiz-adv-x': 'horizAdvX',\n  horizoriginx: 'horizOriginX',\n  'horiz-origin-x': 'horizOriginX',\n  ideographic: 'ideographic',\n  imagerendering: 'imageRendering',\n  'image-rendering': 'imageRendering',\n  in2: 'in2',\n  in: 'in',\n  inlist: 'inlist',\n  intercept: 'intercept',\n  k1: 'k1',\n  k2: 'k2',\n  k3: 'k3',\n  k4: 'k4',\n  k: 'k',\n  kernelmatrix: 'kernelMatrix',\n  kernelunitlength: 'kernelUnitLength',\n  kerning: 'kerning',\n  keypoints: 'keyPoints',\n  keysplines: 'keySplines',\n  keytimes: 'keyTimes',\n  lengthadjust: 'lengthAdjust',\n  letterspacing: 'letterSpacing',\n  'letter-spacing': 'letterSpacing',\n  lightingcolor: 'lightingColor',\n  'lighting-color': 'lightingColor',\n  limitingconeangle: 'limitingConeAngle',\n  local: 'local',\n  markerend: 'markerEnd',\n  'marker-end': 'markerEnd',\n  markerheight: 'markerHeight',\n  markermid: 'markerMid',\n  'marker-mid': 'markerMid',\n  markerstart: 'markerStart',\n  'marker-start': 'markerStart',\n  markerunits: 'markerUnits',\n  markerwidth: 'markerWidth',\n  mask: 'mask',\n  maskcontentunits: 'maskContentUnits',\n  maskunits: 'maskUnits',\n  mathematical: 'mathematical',\n  mode: 'mode',\n  numoctaves: 'numOctaves',\n  offset: 'offset',\n  opacity: 'opacity',\n  operator: 'operator',\n  order: 'order',\n  orient: 'orient',\n  orientation: 'orientation',\n  origin: 'origin',\n  overflow: 'overflow',\n  overlineposition: 'overlinePosition',\n  'overline-position': 'overlinePosition',\n  overlinethickness: 'overlineThickness',\n  'overline-thickness': 'overlineThickness',\n  paintorder: 'paintOrder',\n  'paint-order': 'paintOrder',\n  panose1: 'panose1',\n  'panose-1': 'panose1',\n  pathlength: 'pathLength',\n  patterncontentunits: 'patternContentUnits',\n  patterntransform: 'patternTransform',\n  patternunits: 'patternUnits',\n  pointerevents: 'pointerEvents',\n  'pointer-events': 'pointerEvents',\n  points: 'points',\n  pointsatx: 'pointsAtX',\n  pointsaty: 'pointsAtY',\n  pointsatz: 'pointsAtZ',\n  prefix: 'prefix',\n  preservealpha: 'preserveAlpha',\n  preserveaspectratio: 'preserveAspectRatio',\n  primitiveunits: 'primitiveUnits',\n  property: 'property',\n  r: 'r',\n  radius: 'radius',\n  refx: 'refX',\n  refy: 'refY',\n  renderingintent: 'renderingIntent',\n  'rendering-intent': 'renderingIntent',\n  repeatcount: 'repeatCount',\n  repeatdur: 'repeatDur',\n  requiredextensions: 'requiredExtensions',\n  requiredfeatures: 'requiredFeatures',\n  resource: 'resource',\n  restart: 'restart',\n  result: 'result',\n  results: 'results',\n  rotate: 'rotate',\n  rx: 'rx',\n  ry: 'ry',\n  scale: 'scale',\n  security: 'security',\n  seed: 'seed',\n  shaperendering: 'shapeRendering',\n  'shape-rendering': 'shapeRendering',\n  slope: 'slope',\n  spacing: 'spacing',\n  specularconstant: 'specularConstant',\n  specularexponent: 'specularExponent',\n  speed: 'speed',\n  spreadmethod: 'spreadMethod',\n  startoffset: 'startOffset',\n  stddeviation: 'stdDeviation',\n  stemh: 'stemh',\n  stemv: 'stemv',\n  stitchtiles: 'stitchTiles',\n  stopcolor: 'stopColor',\n  'stop-color': 'stopColor',\n  stopopacity: 'stopOpacity',\n  'stop-opacity': 'stopOpacity',\n  strikethroughposition: 'strikethroughPosition',\n  'strikethrough-position': 'strikethroughPosition',\n  strikethroughthickness: 'strikethroughThickness',\n  'strikethrough-thickness': 'strikethroughThickness',\n  string: 'string',\n  stroke: 'stroke',\n  strokedasharray: 'strokeDasharray',\n  'stroke-dasharray': 'strokeDasharray',\n  strokedashoffset: 'strokeDashoffset',\n  'stroke-dashoffset': 'strokeDashoffset',\n  strokelinecap: 'strokeLinecap',\n  'stroke-linecap': 'strokeLinecap',\n  strokelinejoin: 'strokeLinejoin',\n  'stroke-linejoin': 'strokeLinejoin',\n  strokemiterlimit: 'strokeMiterlimit',\n  'stroke-miterlimit': 'strokeMiterlimit',\n  strokewidth: 'strokeWidth',\n  'stroke-width': 'strokeWidth',\n  strokeopacity: 'strokeOpacity',\n  'stroke-opacity': 'strokeOpacity',\n  suppresscontenteditablewarning: 'suppressContentEditableWarning',\n  suppresshydrationwarning: 'suppressHydrationWarning',\n  surfacescale: 'surfaceScale',\n  systemlanguage: 'systemLanguage',\n  tablevalues: 'tableValues',\n  targetx: 'targetX',\n  targety: 'targetY',\n  textanchor: 'textAnchor',\n  'text-anchor': 'textAnchor',\n  textdecoration: 'textDecoration',\n  'text-decoration': 'textDecoration',\n  textlength: 'textLength',\n  textrendering: 'textRendering',\n  'text-rendering': 'textRendering',\n  to: 'to',\n  transform: 'transform',\n  typeof: 'typeof',\n  u1: 'u1',\n  u2: 'u2',\n  underlineposition: 'underlinePosition',\n  'underline-position': 'underlinePosition',\n  underlinethickness: 'underlineThickness',\n  'underline-thickness': 'underlineThickness',\n  unicode: 'unicode',\n  unicodebidi: 'unicodeBidi',\n  'unicode-bidi': 'unicodeBidi',\n  unicoderange: 'unicodeRange',\n  'unicode-range': 'unicodeRange',\n  unitsperem: 'unitsPerEm',\n  'units-per-em': 'unitsPerEm',\n  unselectable: 'unselectable',\n  valphabetic: 'vAlphabetic',\n  'v-alphabetic': 'vAlphabetic',\n  values: 'values',\n  vectoreffect: 'vectorEffect',\n  'vector-effect': 'vectorEffect',\n  version: 'version',\n  vertadvy: 'vertAdvY',\n  'vert-adv-y': 'vertAdvY',\n  vertoriginx: 'vertOriginX',\n  'vert-origin-x': 'vertOriginX',\n  vertoriginy: 'vertOriginY',\n  'vert-origin-y': 'vertOriginY',\n  vhanging: 'vHanging',\n  'v-hanging': 'vHanging',\n  videographic: 'vIdeographic',\n  'v-ideographic': 'vIdeographic',\n  viewbox: 'viewBox',\n  viewtarget: 'viewTarget',\n  visibility: 'visibility',\n  vmathematical: 'vMathematical',\n  'v-mathematical': 'vMathematical',\n  vocab: 'vocab',\n  widths: 'widths',\n  wordspacing: 'wordSpacing',\n  'word-spacing': 'wordSpacing',\n  writingmode: 'writingMode',\n  'writing-mode': 'writingMode',\n  x1: 'x1',\n  x2: 'x2',\n  x: 'x',\n  xchannelselector: 'xChannelSelector',\n  xheight: 'xHeight',\n  'x-height': 'xHeight',\n  xlinkactuate: 'xlinkActuate',\n  'xlink:actuate': 'xlinkActuate',\n  xlinkarcrole: 'xlinkArcrole',\n  'xlink:arcrole': 'xlinkArcrole',\n  xlinkhref: 'xlinkHref',\n  'xlink:href': 'xlinkHref',\n  xlinkrole: 'xlinkRole',\n  'xlink:role': 'xlinkRole',\n  xlinkshow: 'xlinkShow',\n  'xlink:show': 'xlinkShow',\n  xlinktitle: 'xlinkTitle',\n  'xlink:title': 'xlinkTitle',\n  xlinktype: 'xlinkType',\n  'xlink:type': 'xlinkType',\n  xmlbase: 'xmlBase',\n  'xml:base': 'xmlBase',\n  xmllang: 'xmlLang',\n  'xml:lang': 'xmlLang',\n  xmlns: 'xmlns',\n  'xml:space': 'xmlSpace',\n  xmlnsxlink: 'xmlnsXlink',\n  'xmlns:xlink': 'xmlnsXlink',\n  xmlspace: 'xmlSpace',\n  y1: 'y1',\n  y2: 'y2',\n  y: 'y',\n  ychannelselector: 'yChannelSelector',\n  z: 'z',\n  zoomandpan: 'zoomAndPan'\n};\n\nvar validateProperty$1 = function () {};\n\n{\n  var warnedProperties$1 = {};\n  var EVENT_NAME_REGEX = /^on./;\n  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;\n  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\n  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\n  validateProperty$1 = function (tagName, name, value, eventRegistry) {\n    if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {\n      return true;\n    }\n\n    var lowerCasedName = name.toLowerCase();\n\n    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {\n      error('React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');\n\n      warnedProperties$1[name] = true;\n      return true;\n    } // We can't rely on the event system being injected on the server.\n\n\n    if (eventRegistry != null) {\n      var registrationNameDependencies = eventRegistry.registrationNameDependencies,\n          possibleRegistrationNames = eventRegistry.possibleRegistrationNames;\n\n      if (registrationNameDependencies.hasOwnProperty(name)) {\n        return true;\n      }\n\n      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;\n\n      if (registrationName != null) {\n        error('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);\n\n        warnedProperties$1[name] = true;\n        return true;\n      }\n\n      if (EVENT_NAME_REGEX.test(name)) {\n        error('Unknown event handler property `%s`. It will be ignored.', name);\n\n        warnedProperties$1[name] = true;\n        return true;\n      }\n    } else if (EVENT_NAME_REGEX.test(name)) {\n      // If no event plugins have been injected, we are in a server environment.\n      // So we can't tell if the event name is correct for sure, but we can filter\n      // out known bad ones like `onclick`. We can't suggest a specific replacement though.\n      if (INVALID_EVENT_NAME_REGEX.test(name)) {\n        error('Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);\n      }\n\n      warnedProperties$1[name] = true;\n      return true;\n    } // Let the ARIA attribute hook validate ARIA attributes\n\n\n    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {\n      return true;\n    }\n\n    if (lowerCasedName === 'innerhtml') {\n      error('Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (lowerCasedName === 'aria') {\n      error('The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {\n      error('Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      error('Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    var propertyInfo = getPropertyInfo(name);\n    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.\n\n    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      var standardName = possibleStandardNames[lowerCasedName];\n\n      if (standardName !== name) {\n        error('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);\n\n        warnedProperties$1[name] = true;\n        return true;\n      }\n    } else if (!isReserved && name !== lowerCasedName) {\n      // Unknown attributes should have lowercase casing since that's how they\n      // will be cased anyway with server rendering.\n      error('React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\n      if (value) {\n        error('Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()}.', value, name, name, value, name);\n      } else {\n        error('Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()}.\\n\\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);\n      }\n\n      warnedProperties$1[name] = true;\n      return true;\n    } // Now that we've validated casing, do not validate\n    // data types for reserved props\n\n\n    if (isReserved) {\n      return true;\n    } // Warn when a known attribute is a bad type\n\n\n    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\n      warnedProperties$1[name] = true;\n      return false;\n    } // Warn when passing the strings 'false' or 'true' into a boolean prop\n\n\n    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {\n      error('Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value);\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    return true;\n  };\n}\n\nvar warnUnknownProperties = function (type, props, eventRegistry) {\n  {\n    var unknownProps = [];\n\n    for (var key in props) {\n      var isValid = validateProperty$1(type, key, props[key], eventRegistry);\n\n      if (!isValid) {\n        unknownProps.push(key);\n      }\n    }\n\n    var unknownPropString = unknownProps.map(function (prop) {\n      return '`' + prop + '`';\n    }).join(', ');\n\n    if (unknownProps.length === 1) {\n      error('Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);\n    } else if (unknownProps.length > 1) {\n      error('Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);\n    }\n  }\n};\n\nfunction validateProperties$2(type, props, eventRegistry) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n\n  warnUnknownProperties(type, props, eventRegistry);\n}\n\nvar warnValidStyle = function () {};\n\n{\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon\n\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n  var warnedForInfinityValue = false;\n\n  var camelize = function (string) {\n    return string.replace(hyphenPattern, function (_, character) {\n      return character.toUpperCase();\n    });\n  };\n\n  var warnHyphenatedStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n\n    error('Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests\n    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n    // is converted to lowercase `ms`.\n    camelize(name.replace(msPattern, 'ms-')));\n  };\n\n  var warnBadVendoredStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n\n    error('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n\n    error(\"Style property values shouldn't contain a semicolon. \" + 'Try \"%s: %s\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));\n  };\n\n  var warnStyleValueIsNaN = function (name, value) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n\n    error('`NaN` is an invalid value for the `%s` css style property.', name);\n  };\n\n  var warnStyleValueIsInfinity = function (name, value) {\n    if (warnedForInfinityValue) {\n      return;\n    }\n\n    warnedForInfinityValue = true;\n\n    error('`Infinity` is an invalid value for the `%s` css style property.', name);\n  };\n\n  warnValidStyle = function (name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n\n    if (typeof value === 'number') {\n      if (isNaN(value)) {\n        warnStyleValueIsNaN(name, value);\n      } else if (!isFinite(value)) {\n        warnStyleValueIsInfinity(name, value);\n      }\n    }\n  };\n}\n\nvar warnValidStyle$1 = warnValidStyle;\n\n// code copied and modified from escape-html\nvar matchHtmlRegExp = /[\"'&<>]/;\n/**\n * Escapes special characters and HTML entities in a given html string.\n *\n * @param  {string} string HTML string to escape for later insertion\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  {\n    checkHtmlStringCoercion(string);\n  }\n\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        // \"\n        escape = '&quot;';\n        break;\n\n      case 38:\n        // &\n        escape = '&amp;';\n        break;\n\n      case 39:\n        // '\n        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n\n        break;\n\n      case 60:\n        // <\n        escape = '&lt;';\n        break;\n\n      case 62:\n        // >\n        escape = '&gt;';\n        break;\n\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n} // end code copied and modified from escape-html\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\n\n\nfunction escapeTextForBrowser(text) {\n  if (typeof text === 'boolean' || typeof text === 'number') {\n    // this shortcircuit helps perf for types that we know will never have\n    // special characters, especially given that this function is used often\n    // for numeric dom ids.\n    return '' + text;\n  }\n\n  return escapeHtml(text);\n}\n\nvar uppercasePattern = /([A-Z])/g;\nvar msPattern$1 = /^ms-/;\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n */\n\nfunction hyphenateStyleName(name) {\n  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern$1, '-ms-');\n}\n\n// and any newline or tab are filtered out as if they're not part of the URL.\n// https://url.spec.whatwg.org/#url-parsing\n// Tab or newline are defined as \\r\\n\\t:\n// https://infra.spec.whatwg.org/#ascii-tab-or-newline\n// A C0 control is a code point in the range \\u0000 NULL to \\u001F\n// INFORMATION SEPARATOR ONE, inclusive:\n// https://infra.spec.whatwg.org/#c0-control-or-space\n\n/* eslint-disable max-len */\n\nvar isJavaScriptProtocol = /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*\\:/i;\nvar didWarn = false;\n\nfunction sanitizeURL(url) {\n  {\n    if (!didWarn && isJavaScriptProtocol.test(url)) {\n      didWarn = true;\n\n      error('A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url));\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\nvar startInlineScript = stringToPrecomputedChunk('<script>');\nvar endInlineScript = stringToPrecomputedChunk('</script>');\nvar startScriptSrc = stringToPrecomputedChunk('<script src=\"');\nvar startModuleSrc = stringToPrecomputedChunk('<script type=\"module\" src=\"');\nvar endAsyncScript = stringToPrecomputedChunk('\" async=\"\"></script>');\n/**\n * This escaping function is designed to work with bootstrapScriptContent only.\n * because we know we are escaping the entire script. We can avoid for instance\n * escaping html comment string sequences that are valid javascript as well because\n * if there are no sebsequent <script sequences the html parser will never enter\n * script data double escaped state (see: https://www.w3.org/TR/html53/syntax.html#script-data-double-escaped-state)\n *\n * While untrusted script content should be made safe before using this api it will\n * ensure that the script cannot be early terminated or never terminated state\n */\n\nfunction escapeBootstrapScriptContent(scriptText) {\n  {\n    checkHtmlStringCoercion(scriptText);\n  }\n\n  return ('' + scriptText).replace(scriptRegex, scriptReplacer);\n}\n\nvar scriptRegex = /(<\\/|<)(s)(cript)/gi;\n\nvar scriptReplacer = function (match, prefix, s, suffix) {\n  return \"\" + prefix + (s === 's' ? \"\\\\u0073\" : \"\\\\u0053\") + suffix;\n}; // Allows us to keep track of what we've already written so we can refer back to it.\n\n\nfunction createResponseState(identifierPrefix, nonce, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {\n  var idPrefix = identifierPrefix === undefined ? '' : identifierPrefix;\n  var inlineScriptWithNonce = nonce === undefined ? startInlineScript : stringToPrecomputedChunk('<script nonce=\"' + escapeTextForBrowser(nonce) + '\">');\n  var bootstrapChunks = [];\n\n  if (bootstrapScriptContent !== undefined) {\n    bootstrapChunks.push(inlineScriptWithNonce, stringToChunk(escapeBootstrapScriptContent(bootstrapScriptContent)), endInlineScript);\n  }\n\n  if (bootstrapScripts !== undefined) {\n    for (var i = 0; i < bootstrapScripts.length; i++) {\n      bootstrapChunks.push(startScriptSrc, stringToChunk(escapeTextForBrowser(bootstrapScripts[i])), endAsyncScript);\n    }\n  }\n\n  if (bootstrapModules !== undefined) {\n    for (var _i = 0; _i < bootstrapModules.length; _i++) {\n      bootstrapChunks.push(startModuleSrc, stringToChunk(escapeTextForBrowser(bootstrapModules[_i])), endAsyncScript);\n    }\n  }\n\n  return {\n    bootstrapChunks: bootstrapChunks,\n    startInlineScript: inlineScriptWithNonce,\n    placeholderPrefix: stringToPrecomputedChunk(idPrefix + 'P:'),\n    segmentPrefix: stringToPrecomputedChunk(idPrefix + 'S:'),\n    boundaryPrefix: idPrefix + 'B:',\n    idPrefix: idPrefix,\n    nextSuspenseID: 0,\n    sentCompleteSegmentFunction: false,\n    sentCompleteBoundaryFunction: false,\n    sentClientRenderFunction: false\n  };\n} // Constants for the insertion mode we're currently writing in. We don't encode all HTML5 insertion\n// modes. We only include the variants as they matter for the sake of our purposes.\n// We don't actually provide the namespace therefore we use constants instead of the string.\n\nvar ROOT_HTML_MODE = 0; // Used for the root most element tag.\n\nvar HTML_MODE = 1;\nvar SVG_MODE = 2;\nvar MATHML_MODE = 3;\nvar HTML_TABLE_MODE = 4;\nvar HTML_TABLE_BODY_MODE = 5;\nvar HTML_TABLE_ROW_MODE = 6;\nvar HTML_COLGROUP_MODE = 7; // We have a greater than HTML_TABLE_MODE check elsewhere. If you add more cases here, make sure it\n// still makes sense\n\nfunction createFormatContext(insertionMode, selectedValue) {\n  return {\n    insertionMode: insertionMode,\n    selectedValue: selectedValue\n  };\n}\n\nfunction createRootFormatContext(namespaceURI) {\n  var insertionMode = namespaceURI === 'http://www.w3.org/2000/svg' ? SVG_MODE : namespaceURI === 'http://www.w3.org/1998/Math/MathML' ? MATHML_MODE : ROOT_HTML_MODE;\n  return createFormatContext(insertionMode, null);\n}\nfunction getChildFormatContext(parentContext, type, props) {\n  switch (type) {\n    case 'select':\n      return createFormatContext(HTML_MODE, props.value != null ? props.value : props.defaultValue);\n\n    case 'svg':\n      return createFormatContext(SVG_MODE, null);\n\n    case 'math':\n      return createFormatContext(MATHML_MODE, null);\n\n    case 'foreignObject':\n      return createFormatContext(HTML_MODE, null);\n    // Table parents are special in that their children can only be created at all if they're\n    // wrapped in a table parent. So we need to encode that we're entering this mode.\n\n    case 'table':\n      return createFormatContext(HTML_TABLE_MODE, null);\n\n    case 'thead':\n    case 'tbody':\n    case 'tfoot':\n      return createFormatContext(HTML_TABLE_BODY_MODE, null);\n\n    case 'colgroup':\n      return createFormatContext(HTML_COLGROUP_MODE, null);\n\n    case 'tr':\n      return createFormatContext(HTML_TABLE_ROW_MODE, null);\n  }\n\n  if (parentContext.insertionMode >= HTML_TABLE_MODE) {\n    // Whatever tag this was, it wasn't a table parent or other special parent, so we must have\n    // entered plain HTML again.\n    return createFormatContext(HTML_MODE, null);\n  }\n\n  if (parentContext.insertionMode === ROOT_HTML_MODE) {\n    // We've emitted the root and is now in plain HTML mode.\n    return createFormatContext(HTML_MODE, null);\n  }\n\n  return parentContext;\n}\nvar UNINITIALIZED_SUSPENSE_BOUNDARY_ID = null;\nfunction assignSuspenseBoundaryID(responseState) {\n  var generatedID = responseState.nextSuspenseID++;\n  return stringToPrecomputedChunk(responseState.boundaryPrefix + generatedID.toString(16));\n}\nfunction makeId(responseState, treeId, localId) {\n  var idPrefix = responseState.idPrefix;\n  var id = ':' + idPrefix + 'R' + treeId; // Unless this is the first id at this level, append a number at the end\n  // that represents the position of this useId hook among all the useId\n  // hooks for this fiber.\n\n  if (localId > 0) {\n    id += 'H' + localId.toString(32);\n  }\n\n  return id + ':';\n}\n\nfunction encodeHTMLTextNode(text) {\n  return escapeTextForBrowser(text);\n}\n\nvar textSeparator = stringToPrecomputedChunk('<!-- -->');\nfunction pushTextInstance(target, text, responseState, textEmbedded) {\n  if (text === '') {\n    // Empty text doesn't have a DOM node representation and the hydration is aware of this.\n    return textEmbedded;\n  }\n\n  if (textEmbedded) {\n    target.push(textSeparator);\n  }\n\n  target.push(stringToChunk(encodeHTMLTextNode(text)));\n  return true;\n} // Called when Fizz is done with a Segment. Currently the only purpose is to conditionally\n// emit a text separator when we don't know for sure it is safe to omit\n\nfunction pushSegmentFinale(target, responseState, lastPushedText, textEmbedded) {\n  if (lastPushedText && textEmbedded) {\n    target.push(textSeparator);\n  }\n}\nvar styleNameCache = new Map();\n\nfunction processStyleName(styleName) {\n  var chunk = styleNameCache.get(styleName);\n\n  if (chunk !== undefined) {\n    return chunk;\n  }\n\n  var result = stringToPrecomputedChunk(escapeTextForBrowser(hyphenateStyleName(styleName)));\n  styleNameCache.set(styleName, result);\n  return result;\n}\n\nvar styleAttributeStart = stringToPrecomputedChunk(' style=\"');\nvar styleAssign = stringToPrecomputedChunk(':');\nvar styleSeparator = stringToPrecomputedChunk(';');\n\nfunction pushStyle(target, responseState, style) {\n  if (typeof style !== 'object') {\n    throw new Error('The `style` prop expects a mapping from style properties to values, ' + \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" + 'using JSX.');\n  }\n\n  var isFirst = true;\n\n  for (var styleName in style) {\n    if (!hasOwnProperty.call(style, styleName)) {\n      continue;\n    } // If you provide unsafe user data here they can inject arbitrary CSS\n    // which may be problematic (I couldn't repro this):\n    // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n    // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n    // This is not an XSS hole but instead a potential CSS injection issue\n    // which has lead to a greater discussion about how we're going to\n    // trust URLs moving forward. See #2115901\n\n\n    var styleValue = style[styleName];\n\n    if (styleValue == null || typeof styleValue === 'boolean' || styleValue === '') {\n      // TODO: We used to set empty string as a style with an empty value. Does that ever make sense?\n      continue;\n    }\n\n    var nameChunk = void 0;\n    var valueChunk = void 0;\n    var isCustomProperty = styleName.indexOf('--') === 0;\n\n    if (isCustomProperty) {\n      nameChunk = stringToChunk(escapeTextForBrowser(styleName));\n\n      {\n        checkCSSPropertyStringCoercion(styleValue, styleName);\n      }\n\n      valueChunk = stringToChunk(escapeTextForBrowser(('' + styleValue).trim()));\n    } else {\n      {\n        warnValidStyle$1(styleName, styleValue);\n      }\n\n      nameChunk = processStyleName(styleName);\n\n      if (typeof styleValue === 'number') {\n        if (styleValue !== 0 && !hasOwnProperty.call(isUnitlessNumber, styleName)) {\n          valueChunk = stringToChunk(styleValue + 'px'); // Presumes implicit 'px' suffix for unitless numbers\n        } else {\n          valueChunk = stringToChunk('' + styleValue);\n        }\n      } else {\n        {\n          checkCSSPropertyStringCoercion(styleValue, styleName);\n        }\n\n        valueChunk = stringToChunk(escapeTextForBrowser(('' + styleValue).trim()));\n      }\n    }\n\n    if (isFirst) {\n      isFirst = false; // If it's first, we don't need any separators prefixed.\n\n      target.push(styleAttributeStart, nameChunk, styleAssign, valueChunk);\n    } else {\n      target.push(styleSeparator, nameChunk, styleAssign, valueChunk);\n    }\n  }\n\n  if (!isFirst) {\n    target.push(attributeEnd);\n  }\n}\n\nvar attributeSeparator = stringToPrecomputedChunk(' ');\nvar attributeAssign = stringToPrecomputedChunk('=\"');\nvar attributeEnd = stringToPrecomputedChunk('\"');\nvar attributeEmptyString = stringToPrecomputedChunk('=\"\"');\n\nfunction pushAttribute(target, responseState, name, value) {\n  switch (name) {\n    case 'style':\n      {\n        pushStyle(target, responseState, value);\n        return;\n      }\n\n    case 'defaultValue':\n    case 'defaultChecked': // These shouldn't be set as attributes on generic HTML elements.\n\n    case 'innerHTML': // Must use dangerouslySetInnerHTML instead.\n\n    case 'suppressContentEditableWarning':\n    case 'suppressHydrationWarning':\n      // Ignored. These are built-in to React on the client.\n      return;\n  }\n\n  if ( // shouldIgnoreAttribute\n  // We have already filtered out null/undefined and reserved words.\n  name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {\n    return;\n  }\n\n  var propertyInfo = getPropertyInfo(name);\n\n  if (propertyInfo !== null) {\n    // shouldRemoveAttribute\n    switch (typeof value) {\n      case 'function': // $FlowIssue symbol is perfectly valid here\n\n      case 'symbol':\n        // eslint-disable-line\n        return;\n\n      case 'boolean':\n        {\n          if (!propertyInfo.acceptsBooleans) {\n            return;\n          }\n        }\n    }\n\n    var attributeName = propertyInfo.attributeName;\n    var attributeNameChunk = stringToChunk(attributeName); // TODO: If it's known we can cache the chunk.\n\n    switch (propertyInfo.type) {\n      case BOOLEAN:\n        if (value) {\n          target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);\n        }\n\n        return;\n\n      case OVERLOADED_BOOLEAN:\n        if (value === true) {\n          target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);\n        } else if (value === false) ; else {\n          target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);\n        }\n\n        return;\n\n      case NUMERIC:\n        if (!isNaN(value)) {\n          target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);\n        }\n\n        break;\n\n      case POSITIVE_NUMERIC:\n        if (!isNaN(value) && value >= 1) {\n          target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);\n        }\n\n        break;\n\n      default:\n        if (propertyInfo.sanitizeURL) {\n          {\n            checkAttributeStringCoercion(value, attributeName);\n          }\n\n          value = '' + value;\n          sanitizeURL(value);\n        }\n\n        target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);\n    }\n  } else if (isAttributeNameSafe(name)) {\n    // shouldRemoveAttribute\n    switch (typeof value) {\n      case 'function': // $FlowIssue symbol is perfectly valid here\n\n      case 'symbol':\n        // eslint-disable-line\n        return;\n\n      case 'boolean':\n        {\n          var prefix = name.toLowerCase().slice(0, 5);\n\n          if (prefix !== 'data-' && prefix !== 'aria-') {\n            return;\n          }\n        }\n    }\n\n    target.push(attributeSeparator, stringToChunk(name), attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);\n  }\n}\n\nvar endOfStartTag = stringToPrecomputedChunk('>');\nvar endOfStartTagSelfClosing = stringToPrecomputedChunk('/>');\n\nfunction pushInnerHTML(target, innerHTML, children) {\n  if (innerHTML != null) {\n    if (children != null) {\n      throw new Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.');\n    }\n\n    if (typeof innerHTML !== 'object' || !('__html' in innerHTML)) {\n      throw new Error('`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://reactjs.org/link/dangerously-set-inner-html ' + 'for more information.');\n    }\n\n    var html = innerHTML.__html;\n\n    if (html !== null && html !== undefined) {\n      {\n        checkHtmlStringCoercion(html);\n      }\n\n      target.push(stringToChunk('' + html));\n    }\n  }\n} // TODO: Move these to ResponseState so that we warn for every request.\n// It would help debugging in stateful servers (e.g. service worker).\n\n\nvar didWarnDefaultInputValue = false;\nvar didWarnDefaultChecked = false;\nvar didWarnDefaultSelectValue = false;\nvar didWarnDefaultTextareaValue = false;\nvar didWarnInvalidOptionChildren = false;\nvar didWarnInvalidOptionInnerHTML = false;\nvar didWarnSelectedSetOnOption = false;\n\nfunction checkSelectProp(props, propName) {\n  {\n    var value = props[propName];\n\n    if (value != null) {\n      var array = isArray(value);\n\n      if (props.multiple && !array) {\n        error('The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.', propName);\n      } else if (!props.multiple && array) {\n        error('The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.', propName);\n      }\n    }\n  }\n}\n\nfunction pushStartSelect(target, props, responseState) {\n  {\n    checkControlledValueProps('select', props);\n    checkSelectProp(props, 'value');\n    checkSelectProp(props, 'defaultValue');\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultSelectValue) {\n      error('Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components');\n\n      didWarnDefaultSelectValue = true;\n    }\n  }\n\n  target.push(startChunkForTag('select'));\n  var children = null;\n  var innerHTML = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n\n        case 'dangerouslySetInnerHTML':\n          // TODO: This doesn't really make sense for select since it can't use the controlled\n          // value in the innerHTML.\n          innerHTML = propValue;\n          break;\n\n        case 'defaultValue':\n        case 'value':\n          // These are set on the Context instead and applied to the nested options.\n          break;\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  return children;\n}\n\nfunction flattenOptionChildren(children) {\n  var content = ''; // Flatten children and warn if they aren't strings or numbers;\n  // invalid types are ignored.\n\n  React.Children.forEach(children, function (child) {\n    if (child == null) {\n      return;\n    }\n\n    content += child;\n\n    {\n      if (!didWarnInvalidOptionChildren && typeof child !== 'string' && typeof child !== 'number') {\n        didWarnInvalidOptionChildren = true;\n\n        error('Cannot infer the option value of complex children. ' + 'Pass a `value` prop or use a plain string as children to <option>.');\n      }\n    }\n  });\n  return content;\n}\n\nvar selectedMarkerAttribute = stringToPrecomputedChunk(' selected=\"\"');\n\nfunction pushStartOption(target, props, responseState, formatContext) {\n  var selectedValue = formatContext.selectedValue;\n  target.push(startChunkForTag('option'));\n  var children = null;\n  var value = null;\n  var selected = null;\n  var innerHTML = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n\n        case 'selected':\n          // ignore\n          selected = propValue;\n\n          {\n            // TODO: Remove support for `selected` in <option>.\n            if (!didWarnSelectedSetOnOption) {\n              error('Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');\n\n              didWarnSelectedSetOnOption = true;\n            }\n          }\n\n          break;\n\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n        // eslint-disable-next-line-no-fallthrough\n\n        case 'value':\n          value = propValue;\n        // We intentionally fallthrough to also set the attribute on the node.\n        // eslint-disable-next-line-no-fallthrough\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  if (selectedValue != null) {\n    var stringValue;\n\n    if (value !== null) {\n      {\n        checkAttributeStringCoercion(value, 'value');\n      }\n\n      stringValue = '' + value;\n    } else {\n      {\n        if (innerHTML !== null) {\n          if (!didWarnInvalidOptionInnerHTML) {\n            didWarnInvalidOptionInnerHTML = true;\n\n            error('Pass a `value` prop if you set dangerouslyInnerHTML so React knows ' + 'which value should be selected.');\n          }\n        }\n      }\n\n      stringValue = flattenOptionChildren(children);\n    }\n\n    if (isArray(selectedValue)) {\n      // multiple\n      for (var i = 0; i < selectedValue.length; i++) {\n        {\n          checkAttributeStringCoercion(selectedValue[i], 'value');\n        }\n\n        var v = '' + selectedValue[i];\n\n        if (v === stringValue) {\n          target.push(selectedMarkerAttribute);\n          break;\n        }\n      }\n    } else {\n      {\n        checkAttributeStringCoercion(selectedValue, 'select.value');\n      }\n\n      if ('' + selectedValue === stringValue) {\n        target.push(selectedMarkerAttribute);\n      }\n    }\n  } else if (selected) {\n    target.push(selectedMarkerAttribute);\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  return children;\n}\n\nfunction pushInput(target, props, responseState) {\n  {\n    checkControlledValueProps('input', props);\n\n    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnDefaultChecked) {\n      error('%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', 'A component', props.type);\n\n      didWarnDefaultChecked = true;\n    }\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultInputValue) {\n      error('%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', 'A component', props.type);\n\n      didWarnDefaultInputValue = true;\n    }\n  }\n\n  target.push(startChunkForTag('input'));\n  var value = null;\n  var defaultValue = null;\n  var checked = null;\n  var defaultChecked = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n        case 'dangerouslySetInnerHTML':\n          throw new Error('input' + \" is a self-closing tag and must neither have `children` nor \" + 'use `dangerouslySetInnerHTML`.');\n        // eslint-disable-next-line-no-fallthrough\n\n        case 'defaultChecked':\n          defaultChecked = propValue;\n          break;\n\n        case 'defaultValue':\n          defaultValue = propValue;\n          break;\n\n        case 'checked':\n          checked = propValue;\n          break;\n\n        case 'value':\n          value = propValue;\n          break;\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  if (checked !== null) {\n    pushAttribute(target, responseState, 'checked', checked);\n  } else if (defaultChecked !== null) {\n    pushAttribute(target, responseState, 'checked', defaultChecked);\n  }\n\n  if (value !== null) {\n    pushAttribute(target, responseState, 'value', value);\n  } else if (defaultValue !== null) {\n    pushAttribute(target, responseState, 'value', defaultValue);\n  }\n\n  target.push(endOfStartTagSelfClosing);\n  return null;\n}\n\nfunction pushStartTextArea(target, props, responseState) {\n  {\n    checkControlledValueProps('textarea', props);\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultTextareaValue) {\n      error('Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components');\n\n      didWarnDefaultTextareaValue = true;\n    }\n  }\n\n  target.push(startChunkForTag('textarea'));\n  var value = null;\n  var defaultValue = null;\n  var children = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n\n        case 'value':\n          value = propValue;\n          break;\n\n        case 'defaultValue':\n          defaultValue = propValue;\n          break;\n\n        case 'dangerouslySetInnerHTML':\n          throw new Error('`dangerouslySetInnerHTML` does not make sense on <textarea>.');\n        // eslint-disable-next-line-no-fallthrough\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  if (value === null && defaultValue !== null) {\n    value = defaultValue;\n  }\n\n  target.push(endOfStartTag); // TODO (yungsters): Remove support for children content in <textarea>.\n\n  if (children != null) {\n    {\n      error('Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');\n    }\n\n    if (value != null) {\n      throw new Error('If you supply `defaultValue` on a <textarea>, do not pass children.');\n    }\n\n    if (isArray(children)) {\n      if (children.length > 1) {\n        throw new Error('<textarea> can only have at most one child.');\n      } // TODO: remove the coercion and the DEV check below because it will\n      // always be overwritten by the coercion several lines below it. #22309\n\n\n      {\n        checkHtmlStringCoercion(children[0]);\n      }\n\n      value = '' + children[0];\n    }\n\n    {\n      checkHtmlStringCoercion(children);\n    }\n\n    value = '' + children;\n  }\n\n  if (typeof value === 'string' && value[0] === '\\n') {\n    // text/html ignores the first character in these tags if it's a newline\n    // Prefer to break application/xml over text/html (for now) by adding\n    // a newline specifically to get eaten by the parser. (Alternately for\n    // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n    // \\r is normalized out by HTMLTextAreaElement#value.)\n    // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n    // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n    // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n    // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n    //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n    target.push(leadingNewline);\n  } // ToString and push directly instead of recurse over children.\n  // We don't really support complex children in the value anyway.\n  // This also currently avoids a trailing comment node which breaks textarea.\n\n\n  if (value !== null) {\n    {\n      checkAttributeStringCoercion(value, 'value');\n    }\n\n    target.push(stringToChunk(encodeHTMLTextNode('' + value)));\n  }\n\n  return null;\n}\n\nfunction pushSelfClosing(target, props, tag, responseState) {\n  target.push(startChunkForTag(tag));\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n        case 'dangerouslySetInnerHTML':\n          throw new Error(tag + \" is a self-closing tag and must neither have `children` nor \" + 'use `dangerouslySetInnerHTML`.');\n        // eslint-disable-next-line-no-fallthrough\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTagSelfClosing);\n  return null;\n}\n\nfunction pushStartMenuItem(target, props, responseState) {\n  target.push(startChunkForTag('menuitem'));\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n        case 'dangerouslySetInnerHTML':\n          throw new Error('menuitems cannot have `children` nor `dangerouslySetInnerHTML`.');\n        // eslint-disable-next-line-no-fallthrough\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  return null;\n}\n\nfunction pushStartTitle(target, props, responseState) {\n  target.push(startChunkForTag('title'));\n  var children = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n\n        case 'dangerouslySetInnerHTML':\n          throw new Error('`dangerouslySetInnerHTML` does not make sense on <title>.');\n        // eslint-disable-next-line-no-fallthrough\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n\n  {\n    var child = Array.isArray(children) && children.length < 2 ? children[0] || null : children;\n\n    if (Array.isArray(children) && children.length > 1) {\n      error('A title element received an array with more than 1 element as children. ' + 'In browsers title Elements can only have Text Nodes as children. If ' + 'the children being rendered output more than a single text node in aggregate the browser ' + 'will display markup and comments as text in the title and hydration will likely fail and ' + 'fall back to client rendering');\n    } else if (child != null && child.$$typeof != null) {\n      error('A title element received a React element for children. ' + 'In the browser title Elements can only have Text Nodes as children. If ' + 'the children being rendered output more than a single text node in aggregate the browser ' + 'will display markup and comments as text in the title and hydration will likely fail and ' + 'fall back to client rendering');\n    } else if (child != null && typeof child !== 'string' && typeof child !== 'number') {\n      error('A title element received a value that was not a string or number for children. ' + 'In the browser title Elements can only have Text Nodes as children. If ' + 'the children being rendered output more than a single text node in aggregate the browser ' + 'will display markup and comments as text in the title and hydration will likely fail and ' + 'fall back to client rendering');\n    }\n  }\n\n  return children;\n}\n\nfunction pushStartGenericElement(target, props, tag, responseState) {\n  target.push(startChunkForTag(tag));\n  var children = null;\n  var innerHTML = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n\n  if (typeof children === 'string') {\n    // Special case children as a string to avoid the unnecessary comment.\n    // TODO: Remove this special case after the general optimization is in place.\n    target.push(stringToChunk(encodeHTMLTextNode(children)));\n    return null;\n  }\n\n  return children;\n}\n\nfunction pushStartCustomElement(target, props, tag, responseState) {\n  target.push(startChunkForTag(tag));\n  var children = null;\n  var innerHTML = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n\n        case 'style':\n          pushStyle(target, responseState, propValue);\n          break;\n\n        case 'suppressContentEditableWarning':\n        case 'suppressHydrationWarning':\n          // Ignored. These are built-in to React on the client.\n          break;\n\n        default:\n          if (isAttributeNameSafe(propKey) && typeof propValue !== 'function' && typeof propValue !== 'symbol') {\n            target.push(attributeSeparator, stringToChunk(propKey), attributeAssign, stringToChunk(escapeTextForBrowser(propValue)), attributeEnd);\n          }\n\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  return children;\n}\n\nvar leadingNewline = stringToPrecomputedChunk('\\n');\n\nfunction pushStartPreformattedElement(target, props, tag, responseState) {\n  target.push(startChunkForTag(tag));\n  var children = null;\n  var innerHTML = null;\n\n  for (var propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n\n      if (propValue == null) {\n        continue;\n      }\n\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag); // text/html ignores the first character in these tags if it's a newline\n  // Prefer to break application/xml over text/html (for now) by adding\n  // a newline specifically to get eaten by the parser. (Alternately for\n  // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n  // \\r is normalized out by HTMLTextAreaElement#value.)\n  // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n  // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n  // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n  // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n  //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n  // TODO: This doesn't deal with the case where the child is an array\n  // or component that returns a string.\n\n  if (innerHTML != null) {\n    if (children != null) {\n      throw new Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.');\n    }\n\n    if (typeof innerHTML !== 'object' || !('__html' in innerHTML)) {\n      throw new Error('`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://reactjs.org/link/dangerously-set-inner-html ' + 'for more information.');\n    }\n\n    var html = innerHTML.__html;\n\n    if (html !== null && html !== undefined) {\n      if (typeof html === 'string' && html.length > 0 && html[0] === '\\n') {\n        target.push(leadingNewline, stringToChunk(html));\n      } else {\n        {\n          checkHtmlStringCoercion(html);\n        }\n\n        target.push(stringToChunk('' + html));\n      }\n    }\n  }\n\n  if (typeof children === 'string' && children[0] === '\\n') {\n    target.push(leadingNewline);\n  }\n\n  return children;\n} // We accept any tag to be rendered but since this gets injected into arbitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\n\nvar validatedTagCache = new Map();\n\nfunction startChunkForTag(tag) {\n  var tagStartChunk = validatedTagCache.get(tag);\n\n  if (tagStartChunk === undefined) {\n    if (!VALID_TAG_REGEX.test(tag)) {\n      throw new Error(\"Invalid tag: \" + tag);\n    }\n\n    tagStartChunk = stringToPrecomputedChunk('<' + tag);\n    validatedTagCache.set(tag, tagStartChunk);\n  }\n\n  return tagStartChunk;\n}\n\nvar DOCTYPE = stringToPrecomputedChunk('<!DOCTYPE html>');\nfunction pushStartInstance(target, type, props, responseState, formatContext) {\n  {\n    validateProperties(type, props);\n    validateProperties$1(type, props);\n    validateProperties$2(type, props, null);\n\n    if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {\n      error('A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.');\n    }\n\n    if (formatContext.insertionMode !== SVG_MODE && formatContext.insertionMode !== MATHML_MODE) {\n      if (type.indexOf('-') === -1 && typeof props.is !== 'string' && type.toLowerCase() !== type) {\n        error('<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type);\n      }\n    }\n  }\n\n  switch (type) {\n    // Special tags\n    case 'select':\n      return pushStartSelect(target, props, responseState);\n\n    case 'option':\n      return pushStartOption(target, props, responseState, formatContext);\n\n    case 'textarea':\n      return pushStartTextArea(target, props, responseState);\n\n    case 'input':\n      return pushInput(target, props, responseState);\n\n    case 'menuitem':\n      return pushStartMenuItem(target, props, responseState);\n\n    case 'title':\n      return pushStartTitle(target, props, responseState);\n    // Newline eating tags\n\n    case 'listing':\n    case 'pre':\n      {\n        return pushStartPreformattedElement(target, props, type, responseState);\n      }\n    // Omitted close tags\n\n    case 'area':\n    case 'base':\n    case 'br':\n    case 'col':\n    case 'embed':\n    case 'hr':\n    case 'img':\n    case 'keygen':\n    case 'link':\n    case 'meta':\n    case 'param':\n    case 'source':\n    case 'track':\n    case 'wbr':\n      {\n        return pushSelfClosing(target, props, type, responseState);\n      }\n    // These are reserved SVG and MathML elements, that are never custom elements.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      {\n        return pushStartGenericElement(target, props, type, responseState);\n      }\n\n    case 'html':\n      {\n        if (formatContext.insertionMode === ROOT_HTML_MODE) {\n          // If we're rendering the html tag and we're at the root (i.e. not in foreignObject)\n          // then we also emit the DOCTYPE as part of the root content as a convenience for\n          // rendering the whole document.\n          target.push(DOCTYPE);\n        }\n\n        return pushStartGenericElement(target, props, type, responseState);\n      }\n\n    default:\n      {\n        if (type.indexOf('-') === -1 && typeof props.is !== 'string') {\n          // Generic element\n          return pushStartGenericElement(target, props, type, responseState);\n        } else {\n          // Custom element\n          return pushStartCustomElement(target, props, type, responseState);\n        }\n      }\n  }\n}\nvar endTag1 = stringToPrecomputedChunk('</');\nvar endTag2 = stringToPrecomputedChunk('>');\nfunction pushEndInstance(target, type, props) {\n  switch (type) {\n    // Omitted close tags\n    // TODO: Instead of repeating this switch we could try to pass a flag from above.\n    // That would require returning a tuple. Which might be ok if it gets inlined.\n    case 'area':\n    case 'base':\n    case 'br':\n    case 'col':\n    case 'embed':\n    case 'hr':\n    case 'img':\n    case 'input':\n    case 'keygen':\n    case 'link':\n    case 'meta':\n    case 'param':\n    case 'source':\n    case 'track':\n    case 'wbr':\n      {\n        // No close tag needed.\n        break;\n      }\n\n    default:\n      {\n        target.push(endTag1, stringToChunk(type), endTag2);\n      }\n  }\n}\nfunction writeCompletedRoot(destination, responseState) {\n  var bootstrapChunks = responseState.bootstrapChunks;\n  var i = 0;\n\n  for (; i < bootstrapChunks.length - 1; i++) {\n    writeChunk(destination, bootstrapChunks[i]);\n  }\n\n  if (i < bootstrapChunks.length) {\n    return writeChunkAndReturn(destination, bootstrapChunks[i]);\n  }\n\n  return true;\n} // Structural Nodes\n// A placeholder is a node inside a hidden partial tree that can be filled in later, but before\n// display. It's never visible to users. We use the template tag because it can be used in every\n// type of parent. <script> tags also work in every other tag except <colgroup>.\n\nvar placeholder1 = stringToPrecomputedChunk('<template id=\"');\nvar placeholder2 = stringToPrecomputedChunk('\"></template>');\nfunction writePlaceholder(destination, responseState, id) {\n  writeChunk(destination, placeholder1);\n  writeChunk(destination, responseState.placeholderPrefix);\n  var formattedID = stringToChunk(id.toString(16));\n  writeChunk(destination, formattedID);\n  return writeChunkAndReturn(destination, placeholder2);\n} // Suspense boundaries are encoded as comments.\n\nvar startCompletedSuspenseBoundary = stringToPrecomputedChunk('<!--$-->');\nvar startPendingSuspenseBoundary1 = stringToPrecomputedChunk('<!--$?--><template id=\"');\nvar startPendingSuspenseBoundary2 = stringToPrecomputedChunk('\"></template>');\nvar startClientRenderedSuspenseBoundary = stringToPrecomputedChunk('<!--$!-->');\nvar endSuspenseBoundary = stringToPrecomputedChunk('<!--/$-->');\nvar clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk('<template');\nvar clientRenderedSuspenseBoundaryErrorAttrInterstitial = stringToPrecomputedChunk('\"');\nvar clientRenderedSuspenseBoundaryError1A = stringToPrecomputedChunk(' data-dgst=\"');\nvar clientRenderedSuspenseBoundaryError1B = stringToPrecomputedChunk(' data-msg=\"');\nvar clientRenderedSuspenseBoundaryError1C = stringToPrecomputedChunk(' data-stck=\"');\nvar clientRenderedSuspenseBoundaryError2 = stringToPrecomputedChunk('></template>');\nfunction writeStartCompletedSuspenseBoundary(destination, responseState) {\n  return writeChunkAndReturn(destination, startCompletedSuspenseBoundary);\n}\nfunction writeStartPendingSuspenseBoundary(destination, responseState, id) {\n  writeChunk(destination, startPendingSuspenseBoundary1);\n\n  if (id === null) {\n    throw new Error('An ID must have been assigned before we can complete the boundary.');\n  }\n\n  writeChunk(destination, id);\n  return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);\n}\nfunction writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMesssage, errorComponentStack) {\n  var result;\n  result = writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);\n  writeChunk(destination, clientRenderedSuspenseBoundaryError1);\n\n  if (errorDigest) {\n    writeChunk(destination, clientRenderedSuspenseBoundaryError1A);\n    writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest)));\n    writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);\n  }\n\n  {\n    if (errorMesssage) {\n      writeChunk(destination, clientRenderedSuspenseBoundaryError1B);\n      writeChunk(destination, stringToChunk(escapeTextForBrowser(errorMesssage)));\n      writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);\n    }\n\n    if (errorComponentStack) {\n      writeChunk(destination, clientRenderedSuspenseBoundaryError1C);\n      writeChunk(destination, stringToChunk(escapeTextForBrowser(errorComponentStack)));\n      writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);\n    }\n  }\n\n  result = writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);\n  return result;\n}\nfunction writeEndCompletedSuspenseBoundary(destination, responseState) {\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\nfunction writeEndPendingSuspenseBoundary(destination, responseState) {\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\nfunction writeEndClientRenderedSuspenseBoundary(destination, responseState) {\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\nvar startSegmentHTML = stringToPrecomputedChunk('<div hidden id=\"');\nvar startSegmentHTML2 = stringToPrecomputedChunk('\">');\nvar endSegmentHTML = stringToPrecomputedChunk('</div>');\nvar startSegmentSVG = stringToPrecomputedChunk('<svg aria-hidden=\"true\" style=\"display:none\" id=\"');\nvar startSegmentSVG2 = stringToPrecomputedChunk('\">');\nvar endSegmentSVG = stringToPrecomputedChunk('</svg>');\nvar startSegmentMathML = stringToPrecomputedChunk('<math aria-hidden=\"true\" style=\"display:none\" id=\"');\nvar startSegmentMathML2 = stringToPrecomputedChunk('\">');\nvar endSegmentMathML = stringToPrecomputedChunk('</math>');\nvar startSegmentTable = stringToPrecomputedChunk('<table hidden id=\"');\nvar startSegmentTable2 = stringToPrecomputedChunk('\">');\nvar endSegmentTable = stringToPrecomputedChunk('</table>');\nvar startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id=\"');\nvar startSegmentTableBody2 = stringToPrecomputedChunk('\">');\nvar endSegmentTableBody = stringToPrecomputedChunk('</tbody></table>');\nvar startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id=\"');\nvar startSegmentTableRow2 = stringToPrecomputedChunk('\">');\nvar endSegmentTableRow = stringToPrecomputedChunk('</tr></table>');\nvar startSegmentColGroup = stringToPrecomputedChunk('<table hidden><colgroup id=\"');\nvar startSegmentColGroup2 = stringToPrecomputedChunk('\">');\nvar endSegmentColGroup = stringToPrecomputedChunk('</colgroup></table>');\nfunction writeStartSegment(destination, responseState, formatContext, id) {\n  switch (formatContext.insertionMode) {\n    case ROOT_HTML_MODE:\n    case HTML_MODE:\n      {\n        writeChunk(destination, startSegmentHTML);\n        writeChunk(destination, responseState.segmentPrefix);\n        writeChunk(destination, stringToChunk(id.toString(16)));\n        return writeChunkAndReturn(destination, startSegmentHTML2);\n      }\n\n    case SVG_MODE:\n      {\n        writeChunk(destination, startSegmentSVG);\n        writeChunk(destination, responseState.segmentPrefix);\n        writeChunk(destination, stringToChunk(id.toString(16)));\n        return writeChunkAndReturn(destination, startSegmentSVG2);\n      }\n\n    case MATHML_MODE:\n      {\n        writeChunk(destination, startSegmentMathML);\n        writeChunk(destination, responseState.segmentPrefix);\n        writeChunk(destination, stringToChunk(id.toString(16)));\n        return writeChunkAndReturn(destination, startSegmentMathML2);\n      }\n\n    case HTML_TABLE_MODE:\n      {\n        writeChunk(destination, startSegmentTable);\n        writeChunk(destination, responseState.segmentPrefix);\n        writeChunk(destination, stringToChunk(id.toString(16)));\n        return writeChunkAndReturn(destination, startSegmentTable2);\n      }\n    // TODO: For the rest of these, there will be extra wrapper nodes that never\n    // get deleted from the document. We need to delete the table too as part\n    // of the injected scripts. They are invisible though so it's not too terrible\n    // and it's kind of an edge case to suspend in a table. Totally supported though.\n\n    case HTML_TABLE_BODY_MODE:\n      {\n        writeChunk(destination, startSegmentTableBody);\n        writeChunk(destination, responseState.segmentPrefix);\n        writeChunk(destination, stringToChunk(id.toString(16)));\n        return writeChunkAndReturn(destination, startSegmentTableBody2);\n      }\n\n    case HTML_TABLE_ROW_MODE:\n      {\n        writeChunk(destination, startSegmentTableRow);\n        writeChunk(destination, responseState.segmentPrefix);\n        writeChunk(destination, stringToChunk(id.toString(16)));\n        return writeChunkAndReturn(destination, startSegmentTableRow2);\n      }\n\n    case HTML_COLGROUP_MODE:\n      {\n        writeChunk(destination, startSegmentColGroup);\n        writeChunk(destination, responseState.segmentPrefix);\n        writeChunk(destination, stringToChunk(id.toString(16)));\n        return writeChunkAndReturn(destination, startSegmentColGroup2);\n      }\n\n    default:\n      {\n        throw new Error('Unknown insertion mode. This is a bug in React.');\n      }\n  }\n}\nfunction writeEndSegment(destination, formatContext) {\n  switch (formatContext.insertionMode) {\n    case ROOT_HTML_MODE:\n    case HTML_MODE:\n      {\n        return writeChunkAndReturn(destination, endSegmentHTML);\n      }\n\n    case SVG_MODE:\n      {\n        return writeChunkAndReturn(destination, endSegmentSVG);\n      }\n\n    case MATHML_MODE:\n      {\n        return writeChunkAndReturn(destination, endSegmentMathML);\n      }\n\n    case HTML_TABLE_MODE:\n      {\n        return writeChunkAndReturn(destination, endSegmentTable);\n      }\n\n    case HTML_TABLE_BODY_MODE:\n      {\n        return writeChunkAndReturn(destination, endSegmentTableBody);\n      }\n\n    case HTML_TABLE_ROW_MODE:\n      {\n        return writeChunkAndReturn(destination, endSegmentTableRow);\n      }\n\n    case HTML_COLGROUP_MODE:\n      {\n        return writeChunkAndReturn(destination, endSegmentColGroup);\n      }\n\n    default:\n      {\n        throw new Error('Unknown insertion mode. This is a bug in React.');\n      }\n  }\n} // Instruction Set\n// The following code is the source scripts that we then minify and inline below,\n// with renamed function names that we hope don't collide:\n// const COMMENT_NODE = 8;\n// const SUSPENSE_START_DATA = '$';\n// const SUSPENSE_END_DATA = '/$';\n// const SUSPENSE_PENDING_START_DATA = '$?';\n// const SUSPENSE_FALLBACK_START_DATA = '$!';\n//\n// function clientRenderBoundary(suspenseBoundaryID, errorDigest, errorMsg, errorComponentStack) {\n//   // Find the fallback's first element.\n//   const suspenseIdNode = document.getElementById(suspenseBoundaryID);\n//   if (!suspenseIdNode) {\n//     // The user must have already navigated away from this tree.\n//     // E.g. because the parent was hydrated.\n//     return;\n//   }\n//   // Find the boundary around the fallback. This is always the previous node.\n//   const suspenseNode = suspenseIdNode.previousSibling;\n//   // Tag it to be client rendered.\n//   suspenseNode.data = SUSPENSE_FALLBACK_START_DATA;\n//   // assign error metadata to first sibling\n//   let dataset = suspenseIdNode.dataset;\n//   if (errorDigest) dataset.dgst = errorDigest;\n//   if (errorMsg) dataset.msg = errorMsg;\n//   if (errorComponentStack) dataset.stck = errorComponentStack;\n//   // Tell React to retry it if the parent already hydrated.\n//   if (suspenseNode._reactRetry) {\n//     suspenseNode._reactRetry();\n//   }\n// }\n//\n// function completeBoundary(suspenseBoundaryID, contentID) {\n//   // Find the fallback's first element.\n//   const suspenseIdNode = document.getElementById(suspenseBoundaryID);\n//   const contentNode = document.getElementById(contentID);\n//   // We'll detach the content node so that regardless of what happens next we don't leave in the tree.\n//   // This might also help by not causing recalcing each time we move a child from here to the target.\n//   contentNode.parentNode.removeChild(contentNode);\n//   if (!suspenseIdNode) {\n//     // The user must have already navigated away from this tree.\n//     // E.g. because the parent was hydrated. That's fine there's nothing to do\n//     // but we have to make sure that we already deleted the container node.\n//     return;\n//   }\n//   // Find the boundary around the fallback. This is always the previous node.\n//   const suspenseNode = suspenseIdNode.previousSibling;\n//\n//   // Clear all the existing children. This is complicated because\n//   // there can be embedded Suspense boundaries in the fallback.\n//   // This is similar to clearSuspenseBoundary in ReactDOMHostConfig.\n//   // TODO: We could avoid this if we never emitted suspense boundaries in fallback trees.\n//   // They never hydrate anyway. However, currently we support incrementally loading the fallback.\n//   const parentInstance = suspenseNode.parentNode;\n//   let node = suspenseNode.nextSibling;\n//   let depth = 0;\n//   do {\n//     if (node && node.nodeType === COMMENT_NODE) {\n//       const data = node.data;\n//       if (data === SUSPENSE_END_DATA) {\n//         if (depth === 0) {\n//           break;\n//         } else {\n//           depth--;\n//         }\n//       } else if (\n//         data === SUSPENSE_START_DATA ||\n//         data === SUSPENSE_PENDING_START_DATA ||\n//         data === SUSPENSE_FALLBACK_START_DATA\n//       ) {\n//         depth++;\n//       }\n//     }\n//\n//     const nextNode = node.nextSibling;\n//     parentInstance.removeChild(node);\n//     node = nextNode;\n//   } while (node);\n//\n//   const endOfBoundary = node;\n//\n//   // Insert all the children from the contentNode between the start and end of suspense boundary.\n//   while (contentNode.firstChild) {\n//     parentInstance.insertBefore(contentNode.firstChild, endOfBoundary);\n//   }\n//   suspenseNode.data = SUSPENSE_START_DATA;\n//   if (suspenseNode._reactRetry) {\n//     suspenseNode._reactRetry();\n//   }\n// }\n//\n// function completeSegment(containerID, placeholderID) {\n//   const segmentContainer = document.getElementById(containerID);\n//   const placeholderNode = document.getElementById(placeholderID);\n//   // We always expect both nodes to exist here because, while we might\n//   // have navigated away from the main tree, we still expect the detached\n//   // tree to exist.\n//   segmentContainer.parentNode.removeChild(segmentContainer);\n//   while (segmentContainer.firstChild) {\n//     placeholderNode.parentNode.insertBefore(\n//       segmentContainer.firstChild,\n//       placeholderNode,\n//     );\n//   }\n//   placeholderNode.parentNode.removeChild(placeholderNode);\n// }\n\nvar completeSegmentFunction = 'function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}';\nvar completeBoundaryFunction = 'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if(\"/$\"===d)if(0===e)break;else e--;else\"$\"!==d&&\"$?\"!==d&&\"$!\"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data=\"$\";a._reactRetry&&a._reactRetry()}}';\nvar clientRenderFunction = 'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data=\"$!\",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}';\nvar completeSegmentScript1Full = stringToPrecomputedChunk(completeSegmentFunction + ';$RS(\"');\nvar completeSegmentScript1Partial = stringToPrecomputedChunk('$RS(\"');\nvar completeSegmentScript2 = stringToPrecomputedChunk('\",\"');\nvar completeSegmentScript3 = stringToPrecomputedChunk('\")</script>');\nfunction writeCompletedSegmentInstruction(destination, responseState, contentSegmentID) {\n  writeChunk(destination, responseState.startInlineScript);\n\n  if (!responseState.sentCompleteSegmentFunction) {\n    // The first time we write this, we'll need to include the full implementation.\n    responseState.sentCompleteSegmentFunction = true;\n    writeChunk(destination, completeSegmentScript1Full);\n  } else {\n    // Future calls can just reuse the same function.\n    writeChunk(destination, completeSegmentScript1Partial);\n  }\n\n  writeChunk(destination, responseState.segmentPrefix);\n  var formattedID = stringToChunk(contentSegmentID.toString(16));\n  writeChunk(destination, formattedID);\n  writeChunk(destination, completeSegmentScript2);\n  writeChunk(destination, responseState.placeholderPrefix);\n  writeChunk(destination, formattedID);\n  return writeChunkAndReturn(destination, completeSegmentScript3);\n}\nvar completeBoundaryScript1Full = stringToPrecomputedChunk(completeBoundaryFunction + ';$RC(\"');\nvar completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(\"');\nvar completeBoundaryScript2 = stringToPrecomputedChunk('\",\"');\nvar completeBoundaryScript3 = stringToPrecomputedChunk('\")</script>');\nfunction writeCompletedBoundaryInstruction(destination, responseState, boundaryID, contentSegmentID) {\n  writeChunk(destination, responseState.startInlineScript);\n\n  if (!responseState.sentCompleteBoundaryFunction) {\n    // The first time we write this, we'll need to include the full implementation.\n    responseState.sentCompleteBoundaryFunction = true;\n    writeChunk(destination, completeBoundaryScript1Full);\n  } else {\n    // Future calls can just reuse the same function.\n    writeChunk(destination, completeBoundaryScript1Partial);\n  }\n\n  if (boundaryID === null) {\n    throw new Error('An ID must have been assigned before we can complete the boundary.');\n  }\n\n  var formattedContentID = stringToChunk(contentSegmentID.toString(16));\n  writeChunk(destination, boundaryID);\n  writeChunk(destination, completeBoundaryScript2);\n  writeChunk(destination, responseState.segmentPrefix);\n  writeChunk(destination, formattedContentID);\n  return writeChunkAndReturn(destination, completeBoundaryScript3);\n}\nvar clientRenderScript1Full = stringToPrecomputedChunk(clientRenderFunction + ';$RX(\"');\nvar clientRenderScript1Partial = stringToPrecomputedChunk('$RX(\"');\nvar clientRenderScript1A = stringToPrecomputedChunk('\"');\nvar clientRenderScript2 = stringToPrecomputedChunk(')</script>');\nvar clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(',');\nfunction writeClientRenderBoundaryInstruction(destination, responseState, boundaryID, errorDigest, errorMessage, errorComponentStack) {\n  writeChunk(destination, responseState.startInlineScript);\n\n  if (!responseState.sentClientRenderFunction) {\n    // The first time we write this, we'll need to include the full implementation.\n    responseState.sentClientRenderFunction = true;\n    writeChunk(destination, clientRenderScript1Full);\n  } else {\n    // Future calls can just reuse the same function.\n    writeChunk(destination, clientRenderScript1Partial);\n  }\n\n  if (boundaryID === null) {\n    throw new Error('An ID must have been assigned before we can complete the boundary.');\n  }\n\n  writeChunk(destination, boundaryID);\n  writeChunk(destination, clientRenderScript1A);\n\n  if (errorDigest || errorMessage || errorComponentStack) {\n    writeChunk(destination, clientRenderErrorScriptArgInterstitial);\n    writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorDigest || '')));\n  }\n\n  if (errorMessage || errorComponentStack) {\n    writeChunk(destination, clientRenderErrorScriptArgInterstitial);\n    writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorMessage || '')));\n  }\n\n  if (errorComponentStack) {\n    writeChunk(destination, clientRenderErrorScriptArgInterstitial);\n    writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorComponentStack)));\n  }\n\n  return writeChunkAndReturn(destination, clientRenderScript2);\n}\nvar regexForJSStringsInScripts = /[<\\u2028\\u2029]/g;\n\nfunction escapeJSStringsForInstructionScripts(input) {\n  var escaped = JSON.stringify(input);\n  return escaped.replace(regexForJSStringsInScripts, function (match) {\n    switch (match) {\n      // santizing breaking out of strings and script tags\n      case '<':\n        return \"\\\\u003c\";\n\n      case \"\\u2028\":\n        return \"\\\\u2028\";\n\n      case \"\\u2029\":\n        return \"\\\\u2029\";\n\n      default:\n        {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          throw new Error('escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React');\n        }\n    }\n  });\n}\n\nvar assign = Object.assign;\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_SCOPE_TYPE = Symbol.for('react.scope');\nvar REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');\nvar REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\nvar REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for('react.default_value');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\n\nfunction describeClassComponentFrame(ctor, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(ctor, true);\n  }\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar warnedAboutMissingGetChildContext;\n\n{\n  warnedAboutMissingGetChildContext = {};\n}\n\nvar emptyContextObject = {};\n\n{\n  Object.freeze(emptyContextObject);\n}\n\nfunction getMaskedContext(type, unmaskedContext) {\n  {\n    var contextTypes = type.contextTypes;\n\n    if (!contextTypes) {\n      return emptyContextObject;\n    }\n\n    var context = {};\n\n    for (var key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    {\n      var name = getComponentNameFromType(type) || 'Unknown';\n      checkPropTypes(contextTypes, context, 'context', name);\n    }\n\n    return context;\n  }\n}\nfunction processChildContext(instance, type, parentContext, childContextTypes) {\n  {\n    // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n    if (typeof instance.getChildContext !== 'function') {\n      {\n        var componentName = getComponentNameFromType(type) || 'Unknown';\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n\n          error('%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);\n        }\n      }\n\n      return parentContext;\n    }\n\n    var childContext = instance.getChildContext();\n\n    for (var contextKey in childContext) {\n      if (!(contextKey in childContextTypes)) {\n        throw new Error((getComponentNameFromType(type) || 'Unknown') + \".getChildContext(): key \\\"\" + contextKey + \"\\\" is not defined in childContextTypes.\");\n      }\n    }\n\n    {\n      var name = getComponentNameFromType(type) || 'Unknown';\n      checkPropTypes(childContextTypes, childContext, 'child context', name);\n    }\n\n    return assign({}, parentContext, childContext);\n  }\n}\n\nvar rendererSigil;\n\n{\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n} // Used to store the parent path of all context overrides in a shared linked list.\n// Forming a reverse tree.\n\n\nvar rootContextSnapshot = null; // We assume that this runtime owns the \"current\" field on all ReactContext instances.\n// This global (actually thread local) state represents what state all those \"current\",\n// fields are currently in.\n\nvar currentActiveSnapshot = null;\n\nfunction popNode(prev) {\n  {\n    prev.context._currentValue = prev.parentValue;\n  }\n}\n\nfunction pushNode(next) {\n  {\n    next.context._currentValue = next.value;\n  }\n}\n\nfunction popToNearestCommonAncestor(prev, next) {\n  if (prev === next) ; else {\n    popNode(prev);\n    var parentPrev = prev.parent;\n    var parentNext = next.parent;\n\n    if (parentPrev === null) {\n      if (parentNext !== null) {\n        throw new Error('The stacks must reach the root at the same time. This is a bug in React.');\n      }\n    } else {\n      if (parentNext === null) {\n        throw new Error('The stacks must reach the root at the same time. This is a bug in React.');\n      }\n\n      popToNearestCommonAncestor(parentPrev, parentNext);\n    } // On the way back, we push the new ones that weren't common.\n\n\n    pushNode(next);\n  }\n}\n\nfunction popAllPrevious(prev) {\n  popNode(prev);\n  var parentPrev = prev.parent;\n\n  if (parentPrev !== null) {\n    popAllPrevious(parentPrev);\n  }\n}\n\nfunction pushAllNext(next) {\n  var parentNext = next.parent;\n\n  if (parentNext !== null) {\n    pushAllNext(parentNext);\n  }\n\n  pushNode(next);\n}\n\nfunction popPreviousToCommonLevel(prev, next) {\n  popNode(prev);\n  var parentPrev = prev.parent;\n\n  if (parentPrev === null) {\n    throw new Error('The depth must equal at least at zero before reaching the root. This is a bug in React.');\n  }\n\n  if (parentPrev.depth === next.depth) {\n    // We found the same level. Now we just need to find a shared ancestor.\n    popToNearestCommonAncestor(parentPrev, next);\n  } else {\n    // We must still be deeper.\n    popPreviousToCommonLevel(parentPrev, next);\n  }\n}\n\nfunction popNextToCommonLevel(prev, next) {\n  var parentNext = next.parent;\n\n  if (parentNext === null) {\n    throw new Error('The depth must equal at least at zero before reaching the root. This is a bug in React.');\n  }\n\n  if (prev.depth === parentNext.depth) {\n    // We found the same level. Now we just need to find a shared ancestor.\n    popToNearestCommonAncestor(prev, parentNext);\n  } else {\n    // We must still be deeper.\n    popNextToCommonLevel(prev, parentNext);\n  }\n\n  pushNode(next);\n} // Perform context switching to the new snapshot.\n// To make it cheap to read many contexts, while not suspending, we make the switch eagerly by\n// updating all the context's current values. That way reads, always just read the current value.\n// At the cost of updating contexts even if they're never read by this subtree.\n\n\nfunction switchContext(newSnapshot) {\n  // The basic algorithm we need to do is to pop back any contexts that are no longer on the stack.\n  // We also need to update any new contexts that are now on the stack with the deepest value.\n  // The easiest way to update new contexts is to just reapply them in reverse order from the\n  // perspective of the backpointers. To avoid allocating a lot when switching, we use the stack\n  // for that. Therefore this algorithm is recursive.\n  // 1) First we pop which ever snapshot tree was deepest. Popping old contexts as we go.\n  // 2) Then we find the nearest common ancestor from there. Popping old contexts as we go.\n  // 3) Then we reapply new contexts on the way back up the stack.\n  var prev = currentActiveSnapshot;\n  var next = newSnapshot;\n\n  if (prev !== next) {\n    if (prev === null) {\n      // $FlowFixMe: This has to be non-null since it's not equal to prev.\n      pushAllNext(next);\n    } else if (next === null) {\n      popAllPrevious(prev);\n    } else if (prev.depth === next.depth) {\n      popToNearestCommonAncestor(prev, next);\n    } else if (prev.depth > next.depth) {\n      popPreviousToCommonLevel(prev, next);\n    } else {\n      popNextToCommonLevel(prev, next);\n    }\n\n    currentActiveSnapshot = next;\n  }\n}\nfunction pushProvider(context, nextValue) {\n  var prevValue;\n\n  {\n    prevValue = context._currentValue;\n    context._currentValue = nextValue;\n\n    {\n      if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {\n        error('Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.');\n      }\n\n      context._currentRenderer = rendererSigil;\n    }\n  }\n\n  var prevNode = currentActiveSnapshot;\n  var newNode = {\n    parent: prevNode,\n    depth: prevNode === null ? 0 : prevNode.depth + 1,\n    context: context,\n    parentValue: prevValue,\n    value: nextValue\n  };\n  currentActiveSnapshot = newNode;\n  return newNode;\n}\nfunction popProvider(context) {\n  var prevSnapshot = currentActiveSnapshot;\n\n  if (prevSnapshot === null) {\n    throw new Error('Tried to pop a Context at the root of the app. This is a bug in React.');\n  }\n\n  {\n    if (prevSnapshot.context !== context) {\n      error('The parent context is not the expected context. This is probably a bug in React.');\n    }\n  }\n\n  {\n    var value = prevSnapshot.parentValue;\n\n    if (value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n      prevSnapshot.context._currentValue = prevSnapshot.context._defaultValue;\n    } else {\n      prevSnapshot.context._currentValue = value;\n    }\n\n    {\n      if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {\n        error('Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.');\n      }\n\n      context._currentRenderer = rendererSigil;\n    }\n  }\n\n  return currentActiveSnapshot = prevSnapshot.parent;\n}\nfunction getActiveContext() {\n  return currentActiveSnapshot;\n}\nfunction readContext(context) {\n  var value =  context._currentValue ;\n  return value;\n}\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\nfunction get(key) {\n  return key._reactInternals;\n}\nfunction set(key, value) {\n  key._reactInternals = value;\n}\n\nvar didWarnAboutNoopUpdateForComponent = {};\nvar didWarnAboutDeprecatedWillMount = {};\nvar didWarnAboutUninitializedState;\nvar didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nvar didWarnAboutLegacyLifecyclesAndDerivedState;\nvar didWarnAboutUndefinedDerivedState;\nvar warnOnUndefinedDerivedState;\nvar warnOnInvalidCallback;\nvar didWarnAboutDirectlyAssigningPropsToState;\nvar didWarnAboutContextTypeAndContextTypes;\nvar didWarnAboutInvalidateContextType;\n\n{\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n  var didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function (callback, callerName) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n\n    var key = callerName + '_' + callback;\n\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n\n      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);\n    }\n  };\n\n  warnOnUndefinedDerivedState = function (type, partialState) {\n    if (partialState === undefined) {\n      var componentName = getComponentNameFromType(type) || 'Component';\n\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n\n        error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);\n      }\n    }\n  };\n}\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && getComponentNameFromType(_constructor) || 'ReactClass';\n    var warningKey = componentName + '.' + callerName;\n\n    if (didWarnAboutNoopUpdateForComponent[warningKey]) {\n      return;\n    }\n\n    error('%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op.\\n\\nPlease check the code for the %s component.', callerName, callerName, componentName);\n\n    didWarnAboutNoopUpdateForComponent[warningKey] = true;\n  }\n}\n\nvar classComponentUpdater = {\n  isMounted: function (inst) {\n    return false;\n  },\n  enqueueSetState: function (inst, payload, callback) {\n    var internals = get(inst);\n\n    if (internals.queue === null) {\n      warnNoop(inst, 'setState');\n    } else {\n      internals.queue.push(payload);\n\n      {\n        if (callback !== undefined && callback !== null) {\n          warnOnInvalidCallback(callback, 'setState');\n        }\n      }\n    }\n  },\n  enqueueReplaceState: function (inst, payload, callback) {\n    var internals = get(inst);\n    internals.replace = true;\n    internals.queue = [payload];\n\n    {\n      if (callback !== undefined && callback !== null) {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n    }\n  },\n  enqueueForceUpdate: function (inst, callback) {\n    var internals = get(inst);\n\n    if (internals.queue === null) {\n      warnNoop(inst, 'forceUpdate');\n    } else {\n      {\n        if (callback !== undefined && callback !== null) {\n          warnOnInvalidCallback(callback, 'setState');\n        }\n      }\n    }\n  }\n};\n\nfunction applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, prevState, nextProps) {\n  var partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  {\n    warnOnUndefinedDerivedState(ctor, partialState);\n  } // Merge the partial state and the previous state.\n\n\n  var newState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);\n  return newState;\n}\n\nfunction constructClassInstance(ctor, props, maskedLegacyContext) {\n  var context = emptyContextObject;\n  var contextType = ctor.contextType;\n\n  {\n    if ('contextType' in ctor) {\n      var isValid = // Allow null for conditional declaration\n      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n        var addendum = '';\n\n        if (contextType === undefined) {\n          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';\n        }\n\n        error('%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentNameFromType(ctor) || 'Component', addendum);\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext(contextType);\n  } else {\n    context = maskedLegacyContext;\n  }\n\n  var instance = new ctor(props, context);\n\n  {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && (instance.state === null || instance.state === undefined)) {\n      var componentName = getComponentNameFromType(ctor) || 'Component';\n\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n\n        error('`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);\n      }\n    } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n\n\n    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {\n      var foundWillMountName = null;\n      var foundWillReceivePropsName = null;\n      var foundWillUpdateName = null;\n\n      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n\n      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n\n      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n\n      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n        var _componentName = getComponentNameFromType(ctor) || 'Component';\n\n        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\n\n          error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' + 'The above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://reactjs.org/link/unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? \"\\n  \" + foundWillMountName : '', foundWillReceivePropsName !== null ? \"\\n  \" + foundWillReceivePropsName : '', foundWillUpdateName !== null ? \"\\n  \" + foundWillUpdateName : '');\n        }\n      }\n    }\n  }\n\n  return instance;\n}\n\nfunction checkClassInstance(instance, ctor, newProps) {\n  {\n    var name = getComponentNameFromType(ctor) || 'Component';\n    var renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        error('%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);\n      } else {\n        error('%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);\n      }\n    }\n\n    if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {\n      error('getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);\n    }\n\n    if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);\n    }\n\n    if (instance.propTypes) {\n      error('propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);\n    }\n\n    if (instance.contextType) {\n      error('contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name);\n    }\n\n    {\n      if (instance.contextTypes) {\n        error('contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);\n      }\n\n      if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n\n        error('%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === 'function') {\n      error('%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);\n    }\n\n    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {\n      error('%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentNameFromType(ctor) || 'A pure component');\n    }\n\n    if (typeof instance.componentDidUnmount === 'function') {\n      error('%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);\n    }\n\n    if (typeof instance.componentDidReceiveProps === 'function') {\n      error('%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name);\n    }\n\n    if (typeof instance.componentWillRecieveProps === 'function') {\n      error('%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);\n    }\n\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\n      error('%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name);\n    }\n\n    var hasMutatedProps = instance.props !== newProps;\n\n    if (instance.props !== undefined && hasMutatedProps) {\n      error('%s(...): When calling super() in `%s`, make sure to pass ' + \"up the same props that your component's constructor was passed.\", name, name);\n    }\n\n    if (instance.defaultProps) {\n      error('Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n\n      error('%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentNameFromType(ctor));\n    }\n\n    if (typeof instance.getDerivedStateFromProps === 'function') {\n      error('%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);\n    }\n\n    if (typeof instance.getDerivedStateFromError === 'function') {\n      error('%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);\n    }\n\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\n      error('%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name);\n    }\n\n    var _state = instance.state;\n\n    if (_state && (typeof _state !== 'object' || isArray(_state))) {\n      error('%s.state: must be set to an object or null', name);\n    }\n\n    if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') {\n      error('%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name);\n    }\n  }\n}\n\nfunction callComponentWillMount(type, instance) {\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    {\n      if ( instance.componentWillMount.__suppressDeprecationWarning !== true) {\n        var componentName = getComponentNameFromType(type) || 'Unknown';\n\n        if (!didWarnAboutDeprecatedWillMount[componentName]) {\n          warn( // keep this warning in sync with ReactStrictModeWarning.js\n          'componentWillMount has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move code from componentWillMount to componentDidMount (preferred in most cases) ' + 'or the constructor.\\n' + '\\nPlease update the following components: %s', componentName);\n\n          didWarnAboutDeprecatedWillMount[componentName] = true;\n        }\n      }\n    }\n\n    instance.componentWillMount();\n  }\n\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    {\n      error('%s.componentWillMount(): Assigning directly to this.state is ' + \"deprecated (except inside a component's \" + 'constructor). Use setState instead.', getComponentNameFromType(type) || 'Component');\n    }\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction processUpdateQueue(internalInstance, inst, props, maskedLegacyContext) {\n  if (internalInstance.queue !== null && internalInstance.queue.length > 0) {\n    var oldQueue = internalInstance.queue;\n    var oldReplace = internalInstance.replace;\n    internalInstance.queue = null;\n    internalInstance.replace = false;\n\n    if (oldReplace && oldQueue.length === 1) {\n      inst.state = oldQueue[0];\n    } else {\n      var nextState = oldReplace ? oldQueue[0] : inst.state;\n      var dontMutate = true;\n\n      for (var i = oldReplace ? 1 : 0; i < oldQueue.length; i++) {\n        var partial = oldQueue[i];\n        var partialState = typeof partial === 'function' ? partial.call(inst, nextState, props, maskedLegacyContext) : partial;\n\n        if (partialState != null) {\n          if (dontMutate) {\n            dontMutate = false;\n            nextState = assign({}, nextState, partialState);\n          } else {\n            assign(nextState, partialState);\n          }\n        }\n      }\n\n      inst.state = nextState;\n    }\n  } else {\n    internalInstance.queue = null;\n  }\n} // Invokes the mount life-cycles on a previously never rendered instance.\n\n\nfunction mountClassInstance(instance, ctor, newProps, maskedLegacyContext) {\n  {\n    checkClassInstance(instance, ctor, newProps);\n  }\n\n  var initialState = instance.state !== undefined ? instance.state : null;\n  instance.updater = classComponentUpdater;\n  instance.props = newProps;\n  instance.state = initialState; // We don't bother initializing the refs object on the server, since we're not going to resolve them anyway.\n  // The internal instance will be used to manage updates that happen during this mount.\n\n  var internalInstance = {\n    queue: [],\n    replace: false\n  };\n  set(instance, internalInstance);\n  var contextType = ctor.contextType;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else {\n    instance.context = maskedLegacyContext;\n  }\n\n  {\n    if (instance.state === newProps) {\n      var componentName = getComponentNameFromType(ctor) || 'Component';\n\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n\n        error('%s: It is not recommended to assign props directly to state ' + \"because updates to props won't be reflected in state. \" + 'In most cases, it is better to use props directly.', componentName);\n      }\n    }\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    instance.state = applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, initialState, newProps);\n  } // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n\n  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\n    callComponentWillMount(ctor, instance); // If we had additional state updates during this life-cycle, let's\n    // process them now.\n\n    processUpdateQueue(internalInstance, instance, newProps, maskedLegacyContext);\n  }\n}\n\n// Ids are base 32 strings whose binary representation corresponds to the\n// position of a node in a tree.\n// Every time the tree forks into multiple children, we add additional bits to\n// the left of the sequence that represent the position of the child within the\n// current level of children.\n//\n//      00101       00010001011010101\n//      ╰─┬─╯       ╰───────┬───────╯\n//   Fork 5 of 20       Parent id\n//\n// The leading 0s are important. In the above example, you only need 3 bits to\n// represent slot 5. However, you need 5 bits to represent all the forks at\n// the current level, so we must account for the empty bits at the end.\n//\n// For this same reason, slots are 1-indexed instead of 0-indexed. Otherwise,\n// the zeroth id at a level would be indistinguishable from its parent.\n//\n// If a node has only one child, and does not materialize an id (i.e. does not\n// contain a useId hook), then we don't need to allocate any space in the\n// sequence. It's treated as a transparent indirection. For example, these two\n// trees produce the same ids:\n//\n// <>                          <>\n//   <Indirection>               <A />\n//     <A />                     <B />\n//   </Indirection>            </>\n//   <B />\n// </>\n//\n// However, we cannot skip any node that materializes an id. Otherwise, a parent\n// id that does not fork would be indistinguishable from its child id. For\n// example, this tree does not fork, but the parent and child must have\n// different ids.\n//\n// <Parent>\n//   <Child />\n// </Parent>\n//\n// To handle this scenario, every time we materialize an id, we allocate a\n// new level with a single slot. You can think of this as a fork with only one\n// prong, or an array of children with length 1.\n//\n// It's possible for the size of the sequence to exceed 32 bits, the max\n// size for bitwise operations. When this happens, we make more room by\n// converting the right part of the id to a string and storing it in an overflow\n// variable. We use a base 32 string representation, because 32 is the largest\n// power of 2 that is supported by toString(). We want the base to be large so\n// that the resulting ids are compact, and we want the base to be a power of 2\n// because every log2(base) bits corresponds to a single character, i.e. every\n// log2(32) = 5 bits. That means we can lop bits off the end 5 at a time without\n// affecting the final result.\nvar emptyTreeContext = {\n  id: 1,\n  overflow: ''\n};\nfunction getTreeId(context) {\n  var overflow = context.overflow;\n  var idWithLeadingBit = context.id;\n  var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);\n  return id.toString(32) + overflow;\n}\nfunction pushTreeContext(baseContext, totalChildren, index) {\n  var baseIdWithLeadingBit = baseContext.id;\n  var baseOverflow = baseContext.overflow; // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part\n  // of the id; we use it to account for leading 0s.\n\n  var baseLength = getBitLength(baseIdWithLeadingBit) - 1;\n  var baseId = baseIdWithLeadingBit & ~(1 << baseLength);\n  var slot = index + 1;\n  var length = getBitLength(totalChildren) + baseLength; // 30 is the max length we can store without overflowing, taking into\n  // consideration the leading 1 we use to mark the end of the sequence.\n\n  if (length > 30) {\n    // We overflowed the bitwise-safe range. Fall back to slower algorithm.\n    // This branch assumes the length of the base id is greater than 5; it won't\n    // work for smaller ids, because you need 5 bits per character.\n    //\n    // We encode the id in multiple steps: first the base id, then the\n    // remaining digits.\n    //\n    // Each 5 bit sequence corresponds to a single base 32 character. So for\n    // example, if the current id is 23 bits long, we can convert 20 of those\n    // bits into a string of 4 characters, with 3 bits left over.\n    //\n    // First calculate how many bits in the base id represent a complete\n    // sequence of characters.\n    var numberOfOverflowBits = baseLength - baseLength % 5; // Then create a bitmask that selects only those bits.\n\n    var newOverflowBits = (1 << numberOfOverflowBits) - 1; // Select the bits, and convert them to a base 32 string.\n\n    var newOverflow = (baseId & newOverflowBits).toString(32); // Now we can remove those bits from the base id.\n\n    var restOfBaseId = baseId >> numberOfOverflowBits;\n    var restOfBaseLength = baseLength - numberOfOverflowBits; // Finally, encode the rest of the bits using the normal algorithm. Because\n    // we made more room, this time it won't overflow.\n\n    var restOfLength = getBitLength(totalChildren) + restOfBaseLength;\n    var restOfNewBits = slot << restOfBaseLength;\n    var id = restOfNewBits | restOfBaseId;\n    var overflow = newOverflow + baseOverflow;\n    return {\n      id: 1 << restOfLength | id,\n      overflow: overflow\n    };\n  } else {\n    // Normal path\n    var newBits = slot << baseLength;\n\n    var _id = newBits | baseId;\n\n    var _overflow = baseOverflow;\n    return {\n      id: 1 << length | _id,\n      overflow: _overflow\n    };\n  }\n}\n\nfunction getBitLength(number) {\n  return 32 - clz32(number);\n}\n\nfunction getLeadingBit(id) {\n  return 1 << getBitLength(id) - 1;\n} // TODO: Math.clz32 is supported in Node 12+. Maybe we can drop the fallback.\n\n\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\nvar log = Math.log;\nvar LN2 = Math.LN2;\n\nfunction clz32Fallback(x) {\n  var asUint = x >>> 0;\n\n  if (asUint === 0) {\n    return 32;\n  }\n\n  return 31 - (log(asUint) / LN2 | 0) | 0;\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar currentlyRenderingComponent = null;\nvar currentlyRenderingTask = null;\nvar firstWorkInProgressHook = null;\nvar workInProgressHook = null; // Whether the work-in-progress hook is a re-rendered hook\n\nvar isReRender = false; // Whether an update was scheduled during the currently executing render pass.\n\nvar didScheduleRenderPhaseUpdate = false; // Counts the number of useId hooks in this component\n\nvar localIdCounter = 0; // Lazily created map of render-phase updates\n\nvar renderPhaseUpdates = null; // Counter to prevent infinite loops.\n\nvar numberOfReRenders = 0;\nvar RE_RENDER_LIMIT = 25;\nvar isInHookUserCodeInDev = false; // In DEV, this is the name of the currently executing primitive hook\n\nvar currentHookNameInDev;\n\nfunction resolveCurrentlyRenderingComponent() {\n  if (currentlyRenderingComponent === null) {\n    throw new Error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n  }\n\n  {\n    if (isInHookUserCodeInDev) {\n      error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://reactjs.org/link/rules-of-hooks');\n    }\n  }\n\n  return currentlyRenderingComponent;\n}\n\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  if (prevDeps === null) {\n    {\n      error('%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);\n    }\n\n    return false;\n  }\n\n  {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      error('The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\\n\\n' + 'Previous: %s\\n' + 'Incoming: %s', currentHookNameInDev, \"[\" + nextDeps.join(', ') + \"]\", \"[\" + prevDeps.join(', ') + \"]\");\n    }\n  }\n\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (objectIs(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction createHook() {\n  if (numberOfReRenders > 0) {\n    throw new Error('Rendered more hooks than during the previous render');\n  }\n\n  return {\n    memoizedState: null,\n    queue: null,\n    next: null\n  };\n}\n\nfunction createWorkInProgressHook() {\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    if (firstWorkInProgressHook === null) {\n      isReRender = false;\n      firstWorkInProgressHook = workInProgressHook = createHook();\n    } else {\n      // There's already a work-in-progress. Reuse it.\n      isReRender = true;\n      workInProgressHook = firstWorkInProgressHook;\n    }\n  } else {\n    if (workInProgressHook.next === null) {\n      isReRender = false; // Append to the end of the list\n\n      workInProgressHook = workInProgressHook.next = createHook();\n    } else {\n      // There's already a work-in-progress. Reuse it.\n      isReRender = true;\n      workInProgressHook = workInProgressHook.next;\n    }\n  }\n\n  return workInProgressHook;\n}\n\nfunction prepareToUseHooks(task, componentIdentity) {\n  currentlyRenderingComponent = componentIdentity;\n  currentlyRenderingTask = task;\n\n  {\n    isInHookUserCodeInDev = false;\n  } // The following should have already been reset\n  // didScheduleRenderPhaseUpdate = false;\n  // localIdCounter = 0;\n  // firstWorkInProgressHook = null;\n  // numberOfReRenders = 0;\n  // renderPhaseUpdates = null;\n  // workInProgressHook = null;\n\n\n  localIdCounter = 0;\n}\nfunction finishHooks(Component, props, children, refOrContext) {\n  // This must be called after every function component to prevent hooks from\n  // being used in classes.\n  while (didScheduleRenderPhaseUpdate) {\n    // Updates were scheduled during the render phase. They are stored in\n    // the `renderPhaseUpdates` map. Call the component again, reusing the\n    // work-in-progress hooks and applying the additional updates on top. Keep\n    // restarting until no more updates are scheduled.\n    didScheduleRenderPhaseUpdate = false;\n    localIdCounter = 0;\n    numberOfReRenders += 1; // Start over from the beginning of the list\n\n    workInProgressHook = null;\n    children = Component(props, refOrContext);\n  }\n\n  resetHooksState();\n  return children;\n}\nfunction checkDidRenderIdHook() {\n  // This should be called immediately after every finishHooks call.\n  // Conceptually, it's part of the return value of finishHooks; it's only a\n  // separate function to avoid using an array tuple.\n  var didRenderIdHook = localIdCounter !== 0;\n  return didRenderIdHook;\n} // Reset the internal hooks state if an error occurs while rendering a component\n\nfunction resetHooksState() {\n  {\n    isInHookUserCodeInDev = false;\n  }\n\n  currentlyRenderingComponent = null;\n  currentlyRenderingTask = null;\n  didScheduleRenderPhaseUpdate = false;\n  firstWorkInProgressHook = null;\n  numberOfReRenders = 0;\n  renderPhaseUpdates = null;\n  workInProgressHook = null;\n}\n\nfunction readContext$1(context) {\n  {\n    if (isInHookUserCodeInDev) {\n      error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\n    }\n  }\n\n  return readContext(context);\n}\n\nfunction useContext(context) {\n  {\n    currentHookNameInDev = 'useContext';\n  }\n\n  resolveCurrentlyRenderingComponent();\n  return readContext(context);\n}\n\nfunction basicStateReducer(state, action) {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction useState(initialState) {\n  {\n    currentHookNameInDev = 'useState';\n  }\n\n  return useReducer(basicStateReducer, // useReducer has a special case to support lazy useState initializers\n  initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  {\n    if (reducer !== basicStateReducer) {\n      currentHookNameInDev = 'useReducer';\n    }\n  }\n\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n\n  if (isReRender) {\n    // This is a re-render. Apply the new render phase updates to the previous\n    // current hook.\n    var queue = workInProgressHook.queue;\n    var dispatch = queue.dispatch;\n\n    if (renderPhaseUpdates !== null) {\n      // Render phase updates are stored in a map of queue -> linked list\n      var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);\n\n      if (firstRenderPhaseUpdate !== undefined) {\n        renderPhaseUpdates.delete(queue);\n        var newState = workInProgressHook.memoizedState;\n        var update = firstRenderPhaseUpdate;\n\n        do {\n          // Process this render phase update. We don't have to check the\n          // priority because it will always be the same as the current\n          // render's.\n          var action = update.action;\n\n          {\n            isInHookUserCodeInDev = true;\n          }\n\n          newState = reducer(newState, action);\n\n          {\n            isInHookUserCodeInDev = false;\n          }\n\n          update = update.next;\n        } while (update !== null);\n\n        workInProgressHook.memoizedState = newState;\n        return [newState, dispatch];\n      }\n    }\n\n    return [workInProgressHook.memoizedState, dispatch];\n  } else {\n    {\n      isInHookUserCodeInDev = true;\n    }\n\n    var initialState;\n\n    if (reducer === basicStateReducer) {\n      // Special case for `useState`.\n      initialState = typeof initialArg === 'function' ? initialArg() : initialArg;\n    } else {\n      initialState = init !== undefined ? init(initialArg) : initialArg;\n    }\n\n    {\n      isInHookUserCodeInDev = false;\n    }\n\n    workInProgressHook.memoizedState = initialState;\n\n    var _queue = workInProgressHook.queue = {\n      last: null,\n      dispatch: null\n    };\n\n    var _dispatch = _queue.dispatch = dispatchAction.bind(null, currentlyRenderingComponent, _queue);\n\n    return [workInProgressHook.memoizedState, _dispatch];\n  }\n}\n\nfunction useMemo(nextCreate, deps) {\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n\n  if (workInProgressHook !== null) {\n    var prevState = workInProgressHook.memoizedState;\n\n    if (prevState !== null) {\n      if (nextDeps !== null) {\n        var prevDeps = prevState[1];\n\n        if (areHookInputsEqual(nextDeps, prevDeps)) {\n          return prevState[0];\n        }\n      }\n    }\n  }\n\n  {\n    isInHookUserCodeInDev = true;\n  }\n\n  var nextValue = nextCreate();\n\n  {\n    isInHookUserCodeInDev = false;\n  }\n\n  workInProgressHook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction useRef(initialValue) {\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n  var previousRef = workInProgressHook.memoizedState;\n\n  if (previousRef === null) {\n    var ref = {\n      current: initialValue\n    };\n\n    {\n      Object.seal(ref);\n    }\n\n    workInProgressHook.memoizedState = ref;\n    return ref;\n  } else {\n    return previousRef;\n  }\n}\n\nfunction useLayoutEffect(create, inputs) {\n  {\n    currentHookNameInDev = 'useLayoutEffect';\n\n    error('useLayoutEffect does nothing on the server, because its effect cannot ' + \"be encoded into the server renderer's output format. This will lead \" + 'to a mismatch between the initial, non-hydrated UI and the intended ' + 'UI. To avoid this, useLayoutEffect should only be used in ' + 'components that render exclusively on the client. ' + 'See https://reactjs.org/link/uselayouteffect-ssr for common fixes.');\n  }\n}\n\nfunction dispatchAction(componentIdentity, queue, action) {\n  if (numberOfReRenders >= RE_RENDER_LIMIT) {\n    throw new Error('Too many re-renders. React limits the number of renders to prevent ' + 'an infinite loop.');\n  }\n\n  if (componentIdentity === currentlyRenderingComponent) {\n    // This is a render phase update. Stash it in a lazily-created map of\n    // queue -> linked list of updates. After this render pass, we'll restart\n    // and apply the stashed updates on top of the work-in-progress hook.\n    didScheduleRenderPhaseUpdate = true;\n    var update = {\n      action: action,\n      next: null\n    };\n\n    if (renderPhaseUpdates === null) {\n      renderPhaseUpdates = new Map();\n    }\n\n    var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);\n\n    if (firstRenderPhaseUpdate === undefined) {\n      renderPhaseUpdates.set(queue, update);\n    } else {\n      // Append the update to the end of the list.\n      var lastRenderPhaseUpdate = firstRenderPhaseUpdate;\n\n      while (lastRenderPhaseUpdate.next !== null) {\n        lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n      }\n\n      lastRenderPhaseUpdate.next = update;\n    }\n  }\n}\n\nfunction useCallback(callback, deps) {\n  return useMemo(function () {\n    return callback;\n  }, deps);\n} // TODO Decide on how to implement this hook for server rendering.\n// If a mutation occurs during render, consider triggering a Suspense boundary\n// and falling back to client rendering.\n\nfunction useMutableSource(source, getSnapshot, subscribe) {\n  resolveCurrentlyRenderingComponent();\n  return getSnapshot(source._source);\n}\n\nfunction useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  if (getServerSnapshot === undefined) {\n    throw new Error('Missing getServerSnapshot, which is required for ' + 'server-rendered content. Will revert to client rendering.');\n  }\n\n  return getServerSnapshot();\n}\n\nfunction useDeferredValue(value) {\n  resolveCurrentlyRenderingComponent();\n  return value;\n}\n\nfunction unsupportedStartTransition() {\n  throw new Error('startTransition cannot be called during server rendering.');\n}\n\nfunction useTransition() {\n  resolveCurrentlyRenderingComponent();\n  return [false, unsupportedStartTransition];\n}\n\nfunction useId() {\n  var task = currentlyRenderingTask;\n  var treeId = getTreeId(task.treeContext);\n  var responseState = currentResponseState;\n\n  if (responseState === null) {\n    throw new Error('Invalid hook call. Hooks can only be called inside of the body of a function component.');\n  }\n\n  var localId = localIdCounter++;\n  return makeId(responseState, treeId, localId);\n}\n\nfunction noop() {}\n\nvar Dispatcher = {\n  readContext: readContext$1,\n  useContext: useContext,\n  useMemo: useMemo,\n  useReducer: useReducer,\n  useRef: useRef,\n  useState: useState,\n  useInsertionEffect: noop,\n  useLayoutEffect: useLayoutEffect,\n  useCallback: useCallback,\n  // useImperativeHandle is not run in the server environment\n  useImperativeHandle: noop,\n  // Effects are not run in the server environment.\n  useEffect: noop,\n  // Debugging effect\n  useDebugValue: noop,\n  useDeferredValue: useDeferredValue,\n  useTransition: useTransition,\n  useId: useId,\n  // Subscriptions are not setup in a server environment.\n  useMutableSource: useMutableSource,\n  useSyncExternalStore: useSyncExternalStore\n};\n\nvar currentResponseState = null;\nfunction setCurrentResponseState(responseState) {\n  currentResponseState = responseState;\n}\n\nfunction getStackByComponentStackNode(componentStack) {\n  try {\n    var info = '';\n    var node = componentStack;\n\n    do {\n      switch (node.tag) {\n        case 0:\n          info += describeBuiltInComponentFrame(node.type, null, null);\n          break;\n\n        case 1:\n          info += describeFunctionComponentFrame(node.type, null, null);\n          break;\n\n        case 2:\n          info += describeClassComponentFrame(node.type, null, null);\n          break;\n      }\n\n      node = node.parent;\n    } while (node);\n\n    return info;\n  } catch (x) {\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\nvar PENDING = 0;\nvar COMPLETED = 1;\nvar FLUSHED = 2;\nvar ABORTED = 3;\nvar ERRORED = 4;\nvar OPEN = 0;\nvar CLOSING = 1;\nvar CLOSED = 2;\n// This is a default heuristic for how to split up the HTML content into progressive\n// loading. Our goal is to be able to display additional new content about every 500ms.\n// Faster than that is unnecessary and should be throttled on the client. It also\n// adds unnecessary overhead to do more splits. We don't know if it's a higher or lower\n// end device but higher end suffer less from the overhead than lower end does from\n// not getting small enough pieces. We error on the side of low end.\n// We base this on low end 3G speeds which is about 500kbits per second. We assume\n// that there can be a reasonable drop off from max bandwidth which leaves you with\n// as little as 80%. We can receive half of that each 500ms - at best. In practice,\n// a little bandwidth is lost to processing and contention - e.g. CSS and images that\n// are downloaded along with the main content. So we estimate about half of that to be\n// the lower end throughput. In other words, we expect that you can at least show\n// about 12.5kb of content per 500ms. Not counting starting latency for the first\n// paint.\n// 500 * 1024 / 8 * .8 * 0.5 / 2\nvar DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;\n\nfunction defaultErrorHandler(error) {\n  console['error'](error); // Don't transform to our wrapper\n\n  return null;\n}\n\nfunction noop$1() {}\n\nfunction createRequest(children, responseState, rootFormatContext, progressiveChunkSize, onError, onAllReady, onShellReady, onShellError, onFatalError) {\n  var pingedTasks = [];\n  var abortSet = new Set();\n  var request = {\n    destination: null,\n    responseState: responseState,\n    progressiveChunkSize: progressiveChunkSize === undefined ? DEFAULT_PROGRESSIVE_CHUNK_SIZE : progressiveChunkSize,\n    status: OPEN,\n    fatalError: null,\n    nextSegmentId: 0,\n    allPendingTasks: 0,\n    pendingRootTasks: 0,\n    completedRootSegment: null,\n    abortableTasks: abortSet,\n    pingedTasks: pingedTasks,\n    clientRenderedBoundaries: [],\n    completedBoundaries: [],\n    partialBoundaries: [],\n    onError: onError === undefined ? defaultErrorHandler : onError,\n    onAllReady: onAllReady === undefined ? noop$1 : onAllReady,\n    onShellReady: onShellReady === undefined ? noop$1 : onShellReady,\n    onShellError: onShellError === undefined ? noop$1 : onShellError,\n    onFatalError: onFatalError === undefined ? noop$1 : onFatalError\n  }; // This segment represents the root fallback.\n\n  var rootSegment = createPendingSegment(request, 0, null, rootFormatContext, // Root segments are never embedded in Text on either edge\n  false, false); // There is no parent so conceptually, we're unblocked to flush this segment.\n\n  rootSegment.parentFlushed = true;\n  var rootTask = createTask(request, children, null, rootSegment, abortSet, emptyContextObject, rootContextSnapshot, emptyTreeContext);\n  pingedTasks.push(rootTask);\n  return request;\n}\n\nfunction pingTask(request, task) {\n  var pingedTasks = request.pingedTasks;\n  pingedTasks.push(task);\n\n  if (pingedTasks.length === 1) {\n    scheduleWork(function () {\n      return performWork(request);\n    });\n  }\n}\n\nfunction createSuspenseBoundary(request, fallbackAbortableTasks) {\n  return {\n    id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,\n    rootSegmentID: -1,\n    parentFlushed: false,\n    pendingTasks: 0,\n    forceClientRender: false,\n    completedSegments: [],\n    byteSize: 0,\n    fallbackAbortableTasks: fallbackAbortableTasks,\n    errorDigest: null\n  };\n}\n\nfunction createTask(request, node, blockedBoundary, blockedSegment, abortSet, legacyContext, context, treeContext) {\n  request.allPendingTasks++;\n\n  if (blockedBoundary === null) {\n    request.pendingRootTasks++;\n  } else {\n    blockedBoundary.pendingTasks++;\n  }\n\n  var task = {\n    node: node,\n    ping: function () {\n      return pingTask(request, task);\n    },\n    blockedBoundary: blockedBoundary,\n    blockedSegment: blockedSegment,\n    abortSet: abortSet,\n    legacyContext: legacyContext,\n    context: context,\n    treeContext: treeContext\n  };\n\n  {\n    task.componentStack = null;\n  }\n\n  abortSet.add(task);\n  return task;\n}\n\nfunction createPendingSegment(request, index, boundary, formatContext, lastPushedText, textEmbedded) {\n  return {\n    status: PENDING,\n    id: -1,\n    // lazily assigned later\n    index: index,\n    parentFlushed: false,\n    chunks: [],\n    children: [],\n    formatContext: formatContext,\n    boundary: boundary,\n    lastPushedText: lastPushedText,\n    textEmbedded: textEmbedded\n  };\n} // DEV-only global reference to the currently executing task\n\n\nvar currentTaskInDEV = null;\n\nfunction getCurrentStackInDEV() {\n  {\n    if (currentTaskInDEV === null || currentTaskInDEV.componentStack === null) {\n      return '';\n    }\n\n    return getStackByComponentStackNode(currentTaskInDEV.componentStack);\n  }\n}\n\nfunction pushBuiltInComponentStackInDEV(task, type) {\n  {\n    task.componentStack = {\n      tag: 0,\n      parent: task.componentStack,\n      type: type\n    };\n  }\n}\n\nfunction pushFunctionComponentStackInDEV(task, type) {\n  {\n    task.componentStack = {\n      tag: 1,\n      parent: task.componentStack,\n      type: type\n    };\n  }\n}\n\nfunction pushClassComponentStackInDEV(task, type) {\n  {\n    task.componentStack = {\n      tag: 2,\n      parent: task.componentStack,\n      type: type\n    };\n  }\n}\n\nfunction popComponentStackInDEV(task) {\n  {\n    if (task.componentStack === null) {\n      error('Unexpectedly popped too many stack frames. This is a bug in React.');\n    } else {\n      task.componentStack = task.componentStack.parent;\n    }\n  }\n} // stash the component stack of an unwinding error until it is processed\n\n\nvar lastBoundaryErrorComponentStackDev = null;\n\nfunction captureBoundaryErrorDetailsDev(boundary, error) {\n  {\n    var errorMessage;\n\n    if (typeof error === 'string') {\n      errorMessage = error;\n    } else if (error && typeof error.message === 'string') {\n      errorMessage = error.message;\n    } else {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      errorMessage = String(error);\n    }\n\n    var errorComponentStack = lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();\n    lastBoundaryErrorComponentStackDev = null;\n    boundary.errorMessage = errorMessage;\n    boundary.errorComponentStack = errorComponentStack;\n  }\n}\n\nfunction logRecoverableError(request, error) {\n  // If this callback errors, we intentionally let that error bubble up to become a fatal error\n  // so that someone fixes the error reporting instead of hiding it.\n  var errorDigest = request.onError(error);\n\n  if (errorDigest != null && typeof errorDigest !== 'string') {\n    // eslint-disable-next-line react-internal/prod-error-codes\n    throw new Error(\"onError returned something with a type other than \\\"string\\\". onError should return a string and may return null or undefined but must not return anything else. It received something of type \\\"\" + typeof errorDigest + \"\\\" instead\");\n  }\n\n  return errorDigest;\n}\n\nfunction fatalError(request, error) {\n  // This is called outside error handling code such as if the root errors outside\n  // a suspense boundary or if the root suspense boundary's fallback errors.\n  // It's also called if React itself or its host configs errors.\n  var onShellError = request.onShellError;\n  onShellError(error);\n  var onFatalError = request.onFatalError;\n  onFatalError(error);\n\n  if (request.destination !== null) {\n    request.status = CLOSED;\n    closeWithError(request.destination, error);\n  } else {\n    request.status = CLOSING;\n    request.fatalError = error;\n  }\n}\n\nfunction renderSuspenseBoundary(request, task, props) {\n  pushBuiltInComponentStackInDEV(task, 'Suspense');\n  var parentBoundary = task.blockedBoundary;\n  var parentSegment = task.blockedSegment; // Each time we enter a suspense boundary, we split out into a new segment for\n  // the fallback so that we can later replace that segment with the content.\n  // This also lets us split out the main content even if it doesn't suspend,\n  // in case it ends up generating a large subtree of content.\n\n  var fallback = props.fallback;\n  var content = props.children;\n  var fallbackAbortSet = new Set();\n  var newBoundary = createSuspenseBoundary(request, fallbackAbortSet);\n  var insertionIndex = parentSegment.chunks.length; // The children of the boundary segment is actually the fallback.\n\n  var boundarySegment = createPendingSegment(request, insertionIndex, newBoundary, parentSegment.formatContext, // boundaries never require text embedding at their edges because comment nodes bound them\n  false, false);\n  parentSegment.children.push(boundarySegment); // The parentSegment has a child Segment at this index so we reset the lastPushedText marker on the parent\n\n  parentSegment.lastPushedText = false; // This segment is the actual child content. We can start rendering that immediately.\n\n  var contentRootSegment = createPendingSegment(request, 0, null, parentSegment.formatContext, // boundaries never require text embedding at their edges because comment nodes bound them\n  false, false); // We mark the root segment as having its parent flushed. It's not really flushed but there is\n  // no parent segment so there's nothing to wait on.\n\n  contentRootSegment.parentFlushed = true; // Currently this is running synchronously. We could instead schedule this to pingedTasks.\n  // I suspect that there might be some efficiency benefits from not creating the suspended task\n  // and instead just using the stack if possible.\n  // TODO: Call this directly instead of messing with saving and restoring contexts.\n  // We can reuse the current context and task to render the content immediately without\n  // context switching. We just need to temporarily switch which boundary and which segment\n  // we're writing to. If something suspends, it'll spawn new suspended task with that context.\n\n  task.blockedBoundary = newBoundary;\n  task.blockedSegment = contentRootSegment;\n\n  try {\n    // We use the safe form because we don't handle suspending here. Only error handling.\n    renderNode(request, task, content);\n    pushSegmentFinale(contentRootSegment.chunks, request.responseState, contentRootSegment.lastPushedText, contentRootSegment.textEmbedded);\n    contentRootSegment.status = COMPLETED;\n    queueCompletedSegment(newBoundary, contentRootSegment);\n\n    if (newBoundary.pendingTasks === 0) {\n      // This must have been the last segment we were waiting on. This boundary is now complete.\n      // Therefore we won't need the fallback. We early return so that we don't have to create\n      // the fallback.\n      popComponentStackInDEV(task);\n      return;\n    }\n  } catch (error) {\n    contentRootSegment.status = ERRORED;\n    newBoundary.forceClientRender = true;\n    newBoundary.errorDigest = logRecoverableError(request, error);\n\n    {\n      captureBoundaryErrorDetailsDev(newBoundary, error);\n    } // We don't need to decrement any task numbers because we didn't spawn any new task.\n    // We don't need to schedule any task because we know the parent has written yet.\n    // We do need to fallthrough to create the fallback though.\n\n  } finally {\n    task.blockedBoundary = parentBoundary;\n    task.blockedSegment = parentSegment;\n  } // We create suspended task for the fallback because we don't want to actually work\n  // on it yet in case we finish the main content, so we queue for later.\n\n\n  var suspendedFallbackTask = createTask(request, fallback, parentBoundary, boundarySegment, fallbackAbortSet, task.legacyContext, task.context, task.treeContext);\n\n  {\n    suspendedFallbackTask.componentStack = task.componentStack;\n  } // TODO: This should be queued at a separate lower priority queue so that we only work\n  // on preparing fallbacks if we don't have any more main content to task on.\n\n\n  request.pingedTasks.push(suspendedFallbackTask);\n  popComponentStackInDEV(task);\n}\n\nfunction renderHostElement(request, task, type, props) {\n  pushBuiltInComponentStackInDEV(task, type);\n  var segment = task.blockedSegment;\n  var children = pushStartInstance(segment.chunks, type, props, request.responseState, segment.formatContext);\n  segment.lastPushedText = false;\n  var prevContext = segment.formatContext;\n  segment.formatContext = getChildFormatContext(prevContext, type, props); // We use the non-destructive form because if something suspends, we still\n  // need to pop back up and finish this subtree of HTML.\n\n  renderNode(request, task, children); // We expect that errors will fatal the whole task and that we don't need\n  // the correct context. Therefore this is not in a finally.\n\n  segment.formatContext = prevContext;\n  pushEndInstance(segment.chunks, type);\n  segment.lastPushedText = false;\n  popComponentStackInDEV(task);\n}\n\nfunction shouldConstruct$1(Component) {\n  return Component.prototype && Component.prototype.isReactComponent;\n}\n\nfunction renderWithHooks(request, task, Component, props, secondArg) {\n  var componentIdentity = {};\n  prepareToUseHooks(task, componentIdentity);\n  var result = Component(props, secondArg);\n  return finishHooks(Component, props, result, secondArg);\n}\n\nfunction finishClassComponent(request, task, instance, Component, props) {\n  var nextChildren = instance.render();\n\n  {\n    if (instance.props !== props) {\n      if (!didWarnAboutReassigningProps) {\n        error('It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentNameFromType(Component) || 'a component');\n      }\n\n      didWarnAboutReassigningProps = true;\n    }\n  }\n\n  {\n    var childContextTypes = Component.childContextTypes;\n\n    if (childContextTypes !== null && childContextTypes !== undefined) {\n      var previousContext = task.legacyContext;\n      var mergedContext = processChildContext(instance, Component, previousContext, childContextTypes);\n      task.legacyContext = mergedContext;\n      renderNodeDestructive(request, task, nextChildren);\n      task.legacyContext = previousContext;\n      return;\n    }\n  }\n\n  renderNodeDestructive(request, task, nextChildren);\n}\n\nfunction renderClassComponent(request, task, Component, props) {\n  pushClassComponentStackInDEV(task, Component);\n  var maskedContext =  getMaskedContext(Component, task.legacyContext) ;\n  var instance = constructClassInstance(Component, props, maskedContext);\n  mountClassInstance(instance, Component, props, maskedContext);\n  finishClassComponent(request, task, instance, Component, props);\n  popComponentStackInDEV(task);\n}\n\nvar didWarnAboutBadClass = {};\nvar didWarnAboutModulePatternComponent = {};\nvar didWarnAboutContextTypeOnFunctionComponent = {};\nvar didWarnAboutGetDerivedStateOnFunctionComponent = {};\nvar didWarnAboutReassigningProps = false;\nvar didWarnAboutGenerators = false;\nvar didWarnAboutMaps = false;\nvar hasWarnedAboutUsingContextAsConsumer = false; // This would typically be a function component but we still support module pattern\n// components for some reason.\n\nfunction renderIndeterminateComponent(request, task, Component, props) {\n  var legacyContext;\n\n  {\n    legacyContext = getMaskedContext(Component, task.legacyContext);\n  }\n\n  pushFunctionComponentStackInDEV(task, Component);\n\n  {\n    if (Component.prototype && typeof Component.prototype.render === 'function') {\n      var componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);\n\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n  }\n\n  var value = renderWithHooks(request, task, Component, props, legacyContext);\n  var hasId = checkDidRenderIdHook();\n\n  {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\n      var _componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutModulePatternComponent[_componentName]) {\n        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);\n\n        didWarnAboutModulePatternComponent[_componentName] = true;\n      }\n    }\n  }\n\n  if ( // Run these checks in production only if the flag is off.\n  // Eventually we'll delete this branch altogether.\n   typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\n    {\n      var _componentName2 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutModulePatternComponent[_componentName2]) {\n        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + 'cannot be called with `new` by React.', _componentName2, _componentName2, _componentName2);\n\n        didWarnAboutModulePatternComponent[_componentName2] = true;\n      }\n    }\n\n    mountClassInstance(value, Component, props, legacyContext);\n    finishClassComponent(request, task, value, Component, props);\n  } else {\n\n    {\n      validateFunctionComponentInDev(Component);\n    } // We're now successfully past this task, and we don't have to pop back to\n    // the previous task every again, so we can use the destructive recursive form.\n\n\n    if (hasId) {\n      // This component materialized an id. We treat this as its own level, with\n      // a single \"child\" slot.\n      var prevTreeContext = task.treeContext;\n      var totalChildren = 1;\n      var index = 0;\n      task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);\n\n      try {\n        renderNodeDestructive(request, task, value);\n      } finally {\n        task.treeContext = prevTreeContext;\n      }\n    } else {\n      renderNodeDestructive(request, task, value);\n    }\n  }\n\n  popComponentStackInDEV(task);\n}\n\nfunction validateFunctionComponentInDev(Component) {\n  {\n    if (Component) {\n      if (Component.childContextTypes) {\n        error('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      var _componentName3 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {\n        error('%s: Function components do not support getDerivedStateFromProps.', _componentName3);\n\n        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;\n      }\n    }\n\n    if (typeof Component.contextType === 'object' && Component.contextType !== null) {\n      var _componentName4 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {\n        error('%s: Function components do not support contextType.', _componentName4);\n\n        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;\n      }\n    }\n  }\n}\n\nfunction resolveDefaultProps(Component, baseProps) {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    var props = assign({}, baseProps);\n    var defaultProps = Component.defaultProps;\n\n    for (var propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n\n    return props;\n  }\n\n  return baseProps;\n}\n\nfunction renderForwardRef(request, task, type, props, ref) {\n  pushFunctionComponentStackInDEV(task, type.render);\n  var children = renderWithHooks(request, task, type.render, props, ref);\n  var hasId = checkDidRenderIdHook();\n\n  if (hasId) {\n    // This component materialized an id. We treat this as its own level, with\n    // a single \"child\" slot.\n    var prevTreeContext = task.treeContext;\n    var totalChildren = 1;\n    var index = 0;\n    task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);\n\n    try {\n      renderNodeDestructive(request, task, children);\n    } finally {\n      task.treeContext = prevTreeContext;\n    }\n  } else {\n    renderNodeDestructive(request, task, children);\n  }\n\n  popComponentStackInDEV(task);\n}\n\nfunction renderMemo(request, task, type, props, ref) {\n  var innerType = type.type;\n  var resolvedProps = resolveDefaultProps(innerType, props);\n  renderElement(request, task, innerType, resolvedProps, ref);\n}\n\nfunction renderContextConsumer(request, task, context, props) {\n  // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n  {\n    if (context._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n\n          error('Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n        }\n      }\n    } else {\n      context = context._context;\n    }\n  }\n\n  var render = props.children;\n\n  {\n    if (typeof render !== 'function') {\n      error('A context consumer was rendered with multiple children, or a child ' + \"that isn't a function. A context consumer expects a single child \" + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.');\n    }\n  }\n\n  var newValue = readContext(context);\n  var newChildren = render(newValue);\n  renderNodeDestructive(request, task, newChildren);\n}\n\nfunction renderContextProvider(request, task, type, props) {\n  var context = type._context;\n  var value = props.value;\n  var children = props.children;\n  var prevSnapshot;\n\n  {\n    prevSnapshot = task.context;\n  }\n\n  task.context = pushProvider(context, value);\n  renderNodeDestructive(request, task, children);\n  task.context = popProvider(context);\n\n  {\n    if (prevSnapshot !== task.context) {\n      error('Popping the context provider did not return back to the original snapshot. This is a bug in React.');\n    }\n  }\n}\n\nfunction renderLazyComponent(request, task, lazyComponent, props, ref) {\n  pushBuiltInComponentStackInDEV(task, 'Lazy');\n  var payload = lazyComponent._payload;\n  var init = lazyComponent._init;\n  var Component = init(payload);\n  var resolvedProps = resolveDefaultProps(Component, props);\n  renderElement(request, task, Component, resolvedProps, ref);\n  popComponentStackInDEV(task);\n}\n\nfunction renderElement(request, task, type, props, ref) {\n  if (typeof type === 'function') {\n    if (shouldConstruct$1(type)) {\n      renderClassComponent(request, task, type, props);\n      return;\n    } else {\n      renderIndeterminateComponent(request, task, type, props);\n      return;\n    }\n  }\n\n  if (typeof type === 'string') {\n    renderHostElement(request, task, type, props);\n    return;\n  }\n\n  switch (type) {\n    // TODO: LegacyHidden acts the same as a fragment. This only works\n    // because we currently assume that every instance of LegacyHidden is\n    // accompanied by a host component wrapper. In the hidden mode, the host\n    // component is given a `hidden` attribute, which ensures that the\n    // initial HTML is not visible. To support the use of LegacyHidden as a\n    // true fragment, without an extra DOM node, we would have to hide the\n    // initial HTML in some other way.\n    // TODO: Add REACT_OFFSCREEN_TYPE here too with the same capability.\n    case REACT_LEGACY_HIDDEN_TYPE:\n    case REACT_DEBUG_TRACING_MODE_TYPE:\n    case REACT_STRICT_MODE_TYPE:\n    case REACT_PROFILER_TYPE:\n    case REACT_FRAGMENT_TYPE:\n      {\n        renderNodeDestructive(request, task, props.children);\n        return;\n      }\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      {\n        pushBuiltInComponentStackInDEV(task, 'SuspenseList'); // TODO: SuspenseList should control the boundaries.\n\n        renderNodeDestructive(request, task, props.children);\n        popComponentStackInDEV(task);\n        return;\n      }\n\n    case REACT_SCOPE_TYPE:\n      {\n\n        throw new Error('ReactDOMServer does not yet support scope components.');\n      }\n    // eslint-disable-next-line-no-fallthrough\n\n    case REACT_SUSPENSE_TYPE:\n      {\n        {\n          renderSuspenseBoundary(request, task, props);\n        }\n\n        return;\n      }\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        {\n          renderForwardRef(request, task, type, props, ref);\n          return;\n        }\n\n      case REACT_MEMO_TYPE:\n        {\n          renderMemo(request, task, type, props, ref);\n          return;\n        }\n\n      case REACT_PROVIDER_TYPE:\n        {\n          renderContextProvider(request, task, type, props);\n          return;\n        }\n\n      case REACT_CONTEXT_TYPE:\n        {\n          renderContextConsumer(request, task, type, props);\n          return;\n        }\n\n      case REACT_LAZY_TYPE:\n        {\n          renderLazyComponent(request, task, type, props);\n          return;\n        }\n    }\n  }\n\n  var info = '';\n\n  {\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and \" + 'named imports.';\n    }\n  }\n\n  throw new Error('Element type is invalid: expected a string (for built-in ' + 'components) or a class/function (for composite components) ' + (\"but got: \" + (type == null ? type : typeof type) + \".\" + info));\n}\n\nfunction validateIterable(iterable, iteratorFn) {\n  {\n    // We don't support rendering Generators because it's a mutation.\n    // See https://github.com/facebook/react/issues/12995\n    if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag\n    iterable[Symbol.toStringTag] === 'Generator') {\n      if (!didWarnAboutGenerators) {\n        error('Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.');\n      }\n\n      didWarnAboutGenerators = true;\n    } // Warn about using Maps as children\n\n\n    if (iterable.entries === iteratorFn) {\n      if (!didWarnAboutMaps) {\n        error('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n      }\n\n      didWarnAboutMaps = true;\n    }\n  }\n}\n\nfunction renderNodeDestructive(request, task, node) {\n  {\n    // In Dev we wrap renderNodeDestructiveImpl in a try / catch so we can capture\n    // a component stack at the right place in the tree. We don't do this in renderNode\n    // becuase it is not called at every layer of the tree and we may lose frames\n    try {\n      return renderNodeDestructiveImpl(request, task, node);\n    } catch (x) {\n      if (typeof x === 'object' && x !== null && typeof x.then === 'function') ; else {\n        // This is an error, stash the component stack if it is null.\n        lastBoundaryErrorComponentStackDev = lastBoundaryErrorComponentStackDev !== null ? lastBoundaryErrorComponentStackDev : getCurrentStackInDEV();\n      } // rethrow so normal suspense logic can handle thrown value accordingly\n\n\n      throw x;\n    }\n  }\n} // This function by it self renders a node and consumes the task by mutating it\n// to update the current execution state.\n\n\nfunction renderNodeDestructiveImpl(request, task, node) {\n  // Stash the node we're working on. We'll pick up from this task in case\n  // something suspends.\n  task.node = node; // Handle object types\n\n  if (typeof node === 'object' && node !== null) {\n    switch (node.$$typeof) {\n      case REACT_ELEMENT_TYPE:\n        {\n          var element = node;\n          var type = element.type;\n          var props = element.props;\n          var ref = element.ref;\n          renderElement(request, task, type, props, ref);\n          return;\n        }\n\n      case REACT_PORTAL_TYPE:\n        throw new Error('Portals are not currently supported by the server renderer. ' + 'Render them conditionally so that they only appear on the client render.');\n      // eslint-disable-next-line-no-fallthrough\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyNode = node;\n          var payload = lazyNode._payload;\n          var init = lazyNode._init;\n          var resolvedNode;\n\n          {\n            try {\n              resolvedNode = init(payload);\n            } catch (x) {\n              if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n                // this Lazy initializer is suspending. push a temporary frame onto the stack so it can be\n                // popped off in spawnNewSuspendedTask. This aligns stack behavior between Lazy in element position\n                // vs Component position. We do not want the frame for Errors so we exclusively do this in\n                // the wakeable branch\n                pushBuiltInComponentStackInDEV(task, 'Lazy');\n              }\n\n              throw x;\n            }\n          }\n\n          renderNodeDestructive(request, task, resolvedNode);\n          return;\n        }\n    }\n\n    if (isArray(node)) {\n      renderChildrenArray(request, task, node);\n      return;\n    }\n\n    var iteratorFn = getIteratorFn(node);\n\n    if (iteratorFn) {\n      {\n        validateIterable(node, iteratorFn);\n      }\n\n      var iterator = iteratorFn.call(node);\n\n      if (iterator) {\n        // We need to know how many total children are in this set, so that we\n        // can allocate enough id slots to acommodate them. So we must exhaust\n        // the iterator before we start recursively rendering the children.\n        // TODO: This is not great but I think it's inherent to the id\n        // generation algorithm.\n        var step = iterator.next(); // If there are not entries, we need to push an empty so we start by checking that.\n\n        if (!step.done) {\n          var children = [];\n\n          do {\n            children.push(step.value);\n            step = iterator.next();\n          } while (!step.done);\n\n          renderChildrenArray(request, task, children);\n          return;\n        }\n\n        return;\n      }\n    }\n\n    var childString = Object.prototype.toString.call(node);\n    throw new Error(\"Objects are not valid as a React child (found: \" + (childString === '[object Object]' ? 'object with keys {' + Object.keys(node).join(', ') + '}' : childString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n  }\n\n  if (typeof node === 'string') {\n    var segment = task.blockedSegment;\n    segment.lastPushedText = pushTextInstance(task.blockedSegment.chunks, node, request.responseState, segment.lastPushedText);\n    return;\n  }\n\n  if (typeof node === 'number') {\n    var _segment = task.blockedSegment;\n    _segment.lastPushedText = pushTextInstance(task.blockedSegment.chunks, '' + node, request.responseState, _segment.lastPushedText);\n    return;\n  }\n\n  {\n    if (typeof node === 'function') {\n      error('Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');\n    }\n  }\n}\n\nfunction renderChildrenArray(request, task, children) {\n  var totalChildren = children.length;\n\n  for (var i = 0; i < totalChildren; i++) {\n    var prevTreeContext = task.treeContext;\n    task.treeContext = pushTreeContext(prevTreeContext, totalChildren, i);\n\n    try {\n      // We need to use the non-destructive form so that we can safely pop back\n      // up and render the sibling if something suspends.\n      renderNode(request, task, children[i]);\n    } finally {\n      task.treeContext = prevTreeContext;\n    }\n  }\n}\n\nfunction spawnNewSuspendedTask(request, task, x) {\n  // Something suspended, we'll need to create a new segment and resolve it later.\n  var segment = task.blockedSegment;\n  var insertionIndex = segment.chunks.length;\n  var newSegment = createPendingSegment(request, insertionIndex, null, segment.formatContext, // Adopt the parent segment's leading text embed\n  segment.lastPushedText, // Assume we are text embedded at the trailing edge\n  true);\n  segment.children.push(newSegment); // Reset lastPushedText for current Segment since the new Segment \"consumed\" it\n\n  segment.lastPushedText = false;\n  var newTask = createTask(request, task.node, task.blockedBoundary, newSegment, task.abortSet, task.legacyContext, task.context, task.treeContext);\n\n  {\n    if (task.componentStack !== null) {\n      // We pop one task off the stack because the node that suspended will be tried again,\n      // which will add it back onto the stack.\n      newTask.componentStack = task.componentStack.parent;\n    }\n  }\n\n  var ping = newTask.ping;\n  x.then(ping, ping);\n} // This is a non-destructive form of rendering a node. If it suspends it spawns\n// a new task and restores the context of this task to what it was before.\n\n\nfunction renderNode(request, task, node) {\n  // TODO: Store segment.children.length here and reset it in case something\n  // suspended partially through writing something.\n  // Snapshot the current context in case something throws to interrupt the\n  // process.\n  var previousFormatContext = task.blockedSegment.formatContext;\n  var previousLegacyContext = task.legacyContext;\n  var previousContext = task.context;\n  var previousComponentStack = null;\n\n  {\n    previousComponentStack = task.componentStack;\n  }\n\n  try {\n    return renderNodeDestructive(request, task, node);\n  } catch (x) {\n    resetHooksState();\n\n    if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n      spawnNewSuspendedTask(request, task, x); // Restore the context. We assume that this will be restored by the inner\n      // functions in case nothing throws so we don't use \"finally\" here.\n\n      task.blockedSegment.formatContext = previousFormatContext;\n      task.legacyContext = previousLegacyContext;\n      task.context = previousContext; // Restore all active ReactContexts to what they were before.\n\n      switchContext(previousContext);\n\n      {\n        task.componentStack = previousComponentStack;\n      }\n\n      return;\n    } else {\n      // Restore the context. We assume that this will be restored by the inner\n      // functions in case nothing throws so we don't use \"finally\" here.\n      task.blockedSegment.formatContext = previousFormatContext;\n      task.legacyContext = previousLegacyContext;\n      task.context = previousContext; // Restore all active ReactContexts to what they were before.\n\n      switchContext(previousContext);\n\n      {\n        task.componentStack = previousComponentStack;\n      } // We assume that we don't need the correct context.\n      // Let's terminate the rest of the tree and don't render any siblings.\n\n\n      throw x;\n    }\n  }\n}\n\nfunction erroredTask(request, boundary, segment, error) {\n  // Report the error to a global handler.\n  var errorDigest = logRecoverableError(request, error);\n\n  if (boundary === null) {\n    fatalError(request, error);\n  } else {\n    boundary.pendingTasks--;\n\n    if (!boundary.forceClientRender) {\n      boundary.forceClientRender = true;\n      boundary.errorDigest = errorDigest;\n\n      {\n        captureBoundaryErrorDetailsDev(boundary, error);\n      } // Regardless of what happens next, this boundary won't be displayed,\n      // so we can flush it, if the parent already flushed.\n\n\n      if (boundary.parentFlushed) {\n        // We don't have a preference where in the queue this goes since it's likely\n        // to error on the client anyway. However, intentionally client-rendered\n        // boundaries should be flushed earlier so that they can start on the client.\n        // We reuse the same queue for errors.\n        request.clientRenderedBoundaries.push(boundary);\n      }\n    }\n  }\n\n  request.allPendingTasks--;\n\n  if (request.allPendingTasks === 0) {\n    var onAllReady = request.onAllReady;\n    onAllReady();\n  }\n}\n\nfunction abortTaskSoft(task) {\n  // This aborts task without aborting the parent boundary that it blocks.\n  // It's used for when we didn't need this task to complete the tree.\n  // If task was needed, then it should use abortTask instead.\n  var request = this;\n  var boundary = task.blockedBoundary;\n  var segment = task.blockedSegment;\n  segment.status = ABORTED;\n  finishedTask(request, boundary, segment);\n}\n\nfunction abortTask(task, request, reason) {\n  // This aborts the task and aborts the parent that it blocks, putting it into\n  // client rendered mode.\n  var boundary = task.blockedBoundary;\n  var segment = task.blockedSegment;\n  segment.status = ABORTED;\n\n  if (boundary === null) {\n    request.allPendingTasks--; // We didn't complete the root so we have nothing to show. We can close\n    // the request;\n\n    if (request.status !== CLOSED) {\n      request.status = CLOSED;\n\n      if (request.destination !== null) {\n        close(request.destination);\n      }\n    }\n  } else {\n    boundary.pendingTasks--;\n\n    if (!boundary.forceClientRender) {\n      boundary.forceClientRender = true;\n\n      var _error = reason === undefined ? new Error('The render was aborted by the server without a reason.') : reason;\n\n      boundary.errorDigest = request.onError(_error);\n\n      {\n        var errorPrefix = 'The server did not finish this Suspense boundary: ';\n\n        if (_error && typeof _error.message === 'string') {\n          _error = errorPrefix + _error.message;\n        } else {\n          // eslint-disable-next-line react-internal/safe-string-coercion\n          _error = errorPrefix + String(_error);\n        }\n\n        var previousTaskInDev = currentTaskInDEV;\n        currentTaskInDEV = task;\n\n        try {\n          captureBoundaryErrorDetailsDev(boundary, _error);\n        } finally {\n          currentTaskInDEV = previousTaskInDev;\n        }\n      }\n\n      if (boundary.parentFlushed) {\n        request.clientRenderedBoundaries.push(boundary);\n      }\n    } // If this boundary was still pending then we haven't already cancelled its fallbacks.\n    // We'll need to abort the fallbacks, which will also error that parent boundary.\n\n\n    boundary.fallbackAbortableTasks.forEach(function (fallbackTask) {\n      return abortTask(fallbackTask, request, reason);\n    });\n    boundary.fallbackAbortableTasks.clear();\n    request.allPendingTasks--;\n\n    if (request.allPendingTasks === 0) {\n      var onAllReady = request.onAllReady;\n      onAllReady();\n    }\n  }\n}\n\nfunction queueCompletedSegment(boundary, segment) {\n  if (segment.chunks.length === 0 && segment.children.length === 1 && segment.children[0].boundary === null) {\n    // This is an empty segment. There's nothing to write, so we can instead transfer the ID\n    // to the child. That way any existing references point to the child.\n    var childSegment = segment.children[0];\n    childSegment.id = segment.id;\n    childSegment.parentFlushed = true;\n\n    if (childSegment.status === COMPLETED) {\n      queueCompletedSegment(boundary, childSegment);\n    }\n  } else {\n    var completedSegments = boundary.completedSegments;\n    completedSegments.push(segment);\n  }\n}\n\nfunction finishedTask(request, boundary, segment) {\n  if (boundary === null) {\n    if (segment.parentFlushed) {\n      if (request.completedRootSegment !== null) {\n        throw new Error('There can only be one root segment. This is a bug in React.');\n      }\n\n      request.completedRootSegment = segment;\n    }\n\n    request.pendingRootTasks--;\n\n    if (request.pendingRootTasks === 0) {\n      // We have completed the shell so the shell can't error anymore.\n      request.onShellError = noop$1;\n      var onShellReady = request.onShellReady;\n      onShellReady();\n    }\n  } else {\n    boundary.pendingTasks--;\n\n    if (boundary.forceClientRender) ; else if (boundary.pendingTasks === 0) {\n      // This must have been the last segment we were waiting on. This boundary is now complete.\n      if (segment.parentFlushed) {\n        // Our parent segment already flushed, so we need to schedule this segment to be emitted.\n        // If it is a segment that was aborted, we'll write other content instead so we don't need\n        // to emit it.\n        if (segment.status === COMPLETED) {\n          queueCompletedSegment(boundary, segment);\n        }\n      }\n\n      if (boundary.parentFlushed) {\n        // The segment might be part of a segment that didn't flush yet, but if the boundary's\n        // parent flushed, we need to schedule the boundary to be emitted.\n        request.completedBoundaries.push(boundary);\n      } // We can now cancel any pending task on the fallback since we won't need to show it anymore.\n      // This needs to happen after we read the parentFlushed flags because aborting can finish\n      // work which can trigger user code, which can start flushing, which can change those flags.\n\n\n      boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request);\n      boundary.fallbackAbortableTasks.clear();\n    } else {\n      if (segment.parentFlushed) {\n        // Our parent already flushed, so we need to schedule this segment to be emitted.\n        // If it is a segment that was aborted, we'll write other content instead so we don't need\n        // to emit it.\n        if (segment.status === COMPLETED) {\n          queueCompletedSegment(boundary, segment);\n          var completedSegments = boundary.completedSegments;\n\n          if (completedSegments.length === 1) {\n            // This is the first time since we last flushed that we completed anything.\n            // We can schedule this boundary to emit its partially completed segments early\n            // in case the parent has already been flushed.\n            if (boundary.parentFlushed) {\n              request.partialBoundaries.push(boundary);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  request.allPendingTasks--;\n\n  if (request.allPendingTasks === 0) {\n    // This needs to be called at the very end so that we can synchronously write the result\n    // in the callback if needed.\n    var onAllReady = request.onAllReady;\n    onAllReady();\n  }\n}\n\nfunction retryTask(request, task) {\n  var segment = task.blockedSegment;\n\n  if (segment.status !== PENDING) {\n    // We completed this by other means before we had a chance to retry it.\n    return;\n  } // We restore the context to what it was when we suspended.\n  // We don't restore it after we leave because it's likely that we'll end up\n  // needing a very similar context soon again.\n\n\n  switchContext(task.context);\n  var prevTaskInDEV = null;\n\n  {\n    prevTaskInDEV = currentTaskInDEV;\n    currentTaskInDEV = task;\n  }\n\n  try {\n    // We call the destructive form that mutates this task. That way if something\n    // suspends again, we can reuse the same task instead of spawning a new one.\n    renderNodeDestructive(request, task, task.node);\n    pushSegmentFinale(segment.chunks, request.responseState, segment.lastPushedText, segment.textEmbedded);\n    task.abortSet.delete(task);\n    segment.status = COMPLETED;\n    finishedTask(request, task.blockedBoundary, segment);\n  } catch (x) {\n    resetHooksState();\n\n    if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n      // Something suspended again, let's pick it back up later.\n      var ping = task.ping;\n      x.then(ping, ping);\n    } else {\n      task.abortSet.delete(task);\n      segment.status = ERRORED;\n      erroredTask(request, task.blockedBoundary, segment, x);\n    }\n  } finally {\n    {\n      currentTaskInDEV = prevTaskInDEV;\n    }\n  }\n}\n\nfunction performWork(request) {\n  if (request.status === CLOSED) {\n    return;\n  }\n\n  var prevContext = getActiveContext();\n  var prevDispatcher = ReactCurrentDispatcher$1.current;\n  ReactCurrentDispatcher$1.current = Dispatcher;\n  var prevGetCurrentStackImpl;\n\n  {\n    prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack;\n    ReactDebugCurrentFrame$1.getCurrentStack = getCurrentStackInDEV;\n  }\n\n  var prevResponseState = currentResponseState;\n  setCurrentResponseState(request.responseState);\n\n  try {\n    var pingedTasks = request.pingedTasks;\n    var i;\n\n    for (i = 0; i < pingedTasks.length; i++) {\n      var task = pingedTasks[i];\n      retryTask(request, task);\n    }\n\n    pingedTasks.splice(0, i);\n\n    if (request.destination !== null) {\n      flushCompletedQueues(request, request.destination);\n    }\n  } catch (error) {\n    logRecoverableError(request, error);\n    fatalError(request, error);\n  } finally {\n    setCurrentResponseState(prevResponseState);\n    ReactCurrentDispatcher$1.current = prevDispatcher;\n\n    {\n      ReactDebugCurrentFrame$1.getCurrentStack = prevGetCurrentStackImpl;\n    }\n\n    if (prevDispatcher === Dispatcher) {\n      // This means that we were in a reentrant work loop. This could happen\n      // in a renderer that supports synchronous work like renderToString,\n      // when it's called from within another renderer.\n      // Normally we don't bother switching the contexts to their root/default\n      // values when leaving because we'll likely need the same or similar\n      // context again. However, when we're inside a synchronous loop like this\n      // we'll to restore the context to what it was before returning.\n      switchContext(prevContext);\n    }\n  }\n}\n\nfunction flushSubtree(request, destination, segment) {\n  segment.parentFlushed = true;\n\n  switch (segment.status) {\n    case PENDING:\n      {\n        // We're emitting a placeholder for this segment to be filled in later.\n        // Therefore we'll need to assign it an ID - to refer to it by.\n        var segmentID = segment.id = request.nextSegmentId++; // When this segment finally completes it won't be embedded in text since it will flush separately\n\n        segment.lastPushedText = false;\n        segment.textEmbedded = false;\n        return writePlaceholder(destination, request.responseState, segmentID);\n      }\n\n    case COMPLETED:\n      {\n        segment.status = FLUSHED;\n        var r = true;\n        var chunks = segment.chunks;\n        var chunkIdx = 0;\n        var children = segment.children;\n\n        for (var childIdx = 0; childIdx < children.length; childIdx++) {\n          var nextChild = children[childIdx]; // Write all the chunks up until the next child.\n\n          for (; chunkIdx < nextChild.index; chunkIdx++) {\n            writeChunk(destination, chunks[chunkIdx]);\n          }\n\n          r = flushSegment(request, destination, nextChild);\n        } // Finally just write all the remaining chunks\n\n\n        for (; chunkIdx < chunks.length - 1; chunkIdx++) {\n          writeChunk(destination, chunks[chunkIdx]);\n        }\n\n        if (chunkIdx < chunks.length) {\n          r = writeChunkAndReturn(destination, chunks[chunkIdx]);\n        }\n\n        return r;\n      }\n\n    default:\n      {\n        throw new Error('Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.');\n      }\n  }\n}\n\nfunction flushSegment(request, destination, segment) {\n  var boundary = segment.boundary;\n\n  if (boundary === null) {\n    // Not a suspense boundary.\n    return flushSubtree(request, destination, segment);\n  }\n\n  boundary.parentFlushed = true; // This segment is a Suspense boundary. We need to decide whether to\n  // emit the content or the fallback now.\n\n  if (boundary.forceClientRender) {\n    // Emit a client rendered suspense boundary wrapper.\n    // We never queue the inner boundary so we'll never emit its content or partial segments.\n    writeStartClientRenderedSuspenseBoundary(destination, request.responseState, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack); // Flush the fallback.\n\n    flushSubtree(request, destination, segment);\n    return writeEndClientRenderedSuspenseBoundary(destination, request.responseState);\n  } else if (boundary.pendingTasks > 0) {\n    // This boundary is still loading. Emit a pending suspense boundary wrapper.\n    // Assign an ID to refer to the future content by.\n    boundary.rootSegmentID = request.nextSegmentId++;\n\n    if (boundary.completedSegments.length > 0) {\n      // If this is at least partially complete, we can queue it to be partially emitted early.\n      request.partialBoundaries.push(boundary);\n    } /// This is the first time we should have referenced this ID.\n\n\n    var id = boundary.id = assignSuspenseBoundaryID(request.responseState);\n    writeStartPendingSuspenseBoundary(destination, request.responseState, id); // Flush the fallback.\n\n    flushSubtree(request, destination, segment);\n    return writeEndPendingSuspenseBoundary(destination, request.responseState);\n  } else if (boundary.byteSize > request.progressiveChunkSize) {\n    // This boundary is large and will be emitted separately so that we can progressively show\n    // other content. We add it to the queue during the flush because we have to ensure that\n    // the parent flushes first so that there's something to inject it into.\n    // We also have to make sure that it's emitted into the queue in a deterministic slot.\n    // I.e. we can't insert it here when it completes.\n    // Assign an ID to refer to the future content by.\n    boundary.rootSegmentID = request.nextSegmentId++;\n    request.completedBoundaries.push(boundary); // Emit a pending rendered suspense boundary wrapper.\n\n    writeStartPendingSuspenseBoundary(destination, request.responseState, boundary.id); // Flush the fallback.\n\n    flushSubtree(request, destination, segment);\n    return writeEndPendingSuspenseBoundary(destination, request.responseState);\n  } else {\n    // We can inline this boundary's content as a complete boundary.\n    writeStartCompletedSuspenseBoundary(destination, request.responseState);\n    var completedSegments = boundary.completedSegments;\n\n    if (completedSegments.length !== 1) {\n      throw new Error('A previously unvisited boundary must have exactly one root segment. This is a bug in React.');\n    }\n\n    var contentSegment = completedSegments[0];\n    flushSegment(request, destination, contentSegment);\n    return writeEndCompletedSuspenseBoundary(destination, request.responseState);\n  }\n}\n\nfunction flushClientRenderedBoundary(request, destination, boundary) {\n  return writeClientRenderBoundaryInstruction(destination, request.responseState, boundary.id, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);\n}\n\nfunction flushSegmentContainer(request, destination, segment) {\n  writeStartSegment(destination, request.responseState, segment.formatContext, segment.id);\n  flushSegment(request, destination, segment);\n  return writeEndSegment(destination, segment.formatContext);\n}\n\nfunction flushCompletedBoundary(request, destination, boundary) {\n  var completedSegments = boundary.completedSegments;\n  var i = 0;\n\n  for (; i < completedSegments.length; i++) {\n    var segment = completedSegments[i];\n    flushPartiallyCompletedSegment(request, destination, boundary, segment);\n  }\n\n  completedSegments.length = 0;\n  return writeCompletedBoundaryInstruction(destination, request.responseState, boundary.id, boundary.rootSegmentID);\n}\n\nfunction flushPartialBoundary(request, destination, boundary) {\n  var completedSegments = boundary.completedSegments;\n  var i = 0;\n\n  for (; i < completedSegments.length; i++) {\n    var segment = completedSegments[i];\n\n    if (!flushPartiallyCompletedSegment(request, destination, boundary, segment)) {\n      i++;\n      completedSegments.splice(0, i); // Only write as much as the buffer wants. Something higher priority\n      // might want to write later.\n\n      return false;\n    }\n  }\n\n  completedSegments.splice(0, i);\n  return true;\n}\n\nfunction flushPartiallyCompletedSegment(request, destination, boundary, segment) {\n  if (segment.status === FLUSHED) {\n    // We've already flushed this inline.\n    return true;\n  }\n\n  var segmentID = segment.id;\n\n  if (segmentID === -1) {\n    // This segment wasn't previously referred to. This happens at the root of\n    // a boundary. We make kind of a leap here and assume this is the root.\n    var rootSegmentID = segment.id = boundary.rootSegmentID;\n\n    if (rootSegmentID === -1) {\n      throw new Error('A root segment ID must have been assigned by now. This is a bug in React.');\n    }\n\n    return flushSegmentContainer(request, destination, segment);\n  } else {\n    flushSegmentContainer(request, destination, segment);\n    return writeCompletedSegmentInstruction(destination, request.responseState, segmentID);\n  }\n}\n\nfunction flushCompletedQueues(request, destination) {\n  beginWriting();\n\n  try {\n    // The structure of this is to go through each queue one by one and write\n    // until the sink tells us to stop. When we should stop, we still finish writing\n    // that item fully and then yield. At that point we remove the already completed\n    // items up until the point we completed them.\n    // TODO: Emit preloading.\n    // TODO: It's kind of unfortunate to keep checking this array after we've already\n    // emitted the root.\n    var completedRootSegment = request.completedRootSegment;\n\n    if (completedRootSegment !== null && request.pendingRootTasks === 0) {\n      flushSegment(request, destination, completedRootSegment);\n      request.completedRootSegment = null;\n      writeCompletedRoot(destination, request.responseState);\n    } // We emit client rendering instructions for already emitted boundaries first.\n    // This is so that we can signal to the client to start client rendering them as\n    // soon as possible.\n\n\n    var clientRenderedBoundaries = request.clientRenderedBoundaries;\n    var i;\n\n    for (i = 0; i < clientRenderedBoundaries.length; i++) {\n      var boundary = clientRenderedBoundaries[i];\n\n      if (!flushClientRenderedBoundary(request, destination, boundary)) {\n        request.destination = null;\n        i++;\n        clientRenderedBoundaries.splice(0, i);\n        return;\n      }\n    }\n\n    clientRenderedBoundaries.splice(0, i); // Next we emit any complete boundaries. It's better to favor boundaries\n    // that are completely done since we can actually show them, than it is to emit\n    // any individual segments from a partially complete boundary.\n\n    var completedBoundaries = request.completedBoundaries;\n\n    for (i = 0; i < completedBoundaries.length; i++) {\n      var _boundary = completedBoundaries[i];\n\n      if (!flushCompletedBoundary(request, destination, _boundary)) {\n        request.destination = null;\n        i++;\n        completedBoundaries.splice(0, i);\n        return;\n      }\n    }\n\n    completedBoundaries.splice(0, i); // Allow anything written so far to flush to the underlying sink before\n    // we continue with lower priorities.\n\n    completeWriting(destination);\n    beginWriting(destination); // TODO: Here we'll emit data used by hydration.\n    // Next we emit any segments of any boundaries that are partially complete\n    // but not deeply complete.\n\n    var partialBoundaries = request.partialBoundaries;\n\n    for (i = 0; i < partialBoundaries.length; i++) {\n      var _boundary2 = partialBoundaries[i];\n\n      if (!flushPartialBoundary(request, destination, _boundary2)) {\n        request.destination = null;\n        i++;\n        partialBoundaries.splice(0, i);\n        return;\n      }\n    }\n\n    partialBoundaries.splice(0, i); // Next we check the completed boundaries again. This may have had\n    // boundaries added to it in case they were too larged to be inlined.\n    // New ones might be added in this loop.\n\n    var largeBoundaries = request.completedBoundaries;\n\n    for (i = 0; i < largeBoundaries.length; i++) {\n      var _boundary3 = largeBoundaries[i];\n\n      if (!flushCompletedBoundary(request, destination, _boundary3)) {\n        request.destination = null;\n        i++;\n        largeBoundaries.splice(0, i);\n        return;\n      }\n    }\n\n    largeBoundaries.splice(0, i);\n  } finally {\n    completeWriting(destination);\n\n    if (request.allPendingTasks === 0 && request.pingedTasks.length === 0 && request.clientRenderedBoundaries.length === 0 && request.completedBoundaries.length === 0 // We don't need to check any partially completed segments because\n    // either they have pending task or they're complete.\n    ) {\n        {\n          if (request.abortableTasks.size !== 0) {\n            error('There was still abortable task at the root when we closed. This is a bug in React.');\n          }\n        } // We're done.\n\n\n        close(destination);\n      }\n  }\n}\n\nfunction startWork(request) {\n  scheduleWork(function () {\n    return performWork(request);\n  });\n}\nfunction startFlowing(request, destination) {\n  if (request.status === CLOSING) {\n    request.status = CLOSED;\n    closeWithError(destination, request.fatalError);\n    return;\n  }\n\n  if (request.status === CLOSED) {\n    return;\n  }\n\n  if (request.destination !== null) {\n    // We're already flowing.\n    return;\n  }\n\n  request.destination = destination;\n\n  try {\n    flushCompletedQueues(request, destination);\n  } catch (error) {\n    logRecoverableError(request, error);\n    fatalError(request, error);\n  }\n} // This is called to early terminate a request. It puts all pending boundaries in client rendered state.\n\nfunction abort(request, reason) {\n  try {\n    var abortableTasks = request.abortableTasks;\n    abortableTasks.forEach(function (task) {\n      return abortTask(task, request, reason);\n    });\n    abortableTasks.clear();\n\n    if (request.destination !== null) {\n      flushCompletedQueues(request, request.destination);\n    }\n  } catch (error) {\n    logRecoverableError(request, error);\n    fatalError(request, error);\n  }\n}\n\nfunction renderToReadableStream(children, options) {\n  return new Promise(function (resolve, reject) {\n    var onFatalError;\n    var onAllReady;\n    var allReady = new Promise(function (res, rej) {\n      onAllReady = res;\n      onFatalError = rej;\n    });\n\n    function onShellReady() {\n      var stream = new ReadableStream({\n        type: 'bytes',\n        pull: function (controller) {\n          startFlowing(request, controller);\n        },\n        cancel: function (reason) {\n          abort(request);\n        }\n      }, // $FlowFixMe size() methods are not allowed on byte streams.\n      {\n        highWaterMark: 0\n      }); // TODO: Move to sub-classing ReadableStream.\n\n      stream.allReady = allReady;\n      resolve(stream);\n    }\n\n    function onShellError(error) {\n      // If the shell errors the caller of `renderToReadableStream` won't have access to `allReady`.\n      // However, `allReady` will be rejected by `onFatalError` as well.\n      // So we need to catch the duplicate, uncatchable fatal error in `allReady` to prevent a `UnhandledPromiseRejection`.\n      allReady.catch(function () {});\n      reject(error);\n    }\n\n    var request = createRequest(children, createResponseState(options ? options.identifierPrefix : undefined, options ? options.nonce : undefined, options ? options.bootstrapScriptContent : undefined, options ? options.bootstrapScripts : undefined, options ? options.bootstrapModules : undefined), createRootFormatContext(options ? options.namespaceURI : undefined), options ? options.progressiveChunkSize : undefined, options ? options.onError : undefined, onAllReady, onShellReady, onShellError, onFatalError);\n\n    if (options && options.signal) {\n      var signal = options.signal;\n\n      var listener = function () {\n        abort(request, signal.reason);\n        signal.removeEventListener('abort', listener);\n      };\n\n      signal.addEventListener('abort', listener);\n    }\n\n    startWork(request);\n  });\n}\n\nexports.renderToReadableStream = renderToReadableStream;\nexports.version = ReactVersion;\n  })();\n}\n", "'use strict';\n\nvar l, s;\nif (process.env.NODE_ENV === 'production') {\n  l = require('./cjs/react-dom-server-legacy.browser.production.min.js');\n  s = require('./cjs/react-dom-server.browser.production.min.js');\n} else {\n  l = require('./cjs/react-dom-server-legacy.browser.development.js');\n  s = require('./cjs/react-dom-server.browser.development.js');\n}\n\nexports.version = l.version;\nexports.renderToString = l.renderToString;\nexports.renderToStaticMarkup = l.renderToStaticMarkup;\nexports.renderToNodeStream = l.renderToNodeStream;\nexports.renderToStaticNodeStream = l.renderToStaticNodeStream;\nexports.renderToReadableStream = s.renderToReadableStream;\n", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// packages/ag-grid-react/src/agGridReact.tsx\nimport React18, { Component as Component2 } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/agGridReactUi.tsx\nimport {\n  BaseComponentWrapper,\n  ColumnApi,\n  ComponentUtil,\n  CtrlsService,\n  GridCoreCreator,\n  ModuleRegistry,\n  VanillaFrameworkOverrides,\n  _ as _8\n} from \"ag-grid-community\";\nimport React17, {\n  forwardRef as forwardRef3,\n  useCallback as useCallback15,\n  useContext as useContext14,\n  useEffect as useEffect9,\n  useImperativeHandle as useImperativeHandle3,\n  useMemo as useMemo13,\n  useRef as useRef15,\n  useState as useState16\n} from \"react\";\n\n// packages/ag-grid-react/src/shared/customComp/customComponentWrapper.ts\nimport { AgPromise as AgPromise2 } from \"ag-grid-community\";\n\n// packages/ag-grid-react/src/reactUi/customComp/customWrapperComp.tsx\nimport React, { memo, useEffect, useState } from \"react\";\n\n// packages/ag-grid-react/src/shared/customComp/customContext.ts\nimport { createContext } from \"react\";\nvar CustomContext = createContext({\n  setMethods: () => {\n  }\n});\n\n// packages/ag-grid-react/src/reactUi/customComp/customWrapperComp.tsx\nvar CustomWrapperComp = (params) => {\n  const { initialProps, addUpdateCallback, CustomComponentClass, setMethods } = params;\n  const [props, setProps] = useState(initialProps);\n  useEffect(() => {\n    addUpdateCallback((newProps) => setProps(newProps));\n  }, []);\n  return /* @__PURE__ */ React.createElement(CustomContext.Provider, { value: { setMethods } }, /* @__PURE__ */ React.createElement(CustomComponentClass, __spreadValues({}, props)));\n};\nvar customWrapperComp_default = memo(CustomWrapperComp);\n\n// packages/ag-grid-react/src/shared/reactComponent.ts\nimport { createElement } from \"react\";\nimport { AgPromise, _ } from \"ag-grid-community\";\n\n// packages/ag-grid-react/src/shared/keyGenerator.ts\nvar counter = 0;\nfunction generateNewKey() {\n  return `agPortalKey_${++counter}`;\n}\n\n// packages/ag-grid-react/src/shared/reactComponent.ts\nimport { createPortal } from \"react-dom\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nvar ReactComponent = class {\n  constructor(reactComponent, portalManager, componentType, suppressFallbackMethods) {\n    this.portal = null;\n    this.oldPortal = null;\n    this.reactComponent = reactComponent;\n    this.portalManager = portalManager;\n    this.componentType = componentType;\n    this.suppressFallbackMethods = !!suppressFallbackMethods;\n    this.statelessComponent = this.isStateless(this.reactComponent);\n    this.key = generateNewKey();\n    this.portalKey = generateNewKey();\n    this.instanceCreated = this.isStatelessComponent() ? AgPromise.resolve(false) : new AgPromise((resolve) => {\n      this.resolveInstanceCreated = resolve;\n    });\n  }\n  getGui() {\n    return this.eParentElement;\n  }\n  /** `getGui()` returns the parent element. This returns the actual root element. */\n  getRootElement() {\n    const firstChild = this.eParentElement.firstChild;\n    return firstChild;\n  }\n  destroy() {\n    if (this.componentInstance && typeof this.componentInstance.destroy == \"function\") {\n      this.componentInstance.destroy();\n    }\n    return this.portalManager.destroyPortal(this.portal);\n  }\n  createParentElement(params) {\n    const componentWrappingElement = this.portalManager.getComponentWrappingElement();\n    const eParentElement = document.createElement(componentWrappingElement || \"div\");\n    eParentElement.classList.add(\"ag-react-container\");\n    params.reactContainer = eParentElement;\n    return eParentElement;\n  }\n  addParentContainerStyleAndClasses() {\n    if (!this.componentInstance) {\n      return;\n    }\n    if (this.componentInstance.getReactContainerStyle && this.componentInstance.getReactContainerStyle()) {\n      _.warnOnce('Since v31.1 \"getReactContainerStyle\" is deprecated. Apply styling directly to \".ag-react-container\" if needed.');\n      Object.assign(this.eParentElement.style, this.componentInstance.getReactContainerStyle());\n    }\n    if (this.componentInstance.getReactContainerClasses && this.componentInstance.getReactContainerClasses()) {\n      _.warnOnce('Since v31.1 \"getReactContainerClasses\" is deprecated. Apply styling directly to \".ag-react-container\" if needed.');\n      const parentContainerClasses = this.componentInstance.getReactContainerClasses();\n      parentContainerClasses.forEach((className) => this.eParentElement.classList.add(className));\n    }\n  }\n  statelessComponentRendered() {\n    return this.eParentElement.childElementCount > 0 || this.eParentElement.childNodes.length > 0;\n  }\n  getFrameworkComponentInstance() {\n    return this.componentInstance;\n  }\n  isStatelessComponent() {\n    return this.statelessComponent;\n  }\n  getReactComponentName() {\n    return this.reactComponent.name;\n  }\n  getMemoType() {\n    return this.hasSymbol() ? Symbol.for(\"react.memo\") : 60115;\n  }\n  hasSymbol() {\n    return typeof Symbol === \"function\" && Symbol.for;\n  }\n  isStateless(Component3) {\n    return typeof Component3 === \"function\" && !(Component3.prototype && Component3.prototype.isReactComponent) || typeof Component3 === \"object\" && Component3.$$typeof === this.getMemoType();\n  }\n  hasMethod(name) {\n    const frameworkComponentInstance = this.getFrameworkComponentInstance();\n    return !!frameworkComponentInstance && frameworkComponentInstance[name] != null || this.fallbackMethodAvailable(name);\n  }\n  callMethod(name, args) {\n    const frameworkComponentInstance = this.getFrameworkComponentInstance();\n    if (this.isStatelessComponent()) {\n      return this.fallbackMethod(name, !!args && args[0] ? args[0] : {});\n    } else if (!!!frameworkComponentInstance) {\n      setTimeout(() => this.callMethod(name, args));\n      return;\n    }\n    const method = frameworkComponentInstance[name];\n    if (!!method) {\n      return method.apply(frameworkComponentInstance, args);\n    }\n    if (this.fallbackMethodAvailable(name)) {\n      return this.fallbackMethod(name, !!args && args[0] ? args[0] : {});\n    }\n  }\n  addMethod(name, callback) {\n    this[name] = callback;\n  }\n  init(params) {\n    this.eParentElement = this.createParentElement(params);\n    this.params = params;\n    this.createOrUpdatePortal(params);\n    return new AgPromise((resolve) => this.createReactComponent(resolve));\n  }\n  createOrUpdatePortal(params) {\n    if (!this.isStatelessComponent()) {\n      this.ref = (element) => {\n        var _a;\n        this.componentInstance = element;\n        this.addParentContainerStyleAndClasses();\n        (_a = this.resolveInstanceCreated) == null ? void 0 : _a.call(this, true);\n        this.resolveInstanceCreated = void 0;\n      };\n      params.ref = this.ref;\n    }\n    this.reactElement = this.createElement(this.reactComponent, __spreadProps(__spreadValues({}, params), { key: this.key }));\n    this.portal = createPortal(\n      this.reactElement,\n      this.eParentElement,\n      this.portalKey\n      // fixed deltaRowModeRefreshCompRenderer\n    );\n  }\n  createElement(reactComponent, props) {\n    return createElement(reactComponent, props);\n  }\n  createReactComponent(resolve) {\n    this.portalManager.mountReactPortal(this.portal, this, (value) => {\n      resolve(value);\n    });\n  }\n  isNullValue() {\n    return this.valueRenderedIsNull(this.params);\n  }\n  rendered() {\n    return this.isStatelessComponent() && this.statelessComponentRendered() || !!(!this.isStatelessComponent() && this.getFrameworkComponentInstance());\n  }\n  valueRenderedIsNull(params) {\n    if (!this.componentType.cellRenderer) {\n      return false;\n    }\n    const originalConsoleError = console.error;\n    try {\n      console.error = () => {\n      };\n      const staticMarkup = renderToStaticMarkup(createElement(this.reactComponent, params));\n      return staticMarkup === \"\";\n    } catch (ignore) {\n    } finally {\n      console.error = originalConsoleError;\n    }\n    return false;\n  }\n  /*\n  * fallback methods - these will be invoked if a corresponding instance method is not present\n  * for example if refresh is called and is not available on the component instance, then refreshComponent on this\n  * class will be invoked instead\n  *\n  * Currently only refresh is supported\n  */\n  refreshComponent(args) {\n    this.oldPortal = this.portal;\n    this.createOrUpdatePortal(args);\n    this.portalManager.updateReactPortal(this.oldPortal, this.portal);\n  }\n  fallbackMethod(name, params) {\n    const method = this[`${name}Component`];\n    if (!this.suppressFallbackMethods && !!method) {\n      return method.bind(this)(params);\n    }\n  }\n  fallbackMethodAvailable(name) {\n    if (this.suppressFallbackMethods) {\n      return false;\n    }\n    const method = this[`${name}Component`];\n    return !!method;\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/customComponentWrapper.ts\nfunction addOptionalMethods(optionalMethodNames, providedMethods, component) {\n  optionalMethodNames.forEach((methodName) => {\n    const providedMethod = providedMethods[methodName];\n    if (providedMethod) {\n      component[methodName] = providedMethod;\n    }\n  });\n}\nvar CustomComponentWrapper = class extends ReactComponent {\n  constructor() {\n    super(...arguments);\n    this.awaitUpdateCallback = new AgPromise2((resolve) => {\n      this.resolveUpdateCallback = resolve;\n    });\n    this.wrapperComponent = customWrapperComp_default;\n  }\n  init(params) {\n    this.sourceParams = params;\n    return super.init(this.getProps());\n  }\n  addMethod() {\n  }\n  getInstance() {\n    return this.instanceCreated.then(() => this.componentInstance);\n  }\n  getFrameworkComponentInstance() {\n    return this;\n  }\n  createElement(reactComponent, props) {\n    return super.createElement(this.wrapperComponent, {\n      initialProps: props,\n      CustomComponentClass: reactComponent,\n      setMethods: (methods) => this.setMethods(methods),\n      addUpdateCallback: (callback) => {\n        this.updateCallback = () => {\n          callback(this.getProps());\n          return new AgPromise2((resolve) => {\n            setTimeout(() => {\n              resolve();\n            });\n          });\n        };\n        this.resolveUpdateCallback();\n      }\n    });\n  }\n  setMethods(methods) {\n    this.providedMethods = methods;\n    addOptionalMethods(this.getOptionalMethods(), this.providedMethods, this);\n  }\n  getOptionalMethods() {\n    return [];\n  }\n  getProps() {\n    return __spreadProps(__spreadValues({}, this.sourceParams), {\n      key: this.key,\n      ref: this.ref\n    });\n  }\n  refreshProps() {\n    if (this.updateCallback) {\n      return this.updateCallback();\n    }\n    return new AgPromise2((resolve) => this.awaitUpdateCallback.then(() => {\n      this.updateCallback().then(() => resolve());\n    }));\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/dateComponentWrapper.ts\nvar DateComponentWrapper = class extends CustomComponentWrapper {\n  constructor() {\n    super(...arguments);\n    this.date = null;\n    this.onDateChange = (date) => this.updateDate(date);\n  }\n  getDate() {\n    return this.date;\n  }\n  setDate(date) {\n    this.date = date;\n    this.refreshProps();\n  }\n  refresh(params) {\n    this.sourceParams = params;\n    this.refreshProps();\n  }\n  getOptionalMethods() {\n    return [\"afterGuiAttached\", \"setInputPlaceholder\", \"setInputAriaLabel\", \"setDisabled\"];\n  }\n  updateDate(date) {\n    this.setDate(date);\n    this.sourceParams.onDateChanged();\n  }\n  getProps() {\n    const props = super.getProps();\n    props.date = this.date;\n    props.onDateChange = this.onDateChange;\n    delete props.onDateChanged;\n    return props;\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/filterComponentWrapper.ts\nvar FilterComponentWrapper = class extends CustomComponentWrapper {\n  constructor() {\n    super(...arguments);\n    this.model = null;\n    this.onModelChange = (model) => this.updateModel(model);\n    this.onUiChange = () => this.sourceParams.filterChangedCallback();\n  }\n  isFilterActive() {\n    return this.model != null;\n  }\n  doesFilterPass(params) {\n    return this.providedMethods.doesFilterPass(params);\n  }\n  getModel() {\n    return this.model;\n  }\n  setModel(model) {\n    this.model = model;\n    return this.refreshProps();\n  }\n  refresh(newParams) {\n    this.sourceParams = newParams;\n    this.refreshProps();\n    return true;\n  }\n  getOptionalMethods() {\n    return [\"afterGuiAttached\", \"afterGuiDetached\", \"onNewRowsLoaded\", \"getModelAsString\", \"onAnyFilterChanged\"];\n  }\n  updateModel(model) {\n    this.setModel(model).then(() => this.sourceParams.filterChangedCallback());\n  }\n  getProps() {\n    const props = super.getProps();\n    props.model = this.model;\n    props.onModelChange = this.onModelChange;\n    props.onUiChange = this.onUiChange;\n    delete props.filterChangedCallback;\n    delete props.filterModifiedCallback;\n    delete props.valueGetter;\n    return props;\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/floatingFilterComponentProxy.ts\nimport { AgPromise as AgPromise3 } from \"ag-grid-community\";\nfunction updateFloatingFilterParent(params, model) {\n  params.parentFilterInstance((instance) => {\n    (instance.setModel(model) || AgPromise3.resolve()).then(() => {\n      params.filterParams.filterChangedCallback();\n    });\n  });\n}\nvar FloatingFilterComponentProxy = class {\n  constructor(floatingFilterParams, refreshProps) {\n    this.floatingFilterParams = floatingFilterParams;\n    this.refreshProps = refreshProps;\n    this.model = null;\n    this.onModelChange = (model) => this.updateModel(model);\n  }\n  getProps() {\n    return __spreadProps(__spreadValues({}, this.floatingFilterParams), {\n      model: this.model,\n      onModelChange: this.onModelChange\n    });\n  }\n  onParentModelChanged(parentModel) {\n    this.model = parentModel;\n    this.refreshProps();\n  }\n  refresh(params) {\n    this.floatingFilterParams = params;\n    this.refreshProps();\n  }\n  setMethods(methods) {\n    addOptionalMethods(this.getOptionalMethods(), methods, this);\n  }\n  getOptionalMethods() {\n    return [\"afterGuiAttached\"];\n  }\n  updateModel(model) {\n    this.model = model;\n    this.refreshProps();\n    updateFloatingFilterParent(this.floatingFilterParams, model);\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/floatingFilterComponentWrapper.ts\nvar FloatingFilterComponentWrapper = class extends CustomComponentWrapper {\n  constructor() {\n    super(...arguments);\n    this.model = null;\n    this.onModelChange = (model) => this.updateModel(model);\n  }\n  onParentModelChanged(parentModel) {\n    this.model = parentModel;\n    this.refreshProps();\n  }\n  refresh(newParams) {\n    this.sourceParams = newParams;\n    this.refreshProps();\n  }\n  getOptionalMethods() {\n    return [\"afterGuiAttached\"];\n  }\n  updateModel(model) {\n    this.model = model;\n    this.refreshProps();\n    updateFloatingFilterParent(this.sourceParams, model);\n  }\n  getProps() {\n    const props = super.getProps();\n    props.model = this.model;\n    props.onModelChange = this.onModelChange;\n    return props;\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/loadingOverlayComponentWrapper.ts\nvar LoadingOverlayComponentWrapper = class extends CustomComponentWrapper {\n  refresh(params) {\n    this.sourceParams = params;\n    this.refreshProps();\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/menuItemComponentWrapper.ts\nvar MenuItemComponentWrapper = class extends CustomComponentWrapper {\n  constructor() {\n    super(...arguments);\n    this.active = false;\n    this.expanded = false;\n    this.onActiveChange = (active) => this.updateActive(active);\n  }\n  setActive(active) {\n    this.awaitSetActive(active);\n  }\n  setExpanded(expanded) {\n    this.expanded = expanded;\n    this.refreshProps();\n  }\n  getOptionalMethods() {\n    return [\"select\", \"configureDefaults\"];\n  }\n  awaitSetActive(active) {\n    this.active = active;\n    return this.refreshProps();\n  }\n  updateActive(active) {\n    const result = this.awaitSetActive(active);\n    if (active) {\n      result.then(() => this.sourceParams.onItemActivated());\n    }\n  }\n  getProps() {\n    const props = super.getProps();\n    props.active = this.active;\n    props.expanded = this.expanded;\n    props.onActiveChange = this.onActiveChange;\n    delete props.onItemActivated;\n    return props;\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/noRowsOverlayComponentWrapper.ts\nvar NoRowsOverlayComponentWrapper = class extends CustomComponentWrapper {\n  refresh(params) {\n    this.sourceParams = params;\n    this.refreshProps();\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/statusPanelComponentWrapper.ts\nvar StatusPanelComponentWrapper = class extends CustomComponentWrapper {\n  refresh(params) {\n    this.sourceParams = params;\n    this.refreshProps();\n    return true;\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/toolPanelComponentWrapper.ts\nvar ToolPanelComponentWrapper = class extends CustomComponentWrapper {\n  constructor() {\n    super(...arguments);\n    this.onStateChange = (state) => this.updateState(state);\n  }\n  refresh(params) {\n    this.sourceParams = params;\n    this.refreshProps();\n    return true;\n  }\n  getState() {\n    return this.state;\n  }\n  updateState(state) {\n    this.state = state;\n    this.refreshProps();\n    this.sourceParams.onStateUpdated();\n  }\n  getProps() {\n    const props = super.getProps();\n    props.state = this.state;\n    props.onStateChange = this.onStateChange;\n    return props;\n  }\n};\n\n// packages/ag-grid-react/src/shared/portalManager.ts\nvar _PortalManager = class _PortalManager {\n  constructor(refresher, wrappingElement, maxComponentCreationTimeMs) {\n    this.destroyed = false;\n    this.portals = [];\n    this.hasPendingPortalUpdate = false;\n    this.wrappingElement = wrappingElement ? wrappingElement : \"div\";\n    this.refresher = refresher;\n    this.maxComponentCreationTimeMs = maxComponentCreationTimeMs ? maxComponentCreationTimeMs : _PortalManager.MAX_COMPONENT_CREATION_TIME_IN_MS;\n  }\n  getPortals() {\n    return this.portals;\n  }\n  destroy() {\n    this.destroyed = true;\n  }\n  destroyPortal(portal) {\n    this.portals = this.portals.filter((curPortal) => curPortal !== portal);\n    this.batchUpdate();\n  }\n  getComponentWrappingElement() {\n    return this.wrappingElement;\n  }\n  mountReactPortal(portal, reactComponent, resolve) {\n    this.portals = [...this.portals, portal];\n    this.waitForInstance(reactComponent, resolve);\n    this.batchUpdate();\n  }\n  updateReactPortal(oldPortal, newPortal) {\n    this.portals[this.portals.indexOf(oldPortal)] = newPortal;\n    this.batchUpdate();\n  }\n  batchUpdate() {\n    if (this.hasPendingPortalUpdate) {\n      return;\n    }\n    setTimeout(() => {\n      if (!this.destroyed) {\n        this.refresher();\n        this.hasPendingPortalUpdate = false;\n      }\n    });\n    this.hasPendingPortalUpdate = true;\n  }\n  waitForInstance(reactComponent, resolve, startTime = Date.now()) {\n    if (this.destroyed) {\n      resolve(null);\n      return;\n    }\n    if (reactComponent.rendered()) {\n      resolve(reactComponent);\n    } else {\n      if (Date.now() - startTime >= this.maxComponentCreationTimeMs && !this.hasPendingPortalUpdate) {\n        if (reactComponent.isNullValue()) {\n          resolve(reactComponent);\n          return;\n        }\n        console.error(`AG Grid: React Component '${reactComponent.getReactComponentName()}' not created within ${this.maxComponentCreationTimeMs}ms.`);\n        console.error(\"    If the component is using `forwardRef` but not `useImperativeHandle`, add the following: `useImperativeHandle(ref, () => ({}));`\");\n        return;\n      }\n      window.setTimeout(() => {\n        this.waitForInstance(reactComponent, resolve, startTime);\n      });\n    }\n  }\n};\n_PortalManager.MAX_COMPONENT_CREATION_TIME_IN_MS = 1e3;\nvar PortalManager = _PortalManager;\n\n// packages/ag-grid-react/src/reactUi/beansContext.tsx\nimport React2 from \"react\";\nvar BeansContext = React2.createContext({});\n\n// packages/ag-grid-react/src/reactUi/utils.tsx\nimport ReactDOM from \"react-dom\";\nvar classesList = (...list) => {\n  const filtered = list.filter((s) => s != null && s !== \"\");\n  return filtered.join(\" \");\n};\nvar CssClasses = class _CssClasses {\n  constructor(...initialClasses) {\n    this.classesMap = {};\n    initialClasses.forEach((className) => {\n      this.classesMap[className] = true;\n    });\n  }\n  setClass(className, on) {\n    const nothingHasChanged = !!this.classesMap[className] == on;\n    if (nothingHasChanged) {\n      return this;\n    }\n    const res = new _CssClasses();\n    res.classesMap = __spreadValues({}, this.classesMap);\n    res.classesMap[className] = on;\n    return res;\n  }\n  toString() {\n    const res = Object.keys(this.classesMap).filter((key) => this.classesMap[key]).join(\" \");\n    return res;\n  }\n};\nvar isComponentStateless = (Component3) => {\n  const hasSymbol = () => typeof Symbol === \"function\" && Symbol.for;\n  const getMemoType = () => hasSymbol() ? Symbol.for(\"react.memo\") : 60115;\n  return typeof Component3 === \"function\" && !(Component3.prototype && Component3.prototype.isReactComponent) || typeof Component3 === \"object\" && Component3.$$typeof === getMemoType();\n};\nvar createRootAndFlushSyncAvailable = ReactDOM.createRoot != null && ReactDOM.flushSync != null;\nvar disableFlushSync = false;\nfunction runWithoutFlushSync(func) {\n  if (!disableFlushSync) {\n    setTimeout(() => disableFlushSync = false, 0);\n  }\n  disableFlushSync = true;\n  return func();\n}\nvar agFlushSync = (useFlushSync, fn) => {\n  if (createRootAndFlushSyncAvailable && useFlushSync && !disableFlushSync) {\n    ReactDOM.flushSync(fn);\n  } else {\n    fn();\n  }\n};\nfunction getNextValueIfDifferent(prev, next, maintainOrder) {\n  if (next == null || prev == null) {\n    return next;\n  }\n  if (prev === next || next.length === 0 && prev.length === 0) {\n    return prev;\n  }\n  if (maintainOrder || prev.length === 0 && next.length > 0 || prev.length > 0 && next.length === 0) {\n    return next;\n  }\n  const oldValues = [];\n  const newValues = [];\n  const prevMap = /* @__PURE__ */ new Map();\n  const nextMap = /* @__PURE__ */ new Map();\n  for (let i = 0; i < next.length; i++) {\n    const c = next[i];\n    nextMap.set(c.getInstanceId(), c);\n  }\n  for (let i = 0; i < prev.length; i++) {\n    const c = prev[i];\n    prevMap.set(c.getInstanceId(), c);\n    if (nextMap.has(c.getInstanceId())) {\n      oldValues.push(c);\n    }\n  }\n  for (let i = 0; i < next.length; i++) {\n    const c = next[i];\n    const instanceId = c.getInstanceId();\n    if (!prevMap.has(instanceId)) {\n      newValues.push(c);\n    }\n  }\n  if (oldValues.length === prev.length && newValues.length === 0) {\n    return prev;\n  }\n  if (oldValues.length === 0 && newValues.length === next.length) {\n    return next;\n  }\n  if (oldValues.length === 0) {\n    return newValues;\n  }\n  if (newValues.length === 0) {\n    return oldValues;\n  }\n  return [...oldValues, ...newValues];\n}\n\n// packages/ag-grid-react/src/reactUi/cellRenderer/groupCellRenderer.tsx\nimport { GroupCellRendererCtrl, _ as _2 } from \"ag-grid-community\";\nimport React3, { useContext, useImperativeHandle, forwardRef, useMemo, useRef, useState as useState2, useLayoutEffect, useCallback } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/jsComp.tsx\nvar showJsComp = (compDetails, context, eParent, ref) => {\n  const doNothing = !compDetails || compDetails.componentFromFramework || context.isDestroyed();\n  if (doNothing) {\n    return;\n  }\n  const promise = compDetails.newAgStackInstance();\n  if (!promise) {\n    return;\n  }\n  let comp;\n  let compGui;\n  let destroyed = false;\n  promise.then((c) => {\n    if (destroyed) {\n      context.destroyBean(c);\n      return;\n    }\n    comp = c;\n    compGui = comp.getGui();\n    eParent.appendChild(compGui);\n    setRef(ref, comp);\n  });\n  return () => {\n    destroyed = true;\n    if (!comp) {\n      return;\n    }\n    if (compGui && compGui.parentElement) {\n      compGui.parentElement.removeChild(compGui);\n    }\n    context.destroyBean(comp);\n    if (ref) {\n      setRef(ref, void 0);\n    }\n  };\n};\nvar setRef = (ref, value) => {\n  if (!ref) {\n    return;\n  }\n  if (ref instanceof Function) {\n    const refCallback = ref;\n    refCallback(value);\n  } else {\n    const refObj = ref;\n    refObj.current = value;\n  }\n};\nvar createSyncJsComp = (compDetails) => {\n  const promise = compDetails.newAgStackInstance();\n  if (!promise) {\n    return;\n  }\n  return promise.resolveNow(null, (x) => x);\n};\n\n// packages/ag-grid-react/src/reactUi/cellRenderer/groupCellRenderer.tsx\nvar GroupCellRenderer = forwardRef((props, ref) => {\n  var _a;\n  const context = useContext(BeansContext).context;\n  const eGui = useRef(null);\n  const eValueRef = useRef(null);\n  const eCheckboxRef = useRef(null);\n  const eExpandedRef = useRef(null);\n  const eContractedRef = useRef(null);\n  const ctrlRef = useRef();\n  const [innerCompDetails, setInnerCompDetails] = useState2();\n  const [childCount, setChildCount] = useState2();\n  const [value, setValue] = useState2();\n  const [cssClasses, setCssClasses] = useState2(() => new CssClasses());\n  const [expandedCssClasses, setExpandedCssClasses] = useState2(() => new CssClasses(\"ag-hidden\"));\n  const [contractedCssClasses, setContractedCssClasses] = useState2(() => new CssClasses(\"ag-hidden\"));\n  const [checkboxCssClasses, setCheckboxCssClasses] = useState2(() => new CssClasses(\"ag-invisible\"));\n  useImperativeHandle(ref, () => {\n    return {\n      // force new instance when grid tries to refresh\n      refresh() {\n        return false;\n      }\n    };\n  });\n  useLayoutEffect(() => {\n    return showJsComp(innerCompDetails, context, eValueRef.current);\n  }, [innerCompDetails]);\n  const setRef2 = useCallback((ref2) => {\n    eGui.current = ref2;\n    if (!eGui.current) {\n      context.destroyBean(ctrlRef.current);\n      ctrlRef.current = null;\n      return;\n    }\n    const compProxy = {\n      setInnerRenderer: (details, valueToDisplay) => {\n        setInnerCompDetails(details);\n        setValue(valueToDisplay);\n      },\n      setChildCount: (count) => setChildCount(count),\n      addOrRemoveCssClass: (name, on) => setCssClasses((prev) => prev.setClass(name, on)),\n      setContractedDisplayed: (displayed) => setContractedCssClasses((prev) => prev.setClass(\"ag-hidden\", !displayed)),\n      setExpandedDisplayed: (displayed) => setExpandedCssClasses((prev) => prev.setClass(\"ag-hidden\", !displayed)),\n      setCheckboxVisible: (visible) => setCheckboxCssClasses((prev) => prev.setClass(\"ag-invisible\", !visible))\n    };\n    ctrlRef.current = context.createBean(new GroupCellRendererCtrl());\n    ctrlRef.current.init(compProxy, eGui.current, eCheckboxRef.current, eExpandedRef.current, eContractedRef.current, GroupCellRenderer, props);\n  }, []);\n  const className = useMemo(() => `ag-cell-wrapper ${cssClasses.toString()}`, [cssClasses]);\n  const expandedClassName = useMemo(() => `ag-group-expanded ${expandedCssClasses.toString()}`, [expandedCssClasses]);\n  const contractedClassName = useMemo(() => `ag-group-contracted ${contractedCssClasses.toString()}`, [contractedCssClasses]);\n  const checkboxClassName = useMemo(() => `ag-group-checkbox ${checkboxCssClasses.toString()}`, [checkboxCssClasses]);\n  const useFwRenderer = innerCompDetails && innerCompDetails.componentFromFramework;\n  const FwRenderer = useFwRenderer ? innerCompDetails.componentClass : void 0;\n  const useValue = innerCompDetails == null && value != null;\n  const escapedValue = _2.escapeString(value, true);\n  return /* @__PURE__ */ React3.createElement(\"span\", __spreadValues({ className, ref: setRef2 }, !props.colDef ? { role: (_a = ctrlRef.current) == null ? void 0 : _a.getCellAriaRole() } : {}), /* @__PURE__ */ React3.createElement(\"span\", { className: expandedClassName, ref: eExpandedRef }), /* @__PURE__ */ React3.createElement(\"span\", { className: contractedClassName, ref: eContractedRef }), /* @__PURE__ */ React3.createElement(\"span\", { className: checkboxClassName, ref: eCheckboxRef }), /* @__PURE__ */ React3.createElement(\"span\", { className: \"ag-group-value\", ref: eValueRef }, useValue && /* @__PURE__ */ React3.createElement(React3.Fragment, null, escapedValue), useFwRenderer && /* @__PURE__ */ React3.createElement(FwRenderer, __spreadValues({}, innerCompDetails.params))), /* @__PURE__ */ React3.createElement(\"span\", { className: \"ag-group-child-count\" }, childCount));\n});\nvar groupCellRenderer_default = GroupCellRenderer;\n\n// packages/ag-grid-react/src/reactUi/gridComp.tsx\nimport {\n  GridCtrl as GridCtrl2\n} from \"ag-grid-community\";\nimport React16, { memo as memo14, useCallback as useCallback14, useEffect as useEffect8, useMemo as useMemo12, useRef as useRef14, useState as useState15 } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/gridBodyComp.tsx\nimport { CssClassManager as CssClassManager4, GridBodyCtrl, RowContainerName as RowContainerName2, _ as _7 } from \"ag-grid-community\";\nimport React14, { memo as memo12, useCallback as useCallback12, useContext as useContext12, useMemo as useMemo11, useRef as useRef12, useState as useState14 } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/header/gridHeaderComp.tsx\nimport React9, { memo as memo7, useCallback as useCallback7, useContext as useContext6, useMemo as useMemo7, useRef as useRef7, useState as useState8 } from \"react\";\nimport {\n  GridHeaderCtrl\n} from \"ag-grid-community\";\n\n// packages/ag-grid-react/src/reactUi/header/headerRowContainerComp.tsx\nimport React8, { memo as memo6, useCallback as useCallback6, useContext as useContext5, useRef as useRef6, useState as useState7 } from \"react\";\nimport {\n  HeaderRowContainerCtrl\n} from \"ag-grid-community\";\n\n// packages/ag-grid-react/src/reactUi/header/headerRowComp.tsx\nimport { HeaderRowType } from \"ag-grid-community\";\nimport React7, { memo as memo5, useCallback as useCallback5, useMemo as useMemo5, useRef as useRef5, useState as useState6 } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/header/headerCellComp.tsx\nimport React4, { memo as memo2, useCallback as useCallback2, useContext as useContext2, useEffect as useEffect2, useLayoutEffect as useLayoutEffect2, useMemo as useMemo2, useRef as useRef2, useState as useState3 } from \"react\";\nimport { CssClassManager, _ as _3 } from \"ag-grid-community\";\nvar HeaderCellComp = (props) => {\n  const { ctrl } = props;\n  const isAlive = ctrl.isAlive();\n  const { context } = useContext2(BeansContext);\n  const colId = isAlive ? ctrl.getColId() : void 0;\n  const [userCompDetails, setUserCompDetails] = useState3();\n  const eGui = useRef2(null);\n  const eResize = useRef2(null);\n  const eHeaderCompWrapper = useRef2(null);\n  const userCompRef = useRef2();\n  let cssClassManager = useRef2();\n  if (isAlive && !cssClassManager.current) {\n    cssClassManager.current = new CssClassManager(() => eGui.current);\n  }\n  const setRef2 = useCallback2((e) => {\n    var _a;\n    eGui.current = e;\n    if (!eGui.current || !isAlive) {\n      return;\n    }\n    const compProxy = {\n      setWidth: (width) => {\n        if (eGui.current) {\n          eGui.current.style.width = width;\n        }\n      },\n      addOrRemoveCssClass: (name, on) => cssClassManager.current.addOrRemoveCssClass(name, on),\n      setAriaSort: (sort) => {\n        if (eGui.current) {\n          sort ? _3.setAriaSort(eGui.current, sort) : _3.removeAriaSort(eGui.current);\n        }\n      },\n      setUserCompDetails: (compDetails) => setUserCompDetails(compDetails),\n      getUserCompInstance: () => userCompRef.current || void 0\n    };\n    ctrl.setComp(compProxy, eGui.current, eResize.current, eHeaderCompWrapper.current);\n    const selectAllGui = ctrl.getSelectAllGui();\n    (_a = eResize.current) == null ? void 0 : _a.insertAdjacentElement(\"afterend\", selectAllGui);\n  }, []);\n  useLayoutEffect2(() => showJsComp(userCompDetails, context, eHeaderCompWrapper.current, userCompRef), [userCompDetails]);\n  useEffect2(() => {\n    ctrl.setDragSource(eGui.current);\n  }, [userCompDetails]);\n  const userCompStateless = useMemo2(() => {\n    const res = (userCompDetails == null ? void 0 : userCompDetails.componentFromFramework) && isComponentStateless(userCompDetails.componentClass);\n    return !!res;\n  }, [userCompDetails]);\n  const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n  const UserCompClass = userCompDetails && userCompDetails.componentClass;\n  return /* @__PURE__ */ React4.createElement(\n    \"div\",\n    {\n      ref: setRef2,\n      className: \"ag-header-cell\",\n      \"col-id\": colId,\n      role: \"columnheader\"\n    },\n    /* @__PURE__ */ React4.createElement(\"div\", { ref: eResize, className: \"ag-header-cell-resize\", role: \"presentation\" }),\n    /* @__PURE__ */ React4.createElement(\"div\", { ref: eHeaderCompWrapper, className: \"ag-header-cell-comp-wrapper\", role: \"presentation\" }, reactUserComp && userCompStateless && /* @__PURE__ */ React4.createElement(UserCompClass, __spreadValues({}, userCompDetails.params)), reactUserComp && !userCompStateless && /* @__PURE__ */ React4.createElement(UserCompClass, __spreadProps(__spreadValues({}, userCompDetails.params), { ref: userCompRef })))\n  );\n};\nvar headerCellComp_default = memo2(HeaderCellComp);\n\n// packages/ag-grid-react/src/reactUi/header/headerGroupCellComp.tsx\nimport React5, { memo as memo3, useCallback as useCallback3, useContext as useContext3, useEffect as useEffect3, useLayoutEffect as useLayoutEffect3, useMemo as useMemo3, useRef as useRef3, useState as useState4 } from \"react\";\nvar HeaderGroupCellComp = (props) => {\n  const { context } = useContext3(BeansContext);\n  const { ctrl } = props;\n  const [cssClasses, setCssClasses] = useState4(() => new CssClasses());\n  const [cssResizableClasses, setResizableCssClasses] = useState4(() => new CssClasses());\n  const [resizableAriaHidden, setResizableAriaHidden] = useState4(\"false\");\n  const [ariaExpanded, setAriaExpanded] = useState4();\n  const [userCompDetails, setUserCompDetails] = useState4();\n  const colId = useMemo3(() => ctrl.getColId(), []);\n  const eGui = useRef3(null);\n  const eResize = useRef3(null);\n  const userCompRef = useRef3();\n  const setRef2 = useCallback3((e) => {\n    eGui.current = e;\n    if (!eGui.current) {\n      return;\n    }\n    const compProxy = {\n      setWidth: (width) => {\n        if (eGui.current) {\n          eGui.current.style.width = width;\n        }\n      },\n      addOrRemoveCssClass: (name, on) => setCssClasses((prev) => prev.setClass(name, on)),\n      setUserCompDetails: (compDetails) => setUserCompDetails(compDetails),\n      setResizableDisplayed: (displayed) => {\n        setResizableCssClasses((prev) => prev.setClass(\"ag-hidden\", !displayed));\n        setResizableAriaHidden(!displayed ? \"true\" : \"false\");\n      },\n      setAriaExpanded: (expanded) => setAriaExpanded(expanded),\n      getUserCompInstance: () => userCompRef.current || void 0\n    };\n    ctrl.setComp(compProxy, eGui.current, eResize.current);\n  }, []);\n  useLayoutEffect3(() => showJsComp(userCompDetails, context, eGui.current), [userCompDetails]);\n  useEffect3(() => {\n    if (eGui.current) {\n      ctrl.setDragSource(eGui.current);\n    }\n  }, [userCompDetails]);\n  const userCompStateless = useMemo3(() => {\n    const res = (userCompDetails == null ? void 0 : userCompDetails.componentFromFramework) && isComponentStateless(userCompDetails.componentClass);\n    return !!res;\n  }, [userCompDetails]);\n  const className = useMemo3(() => \"ag-header-group-cell \" + cssClasses.toString(), [cssClasses]);\n  const resizableClassName = useMemo3(() => \"ag-header-cell-resize \" + cssResizableClasses.toString(), [cssResizableClasses]);\n  const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n  const UserCompClass = userCompDetails && userCompDetails.componentClass;\n  return /* @__PURE__ */ React5.createElement(\n    \"div\",\n    {\n      ref: setRef2,\n      className,\n      \"col-id\": colId,\n      role: \"columnheader\",\n      \"aria-expanded\": ariaExpanded\n    },\n    reactUserComp && userCompStateless && /* @__PURE__ */ React5.createElement(UserCompClass, __spreadValues({}, userCompDetails.params)),\n    reactUserComp && !userCompStateless && /* @__PURE__ */ React5.createElement(UserCompClass, __spreadProps(__spreadValues({}, userCompDetails.params), { ref: userCompRef })),\n    /* @__PURE__ */ React5.createElement(\"div\", { ref: eResize, \"aria-hidden\": resizableAriaHidden, className: resizableClassName })\n  );\n};\nvar headerGroupCellComp_default = memo3(HeaderGroupCellComp);\n\n// packages/ag-grid-react/src/reactUi/header/headerFilterCellComp.tsx\nimport React6, { memo as memo4, useCallback as useCallback4, useContext as useContext4, useLayoutEffect as useLayoutEffect4, useMemo as useMemo4, useRef as useRef4, useState as useState5 } from \"react\";\nimport { AgPromise as AgPromise5 } from \"ag-grid-community\";\n\n// packages/ag-grid-react/src/shared/customComp/util.ts\nimport { AgPromise as AgPromise4, _ as _4 } from \"ag-grid-community\";\nfunction getInstance(wrapperComponent, callback) {\n  var _a, _b;\n  const promise = (_b = (_a = wrapperComponent == null ? void 0 : wrapperComponent.getInstance) == null ? void 0 : _a.call(wrapperComponent)) != null ? _b : AgPromise4.resolve(void 0);\n  promise.then((comp) => callback(comp));\n}\nfunction warnReactiveCustomComponents() {\n  _4.warnOnce(\"Using custom components without `reactiveCustomComponents = true` is deprecated.\");\n}\n\n// packages/ag-grid-react/src/reactUi/header/headerFilterCellComp.tsx\nvar HeaderFilterCellComp = (props) => {\n  const { context, gos } = useContext4(BeansContext);\n  const [cssClasses, setCssClasses] = useState5(() => new CssClasses(\"ag-header-cell\", \"ag-floating-filter\"));\n  const [cssBodyClasses, setBodyCssClasses] = useState5(() => new CssClasses());\n  const [cssButtonWrapperClasses, setButtonWrapperCssClasses] = useState5(() => new CssClasses(\"ag-floating-filter-button\", \"ag-hidden\"));\n  const [buttonWrapperAriaHidden, setButtonWrapperAriaHidden] = useState5(\"false\");\n  const [userCompDetails, setUserCompDetails] = useState5();\n  const [renderKey, setRenderKey] = useState5(1);\n  const eGui = useRef4(null);\n  const eFloatingFilterBody = useRef4(null);\n  const eButtonWrapper = useRef4(null);\n  const eButtonShowMainFilter = useRef4(null);\n  const userCompResolve = useRef4();\n  const userCompPromise = useRef4();\n  const userCompRef = (value) => {\n    if (value == null) {\n      return;\n    }\n    userCompResolve.current && userCompResolve.current(value);\n  };\n  const { ctrl } = props;\n  const setRef2 = useCallback4((e) => {\n    eGui.current = e;\n    if (!eGui.current) {\n      return;\n    }\n    userCompPromise.current = new AgPromise5((resolve) => {\n      userCompResolve.current = resolve;\n    });\n    const compProxy = {\n      addOrRemoveCssClass: (name, on) => setCssClasses((prev) => prev.setClass(name, on)),\n      addOrRemoveBodyCssClass: (name, on) => setBodyCssClasses((prev) => prev.setClass(name, on)),\n      setButtonWrapperDisplayed: (displayed) => {\n        setButtonWrapperCssClasses((prev) => prev.setClass(\"ag-hidden\", !displayed));\n        setButtonWrapperAriaHidden(!displayed ? \"true\" : \"false\");\n      },\n      setWidth: (width) => {\n        if (eGui.current) {\n          eGui.current.style.width = width;\n        }\n      },\n      setCompDetails: (compDetails) => setUserCompDetails(compDetails),\n      getFloatingFilterComp: () => userCompPromise.current ? userCompPromise.current : null,\n      setMenuIcon: (eIcon) => {\n        var _a;\n        return (_a = eButtonShowMainFilter.current) == null ? void 0 : _a.appendChild(eIcon);\n      }\n    };\n    ctrl.setComp(compProxy, eGui.current, eButtonShowMainFilter.current, eFloatingFilterBody.current);\n  }, []);\n  useLayoutEffect4(() => showJsComp(userCompDetails, context, eFloatingFilterBody.current, userCompRef), [userCompDetails]);\n  const className = useMemo4(() => cssClasses.toString(), [cssClasses]);\n  const bodyClassName = useMemo4(() => cssBodyClasses.toString(), [cssBodyClasses]);\n  const buttonWrapperClassName = useMemo4(() => cssButtonWrapperClasses.toString(), [cssButtonWrapperClasses]);\n  const userCompStateless = useMemo4(() => {\n    const res = userCompDetails && userCompDetails.componentFromFramework && isComponentStateless(userCompDetails.componentClass);\n    return !!res;\n  }, [userCompDetails]);\n  const reactiveCustomComponents = useMemo4(() => gos.get(\"reactiveCustomComponents\"), []);\n  const floatingFilterCompProxy = useMemo4(() => {\n    if (userCompDetails) {\n      if (reactiveCustomComponents) {\n        const compProxy = new FloatingFilterComponentProxy(userCompDetails.params, () => setRenderKey((prev) => prev + 1));\n        userCompRef(compProxy);\n        return compProxy;\n      } else if (userCompDetails.componentFromFramework) {\n        warnReactiveCustomComponents();\n      }\n    }\n    return void 0;\n  }, [userCompDetails]);\n  const floatingFilterProps = floatingFilterCompProxy == null ? void 0 : floatingFilterCompProxy.getProps();\n  const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n  const UserCompClass = userCompDetails && userCompDetails.componentClass;\n  return /* @__PURE__ */ React6.createElement(\"div\", { ref: setRef2, className, role: \"gridcell\" }, /* @__PURE__ */ React6.createElement(\"div\", { ref: eFloatingFilterBody, className: bodyClassName, role: \"presentation\" }, reactUserComp && !reactiveCustomComponents && /* @__PURE__ */ React6.createElement(UserCompClass, __spreadProps(__spreadValues({}, userCompDetails.params), { ref: userCompStateless ? () => {\n  } : userCompRef })), reactUserComp && reactiveCustomComponents && /* @__PURE__ */ React6.createElement(CustomContext.Provider, { value: {\n    setMethods: (methods) => floatingFilterCompProxy.setMethods(methods)\n  } }, /* @__PURE__ */ React6.createElement(UserCompClass, __spreadValues({}, floatingFilterProps)))), /* @__PURE__ */ React6.createElement(\"div\", { ref: eButtonWrapper, \"aria-hidden\": buttonWrapperAriaHidden, className: buttonWrapperClassName, role: \"presentation\" }, /* @__PURE__ */ React6.createElement(\"button\", { ref: eButtonShowMainFilter, type: \"button\", className: \"ag-button ag-floating-filter-button-button\", tabIndex: -1 })));\n};\nvar headerFilterCellComp_default = memo4(HeaderFilterCellComp);\n\n// packages/ag-grid-react/src/reactUi/header/headerRowComp.tsx\nvar HeaderRowComp = (props) => {\n  const { ctrl } = props;\n  const { topOffset, rowHeight } = useMemo5(() => ctrl.getTopAndHeight(), []);\n  const ariaRowIndex = ctrl.getAriaRowIndex();\n  const className = ctrl.getHeaderRowClass();\n  const [height, setHeight] = useState6(() => rowHeight + \"px\");\n  const [top, setTop] = useState6(() => topOffset + \"px\");\n  const cellCtrlsRef = useRef5(null);\n  const prevCellCtrlsRef = useRef5(null);\n  const [cellCtrls, setCellCtrls] = useState6(() => ctrl.getHeaderCtrls());\n  const eGui = useRef5(null);\n  const setRef2 = useCallback5((e) => {\n    eGui.current = e;\n    if (!e) {\n      return;\n    }\n    const compProxy = {\n      setHeight: (height2) => setHeight(height2),\n      setTop: (top2) => setTop(top2),\n      setHeaderCtrls: (ctrls, forceOrder, afterScroll) => {\n        prevCellCtrlsRef.current = cellCtrlsRef.current;\n        cellCtrlsRef.current = ctrls;\n        const next = getNextValueIfDifferent(prevCellCtrlsRef.current, ctrls, forceOrder);\n        if (next !== prevCellCtrlsRef.current) {\n          agFlushSync(afterScroll, () => setCellCtrls(next));\n        }\n      },\n      setWidth: (width) => {\n        if (eGui.current) {\n          eGui.current.style.width = width;\n        }\n      }\n    };\n    ctrl.setComp(compProxy, false);\n  }, []);\n  const style = useMemo5(() => ({\n    height,\n    top\n  }), [height, top]);\n  const createCellJsx = useCallback5((cellCtrl) => {\n    switch (ctrl.getType()) {\n      case HeaderRowType.COLUMN_GROUP:\n        return /* @__PURE__ */ React7.createElement(headerGroupCellComp_default, { ctrl: cellCtrl, key: cellCtrl.getInstanceId() });\n      case HeaderRowType.FLOATING_FILTER:\n        return /* @__PURE__ */ React7.createElement(headerFilterCellComp_default, { ctrl: cellCtrl, key: cellCtrl.getInstanceId() });\n      default:\n        return /* @__PURE__ */ React7.createElement(headerCellComp_default, { ctrl: cellCtrl, key: cellCtrl.getInstanceId() });\n    }\n  }, []);\n  return /* @__PURE__ */ React7.createElement(\"div\", { ref: setRef2, className, role: \"row\", style, \"aria-rowindex\": ariaRowIndex }, cellCtrls.map(createCellJsx));\n};\nvar headerRowComp_default = memo5(HeaderRowComp);\n\n// packages/ag-grid-react/src/reactUi/header/headerRowContainerComp.tsx\nvar HeaderRowContainerComp = (props) => {\n  const [displayed, setDisplayed] = useState7(true);\n  const [headerRowCtrls, setHeaderRowCtrls] = useState7([]);\n  const { context } = useContext5(BeansContext);\n  const eGui = useRef6(null);\n  const eCenterContainer = useRef6(null);\n  const headerRowCtrlRef = useRef6(null);\n  const pinnedLeft = props.pinned === \"left\";\n  const pinnedRight = props.pinned === \"right\";\n  const centre = !pinnedLeft && !pinnedRight;\n  const setRef2 = useCallback6((e) => {\n    eGui.current = e;\n    if (!eGui.current) {\n      context.destroyBean(headerRowCtrlRef.current);\n      headerRowCtrlRef.current = null;\n      return;\n    }\n    const compProxy = {\n      setDisplayed,\n      setCtrls: (ctrls) => setHeaderRowCtrls(ctrls),\n      // centre only\n      setCenterWidth: (width) => {\n        if (eCenterContainer.current) {\n          eCenterContainer.current.style.width = width;\n        }\n      },\n      setViewportScrollLeft: (left) => {\n        if (eGui.current) {\n          eGui.current.scrollLeft = left;\n        }\n      },\n      // pinned only\n      setPinnedContainerWidth: (width) => {\n        if (eGui.current) {\n          eGui.current.style.width = width;\n          eGui.current.style.minWidth = width;\n          eGui.current.style.maxWidth = width;\n        }\n      }\n    };\n    headerRowCtrlRef.current = context.createBean(new HeaderRowContainerCtrl(props.pinned));\n    headerRowCtrlRef.current.setComp(compProxy, eGui.current);\n  }, []);\n  const className = !displayed ? \"ag-hidden\" : \"\";\n  const insertRowsJsx = () => headerRowCtrls.map((ctrl) => /* @__PURE__ */ React8.createElement(headerRowComp_default, { ctrl, key: ctrl.getInstanceId() }));\n  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, pinnedLeft && /* @__PURE__ */ React8.createElement(\"div\", { ref: setRef2, className: \"ag-pinned-left-header \" + className, \"aria-hidden\": !displayed, role: \"rowgroup\" }, insertRowsJsx()), pinnedRight && /* @__PURE__ */ React8.createElement(\"div\", { ref: setRef2, className: \"ag-pinned-right-header \" + className, \"aria-hidden\": !displayed, role: \"rowgroup\" }, insertRowsJsx()), centre && /* @__PURE__ */ React8.createElement(\"div\", { ref: setRef2, className: \"ag-header-viewport \" + className, role: \"presentation\" }, /* @__PURE__ */ React8.createElement(\"div\", { ref: eCenterContainer, className: \"ag-header-container\", role: \"rowgroup\" }, insertRowsJsx())));\n};\nvar headerRowContainerComp_default = memo6(HeaderRowContainerComp);\n\n// packages/ag-grid-react/src/reactUi/header/gridHeaderComp.tsx\nvar GridHeaderComp = () => {\n  const [cssClasses, setCssClasses] = useState8(() => new CssClasses());\n  const [height, setHeight] = useState8();\n  const { context } = useContext6(BeansContext);\n  const eGui = useRef7(null);\n  const gridCtrlRef = useRef7(null);\n  const setRef2 = useCallback7((e) => {\n    eGui.current = e;\n    if (!e) {\n      context.destroyBean(gridCtrlRef.current);\n      gridCtrlRef.current = null;\n      return;\n    }\n    const compProxy = {\n      addOrRemoveCssClass: (name, on) => setCssClasses((prev) => prev.setClass(name, on)),\n      setHeightAndMinHeight: (height2) => setHeight(height2)\n    };\n    gridCtrlRef.current = context.createBean(new GridHeaderCtrl());\n    gridCtrlRef.current.setComp(compProxy, eGui.current, eGui.current);\n  }, []);\n  const className = useMemo7(() => {\n    let res = cssClasses.toString();\n    return \"ag-header \" + res;\n  }, [cssClasses]);\n  const style = useMemo7(() => ({\n    height,\n    minHeight: height\n  }), [height]);\n  return /* @__PURE__ */ React9.createElement(\"div\", { ref: setRef2, className, style, role: \"presentation\" }, /* @__PURE__ */ React9.createElement(headerRowContainerComp_default, { pinned: \"left\" }), /* @__PURE__ */ React9.createElement(headerRowContainerComp_default, { pinned: null }), /* @__PURE__ */ React9.createElement(headerRowContainerComp_default, { pinned: \"right\" }));\n};\nvar gridHeaderComp_default = memo7(GridHeaderComp);\n\n// packages/ag-grid-react/src/reactUi/reactComment.tsx\nimport { useEffect as useEffect4 } from \"react\";\nvar useReactCommentEffect = (comment, eForCommentRef) => {\n  useEffect4(() => {\n    const eForComment = eForCommentRef.current;\n    if (eForComment) {\n      const eParent = eForComment.parentElement;\n      if (eParent) {\n        const eComment = document.createComment(comment);\n        eParent.insertBefore(eComment, eForComment);\n        return () => {\n          eParent.removeChild(eComment);\n        };\n      }\n    }\n  }, [comment]);\n};\nvar reactComment_default = useReactCommentEffect;\n\n// packages/ag-grid-react/src/reactUi/rows/rowContainerComp.tsx\nimport { getRowContainerTypeForName, RowContainerCtrl, RowContainerName } from \"ag-grid-community\";\nimport React13, { useMemo as useMemo10, useRef as useRef11, useState as useState13, memo as memo11, useContext as useContext11, useCallback as useCallback11 } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/rows/rowComp.tsx\nimport React12, { useEffect as useEffect7, useRef as useRef10, useState as useState12, useMemo as useMemo9, memo as memo10, useContext as useContext10, useLayoutEffect as useLayoutEffect6, useCallback as useCallback10 } from \"react\";\nimport { CssClassManager as CssClassManager3 } from \"ag-grid-community\";\n\n// packages/ag-grid-react/src/reactUi/cells/cellComp.tsx\nimport { _ as _6, CssClassManager as CssClassManager2 } from \"ag-grid-community\";\nimport React11, { useCallback as useCallback9, useRef as useRef9, useState as useState11, useMemo as useMemo8, memo as memo9, useContext as useContext9, useLayoutEffect as useLayoutEffect5 } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/cells/popupEditorComp.tsx\nimport { PopupEditorWrapper } from \"ag-grid-community\";\nimport React10, { useState as useState10, memo as memo8, useContext as useContext7 } from \"react\";\nimport { createPortal as createPortal2 } from \"react-dom\";\n\n// packages/ag-grid-react/src/reactUi/useEffectOnce.tsx\nimport { useEffect as useEffect5, useRef as useRef8, useState as useState9 } from \"react\";\nvar useEffectOnce = (effect) => {\n  const effectFn = useRef8(effect);\n  const destroyFn = useRef8();\n  const effectCalled = useRef8(false);\n  const rendered = useRef8(false);\n  const [, setVal] = useState9(0);\n  if (effectCalled.current) {\n    rendered.current = true;\n  }\n  useEffect5(() => {\n    if (!effectCalled.current) {\n      destroyFn.current = effectFn.current();\n      effectCalled.current = true;\n    }\n    setVal((val) => val + 1);\n    return () => {\n      if (!rendered.current) {\n        return;\n      }\n      if (destroyFn.current) {\n        destroyFn.current();\n      }\n    };\n  }, []);\n};\n\n// packages/ag-grid-react/src/reactUi/cells/popupEditorComp.tsx\nvar PopupEditorComp = (props) => {\n  const [popupEditorWrapper, setPopupEditorWrapper] = useState10();\n  const { context, popupService, localeService, gos } = useContext7(BeansContext);\n  useEffectOnce(() => {\n    const { editDetails, cellCtrl, eParentCell } = props;\n    const { compDetails } = editDetails;\n    const useModelPopup = gos.get(\"stopEditingWhenCellsLoseFocus\");\n    const wrapper = context.createBean(new PopupEditorWrapper(compDetails.params));\n    const ePopupGui = wrapper.getGui();\n    if (props.jsChildComp) {\n      const eChildGui = props.jsChildComp.getGui();\n      if (eChildGui) {\n        ePopupGui.appendChild(eChildGui);\n      }\n    }\n    const positionParams = {\n      column: cellCtrl.getColumn(),\n      rowNode: cellCtrl.getRowNode(),\n      type: \"popupCellEditor\",\n      eventSource: eParentCell,\n      ePopup: ePopupGui,\n      position: editDetails.popupPosition,\n      keepWithinBounds: true\n    };\n    const positionCallback = popupService.positionPopupByComponent.bind(popupService, positionParams);\n    const translate = localeService.getLocaleTextFunc();\n    const addPopupRes = popupService.addPopup({\n      modal: useModelPopup,\n      eChild: ePopupGui,\n      closeOnEsc: true,\n      closedCallback: () => {\n        cellCtrl.onPopupEditorClosed();\n      },\n      anchorToElement: eParentCell,\n      positionCallback,\n      ariaLabel: translate(\"ariaLabelCellEditor\", \"Cell Editor\")\n    });\n    const hideEditorPopup = addPopupRes ? addPopupRes.hideFunc : void 0;\n    setPopupEditorWrapper(wrapper);\n    props.jsChildComp && props.jsChildComp.afterGuiAttached && props.jsChildComp.afterGuiAttached();\n    return () => {\n      if (hideEditorPopup != null) {\n        hideEditorPopup();\n      }\n      context.destroyBean(wrapper);\n    };\n  });\n  return /* @__PURE__ */ React10.createElement(React10.Fragment, null, popupEditorWrapper && props.wrappedContent && createPortal2(props.wrappedContent, popupEditorWrapper.getGui()));\n};\nvar popupEditorComp_default = memo8(PopupEditorComp);\n\n// packages/ag-grid-react/src/reactUi/cells/showJsRenderer.tsx\nimport { useCallback as useCallback8, useContext as useContext8, useEffect as useEffect6 } from \"react\";\nvar useJsCellRenderer = (showDetails, showTools, eCellValue, cellValueVersion, jsCellRendererRef, eGui) => {\n  const { context } = useContext8(BeansContext);\n  const destroyCellRenderer = useCallback8(() => {\n    const comp = jsCellRendererRef.current;\n    if (!comp) {\n      return;\n    }\n    const compGui = comp.getGui();\n    if (compGui && compGui.parentElement) {\n      compGui.parentElement.removeChild(compGui);\n    }\n    context.destroyBean(comp);\n    jsCellRendererRef.current = void 0;\n  }, []);\n  useEffect6(() => {\n    const showValue = showDetails != null;\n    const jsCompDetails = showDetails && showDetails.compDetails && !showDetails.compDetails.componentFromFramework;\n    const waitingForToolsSetup = showTools && eCellValue == null;\n    const showComp = showValue && jsCompDetails && !waitingForToolsSetup;\n    if (!showComp) {\n      destroyCellRenderer();\n      return;\n    }\n    const compDetails = showDetails.compDetails;\n    if (jsCellRendererRef.current) {\n      const comp2 = jsCellRendererRef.current;\n      const attemptRefresh = comp2.refresh != null && showDetails.force == false;\n      const refreshResult = attemptRefresh ? comp2.refresh(compDetails.params) : false;\n      const refreshWorked = refreshResult === true || refreshResult === void 0;\n      if (refreshWorked) {\n        return;\n      }\n      destroyCellRenderer();\n    }\n    const promise = compDetails.newAgStackInstance();\n    ;\n    if (!promise) {\n      return;\n    }\n    const comp = promise.resolveNow(null, (x) => x);\n    if (!comp) {\n      return;\n    }\n    const compGui = comp.getGui();\n    if (!compGui) {\n      return;\n    }\n    const parent = showTools ? eCellValue : eGui.current;\n    parent.appendChild(compGui);\n    jsCellRendererRef.current = comp;\n  }, [showDetails, showTools, cellValueVersion]);\n  useEffect6(() => {\n    return destroyCellRenderer;\n  }, []);\n};\nvar showJsRenderer_default = useJsCellRenderer;\n\n// packages/ag-grid-react/src/shared/customComp/cellEditorComponentProxy.ts\nimport { AgPromise as AgPromise6 } from \"ag-grid-community\";\nvar CellEditorComponentProxy = class {\n  constructor(cellEditorParams, refreshProps) {\n    this.cellEditorParams = cellEditorParams;\n    this.refreshProps = refreshProps;\n    this.instanceCreated = new AgPromise6((resolve) => {\n      this.resolveInstanceCreated = resolve;\n    });\n    this.onValueChange = (value) => this.updateValue(value);\n    this.value = cellEditorParams.value;\n  }\n  getProps() {\n    return __spreadProps(__spreadValues({}, this.cellEditorParams), {\n      initialValue: this.cellEditorParams.value,\n      value: this.value,\n      onValueChange: this.onValueChange\n    });\n  }\n  getValue() {\n    return this.value;\n  }\n  refresh(params) {\n    this.cellEditorParams = params;\n    this.refreshProps();\n  }\n  setMethods(methods) {\n    addOptionalMethods(this.getOptionalMethods(), methods, this);\n  }\n  getInstance() {\n    return this.instanceCreated.then(() => this.componentInstance);\n  }\n  setRef(componentInstance) {\n    var _a;\n    this.componentInstance = componentInstance;\n    (_a = this.resolveInstanceCreated) == null ? void 0 : _a.call(this);\n    this.resolveInstanceCreated = void 0;\n  }\n  getOptionalMethods() {\n    return [\"isPopup\", \"isCancelBeforeStart\", \"isCancelAfterEnd\", \"getPopupPosition\", \"focusIn\", \"focusOut\", \"afterGuiAttached\"];\n  }\n  updateValue(value) {\n    this.value = value;\n    this.refreshProps();\n  }\n};\n\n// packages/ag-grid-react/src/reactUi/cells/cellComp.tsx\nvar checkCellEditorDeprecations = (popup, cellEditor, cellCtrl) => {\n  const col = cellCtrl.getColumn();\n  if (!popup && cellEditor.isPopup && cellEditor.isPopup()) {\n    const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using React, specify an editor is a popup using colDef.cellEditorPopup=true. AG Grid React cannot depend on the editor component specifying if it's in a popup (via the isPopup() method on the editor), as React needs to know this information BEFORE the component is created.`;\n    _6.doOnce(() => console.warn(msg), \"jsEditorComp-isPopup-\" + cellCtrl.getColumn().getColId());\n  }\n  if (popup && cellEditor.getPopupPosition && cellEditor.getPopupPosition() != null) {\n    const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using React, specify an editor popup position using colDef.cellEditorPopupPosition=true. AG Grid React cannot depend on the editor component specifying it's position (via the getPopupPosition() method on the editor), as React needs to know this information BEFORE the component is created.`;\n    _6.doOnce(() => console.warn(msg), \"jsEditorComp-getPopupPosition-\" + cellCtrl.getColumn().getColId());\n  }\n};\nvar jsxEditorProxy = (editDetails, CellEditorClass, setRef2) => {\n  const { compProxy } = editDetails;\n  setRef2(compProxy);\n  const props = compProxy.getProps();\n  const isStateless = isComponentStateless(CellEditorClass);\n  return /* @__PURE__ */ React11.createElement(CustomContext.Provider, { value: {\n    setMethods: (methods) => compProxy.setMethods(methods)\n  } }, isStateless && /* @__PURE__ */ React11.createElement(CellEditorClass, __spreadValues({}, props)), !isStateless && /* @__PURE__ */ React11.createElement(CellEditorClass, __spreadProps(__spreadValues({}, props), { ref: (ref) => compProxy.setRef(ref) })));\n};\nvar jsxEditor = (editDetails, CellEditorClass, setRef2) => {\n  const newFormat = editDetails.compProxy;\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, !newFormat && /* @__PURE__ */ React11.createElement(CellEditorClass, __spreadProps(__spreadValues({}, editDetails.compDetails.params), { ref: setRef2 })), newFormat && jsxEditorProxy(editDetails, CellEditorClass, setRef2));\n};\nvar jsxEditValue = (editDetails, setInlineCellEditorRef, setPopupCellEditorRef, eGui, cellCtrl, jsEditorComp) => {\n  const compDetails = editDetails.compDetails;\n  const CellEditorClass = compDetails.componentClass;\n  const reactInlineEditor = compDetails.componentFromFramework && !editDetails.popup;\n  const reactPopupEditor = compDetails.componentFromFramework && editDetails.popup;\n  const jsPopupEditor = !compDetails.componentFromFramework && editDetails.popup;\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, reactInlineEditor && jsxEditor(editDetails, CellEditorClass, setInlineCellEditorRef), reactPopupEditor && /* @__PURE__ */ React11.createElement(\n    popupEditorComp_default,\n    {\n      editDetails,\n      cellCtrl,\n      eParentCell: eGui,\n      wrappedContent: jsxEditor(editDetails, CellEditorClass, setPopupCellEditorRef)\n    }\n  ), jsPopupEditor && jsEditorComp && /* @__PURE__ */ React11.createElement(\n    popupEditorComp_default,\n    {\n      editDetails,\n      cellCtrl,\n      eParentCell: eGui,\n      jsChildComp: jsEditorComp\n    }\n  ));\n};\nvar jsxShowValue = (showDetails, key, parentId, cellRendererRef, showCellWrapper, reactCellRendererStateless, setECellValue) => {\n  const { compDetails, value } = showDetails;\n  const noCellRenderer = !compDetails;\n  const reactCellRenderer = compDetails && compDetails.componentFromFramework;\n  const CellRendererClass = compDetails && compDetails.componentClass;\n  const valueForNoCellRenderer = (value == null ? void 0 : value.toString) ? value.toString() : value;\n  const bodyJsxFunc = () => /* @__PURE__ */ React11.createElement(React11.Fragment, null, noCellRenderer && /* @__PURE__ */ React11.createElement(React11.Fragment, null, valueForNoCellRenderer), reactCellRenderer && !reactCellRendererStateless && /* @__PURE__ */ React11.createElement(CellRendererClass, __spreadProps(__spreadValues({}, compDetails.params), { key, ref: cellRendererRef })), reactCellRenderer && reactCellRendererStateless && /* @__PURE__ */ React11.createElement(CellRendererClass, __spreadProps(__spreadValues({}, compDetails.params), { key })));\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, showCellWrapper ? /* @__PURE__ */ React11.createElement(\"span\", { role: \"presentation\", id: `cell-${parentId}`, className: \"ag-cell-value\", ref: setECellValue }, bodyJsxFunc()) : bodyJsxFunc());\n};\nvar CellComp = (props) => {\n  const { context } = useContext9(BeansContext);\n  const { cellCtrl, printLayout, editingRow } = props;\n  const tabIndex = cellCtrl.getTabIndex();\n  const colId = cellCtrl.getColumnIdSanitised();\n  const cellInstanceId = cellCtrl.getInstanceId();\n  const [renderDetails, setRenderDetails] = useState11(() => cellCtrl.isCellRenderer() ? void 0 : { compDetails: void 0, value: cellCtrl.getValueToDisplay(), force: false });\n  const [editDetails, setEditDetails] = useState11();\n  const [renderKey, setRenderKey] = useState11(1);\n  const [userStyles, setUserStyles] = useState11();\n  const [includeSelection, setIncludeSelection] = useState11(false);\n  const [includeRowDrag, setIncludeRowDrag] = useState11(false);\n  const [includeDndSource, setIncludeDndSource] = useState11(false);\n  const [jsEditorComp, setJsEditorComp] = useState11();\n  const forceWrapper = useMemo8(() => cellCtrl.isForceWrapper(), [cellCtrl]);\n  const cellAriaRole = useMemo8(() => cellCtrl.getCellAriaRole(), [cellCtrl]);\n  const eGui = useRef9(null);\n  const cellRendererRef = useRef9(null);\n  const jsCellRendererRef = useRef9();\n  const cellEditorRef = useRef9();\n  const eCellWrapper = useRef9();\n  const cellWrapperDestroyFuncs = useRef9([]);\n  const eCellValue = useRef9();\n  const [cellValueVersion, setCellValueVersion] = useState11(0);\n  const setCellValueRef = useCallback9((ref) => {\n    eCellValue.current = ref;\n    setCellValueVersion((v) => v + 1);\n  }, []);\n  const showTools = renderDetails != null && (includeSelection || includeDndSource || includeRowDrag);\n  const showCellWrapper = forceWrapper || showTools;\n  const setCellEditorRef = useCallback9((popup, cellEditor) => {\n    cellEditorRef.current = cellEditor;\n    if (cellEditor) {\n      checkCellEditorDeprecations(popup, cellEditor, cellCtrl);\n      const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n      if (editingCancelledByUserComp) {\n        setTimeout(() => {\n          cellCtrl.stopEditing(true);\n          cellCtrl.focusCell(true);\n        });\n      }\n    }\n  }, [cellCtrl]);\n  const setPopupCellEditorRef = useCallback9(\n    (cellRenderer) => setCellEditorRef(true, cellRenderer),\n    [setCellEditorRef]\n  );\n  const setInlineCellEditorRef = useCallback9(\n    (cellRenderer) => setCellEditorRef(false, cellRenderer),\n    [setCellEditorRef]\n  );\n  let cssClassManager = useRef9();\n  if (!cssClassManager.current) {\n    cssClassManager.current = new CssClassManager2(() => eGui.current);\n  }\n  showJsRenderer_default(renderDetails, showCellWrapper, eCellValue.current, cellValueVersion, jsCellRendererRef, eGui);\n  const lastRenderDetails = useRef9();\n  useLayoutEffect5(() => {\n    const oldDetails = lastRenderDetails.current;\n    const newDetails = renderDetails;\n    lastRenderDetails.current = renderDetails;\n    if (oldDetails == null || oldDetails.compDetails == null || newDetails == null || newDetails.compDetails == null) {\n      return;\n    }\n    const oldCompDetails = oldDetails.compDetails;\n    const newCompDetails = newDetails.compDetails;\n    if (oldCompDetails.componentClass != newCompDetails.componentClass) {\n      return;\n    }\n    if (cellRendererRef.current == null || cellRendererRef.current.refresh == null) {\n      return;\n    }\n    const result = cellRendererRef.current.refresh(newCompDetails.params);\n    if (result != true) {\n      setRenderKey((prev) => prev + 1);\n    }\n  }, [renderDetails]);\n  useLayoutEffect5(() => {\n    const doingJsEditor = editDetails && !editDetails.compDetails.componentFromFramework;\n    if (!doingJsEditor) {\n      return;\n    }\n    const compDetails = editDetails.compDetails;\n    const isPopup = editDetails.popup === true;\n    const cellEditor = createSyncJsComp(compDetails);\n    if (!cellEditor) {\n      return;\n    }\n    const compGui = cellEditor.getGui();\n    setCellEditorRef(isPopup, cellEditor);\n    if (!isPopup) {\n      const parentEl = (forceWrapper ? eCellWrapper : eGui).current;\n      parentEl == null ? void 0 : parentEl.appendChild(compGui);\n      cellEditor.afterGuiAttached && cellEditor.afterGuiAttached();\n    }\n    setJsEditorComp(cellEditor);\n    return () => {\n      context.destroyBean(cellEditor);\n      setCellEditorRef(isPopup, void 0);\n      setJsEditorComp(void 0);\n      if (compGui && compGui.parentElement) {\n        compGui.parentElement.removeChild(compGui);\n      }\n    };\n  }, [editDetails]);\n  const setCellWrapperRef = useCallback9((ref) => {\n    eCellWrapper.current = ref;\n    if (!eCellWrapper.current) {\n      cellWrapperDestroyFuncs.current.forEach((f) => f());\n      cellWrapperDestroyFuncs.current = [];\n      return;\n    }\n    const addComp = (comp) => {\n      var _a;\n      if (comp) {\n        const eGui2 = comp.getGui();\n        (_a = eCellWrapper.current) == null ? void 0 : _a.insertAdjacentElement(\"afterbegin\", eGui2);\n        cellWrapperDestroyFuncs.current.push(() => {\n          context.destroyBean(comp);\n          _6.removeFromParent(eGui2);\n        });\n      }\n      return comp;\n    };\n    if (includeSelection) {\n      const checkboxSelectionComp = cellCtrl.createSelectionCheckbox();\n      addComp(checkboxSelectionComp);\n    }\n    if (includeDndSource) {\n      addComp(cellCtrl.createDndSource());\n    }\n    if (includeRowDrag) {\n      addComp(cellCtrl.createRowDragComp());\n    }\n  }, [cellCtrl, context, includeDndSource, includeRowDrag, includeSelection]);\n  const setRef2 = useCallback9((ref) => {\n    eGui.current = ref;\n    if (!eGui.current) {\n      return;\n    }\n    if (!cellCtrl) {\n      return;\n    }\n    const compProxy = {\n      addOrRemoveCssClass: (name, on) => cssClassManager.current.addOrRemoveCssClass(name, on),\n      setUserStyles: (styles) => setUserStyles(styles),\n      getFocusableElement: () => eGui.current,\n      setIncludeSelection: (include) => setIncludeSelection(include),\n      setIncludeRowDrag: (include) => setIncludeRowDrag(include),\n      setIncludeDndSource: (include) => setIncludeDndSource(include),\n      getCellEditor: () => cellEditorRef.current || null,\n      getCellRenderer: () => cellRendererRef.current ? cellRendererRef.current : jsCellRendererRef.current,\n      getParentOfValue: () => eCellValue.current ? eCellValue.current : eCellWrapper.current ? eCellWrapper.current : eGui.current,\n      setRenderDetails: (compDetails, value, force) => {\n        setRenderDetails((prev) => {\n          if ((prev == null ? void 0 : prev.compDetails) !== compDetails || (prev == null ? void 0 : prev.value) !== value || (prev == null ? void 0 : prev.force) !== force) {\n            return {\n              value,\n              compDetails,\n              force\n            };\n          } else {\n            return prev;\n          }\n        });\n      },\n      setEditDetails: (compDetails, popup, popupPosition, reactiveCustomComponents) => {\n        if (compDetails) {\n          let compProxy2 = void 0;\n          if (reactiveCustomComponents) {\n            compProxy2 = new CellEditorComponentProxy(compDetails.params, () => setRenderKey((prev) => prev + 1));\n          } else if (compDetails.componentFromFramework) {\n            warnReactiveCustomComponents();\n          }\n          setEditDetails({\n            compDetails,\n            popup,\n            popupPosition,\n            compProxy: compProxy2\n          });\n          if (!popup) {\n            setRenderDetails(void 0);\n          }\n        } else {\n          setEditDetails((editDetails2) => {\n            if (editDetails2 == null ? void 0 : editDetails2.compProxy) {\n              cellEditorRef.current = void 0;\n            }\n            return void 0;\n          });\n        }\n      }\n    };\n    const cellWrapperOrUndefined = eCellWrapper.current || void 0;\n    cellCtrl.setComp(compProxy, eGui.current, cellWrapperOrUndefined, printLayout, editingRow);\n  }, []);\n  const reactCellRendererStateless = useMemo8(() => {\n    const res = renderDetails && renderDetails.compDetails && renderDetails.compDetails.componentFromFramework && isComponentStateless(renderDetails.compDetails.componentClass);\n    return !!res;\n  }, [renderDetails]);\n  useLayoutEffect5(() => {\n    var _a;\n    if (!eGui.current) {\n      return;\n    }\n    cssClassManager.current.addOrRemoveCssClass(\"ag-cell-value\", !showCellWrapper);\n    cssClassManager.current.addOrRemoveCssClass(\"ag-cell-inline-editing\", !!editDetails && !editDetails.popup);\n    cssClassManager.current.addOrRemoveCssClass(\"ag-cell-popup-editing\", !!editDetails && !!editDetails.popup);\n    cssClassManager.current.addOrRemoveCssClass(\"ag-cell-not-inline-editing\", !editDetails || !!editDetails.popup);\n    (_a = cellCtrl.getRowCtrl()) == null ? void 0 : _a.setInlineEditingCss(!!editDetails);\n    if (cellCtrl.shouldRestoreFocus() && !cellCtrl.isEditing()) {\n      eGui.current.focus({ preventScroll: true });\n    }\n  });\n  const showContents = () => /* @__PURE__ */ React11.createElement(React11.Fragment, null, renderDetails != null && jsxShowValue(\n    renderDetails,\n    renderKey,\n    cellInstanceId,\n    cellRendererRef,\n    showCellWrapper,\n    reactCellRendererStateless,\n    setCellValueRef\n  ), editDetails != null && jsxEditValue(\n    editDetails,\n    setInlineCellEditorRef,\n    setPopupCellEditorRef,\n    eGui.current,\n    cellCtrl,\n    jsEditorComp\n  ));\n  return /* @__PURE__ */ React11.createElement(\n    \"div\",\n    {\n      ref: setRef2,\n      style: userStyles,\n      tabIndex,\n      role: cellAriaRole,\n      \"col-id\": colId\n    },\n    showCellWrapper ? /* @__PURE__ */ React11.createElement(\"div\", { className: \"ag-cell-wrapper\", role: \"presentation\", ref: setCellWrapperRef }, showContents()) : showContents()\n  );\n};\nvar cellComp_default = memo9(CellComp);\n\n// packages/ag-grid-react/src/reactUi/rows/rowComp.tsx\nvar RowComp = (params) => {\n  const { context, gos } = useContext10(BeansContext);\n  const { rowCtrl, containerType } = params;\n  const tabIndex = rowCtrl.getTabIndex();\n  const domOrderRef = useRef10(rowCtrl.getDomOrder());\n  const isFullWidth = rowCtrl.isFullWidth();\n  const isDisplayed = rowCtrl.getRowNode().displayed;\n  const [rowIndex, setRowIndex] = useState12(() => isDisplayed ? rowCtrl.getRowIndex() : null);\n  const [rowId, setRowId] = useState12(() => rowCtrl.getRowId());\n  const [rowBusinessKey, setRowBusinessKey] = useState12(() => rowCtrl.getBusinessKey());\n  const [userStyles, setUserStyles] = useState12(() => rowCtrl.getRowStyles());\n  const cellCtrlsRef = useRef10(null);\n  const prevCellCtrlsRef = useRef10(null);\n  const [cellCtrls, setCellCtrls] = useState12(() => null);\n  const [fullWidthCompDetails, setFullWidthCompDetails] = useState12();\n  const [top, setTop] = useState12(() => isDisplayed ? rowCtrl.getInitialRowTop(containerType) : void 0);\n  const [transform, setTransform] = useState12(() => isDisplayed ? rowCtrl.getInitialTransform(containerType) : void 0);\n  const eGui = useRef10(null);\n  const fullWidthCompRef = useRef10();\n  const autoHeightSetup = useRef10(false);\n  const [autoHeightSetupAttempt, setAutoHeightSetupAttempt] = useState12(0);\n  useEffect7(() => {\n    var _a;\n    if (autoHeightSetup.current) {\n      return;\n    }\n    if (!fullWidthCompDetails) {\n      return;\n    }\n    if (autoHeightSetupAttempt > 10) {\n      return;\n    }\n    const eChild = (_a = eGui.current) == null ? void 0 : _a.firstChild;\n    if (eChild) {\n      rowCtrl.setupDetailRowAutoHeight(eChild);\n      autoHeightSetup.current = true;\n    } else {\n      setAutoHeightSetupAttempt((prev) => prev + 1);\n    }\n  }, [fullWidthCompDetails, autoHeightSetupAttempt]);\n  let cssClassManager = useRef10();\n  if (!cssClassManager.current) {\n    cssClassManager.current = new CssClassManager3(() => eGui.current);\n  }\n  const setRef2 = useCallback10((e) => {\n    eGui.current = e;\n    if (!eGui.current) {\n      rowCtrl.unsetComp(containerType);\n      return;\n    }\n    if (!rowCtrl.isAlive()) {\n      return;\n    }\n    const compProxy = {\n      // the rowTop is managed by state, instead of direct style manipulation by rowCtrl (like all the other styles)\n      // as we need to have an initial value when it's placed into he DOM for the first time, for animation to work.\n      setTop,\n      setTransform,\n      // i found using React for managing classes at the row level was to slow, as modifying classes caused a lot of\n      // React code to execute, so avoiding React for managing CSS Classes made the grid go much faster.\n      addOrRemoveCssClass: (name, on) => cssClassManager.current.addOrRemoveCssClass(name, on),\n      setDomOrder: (domOrder) => domOrderRef.current = domOrder,\n      setRowIndex,\n      setRowId,\n      setRowBusinessKey,\n      setUserStyles,\n      // if we don't maintain the order, then cols will be ripped out and into the dom\n      // when cols reordered, which would stop the CSS transitions from working\n      setCellCtrls: (next, useFlushSync) => {\n        prevCellCtrlsRef.current = cellCtrlsRef.current;\n        cellCtrlsRef.current = next;\n        const nextCells = getNextValueIfDifferent(prevCellCtrlsRef.current, next, domOrderRef.current);\n        if (nextCells !== prevCellCtrlsRef.current) {\n          agFlushSync(useFlushSync, () => setCellCtrls(nextCells));\n        }\n      },\n      showFullWidth: (compDetails) => setFullWidthCompDetails(compDetails),\n      getFullWidthCellRenderer: () => fullWidthCompRef.current,\n      refreshFullWidth: (getUpdatedParams) => {\n        if (canRefreshFullWidthRef.current) {\n          setFullWidthCompDetails((prevFullWidthCompDetails) => __spreadProps(__spreadValues({}, prevFullWidthCompDetails), {\n            params: getUpdatedParams()\n          }));\n          return true;\n        } else {\n          if (!fullWidthCompRef.current || !fullWidthCompRef.current.refresh) {\n            return false;\n          }\n          return fullWidthCompRef.current.refresh(getUpdatedParams());\n        }\n      }\n    };\n    rowCtrl.setComp(compProxy, eGui.current, containerType);\n  }, []);\n  useLayoutEffect6(() => showJsComp(fullWidthCompDetails, context, eGui.current, fullWidthCompRef), [fullWidthCompDetails]);\n  const rowStyles = useMemo9(() => {\n    const res = { top, transform };\n    Object.assign(res, userStyles);\n    return res;\n  }, [top, transform, userStyles]);\n  const showFullWidthFramework = isFullWidth && fullWidthCompDetails && fullWidthCompDetails.componentFromFramework;\n  const showCells = !isFullWidth && cellCtrls != null;\n  const reactFullWidthCellRendererStateless = useMemo9(() => {\n    const res = (fullWidthCompDetails == null ? void 0 : fullWidthCompDetails.componentFromFramework) && isComponentStateless(fullWidthCompDetails.componentClass);\n    return !!res;\n  }, [fullWidthCompDetails]);\n  const canRefreshFullWidthRef = useRef10(false);\n  useEffect7(() => {\n    canRefreshFullWidthRef.current = reactFullWidthCellRendererStateless && !!fullWidthCompDetails && !!gos.get(\"reactiveCustomComponents\");\n  }, [reactFullWidthCellRendererStateless, fullWidthCompDetails]);\n  const showCellsJsx = () => cellCtrls == null ? void 0 : cellCtrls.map((cellCtrl) => /* @__PURE__ */ React12.createElement(\n    cellComp_default,\n    {\n      cellCtrl,\n      editingRow: rowCtrl.isEditing(),\n      printLayout: rowCtrl.isPrintLayout(),\n      key: cellCtrl.getInstanceId()\n    }\n  ));\n  const showFullWidthFrameworkJsx = () => {\n    const FullWidthComp = fullWidthCompDetails.componentClass;\n    return /* @__PURE__ */ React12.createElement(React12.Fragment, null, reactFullWidthCellRendererStateless && /* @__PURE__ */ React12.createElement(FullWidthComp, __spreadValues({}, fullWidthCompDetails.params)), !reactFullWidthCellRendererStateless && /* @__PURE__ */ React12.createElement(FullWidthComp, __spreadProps(__spreadValues({}, fullWidthCompDetails.params), { ref: fullWidthCompRef })));\n  };\n  return /* @__PURE__ */ React12.createElement(\n    \"div\",\n    {\n      ref: setRef2,\n      role: \"row\",\n      style: rowStyles,\n      \"row-index\": rowIndex,\n      \"row-id\": rowId,\n      \"row-business-key\": rowBusinessKey,\n      tabIndex\n    },\n    showCells && showCellsJsx(),\n    showFullWidthFramework && showFullWidthFrameworkJsx()\n  );\n};\nvar rowComp_default = memo10(RowComp);\n\n// packages/ag-grid-react/src/reactUi/rows/rowContainerComp.tsx\nvar RowContainerComp = (params) => {\n  const { context } = useContext11(BeansContext);\n  const { name } = params;\n  const containerType = useMemo10(() => getRowContainerTypeForName(name), [name]);\n  const eViewport = useRef11(null);\n  const eContainer = useRef11(null);\n  const rowCtrlsRef = useRef11([]);\n  const prevRowCtrlsRef = useRef11([]);\n  const [rowCtrlsOrdered, setRowCtrlsOrdered] = useState13(() => []);\n  const domOrderRef = useRef11(false);\n  const rowContainerCtrlRef = useRef11();\n  const cssClasses = useMemo10(() => RowContainerCtrl.getRowContainerCssClasses(name), [name]);\n  const viewportClasses = useMemo10(() => classesList(cssClasses.viewport), [cssClasses]);\n  const containerClasses = useMemo10(() => classesList(cssClasses.container), [cssClasses]);\n  const centerTemplate = name === RowContainerName.CENTER || name === RowContainerName.TOP_CENTER || name === RowContainerName.BOTTOM_CENTER || name === RowContainerName.STICKY_TOP_CENTER || name === RowContainerName.STICKY_BOTTOM_CENTER;\n  const topLevelRef = centerTemplate ? eViewport : eContainer;\n  reactComment_default(\" AG Row Container \" + name + \" \", topLevelRef);\n  const areElementsReady = useCallback11(() => {\n    if (centerTemplate) {\n      return eViewport.current != null && eContainer.current != null;\n    }\n    return eContainer.current != null;\n  }, []);\n  const areElementsRemoved = useCallback11(() => {\n    if (centerTemplate) {\n      return eViewport.current == null && eContainer.current == null;\n    }\n    return eContainer.current == null;\n  }, []);\n  const setRef2 = useCallback11(() => {\n    if (areElementsRemoved()) {\n      context.destroyBean(rowContainerCtrlRef.current);\n      rowContainerCtrlRef.current = null;\n    }\n    if (areElementsReady()) {\n      const updateRowCtrlsOrdered = (useFlushSync) => {\n        const next = getNextValueIfDifferent(prevRowCtrlsRef.current, rowCtrlsRef.current, domOrderRef.current);\n        if (next !== prevRowCtrlsRef.current) {\n          prevRowCtrlsRef.current = next;\n          agFlushSync(useFlushSync, () => setRowCtrlsOrdered(next));\n        }\n      };\n      const compProxy = {\n        setViewportHeight: (height) => {\n          if (eViewport.current) {\n            eViewport.current.style.height = height;\n          }\n        },\n        setRowCtrls: ({ rowCtrls, useFlushSync }) => {\n          const useFlush = !!useFlushSync && rowCtrlsRef.current.length > 0 && rowCtrls.length > 0;\n          rowCtrlsRef.current = rowCtrls;\n          updateRowCtrlsOrdered(useFlush);\n        },\n        setDomOrder: (domOrder) => {\n          if (domOrderRef.current != domOrder) {\n            domOrderRef.current = domOrder;\n            updateRowCtrlsOrdered(false);\n          }\n        },\n        setContainerWidth: (width) => {\n          if (eContainer.current) {\n            eContainer.current.style.width = width;\n          }\n        }\n      };\n      rowContainerCtrlRef.current = context.createBean(new RowContainerCtrl(name));\n      rowContainerCtrlRef.current.setComp(compProxy, eContainer.current, eViewport.current);\n    }\n  }, [areElementsReady, areElementsRemoved]);\n  const setContainerRef = useCallback11((e) => {\n    eContainer.current = e;\n    setRef2();\n  }, [setRef2]);\n  const setViewportRef = useCallback11((e) => {\n    eViewport.current = e;\n    setRef2();\n  }, [setRef2]);\n  const buildContainer = () => /* @__PURE__ */ React13.createElement(\n    \"div\",\n    {\n      className: containerClasses,\n      ref: setContainerRef,\n      role: \"rowgroup\"\n    },\n    rowCtrlsOrdered.map(\n      (rowCtrl) => /* @__PURE__ */ React13.createElement(rowComp_default, { rowCtrl, containerType, key: rowCtrl.getInstanceId() })\n    )\n  );\n  return /* @__PURE__ */ React13.createElement(React13.Fragment, null, centerTemplate ? /* @__PURE__ */ React13.createElement(\"div\", { className: viewportClasses, ref: setViewportRef, role: \"presentation\" }, buildContainer()) : buildContainer());\n};\nvar rowContainerComp_default = memo11(RowContainerComp);\n\n// packages/ag-grid-react/src/reactUi/gridBodyComp.tsx\nvar GridBodyComp = () => {\n  const { context, agStackComponentsRegistry, resizeObserverService } = useContext12(BeansContext);\n  const [rowAnimationClass, setRowAnimationClass] = useState14(\"\");\n  const [topHeight, setTopHeight] = useState14(0);\n  const [bottomHeight, setBottomHeight] = useState14(0);\n  const [stickyTopHeight, setStickyTopHeight] = useState14(\"0px\");\n  const [stickyTopTop, setStickyTopTop] = useState14(\"0px\");\n  const [stickyTopWidth, setStickyTopWidth] = useState14(\"100%\");\n  const [stickyBottomHeight, setStickyBottomHeight] = useState14(\"0px\");\n  const [stickyBottomBottom, setStickyBottomBottom] = useState14(\"0px\");\n  const [stickyBottomWidth, setStickyBottomWidth] = useState14(\"100%\");\n  const [topDisplay, setTopDisplay] = useState14(\"\");\n  const [bottomDisplay, setBottomDisplay] = useState14(\"\");\n  const [forceVerticalScrollClass, setForceVerticalScrollClass] = useState14(null);\n  const [topAndBottomOverflowY, setTopAndBottomOverflowY] = useState14(\"\");\n  const [cellSelectableCss, setCellSelectableCss] = useState14(null);\n  const [layoutClass, setLayoutClass] = useState14(\"ag-layout-normal\");\n  let cssClassManager = useRef12();\n  if (!cssClassManager.current) {\n    cssClassManager.current = new CssClassManager4(() => eRoot.current);\n  }\n  const eRoot = useRef12(null);\n  const eTop = useRef12(null);\n  const eStickyTop = useRef12(null);\n  const eStickyBottom = useRef12(null);\n  const eBody = useRef12(null);\n  const eBodyViewport = useRef12(null);\n  const eBottom = useRef12(null);\n  const beansToDestroy = useRef12([]);\n  const destroyFuncs = useRef12([]);\n  reactComment_default(\" AG Grid Body \", eRoot);\n  reactComment_default(\" AG Pinned Top \", eTop);\n  reactComment_default(\" AG Sticky Top \", eStickyTop);\n  reactComment_default(\" AG Middle \", eBodyViewport);\n  reactComment_default(\" AG Pinned Bottom \", eBottom);\n  const setRef2 = useCallback12((e) => {\n    eRoot.current = e;\n    if (!eRoot.current) {\n      context.destroyBeans(beansToDestroy.current);\n      destroyFuncs.current.forEach((f) => f());\n      beansToDestroy.current = [];\n      destroyFuncs.current = [];\n      return;\n    }\n    if (!context) {\n      return;\n    }\n    const newComp = (tag) => {\n      const CompClass = agStackComponentsRegistry.getComponentClass(tag);\n      const comp = context.createBean(new CompClass());\n      beansToDestroy.current.push(comp);\n      return comp;\n    };\n    const attachToDom = (eParent, eChild) => {\n      eParent.appendChild(eChild);\n      destroyFuncs.current.push(() => eParent.removeChild(eChild));\n    };\n    attachToDom(eRoot.current, document.createComment(\" AG Fake Horizontal Scroll \"));\n    attachToDom(eRoot.current, newComp(\"AG-FAKE-HORIZONTAL-SCROLL\").getGui());\n    attachToDom(eRoot.current, document.createComment(\" AG Overlay Wrapper \"));\n    attachToDom(eRoot.current, newComp(\"AG-OVERLAY-WRAPPER\").getGui());\n    if (eBody.current) {\n      attachToDom(eBody.current, document.createComment(\" AG Fake Vertical Scroll \"));\n      attachToDom(eBody.current, newComp(\"AG-FAKE-VERTICAL-SCROLL\").getGui());\n    }\n    const compProxy = {\n      setRowAnimationCssOnBodyViewport: setRowAnimationClass,\n      setColumnCount: (count) => {\n        if (eRoot.current) {\n          _7.setAriaColCount(eRoot.current, count);\n        }\n      },\n      setRowCount: (count) => {\n        if (eRoot.current) {\n          _7.setAriaRowCount(eRoot.current, count);\n        }\n      },\n      setTopHeight,\n      setBottomHeight,\n      setStickyTopHeight,\n      setStickyTopTop,\n      setStickyTopWidth,\n      setTopDisplay,\n      setBottomDisplay,\n      setColumnMovingCss: (cssClass, flag) => cssClassManager.current.addOrRemoveCssClass(cssClass, flag),\n      updateLayoutClasses: setLayoutClass,\n      setAlwaysVerticalScrollClass: setForceVerticalScrollClass,\n      setPinnedTopBottomOverflowY: setTopAndBottomOverflowY,\n      setCellSelectableCss: (cssClass, flag) => setCellSelectableCss(flag ? cssClass : null),\n      setBodyViewportWidth: (width) => {\n        if (eBodyViewport.current) {\n          eBodyViewport.current.style.width = width;\n        }\n      },\n      registerBodyViewportResizeListener: (listener) => {\n        if (eBodyViewport.current) {\n          const unsubscribeFromResize = resizeObserverService.observeResize(eBodyViewport.current, listener);\n          destroyFuncs.current.push(() => unsubscribeFromResize());\n        }\n      },\n      setStickyBottomHeight,\n      setStickyBottomBottom,\n      setStickyBottomWidth\n    };\n    const ctrl = context.createBean(new GridBodyCtrl());\n    beansToDestroy.current.push(ctrl);\n    ctrl.setComp(\n      compProxy,\n      eRoot.current,\n      eBodyViewport.current,\n      eTop.current,\n      eBottom.current,\n      eStickyTop.current,\n      eStickyBottom.current\n    );\n  }, []);\n  const rootClasses = useMemo11(\n    () => classesList(\"ag-root\", \"ag-unselectable\", layoutClass),\n    [layoutClass]\n  );\n  const bodyViewportClasses = useMemo11(\n    () => classesList(\"ag-body-viewport\", rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss),\n    [rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss]\n  );\n  const bodyClasses = useMemo11(\n    () => classesList(\"ag-body\", layoutClass),\n    [layoutClass]\n  );\n  const topClasses = useMemo11(\n    () => classesList(\"ag-floating-top\", cellSelectableCss),\n    [cellSelectableCss]\n  );\n  const stickyTopClasses = useMemo11(\n    () => classesList(\"ag-sticky-top\", cellSelectableCss),\n    [cellSelectableCss]\n  );\n  const stickyBottomClasses = useMemo11(\n    () => classesList(\"ag-sticky-bottom\", cellSelectableCss),\n    [cellSelectableCss]\n  );\n  const bottomClasses = useMemo11(\n    () => classesList(\"ag-floating-bottom\", cellSelectableCss),\n    [cellSelectableCss]\n  );\n  const topStyle = useMemo11(() => ({\n    height: topHeight,\n    minHeight: topHeight,\n    display: topDisplay,\n    overflowY: topAndBottomOverflowY\n  }), [topHeight, topDisplay, topAndBottomOverflowY]);\n  const stickyTopStyle = useMemo11(() => ({\n    height: stickyTopHeight,\n    top: stickyTopTop,\n    width: stickyTopWidth\n  }), [stickyTopHeight, stickyTopTop, stickyTopWidth]);\n  const stickyBottomStyle = useMemo11(() => ({\n    height: stickyBottomHeight,\n    bottom: stickyBottomBottom,\n    width: stickyBottomWidth\n  }), [stickyBottomHeight, stickyBottomBottom, stickyBottomWidth]);\n  const bottomStyle = useMemo11(() => ({\n    height: bottomHeight,\n    minHeight: bottomHeight,\n    display: bottomDisplay,\n    overflowY: topAndBottomOverflowY\n  }), [bottomHeight, bottomDisplay, topAndBottomOverflowY]);\n  const createRowContainer = (container) => /* @__PURE__ */ React14.createElement(rowContainerComp_default, { name: container, key: `${container}-container` });\n  const createSection = ({\n    section,\n    children,\n    className,\n    style\n  }) => /* @__PURE__ */ React14.createElement(\"div\", { ref: section, className, role: \"presentation\", style }, children.map(createRowContainer));\n  return /* @__PURE__ */ React14.createElement(\"div\", { ref: setRef2, className: rootClasses, role: \"treegrid\" }, /* @__PURE__ */ React14.createElement(gridHeaderComp_default, null), createSection({ section: eTop, className: topClasses, style: topStyle, children: [\n    RowContainerName2.TOP_LEFT,\n    RowContainerName2.TOP_CENTER,\n    RowContainerName2.TOP_RIGHT,\n    RowContainerName2.TOP_FULL_WIDTH\n  ] }), /* @__PURE__ */ React14.createElement(\"div\", { className: bodyClasses, ref: eBody, role: \"presentation\" }, createSection({\n    section: eBodyViewport,\n    className: bodyViewportClasses,\n    children: [\n      RowContainerName2.LEFT,\n      RowContainerName2.CENTER,\n      RowContainerName2.RIGHT,\n      RowContainerName2.FULL_WIDTH\n    ]\n  })), createSection({ section: eStickyTop, className: stickyTopClasses, style: stickyTopStyle, children: [\n    RowContainerName2.STICKY_TOP_LEFT,\n    RowContainerName2.STICKY_TOP_CENTER,\n    RowContainerName2.STICKY_TOP_RIGHT,\n    RowContainerName2.STICKY_TOP_FULL_WIDTH\n  ] }), createSection({ section: eStickyBottom, className: stickyBottomClasses, style: stickyBottomStyle, children: [\n    RowContainerName2.STICKY_BOTTOM_LEFT,\n    RowContainerName2.STICKY_BOTTOM_CENTER,\n    RowContainerName2.STICKY_BOTTOM_RIGHT,\n    RowContainerName2.STICKY_BOTTOM_FULL_WIDTH\n  ] }), createSection({ section: eBottom, className: bottomClasses, style: bottomStyle, children: [\n    RowContainerName2.BOTTOM_LEFT,\n    RowContainerName2.BOTTOM_CENTER,\n    RowContainerName2.BOTTOM_RIGHT,\n    RowContainerName2.BOTTOM_FULL_WIDTH\n  ] }));\n};\nvar gridBodyComp_default = memo12(GridBodyComp);\n\n// packages/ag-grid-react/src/reactUi/tabGuardComp.tsx\nimport React15, { forwardRef as forwardRef2, memo as memo13, useCallback as useCallback13, useContext as useContext13, useImperativeHandle as useImperativeHandle2, useRef as useRef13 } from \"react\";\nimport {\n  TabGuardClassNames,\n  TabGuardCtrl\n} from \"ag-grid-community\";\nvar TabGuardCompRef = (props, forwardRef4) => {\n  const { children, eFocusableElement, onTabKeyDown, gridCtrl, forceFocusOutWhenTabGuardsAreEmpty } = props;\n  const { context } = useContext13(BeansContext);\n  const topTabGuardRef = useRef13(null);\n  const bottomTabGuardRef = useRef13(null);\n  const tabGuardCtrlRef = useRef13();\n  const setTabIndex = (value) => {\n    const processedValue = value == null ? void 0 : parseInt(value, 10).toString();\n    [topTabGuardRef, bottomTabGuardRef].forEach((tabGuard) => {\n      var _a, _b;\n      if (processedValue === void 0) {\n        (_a = tabGuard.current) == null ? void 0 : _a.removeAttribute(\"tabindex\");\n      } else {\n        (_b = tabGuard.current) == null ? void 0 : _b.setAttribute(\"tabindex\", processedValue);\n      }\n    });\n  };\n  useImperativeHandle2(forwardRef4, () => ({\n    forceFocusOutOfContainer(up) {\n      var _a;\n      (_a = tabGuardCtrlRef.current) == null ? void 0 : _a.forceFocusOutOfContainer(up);\n    }\n  }));\n  const setupCtrl = useCallback13(() => {\n    if (!topTabGuardRef.current && !bottomTabGuardRef.current) {\n      context.destroyBean(tabGuardCtrlRef.current);\n      tabGuardCtrlRef.current = null;\n      return;\n    }\n    if (topTabGuardRef.current && bottomTabGuardRef.current) {\n      const compProxy = {\n        setTabIndex\n      };\n      tabGuardCtrlRef.current = context.createBean(new TabGuardCtrl({\n        comp: compProxy,\n        eTopGuard: topTabGuardRef.current,\n        eBottomGuard: bottomTabGuardRef.current,\n        eFocusableElement,\n        onTabKeyDown,\n        forceFocusOutWhenTabGuardsAreEmpty,\n        focusInnerElement: (fromBottom) => gridCtrl.focusInnerElement(fromBottom)\n      }));\n    }\n  }, []);\n  const setTopRef = useCallback13((e) => {\n    topTabGuardRef.current = e;\n    setupCtrl();\n  }, [setupCtrl]);\n  const setBottomRef = useCallback13((e) => {\n    bottomTabGuardRef.current = e;\n    setupCtrl();\n  }, [setupCtrl]);\n  const createTabGuard = (side) => {\n    const className = side === \"top\" ? TabGuardClassNames.TAB_GUARD_TOP : TabGuardClassNames.TAB_GUARD_BOTTOM;\n    return /* @__PURE__ */ React15.createElement(\n      \"div\",\n      {\n        className: `${TabGuardClassNames.TAB_GUARD} ${className}`,\n        role: \"presentation\",\n        ref: side === \"top\" ? setTopRef : setBottomRef\n      }\n    );\n  };\n  return /* @__PURE__ */ React15.createElement(React15.Fragment, null, createTabGuard(\"top\"), children, createTabGuard(\"bottom\"));\n};\nvar TabGuardComp = forwardRef2(TabGuardCompRef);\nvar tabGuardComp_default = memo13(TabGuardComp);\n\n// packages/ag-grid-react/src/reactUi/gridComp.tsx\nvar GridComp = ({ context }) => {\n  const [rtlClass, setRtlClass] = useState15(\"\");\n  const [keyboardFocusClass, setKeyboardFocusClass] = useState15(\"\");\n  const [layoutClass, setLayoutClass] = useState15(\"\");\n  const [cursor, setCursor] = useState15(null);\n  const [userSelect, setUserSelect] = useState15(null);\n  const [initialised, setInitialised] = useState15(false);\n  const [tabGuardReady, setTabGuardReady] = useState15();\n  const gridCtrlRef = useRef14(null);\n  const eRootWrapperRef = useRef14(null);\n  const tabGuardRef = useRef14();\n  const [eGridBodyParent, setGridBodyParent] = useState15(null);\n  const focusInnerElementRef = useRef14(() => void 0);\n  const onTabKeyDown = useCallback14(() => void 0, []);\n  const beans = useMemo12(() => {\n    if (context.isDestroyed()) {\n      return null;\n    }\n    return context.getBean(\"beans\");\n  }, [context]);\n  reactComment_default(\" AG Grid \", eRootWrapperRef);\n  const setRef2 = useCallback14((e) => {\n    eRootWrapperRef.current = e;\n    if (!eRootWrapperRef.current) {\n      context.destroyBean(gridCtrlRef.current);\n      gridCtrlRef.current = null;\n      return;\n    }\n    if (context.isDestroyed()) {\n      return;\n    }\n    gridCtrlRef.current = context.createBean(new GridCtrl2());\n    const gridCtrl = gridCtrlRef.current;\n    focusInnerElementRef.current = gridCtrl.focusInnerElement.bind(gridCtrl);\n    const compProxy = {\n      destroyGridUi: () => {\n      },\n      // do nothing, as framework users destroy grid by removing the comp\n      setRtlClass,\n      forceFocusOutOfContainer: (up) => {\n        var _a;\n        (_a = tabGuardRef.current) == null ? void 0 : _a.forceFocusOutOfContainer(up);\n      },\n      updateLayoutClasses: setLayoutClass,\n      getFocusableContainers: () => {\n        var _a, _b;\n        const els = [];\n        const gridBodyCompEl = (_a = eRootWrapperRef.current) == null ? void 0 : _a.querySelector(\".ag-root\");\n        const sideBarEl = (_b = eRootWrapperRef.current) == null ? void 0 : _b.querySelector(\".ag-side-bar:not(.ag-hidden)\");\n        if (gridBodyCompEl) {\n          els.push(gridBodyCompEl);\n        }\n        if (sideBarEl) {\n          els.push(sideBarEl);\n        }\n        return els;\n      },\n      setCursor,\n      setUserSelect\n    };\n    gridCtrl.setComp(compProxy, eRootWrapperRef.current, eRootWrapperRef.current);\n    setInitialised(true);\n  }, []);\n  useEffect8(() => {\n    if (!tabGuardReady || !beans || !gridCtrlRef.current || !eGridBodyParent || !eRootWrapperRef.current) {\n      return;\n    }\n    const gridCtrl = gridCtrlRef.current;\n    const beansToDestroy = [];\n    const { agStackComponentsRegistry } = beans;\n    const HeaderDropZonesClass = agStackComponentsRegistry.getComponentClass(\"AG-GRID-HEADER-DROP-ZONES\");\n    const SideBarClass = agStackComponentsRegistry.getComponentClass(\"AG-SIDE-BAR\");\n    const StatusBarClass = agStackComponentsRegistry.getComponentClass(\"AG-STATUS-BAR\");\n    const WatermarkClass = agStackComponentsRegistry.getComponentClass(\"AG-WATERMARK\");\n    const PaginationClass = agStackComponentsRegistry.getComponentClass(\"AG-PAGINATION\");\n    const additionalEls = [];\n    const eRootWrapper = eRootWrapperRef.current;\n    if (gridCtrl.showDropZones() && HeaderDropZonesClass) {\n      const headerDropZonesComp = context.createBean(new HeaderDropZonesClass());\n      const eGui = headerDropZonesComp.getGui();\n      eRootWrapper.insertAdjacentElement(\"afterbegin\", eGui);\n      additionalEls.push(eGui);\n      beansToDestroy.push(headerDropZonesComp);\n    }\n    if (gridCtrl.showSideBar() && SideBarClass) {\n      const sideBarComp = context.createBean(new SideBarClass());\n      const eGui = sideBarComp.getGui();\n      const bottomTabGuard = eGridBodyParent.querySelector(\".ag-tab-guard-bottom\");\n      if (bottomTabGuard) {\n        bottomTabGuard.insertAdjacentElement(\"beforebegin\", eGui);\n        additionalEls.push(eGui);\n      }\n      beansToDestroy.push(sideBarComp);\n    }\n    if (gridCtrl.showStatusBar() && StatusBarClass) {\n      const statusBarComp = context.createBean(new StatusBarClass());\n      const eGui = statusBarComp.getGui();\n      eRootWrapper.insertAdjacentElement(\"beforeend\", eGui);\n      additionalEls.push(eGui);\n      beansToDestroy.push(statusBarComp);\n    }\n    if (PaginationClass) {\n      const paginationComp = context.createBean(new PaginationClass());\n      const eGui = paginationComp.getGui();\n      eRootWrapper.insertAdjacentElement(\"beforeend\", eGui);\n      additionalEls.push(eGui);\n      beansToDestroy.push(paginationComp);\n    }\n    if (gridCtrl.showWatermark() && WatermarkClass) {\n      const watermarkComp = context.createBean(new WatermarkClass());\n      const eGui = watermarkComp.getGui();\n      eRootWrapper.insertAdjacentElement(\"beforeend\", eGui);\n      additionalEls.push(eGui);\n      beansToDestroy.push(watermarkComp);\n    }\n    return () => {\n      context.destroyBeans(beansToDestroy);\n      additionalEls.forEach((el) => {\n        if (el.parentElement) {\n          el.parentElement.removeChild(el);\n        }\n      });\n    };\n  }, [tabGuardReady, eGridBodyParent, beans]);\n  const rootWrapperClasses = useMemo12(() => classesList(\"ag-root-wrapper\", rtlClass, keyboardFocusClass, layoutClass), [rtlClass, keyboardFocusClass, layoutClass]);\n  const rootWrapperBodyClasses = useMemo12(() => classesList(\"ag-root-wrapper-body\", \"ag-focus-managed\", layoutClass), [layoutClass]);\n  const topStyle = useMemo12(() => ({\n    userSelect: userSelect != null ? userSelect : \"\",\n    WebkitUserSelect: userSelect != null ? userSelect : \"\",\n    cursor: cursor != null ? cursor : \"\"\n  }), [userSelect, cursor]);\n  const setTabGuardCompRef = useCallback14((ref) => {\n    tabGuardRef.current = ref;\n    setTabGuardReady(ref !== null);\n  }, []);\n  return /* @__PURE__ */ React16.createElement(\"div\", { ref: setRef2, className: rootWrapperClasses, style: topStyle, role: \"presentation\" }, /* @__PURE__ */ React16.createElement(\"div\", { className: rootWrapperBodyClasses, ref: setGridBodyParent, role: \"presentation\" }, initialised && eGridBodyParent && beans && /* @__PURE__ */ React16.createElement(BeansContext.Provider, { value: beans }, /* @__PURE__ */ React16.createElement(\n    tabGuardComp_default,\n    {\n      ref: setTabGuardCompRef,\n      eFocusableElement: eGridBodyParent,\n      onTabKeyDown,\n      gridCtrl: gridCtrlRef.current,\n      forceFocusOutWhenTabGuardsAreEmpty: true\n    },\n    // we wait for initialised before rending the children, so GridComp has created and registered with it's\n    // GridCtrl before we create the child GridBodyComp. Otherwise the GridBodyComp would initialise first,\n    // before we have set the the Layout CSS classes, causing the GridBodyComp to render rows to a grid that\n    // doesn't have it's height specified, which would result if all the rows getting rendered (and if many rows,\n    // hangs the UI)\n    /* @__PURE__ */ React16.createElement(gridBodyComp_default, null)\n  ))));\n};\nvar gridComp_default = memo14(GridComp);\n\n// packages/ag-grid-react/src/reactUi/agGridReactUi.tsx\nvar AgGridReactUi = (props) => {\n  var _a, _b;\n  const apiRef = useRef15();\n  const eGui = useRef15(null);\n  const portalManager = useRef15(null);\n  const destroyFuncs = useRef15([]);\n  const whenReadyFuncs = useRef15([]);\n  const prevProps = useRef15(props);\n  const ready = useRef15(false);\n  const [context, setContext] = useState16(void 0);\n  const [, setPortalRefresher] = useState16(0);\n  const setRef2 = useCallback15((e) => {\n    eGui.current = e;\n    if (!eGui.current) {\n      destroyFuncs.current.forEach((f) => f());\n      destroyFuncs.current.length = 0;\n      return;\n    }\n    const modules = props.modules || [];\n    if (!portalManager.current) {\n      portalManager.current = new PortalManager(\n        () => setPortalRefresher((prev) => prev + 1),\n        props.componentWrappingElement,\n        props.maxComponentCreationTimeMs\n      );\n      destroyFuncs.current.push(() => {\n        var _a2;\n        (_a2 = portalManager.current) == null ? void 0 : _a2.destroy();\n        portalManager.current = null;\n      });\n    }\n    const mergedGridOps = ComponentUtil.combineAttributesAndGridOptions(props.gridOptions, props);\n    const gridParams = {\n      providedBeanInstances: {\n        frameworkComponentWrapper: new ReactFrameworkComponentWrapper(portalManager.current, !!mergedGridOps.reactiveCustomComponents)\n      },\n      modules,\n      frameworkOverrides: new ReactFrameworkOverrides()\n    };\n    const createUiCallback = (context2) => {\n      setContext(context2);\n      destroyFuncs.current.push(() => {\n        context2.destroy();\n      });\n      const ctrlsService = context2.getBean(CtrlsService.NAME);\n      ctrlsService.whenReady(() => {\n        if (context2.isDestroyed()) {\n          return;\n        }\n        const api = apiRef.current;\n        if (api) {\n          if (props.setGridApi) {\n            props.setGridApi(api, new ColumnApi(api));\n          }\n        }\n      });\n    };\n    const acceptChangesCallback = (context2) => {\n      const ctrlsService = context2.getBean(CtrlsService.NAME);\n      ctrlsService.whenReady(() => {\n        whenReadyFuncs.current.forEach((f) => f());\n        whenReadyFuncs.current.length = 0;\n        ready.current = true;\n      });\n    };\n    const gridCoreCreator = new GridCoreCreator();\n    apiRef.current = gridCoreCreator.create(\n      eGui.current,\n      mergedGridOps,\n      createUiCallback,\n      acceptChangesCallback,\n      gridParams\n    );\n  }, []);\n  const style = useMemo13(() => {\n    return __spreadValues({\n      height: \"100%\"\n    }, props.containerStyle || {});\n  }, [props.containerStyle]);\n  const processWhenReady = useCallback15((func) => {\n    if (ready.current) {\n      func();\n    } else {\n      whenReadyFuncs.current.push(func);\n    }\n  }, []);\n  useEffect9(() => {\n    const changes = extractGridPropertyChanges(prevProps.current, props);\n    prevProps.current = props;\n    processWhenReady(() => {\n      if (apiRef.current) {\n        ComponentUtil.processOnChange(changes, apiRef.current);\n      }\n    });\n  }, [props]);\n  return /* @__PURE__ */ React17.createElement(\"div\", { style, className: props.className, ref: setRef2 }, context && !context.isDestroyed() ? /* @__PURE__ */ React17.createElement(gridComp_default, { context }) : null, (_b = (_a = portalManager.current) == null ? void 0 : _a.getPortals()) != null ? _b : null);\n};\nfunction extractGridPropertyChanges(prevProps, nextProps) {\n  const changes = {};\n  Object.keys(nextProps).forEach((propKey) => {\n    const propValue = nextProps[propKey];\n    if (prevProps[propKey] !== propValue) {\n      changes[propKey] = propValue;\n    }\n  });\n  return changes;\n}\nvar ReactFrameworkComponentWrapper = class extends BaseComponentWrapper {\n  constructor(parent, reactiveCustomComponents) {\n    super();\n    this.parent = parent;\n    this.reactiveCustomComponents = reactiveCustomComponents;\n  }\n  createWrapper(UserReactComponent, componentType) {\n    if (this.reactiveCustomComponents) {\n      const getComponentClass = (propertyName) => {\n        switch (propertyName) {\n          case \"filter\":\n            return FilterComponentWrapper;\n          case \"floatingFilterComponent\":\n            return FloatingFilterComponentWrapper;\n          case \"dateComponent\":\n            return DateComponentWrapper;\n          case \"loadingOverlayComponent\":\n            return LoadingOverlayComponentWrapper;\n          case \"noRowsOverlayComponent\":\n            return NoRowsOverlayComponentWrapper;\n          case \"statusPanel\":\n            return StatusPanelComponentWrapper;\n          case \"toolPanel\":\n            return ToolPanelComponentWrapper;\n          case \"menuItem\":\n            return MenuItemComponentWrapper;\n        }\n      };\n      const ComponentClass = getComponentClass(componentType.propertyName);\n      if (ComponentClass) {\n        return new ComponentClass(UserReactComponent, this.parent, componentType);\n      }\n    } else {\n      switch (componentType.propertyName) {\n        case \"filter\":\n        case \"floatingFilterComponent\":\n        case \"dateComponent\":\n        case \"loadingOverlayComponent\":\n        case \"noRowsOverlayComponent\":\n        case \"statusPanel\":\n        case \"toolPanel\":\n        case \"menuItem\":\n          warnReactiveCustomComponents();\n          break;\n      }\n    }\n    const suppressFallbackMethods = !componentType.cellRenderer && componentType.propertyName !== \"toolPanel\";\n    return new ReactComponent(UserReactComponent, this.parent, componentType, suppressFallbackMethods);\n  }\n};\nvar DetailCellRenderer = forwardRef3((props, ref) => {\n  const { ctrlsFactory, context, gos, resizeObserverService, clientSideRowModel, serverSideRowModel } = useContext14(BeansContext);\n  const [cssClasses, setCssClasses] = useState16(() => new CssClasses());\n  const [gridCssClasses, setGridCssClasses] = useState16(() => new CssClasses());\n  const [detailGridOptions, setDetailGridOptions] = useState16();\n  const [detailRowData, setDetailRowData] = useState16();\n  const ctrlRef = useRef15();\n  const eGuiRef = useRef15(null);\n  const resizeObserverDestroyFunc = useRef15();\n  const parentModules = useMemo13(() => ModuleRegistry.__getGridRegisteredModules(props.api.getGridId()), [props]);\n  const topClassName = useMemo13(() => cssClasses.toString() + \" ag-details-row\", [cssClasses]);\n  const gridClassName = useMemo13(() => gridCssClasses.toString() + \" ag-details-grid\", [gridCssClasses]);\n  if (ref) {\n    useImperativeHandle3(ref, () => ({\n      refresh() {\n        var _a, _b;\n        return (_b = (_a = ctrlRef.current) == null ? void 0 : _a.refresh()) != null ? _b : false;\n      }\n    }));\n  }\n  if (props.template) {\n    _8.warnOnce(\"detailCellRendererParams.template is not supported by AG Grid React. To change the template, provide a Custom Detail Cell Renderer. See https://ag-grid.com/react-data-grid/master-detail-custom-detail/\");\n  }\n  const setRef2 = useCallback15((e) => {\n    eGuiRef.current = e;\n    if (!eGuiRef.current) {\n      context.destroyBean(ctrlRef.current);\n      if (resizeObserverDestroyFunc.current) {\n        resizeObserverDestroyFunc.current();\n      }\n      return;\n    }\n    const compProxy = {\n      addOrRemoveCssClass: (name, on) => setCssClasses((prev) => prev.setClass(name, on)),\n      addOrRemoveDetailGridCssClass: (name, on) => setGridCssClasses((prev) => prev.setClass(name, on)),\n      setDetailGrid: (gridOptions) => setDetailGridOptions(gridOptions),\n      setRowData: (rowData) => setDetailRowData(rowData),\n      getGui: () => eGuiRef.current\n    };\n    const ctrl = ctrlsFactory.getInstance(\"detailCellRenderer\");\n    if (!ctrl) {\n      return;\n    }\n    context.createBean(ctrl);\n    ctrl.init(compProxy, props);\n    ctrlRef.current = ctrl;\n    if (gos.get(\"detailRowAutoHeight\")) {\n      const checkRowSizeFunc = () => {\n        if (eGuiRef.current == null) {\n          return;\n        }\n        const clientHeight = eGuiRef.current.clientHeight;\n        if (clientHeight != null && clientHeight > 0) {\n          const updateRowHeightFunc = () => {\n            props.node.setRowHeight(clientHeight);\n            if (clientSideRowModel) {\n              clientSideRowModel.onRowHeightChanged();\n            } else if (serverSideRowModel) {\n              serverSideRowModel.onRowHeightChanged();\n            }\n          };\n          setTimeout(updateRowHeightFunc, 0);\n        }\n      };\n      resizeObserverDestroyFunc.current = resizeObserverService.observeResize(eGuiRef.current, checkRowSizeFunc);\n      checkRowSizeFunc();\n    }\n  }, []);\n  const setGridApi = useCallback15((api, columnApi) => {\n    var _a;\n    (_a = ctrlRef.current) == null ? void 0 : _a.registerDetailWithMaster(api, columnApi);\n  }, []);\n  return /* @__PURE__ */ React17.createElement(\"div\", { className: topClassName, ref: setRef2 }, detailGridOptions && /* @__PURE__ */ React17.createElement(AgGridReactUi, __spreadProps(__spreadValues({ className: gridClassName }, detailGridOptions), { modules: parentModules, rowData: detailRowData, setGridApi })));\n});\nvar ReactFrameworkOverrides = class extends VanillaFrameworkOverrides {\n  constructor() {\n    super(\"react\");\n    this.frameworkComponents = {\n      agGroupCellRenderer: groupCellRenderer_default,\n      agGroupRowRenderer: groupCellRenderer_default,\n      agDetailCellRenderer: DetailCellRenderer\n    };\n    this.wrapIncoming = (callback, source) => {\n      if (source === \"ensureVisible\") {\n        return runWithoutFlushSync(callback);\n      }\n      return callback();\n    };\n    this.renderingEngine = \"react\";\n  }\n  frameworkComponent(name) {\n    return this.frameworkComponents[name];\n  }\n  isFrameworkComponent(comp) {\n    if (!comp) {\n      return false;\n    }\n    const prototype = comp.prototype;\n    const isJsComp = prototype && \"getGui\" in prototype;\n    return !isJsComp;\n  }\n};\n\n// packages/ag-grid-react/src/agGridReact.tsx\nvar AgGridReact = class extends Component2 {\n  constructor() {\n    super(...arguments);\n    this.apiListeners = [];\n    this.setGridApi = (api, columnApi) => {\n      this.api = api;\n      this.columnApi = columnApi;\n      this.apiListeners.forEach((listener) => listener(api));\n    };\n  }\n  registerApiListener(listener) {\n    this.apiListeners.push(listener);\n  }\n  componentWillUnmount() {\n    this.apiListeners.length = 0;\n  }\n  render() {\n    return /* @__PURE__ */ React18.createElement(AgGridReactUi, __spreadProps(__spreadValues({}, this.props), { setGridApi: this.setGridApi }));\n  }\n};\n\n// packages/ag-grid-react/src/shared/interfaces.ts\nvar ChangeDetectionStrategyType = /* @__PURE__ */ ((ChangeDetectionStrategyType2) => {\n  ChangeDetectionStrategyType2[\"IdentityCheck\"] = \"IdentityCheck\";\n  ChangeDetectionStrategyType2[\"DeepValueCheck\"] = \"DeepValueCheck\";\n  ChangeDetectionStrategyType2[\"NoCheck\"] = \"NoCheck\";\n  return ChangeDetectionStrategyType2;\n})(ChangeDetectionStrategyType || {});\n\n// packages/ag-grid-react/src/shared/customComp/interfaces.ts\nimport { useContext as useContext15 } from \"react\";\nfunction useGridCustomComponent(methods) {\n  const { setMethods } = useContext15(CustomContext);\n  setMethods(methods);\n}\nfunction useGridCellEditor(callbacks) {\n  useGridCustomComponent(callbacks);\n}\nfunction useGridDate(callbacks) {\n  return useGridCustomComponent(callbacks);\n}\nfunction useGridFilter(callbacks) {\n  return useGridCustomComponent(callbacks);\n}\nfunction useGridFloatingFilter(callbacks) {\n  useGridCustomComponent(callbacks);\n}\nfunction useGridMenuItem(callbacks) {\n  useGridCustomComponent(callbacks);\n}\nexport {\n  AgGridReact,\n  ChangeDetectionStrategyType,\n  getInstance,\n  useGridCellEditor,\n  useGridDate,\n  useGridFilter,\n  useGridFloatingFilter,\n  useGridMenuItem,\n  warnReactiveCustomComponents\n};\n", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\nvar __decorateParam = (index, decorator) => (target, key) => decorator(target, key, index);\n\n// community-modules/core/src/utils/generic.ts\nvar generic_exports = {};\n__export(generic_exports, {\n  attrToBoolean: () => attrToBoolean,\n  attrToNumber: () => attrToNumber,\n  attrToString: () => attrToString,\n  defaultComparator: () => defaultComparator,\n  exists: () => exists,\n  jsonEquals: () => jsonEquals,\n  makeNull: () => makeNull,\n  missing: () => missing,\n  missingOrEmpty: () => missingOrEmpty,\n  toStringOrNull: () => toStringOrNull,\n  values: () => values\n});\nfunction makeNull(value) {\n  if (value == null || value === \"\") {\n    return null;\n  }\n  return value;\n}\nfunction exists(value, allowEmptyString = false) {\n  return value != null && (value !== \"\" || allowEmptyString);\n}\nfunction missing(value) {\n  return !exists(value);\n}\nfunction missingOrEmpty(value) {\n  return value == null || value.length === 0;\n}\nfunction toStringOrNull(value) {\n  return value != null && typeof value.toString === \"function\" ? value.toString() : null;\n}\nfunction attrToNumber(value) {\n  if (value === void 0) {\n    return;\n  }\n  if (value === null || value === \"\") {\n    return null;\n  }\n  if (typeof value === \"number\") {\n    return isNaN(value) ? void 0 : value;\n  }\n  const valueParsed = parseInt(value, 10);\n  return isNaN(valueParsed) ? void 0 : valueParsed;\n}\nfunction attrToBoolean(value) {\n  if (value === void 0) {\n    return;\n  }\n  if (value === null || value === \"\") {\n    return false;\n  }\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  return /true/i.test(value);\n}\nfunction attrToString(value) {\n  if (value == null || value === \"\") {\n    return;\n  }\n  return value;\n}\nfunction jsonEquals(val1, val2) {\n  const val1Json = val1 ? JSON.stringify(val1) : null;\n  const val2Json = val2 ? JSON.stringify(val2) : null;\n  return val1Json === val2Json;\n}\nfunction defaultComparator(valueA, valueB, accentedCompare = false) {\n  const valueAMissing = valueA == null;\n  const valueBMissing = valueB == null;\n  if (valueA && valueA.toNumber) {\n    valueA = valueA.toNumber();\n  }\n  if (valueB && valueB.toNumber) {\n    valueB = valueB.toNumber();\n  }\n  if (valueAMissing && valueBMissing) {\n    return 0;\n  }\n  if (valueAMissing) {\n    return -1;\n  }\n  if (valueBMissing) {\n    return 1;\n  }\n  function doQuickCompare(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n  if (typeof valueA !== \"string\") {\n    return doQuickCompare(valueA, valueB);\n  }\n  if (!accentedCompare) {\n    return doQuickCompare(valueA, valueB);\n  }\n  try {\n    return valueA.localeCompare(valueB);\n  } catch (e) {\n    return doQuickCompare(valueA, valueB);\n  }\n}\nfunction values(object) {\n  if (object instanceof Set || object instanceof Map) {\n    const arr = [];\n    object.forEach((value) => arr.push(value));\n    return arr;\n  }\n  return Object.values(object);\n}\n\n// community-modules/core/src/columns/columnKeyCreator.ts\nvar ColumnKeyCreator = class {\n  constructor() {\n    this.existingKeys = {};\n  }\n  addExistingKeys(keys2) {\n    for (let i = 0; i < keys2.length; i++) {\n      this.existingKeys[keys2[i]] = true;\n    }\n  }\n  getUniqueKey(colId, colField) {\n    colId = toStringOrNull(colId);\n    let count = 0;\n    while (true) {\n      let idToTry;\n      if (colId) {\n        idToTry = colId;\n        if (count !== 0) {\n          idToTry += \"_\" + count;\n        }\n      } else if (colField) {\n        idToTry = colField;\n        if (count !== 0) {\n          idToTry += \"_\" + count;\n        }\n      } else {\n        idToTry = count;\n      }\n      if (!this.existingKeys[idToTry]) {\n        this.existingKeys[idToTry] = true;\n        return String(idToTry);\n      }\n      count++;\n    }\n  }\n};\n\n// community-modules/core/src/utils/object.ts\nvar object_exports = {};\n__export(object_exports, {\n  cloneObject: () => cloneObject,\n  deepCloneDefinition: () => deepCloneDefinition,\n  getAllValuesInObject: () => getAllValuesInObject,\n  getValueUsingField: () => getValueUsingField,\n  isNonNullObject: () => isNonNullObject,\n  iterateObject: () => iterateObject,\n  mergeDeep: () => mergeDeep,\n  removeAllReferences: () => removeAllReferences\n});\nfunction iterateObject(object, callback) {\n  if (object == null) {\n    return;\n  }\n  if (Array.isArray(object)) {\n    for (let i = 0; i < object.length; i++) {\n      callback(i.toString(), object[i]);\n    }\n    return;\n  }\n  for (const [key, value] of Object.entries(object)) {\n    callback(key, value);\n  }\n}\nfunction cloneObject(object) {\n  const copy = {};\n  const keys2 = Object.keys(object);\n  for (let i = 0; i < keys2.length; i++) {\n    const key = keys2[i];\n    const value = object[key];\n    copy[key] = value;\n  }\n  return copy;\n}\nfunction deepCloneDefinition(object, keysToSkip) {\n  if (!object) {\n    return;\n  }\n  const obj = object;\n  const res = {};\n  Object.keys(obj).forEach((key) => {\n    if (keysToSkip && keysToSkip.indexOf(key) >= 0) {\n      return;\n    }\n    const value = obj[key];\n    const sourceIsSimpleObject = isNonNullObject(value) && value.constructor === Object;\n    if (sourceIsSimpleObject) {\n      res[key] = deepCloneDefinition(value);\n    } else {\n      res[key] = value;\n    }\n  });\n  return res;\n}\nfunction getAllValuesInObject(obj) {\n  if (!obj) {\n    return [];\n  }\n  const anyObject = Object;\n  if (typeof anyObject.values === \"function\") {\n    return anyObject.values(obj);\n  }\n  const ret = [];\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && obj.propertyIsEnumerable(key)) {\n      ret.push(obj[key]);\n    }\n  }\n  return ret;\n}\nfunction mergeDeep(dest, source, copyUndefined = true, makeCopyOfSimpleObjects = false) {\n  if (!exists(source)) {\n    return;\n  }\n  iterateObject(source, (key, sourceValue) => {\n    let destValue = dest[key];\n    if (destValue === sourceValue) {\n      return;\n    }\n    if (makeCopyOfSimpleObjects) {\n      const objectIsDueToBeCopied = destValue == null && sourceValue != null;\n      if (objectIsDueToBeCopied) {\n        const sourceIsSimpleObject = typeof sourceValue === \"object\" && sourceValue.constructor === Object;\n        const dontCopy = sourceIsSimpleObject;\n        if (dontCopy) {\n          destValue = {};\n          dest[key] = destValue;\n        }\n      }\n    }\n    if (isNonNullObject(sourceValue) && isNonNullObject(destValue) && !Array.isArray(destValue)) {\n      mergeDeep(destValue, sourceValue, copyUndefined, makeCopyOfSimpleObjects);\n    } else if (copyUndefined || sourceValue !== void 0) {\n      dest[key] = sourceValue;\n    }\n  });\n}\nfunction getValueUsingField(data, field, fieldContainsDots) {\n  if (!field || !data) {\n    return;\n  }\n  if (!fieldContainsDots) {\n    return data[field];\n  }\n  const fields = field.split(\".\");\n  let currentObject = data;\n  for (let i = 0; i < fields.length; i++) {\n    if (currentObject == null) {\n      return void 0;\n    }\n    currentObject = currentObject[fields[i]];\n  }\n  return currentObject;\n}\nfunction removeAllReferences(obj, preserveKeys = [], preDestroyLink) {\n  Object.keys(obj).forEach((key) => {\n    const value = obj[key];\n    if (typeof value === \"object\" && !preserveKeys.includes(key)) {\n      obj[key] = void 0;\n    }\n  });\n  const proto = Object.getPrototypeOf(obj);\n  const properties = {};\n  const msgFunc = (key) => `AG Grid: Grid API function ${key}() cannot be called as the grid has been destroyed.\n    It is recommended to remove local references to the grid api. Alternatively, check gridApi.isDestroyed() to avoid calling methods against a destroyed grid.\n    To run logic when the grid is about to be destroyed use the gridPreDestroy event. See: ${preDestroyLink}`;\n  Object.getOwnPropertyNames(proto).forEach((key) => {\n    const value = proto[key];\n    if (typeof value === \"function\" && !preserveKeys.includes(key)) {\n      const func = () => {\n        console.warn(msgFunc(key));\n      };\n      properties[key] = { value: func, writable: true };\n    }\n  });\n  Object.defineProperties(obj, properties);\n}\nfunction isNonNullObject(value) {\n  return typeof value === \"object\" && value !== null;\n}\n\n// community-modules/core/src/utils/function.ts\nvar function_exports = {};\n__export(function_exports, {\n  compose: () => compose,\n  debounce: () => debounce,\n  doOnce: () => doOnce,\n  errorOnce: () => errorOnce,\n  executeAfter: () => executeAfter,\n  executeInAWhile: () => executeInAWhile,\n  executeNextVMTurn: () => executeNextVMTurn,\n  getFunctionName: () => getFunctionName,\n  isFunction: () => isFunction,\n  noop: () => noop,\n  throttle: () => throttle,\n  waitUntil: () => waitUntil,\n  warnOnce: () => warnOnce\n});\nvar doOnceFlags = {};\nfunction doOnce(func, key) {\n  if (doOnceFlags[key]) {\n    return;\n  }\n  func();\n  doOnceFlags[key] = true;\n}\nfunction warnOnce(msg) {\n  doOnce(() => console.warn(\"AG Grid: \" + msg), msg);\n}\nfunction errorOnce(msg) {\n  doOnce(() => console.error(\"AG Grid: \" + msg), msg);\n}\nfunction getFunctionName(funcConstructor) {\n  if (funcConstructor.name) {\n    return funcConstructor.name;\n  }\n  const matches = /function\\s+([^\\(]+)/.exec(funcConstructor.toString());\n  return matches && matches.length === 2 ? matches[1].trim() : null;\n}\nfunction isFunction(val) {\n  return !!(val && val.constructor && val.call && val.apply);\n}\nfunction executeInAWhile(funcs) {\n  executeAfter(funcs, 400);\n}\nvar executeNextVMTurnFuncs = [];\nvar executeNextVMTurnPending = false;\nfunction executeNextVMTurn(func) {\n  executeNextVMTurnFuncs.push(func);\n  if (executeNextVMTurnPending) {\n    return;\n  }\n  executeNextVMTurnPending = true;\n  window.setTimeout(() => {\n    const funcsCopy = executeNextVMTurnFuncs.slice();\n    executeNextVMTurnFuncs.length = 0;\n    executeNextVMTurnPending = false;\n    funcsCopy.forEach((func2) => func2());\n  }, 0);\n}\nfunction executeAfter(funcs, milliseconds = 0) {\n  if (funcs.length > 0) {\n    window.setTimeout(() => funcs.forEach((func) => func()), milliseconds);\n  }\n}\nfunction debounce(func, delay) {\n  let timeout;\n  return function(...args) {\n    const context = this;\n    window.clearTimeout(timeout);\n    timeout = window.setTimeout(function() {\n      func.apply(context, args);\n    }, delay);\n  };\n}\nfunction throttle(func, wait) {\n  let previousCall = 0;\n  return function(...args) {\n    const context = this;\n    const currentCall = (/* @__PURE__ */ new Date()).getTime();\n    if (currentCall - previousCall < wait) {\n      return;\n    }\n    previousCall = currentCall;\n    func.apply(context, args);\n  };\n}\nfunction waitUntil(condition, callback, timeout = 100, timeoutMessage) {\n  const timeStamp = (/* @__PURE__ */ new Date()).getTime();\n  let interval = null;\n  let executed = false;\n  const internalCallback = () => {\n    const reachedTimeout = (/* @__PURE__ */ new Date()).getTime() - timeStamp > timeout;\n    if (condition() || reachedTimeout) {\n      callback();\n      executed = true;\n      if (interval != null) {\n        window.clearInterval(interval);\n        interval = null;\n      }\n      if (reachedTimeout && timeoutMessage) {\n        console.warn(timeoutMessage);\n      }\n    }\n  };\n  internalCallback();\n  if (!executed) {\n    interval = window.setInterval(internalCallback, 10);\n  }\n}\nfunction compose(...fns) {\n  return (arg) => fns.reduce((composed, f) => f(composed), arg);\n}\nvar noop = () => {\n  return;\n};\n\n// community-modules/core/src/modules/moduleNames.ts\nvar ModuleNames = /* @__PURE__ */ ((ModuleNames2) => {\n  ModuleNames2[\"CommunityCoreModule\"] = \"@ag-grid-community/core\";\n  ModuleNames2[\"InfiniteRowModelModule\"] = \"@ag-grid-community/infinite-row-model\";\n  ModuleNames2[\"ClientSideRowModelModule\"] = \"@ag-grid-community/client-side-row-model\";\n  ModuleNames2[\"CsvExportModule\"] = \"@ag-grid-community/csv-export\";\n  ModuleNames2[\"EnterpriseCoreModule\"] = \"@ag-grid-enterprise/core\";\n  ModuleNames2[\"RowGroupingModule\"] = \"@ag-grid-enterprise/row-grouping\";\n  ModuleNames2[\"ColumnsToolPanelModule\"] = \"@ag-grid-enterprise/column-tool-panel\";\n  ModuleNames2[\"FiltersToolPanelModule\"] = \"@ag-grid-enterprise/filter-tool-panel\";\n  ModuleNames2[\"MenuModule\"] = \"@ag-grid-enterprise/menu\";\n  ModuleNames2[\"SetFilterModule\"] = \"@ag-grid-enterprise/set-filter\";\n  ModuleNames2[\"MultiFilterModule\"] = \"@ag-grid-enterprise/multi-filter\";\n  ModuleNames2[\"StatusBarModule\"] = \"@ag-grid-enterprise/status-bar\";\n  ModuleNames2[\"SideBarModule\"] = \"@ag-grid-enterprise/side-bar\";\n  ModuleNames2[\"RangeSelectionModule\"] = \"@ag-grid-enterprise/range-selection\";\n  ModuleNames2[\"MasterDetailModule\"] = \"@ag-grid-enterprise/master-detail\";\n  ModuleNames2[\"RichSelectModule\"] = \"@ag-grid-enterprise/rich-select\";\n  ModuleNames2[\"GridChartsModule\"] = \"@ag-grid-enterprise/charts\";\n  ModuleNames2[\"ViewportRowModelModule\"] = \"@ag-grid-enterprise/viewport-row-model\";\n  ModuleNames2[\"ServerSideRowModelModule\"] = \"@ag-grid-enterprise/server-side-row-model\";\n  ModuleNames2[\"ExcelExportModule\"] = \"@ag-grid-enterprise/excel-export\";\n  ModuleNames2[\"ClipboardModule\"] = \"@ag-grid-enterprise/clipboard\";\n  ModuleNames2[\"SparklinesModule\"] = \"@ag-grid-enterprise/sparklines\";\n  ModuleNames2[\"AdvancedFilterModule\"] = \"@ag-grid-enterprise/advanced-filter\";\n  ModuleNames2[\"AngularModule\"] = \"@ag-grid-community/angular\";\n  ModuleNames2[\"ReactModule\"] = \"@ag-grid-community/react\";\n  ModuleNames2[\"VueModule\"] = \"@ag-grid-community/vue\";\n  return ModuleNames2;\n})(ModuleNames || {});\n\n// community-modules/core/src/modules/moduleRegistry.ts\nvar _ModuleRegistry = class _ModuleRegistry {\n  /**\n   * Globally register the given module for all grids.\n   * @param module - module to register\n   */\n  static register(module) {\n    _ModuleRegistry.__register(module, true, void 0);\n  }\n  /**\n   * Globally register the given modules for all grids.\n   * @param modules - modules to register\n   */\n  static registerModules(modules) {\n    _ModuleRegistry.__registerModules(modules, true, void 0);\n  }\n  /** AG GRID INTERNAL - Module registration helper. */\n  static __register(module, moduleBased, gridId) {\n    _ModuleRegistry.runVersionChecks(module);\n    if (gridId !== void 0) {\n      _ModuleRegistry.areGridScopedModules = true;\n      if (_ModuleRegistry.gridModulesMap[gridId] === void 0) {\n        _ModuleRegistry.gridModulesMap[gridId] = {};\n      }\n      _ModuleRegistry.gridModulesMap[gridId][module.moduleName] = module;\n    } else {\n      _ModuleRegistry.globalModulesMap[module.moduleName] = module;\n    }\n    _ModuleRegistry.setModuleBased(moduleBased);\n  }\n  /** AG GRID INTERNAL - Unregister grid scoped module. */\n  static __unRegisterGridModules(gridId) {\n    delete _ModuleRegistry.gridModulesMap[gridId];\n  }\n  /** AG GRID INTERNAL - Module registration helper. */\n  static __registerModules(modules, moduleBased, gridId) {\n    _ModuleRegistry.setModuleBased(moduleBased);\n    if (!modules) {\n      return;\n    }\n    modules.forEach((module) => _ModuleRegistry.__register(module, moduleBased, gridId));\n  }\n  static isValidModuleVersion(module) {\n    const [moduleMajor, moduleMinor] = module.version.split(\".\") || [];\n    const [currentModuleMajor, currentModuleMinor] = _ModuleRegistry.currentModuleVersion.split(\".\") || [];\n    return moduleMajor === currentModuleMajor && moduleMinor === currentModuleMinor;\n  }\n  static runVersionChecks(module) {\n    if (!_ModuleRegistry.currentModuleVersion) {\n      _ModuleRegistry.currentModuleVersion = module.version;\n    }\n    if (!module.version) {\n      console.error(`AG Grid: You are using incompatible versions of AG Grid modules. Major and minor versions should always match across modules. '${module.moduleName}' is incompatible. Please update all modules to the same version.`);\n    } else if (!_ModuleRegistry.isValidModuleVersion(module)) {\n      console.error(`AG Grid: You are using incompatible versions of AG Grid modules. Major and minor versions should always match across modules. '${module.moduleName}' is version ${module.version} but the other modules are version ${this.currentModuleVersion}. Please update all modules to the same version.`);\n    }\n    if (module.validate) {\n      const result = module.validate();\n      if (!result.isValid) {\n        const errorResult = result;\n        console.error(`AG Grid: ${errorResult.message}`);\n      }\n    }\n  }\n  static setModuleBased(moduleBased) {\n    if (_ModuleRegistry.moduleBased === void 0) {\n      _ModuleRegistry.moduleBased = moduleBased;\n    } else {\n      if (_ModuleRegistry.moduleBased !== moduleBased) {\n        doOnce(\n          () => {\n            console.warn(`AG Grid: You are mixing modules (i.e. @ag-grid-community/core) and packages (ag-grid-community) - you can only use one or the other of these mechanisms.`);\n            console.warn(\"Please see https://www.ag-grid.com/javascript-grid/modules/ for more information.\");\n          },\n          \"ModulePackageCheck\"\n        );\n      }\n    }\n  }\n  /**\n   * AG GRID INTERNAL - Set if files are being served from a single UMD bundle to provide accurate enterprise upgrade steps.\n   */\n  static __setIsBundled() {\n    _ModuleRegistry.isBundled = true;\n  }\n  /** AG GRID INTERNAL - Assert a given module has been register, globally or individually with this grid. */\n  static __assertRegistered(moduleName, reason, gridId) {\n    var _a;\n    if (this.__isRegistered(moduleName, gridId)) {\n      return true;\n    }\n    const warningKey = reason + moduleName;\n    let warningMessage;\n    if (_ModuleRegistry.isBundled) {\n      {\n        warningMessage = `AG Grid: unable to use ${reason} as 'ag-grid-enterprise' has not been loaded. Check you are using the Enterprise bundle:\n        \n        <script src=\"https://cdn.jsdelivr.net/npm/ag-grid-enterprise@AG_GRID_VERSION/dist/ag-grid-enterprise.min.js\"><\\/script>\n        \nFor more info see: https://ag-grid.com/javascript-data-grid/getting-started/#getting-started-with-ag-grid-enterprise`;\n      }\n    } else if (_ModuleRegistry.moduleBased || _ModuleRegistry.moduleBased === void 0) {\n      let modName = (_a = Object.entries(ModuleNames).find(([k, v]) => v === moduleName)) == null ? void 0 : _a[0];\n      warningMessage = `AG Grid: unable to use ${reason} as the ${modName} is not registered${_ModuleRegistry.areGridScopedModules ? ` for gridId: ${gridId}` : \"\"}. Check if you have registered the module:\n           \n    import { ModuleRegistry } from '@ag-grid-community/core';\n    import { ${modName} } from '${moduleName}';\n    \n    ModuleRegistry.registerModules([ ${modName} ]);\n\nFor more info see: https://www.ag-grid.com/javascript-grid/modules/`;\n    } else {\n      warningMessage = `AG Grid: unable to use ${reason} as package 'ag-grid-enterprise' has not been imported. Check that you have imported the package:\n            \n    import 'ag-grid-enterprise';`;\n    }\n    doOnce(() => {\n      console.warn(warningMessage);\n    }, warningKey);\n    return false;\n  }\n  /** AG GRID INTERNAL - Is the given module registered, globally or individually with this grid. */\n  static __isRegistered(moduleName, gridId) {\n    var _a;\n    return !!_ModuleRegistry.globalModulesMap[moduleName] || !!((_a = _ModuleRegistry.gridModulesMap[gridId]) == null ? void 0 : _a[moduleName]);\n  }\n  /** AG GRID INTERNAL - Get all registered modules globally / individually for this grid. */\n  static __getRegisteredModules(gridId) {\n    return [...values(_ModuleRegistry.globalModulesMap), ...values(_ModuleRegistry.gridModulesMap[gridId] || {})];\n  }\n  /** AG GRID INTERNAL - Get the list of modules registered individually for this grid. */\n  static __getGridRegisteredModules(gridId) {\n    var _a;\n    return values((_a = _ModuleRegistry.gridModulesMap[gridId]) != null ? _a : {}) || [];\n  }\n  /** INTERNAL */\n  static __isPackageBased() {\n    return !_ModuleRegistry.moduleBased;\n  }\n};\n// having in a map a) removes duplicates and b) allows fast lookup\n_ModuleRegistry.globalModulesMap = {};\n_ModuleRegistry.gridModulesMap = {};\n_ModuleRegistry.areGridScopedModules = false;\nvar ModuleRegistry = _ModuleRegistry;\n\n// community-modules/core/src/context/context.ts\nvar Context = class {\n  constructor(params, logger) {\n    this.beanWrappers = {};\n    this.destroyed = false;\n    if (!params || !params.beanClasses) {\n      return;\n    }\n    this.contextParams = params;\n    this.logger = logger;\n    this.logger.log(\">> creating ag-Application Context\");\n    this.createBeans();\n    const beanInstances = this.getBeanInstances();\n    this.wireBeans(beanInstances);\n    this.logger.log(\">> ag-Application Context ready - component is alive\");\n  }\n  getBeanInstances() {\n    return values(this.beanWrappers).map((beanEntry) => beanEntry.beanInstance);\n  }\n  createBean(bean, afterPreCreateCallback) {\n    if (!bean) {\n      throw Error(`Can't wire to bean since it is null`);\n    }\n    this.wireBeans([bean], afterPreCreateCallback);\n    return bean;\n  }\n  wireBeans(beanInstances, afterPreCreateCallback) {\n    this.autoWireBeans(beanInstances);\n    this.methodWireBeans(beanInstances);\n    this.callLifeCycleMethods(beanInstances, \"preConstructMethods\");\n    if (exists(afterPreCreateCallback)) {\n      beanInstances.forEach(afterPreCreateCallback);\n    }\n    this.callLifeCycleMethods(beanInstances, \"postConstructMethods\");\n  }\n  createBeans() {\n    this.contextParams.beanClasses.forEach(this.createBeanWrapper.bind(this));\n    iterateObject(this.beanWrappers, (key, beanEntry) => {\n      let constructorParamsMeta;\n      if (beanEntry.bean.__agBeanMetaData && beanEntry.bean.__agBeanMetaData.autowireMethods && beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor) {\n        constructorParamsMeta = beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor;\n      }\n      const constructorParams = this.getBeansForParameters(constructorParamsMeta, beanEntry.bean.name);\n      const newInstance = new (beanEntry.bean.bind.apply(beanEntry.bean, [null, ...constructorParams]))();\n      beanEntry.beanInstance = newInstance;\n    });\n    const createdBeanNames = Object.keys(this.beanWrappers).join(\", \");\n    this.logger.log(`created beans: ${createdBeanNames}`);\n  }\n  // tslint:disable-next-line\n  createBeanWrapper(BeanClass) {\n    const metaData = BeanClass.__agBeanMetaData;\n    if (!metaData) {\n      let beanName;\n      if (BeanClass.prototype.constructor) {\n        beanName = getFunctionName(BeanClass.prototype.constructor);\n      } else {\n        beanName = \"\" + BeanClass;\n      }\n      console.error(`Context item ${beanName} is not a bean`);\n      return;\n    }\n    const beanEntry = {\n      bean: BeanClass,\n      beanInstance: null,\n      beanName: metaData.beanName\n    };\n    this.beanWrappers[metaData.beanName] = beanEntry;\n  }\n  autoWireBeans(beanInstances) {\n    beanInstances.forEach((beanInstance) => {\n      this.forEachMetaDataInHierarchy(beanInstance, (metaData, beanName) => {\n        const attributes = metaData.agClassAttributes;\n        if (!attributes) {\n          return;\n        }\n        attributes.forEach((attribute) => {\n          const otherBean = this.lookupBeanInstance(beanName, attribute.beanName, attribute.optional);\n          beanInstance[attribute.attributeName] = otherBean;\n        });\n      });\n    });\n  }\n  methodWireBeans(beanInstances) {\n    beanInstances.forEach((beanInstance) => {\n      this.forEachMetaDataInHierarchy(beanInstance, (metaData, beanName) => {\n        iterateObject(metaData.autowireMethods, (methodName, wireParams) => {\n          if (methodName === \"agConstructor\") {\n            return;\n          }\n          const initParams = this.getBeansForParameters(wireParams, beanName);\n          beanInstance[methodName].apply(beanInstance, initParams);\n        });\n      });\n    });\n  }\n  forEachMetaDataInHierarchy(beanInstance, callback) {\n    let prototype = Object.getPrototypeOf(beanInstance);\n    while (prototype != null) {\n      const constructor = prototype.constructor;\n      if (constructor.hasOwnProperty(\"__agBeanMetaData\")) {\n        const metaData = constructor.__agBeanMetaData;\n        const beanName = this.getBeanName(constructor);\n        callback(metaData, beanName);\n      }\n      prototype = Object.getPrototypeOf(prototype);\n    }\n  }\n  getBeanName(constructor) {\n    if (constructor.__agBeanMetaData && constructor.__agBeanMetaData.beanName) {\n      return constructor.__agBeanMetaData.beanName;\n    }\n    const constructorString = constructor.toString();\n    const beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n    return beanName;\n  }\n  getBeansForParameters(parameters, beanName) {\n    const beansList = [];\n    if (parameters) {\n      iterateObject(parameters, (paramIndex, otherBeanName) => {\n        const otherBean = this.lookupBeanInstance(beanName, otherBeanName);\n        beansList[Number(paramIndex)] = otherBean;\n      });\n    }\n    return beansList;\n  }\n  lookupBeanInstance(wiringBean, beanName, optional = false) {\n    if (this.destroyed) {\n      this.logger.log(`AG Grid: bean reference ${beanName} is used after the grid is destroyed!`);\n      return null;\n    }\n    if (beanName === \"context\") {\n      return this;\n    }\n    if (this.contextParams.providedBeanInstances && this.contextParams.providedBeanInstances.hasOwnProperty(beanName)) {\n      return this.contextParams.providedBeanInstances[beanName];\n    }\n    const beanEntry = this.beanWrappers[beanName];\n    if (beanEntry) {\n      return beanEntry.beanInstance;\n    }\n    if (!optional) {\n      console.error(`AG Grid: unable to find bean reference ${beanName} while initialising ${wiringBean}`);\n    }\n    return null;\n  }\n  callLifeCycleMethods(beanInstances, lifeCycleMethod) {\n    beanInstances.forEach((beanInstance) => this.callLifeCycleMethodsOnBean(beanInstance, lifeCycleMethod));\n  }\n  callLifeCycleMethodsOnBean(beanInstance, lifeCycleMethod, methodToIgnore) {\n    const allMethods = {};\n    this.forEachMetaDataInHierarchy(beanInstance, (metaData) => {\n      const methods = metaData[lifeCycleMethod];\n      if (methods) {\n        methods.forEach((methodName) => {\n          if (methodName != methodToIgnore) {\n            allMethods[methodName] = true;\n          }\n        });\n      }\n    });\n    const allMethodsList = Object.keys(allMethods);\n    allMethodsList.forEach((methodName) => beanInstance[methodName]());\n  }\n  getBean(name) {\n    return this.lookupBeanInstance(\"getBean\", name, true);\n  }\n  destroy() {\n    if (this.destroyed) {\n      return;\n    }\n    this.destroyed = true;\n    this.logger.log(\">> Shutting down ag-Application Context\");\n    const beanInstances = this.getBeanInstances();\n    this.destroyBeans(beanInstances);\n    this.contextParams.providedBeanInstances = null;\n    ModuleRegistry.__unRegisterGridModules(this.contextParams.gridId);\n    this.logger.log(\">> ag-Application Context shut down - component is dead\");\n  }\n  destroyBean(bean) {\n    if (!bean) {\n      return;\n    }\n    this.destroyBeans([bean]);\n  }\n  destroyBeans(beans) {\n    if (!beans) {\n      return [];\n    }\n    beans.forEach((bean) => {\n      this.callLifeCycleMethodsOnBean(bean, \"preDestroyMethods\", \"destroy\");\n      const beanAny = bean;\n      if (typeof beanAny.destroy === \"function\") {\n        beanAny.destroy();\n      }\n    });\n    return [];\n  }\n  isDestroyed() {\n    return this.destroyed;\n  }\n  getGridId() {\n    return this.contextParams.gridId;\n  }\n};\nfunction PreConstruct(target, methodName, descriptor) {\n  const props = getOrCreateProps(target.constructor);\n  if (!props.preConstructMethods) {\n    props.preConstructMethods = [];\n  }\n  props.preConstructMethods.push(methodName);\n}\nfunction PostConstruct(target, methodName, descriptor) {\n  const props = getOrCreateProps(target.constructor);\n  if (!props.postConstructMethods) {\n    props.postConstructMethods = [];\n  }\n  props.postConstructMethods.push(methodName);\n}\nfunction PreDestroy(target, methodName, descriptor) {\n  const props = getOrCreateProps(target.constructor);\n  if (!props.preDestroyMethods) {\n    props.preDestroyMethods = [];\n  }\n  props.preDestroyMethods.push(methodName);\n}\nfunction Bean(beanName) {\n  return (classConstructor) => {\n    const props = getOrCreateProps(classConstructor);\n    props.beanName = beanName;\n  };\n}\nfunction Autowired(name) {\n  return (target, propertyKey, descriptor) => {\n    autowiredFunc(target, name, false, target, propertyKey, null);\n  };\n}\nfunction Optional(name) {\n  return (target, propertyKey, descriptor) => {\n    autowiredFunc(target, name, true, target, propertyKey, null);\n  };\n}\nfunction autowiredFunc(target, name, optional, classPrototype, methodOrAttributeName, index) {\n  if (name === null) {\n    console.error(\"AG Grid: Autowired name should not be null\");\n    return;\n  }\n  if (typeof index === \"number\") {\n    console.error(\"AG Grid: Autowired should be on an attribute\");\n    return;\n  }\n  const props = getOrCreateProps(target.constructor);\n  if (!props.agClassAttributes) {\n    props.agClassAttributes = [];\n  }\n  props.agClassAttributes.push({\n    attributeName: methodOrAttributeName,\n    beanName: name,\n    optional\n  });\n}\nfunction Qualifier(name) {\n  return (classPrototype, methodOrAttributeName, index) => {\n    const constructor = typeof classPrototype == \"function\" ? classPrototype : classPrototype.constructor;\n    let props;\n    if (typeof index === \"number\") {\n      let methodName;\n      if (methodOrAttributeName) {\n        props = getOrCreateProps(constructor);\n        methodName = methodOrAttributeName;\n      } else {\n        props = getOrCreateProps(constructor);\n        methodName = \"agConstructor\";\n      }\n      if (!props.autowireMethods) {\n        props.autowireMethods = {};\n      }\n      if (!props.autowireMethods[methodName]) {\n        props.autowireMethods[methodName] = {};\n      }\n      props.autowireMethods[methodName][index] = name;\n    }\n  };\n}\nfunction getOrCreateProps(target) {\n  if (!target.hasOwnProperty(\"__agBeanMetaData\")) {\n    target.__agBeanMetaData = {};\n  }\n  return target.__agBeanMetaData;\n}\n\n// community-modules/core/src/eventService.ts\nvar EventService = class {\n  constructor() {\n    this.allSyncListeners = /* @__PURE__ */ new Map();\n    this.allAsyncListeners = /* @__PURE__ */ new Map();\n    this.globalSyncListeners = /* @__PURE__ */ new Set();\n    this.globalAsyncListeners = /* @__PURE__ */ new Set();\n    this.asyncFunctionsQueue = [];\n    this.scheduled = false;\n    // using an object performs better than a Set for the number of different events we have\n    this.firedEvents = {};\n  }\n  // because this class is used both inside the context and outside the context, we do not\n  // use autowired attributes, as that would be confusing, as sometimes the attributes\n  // would be wired, and sometimes not.\n  //\n  // the global event servers used by AG Grid is autowired by the context once, and this\n  // setBeans method gets called once.\n  //\n  // the times when this class is used outside of the context (eg RowNode has an instance of this\n  // class) then it is not a bean, and this setBeans method is not called.\n  setBeans(gos, frameworkOverrides, globalEventListener = null, globalSyncEventListener = null) {\n    this.frameworkOverrides = frameworkOverrides;\n    this.gos = gos;\n    if (globalEventListener) {\n      const async = gos.useAsyncEvents();\n      this.addGlobalListener(globalEventListener, async);\n    }\n    if (globalSyncEventListener) {\n      this.addGlobalListener(globalSyncEventListener, false);\n    }\n  }\n  setFrameworkOverrides(frameworkOverrides) {\n    this.frameworkOverrides = frameworkOverrides;\n  }\n  getListeners(eventType, async, autoCreateListenerCollection) {\n    const listenerMap = async ? this.allAsyncListeners : this.allSyncListeners;\n    let listeners = listenerMap.get(eventType);\n    if (!listeners && autoCreateListenerCollection) {\n      listeners = /* @__PURE__ */ new Set();\n      listenerMap.set(eventType, listeners);\n    }\n    return listeners;\n  }\n  noRegisteredListenersExist() {\n    return this.allSyncListeners.size === 0 && this.allAsyncListeners.size === 0 && this.globalSyncListeners.size === 0 && this.globalAsyncListeners.size === 0;\n  }\n  addEventListener(eventType, listener, async = false) {\n    this.getListeners(eventType, async, true).add(listener);\n  }\n  removeEventListener(eventType, listener, async = false) {\n    const listeners = this.getListeners(eventType, async, false);\n    if (!listeners) {\n      return;\n    }\n    listeners.delete(listener);\n    if (listeners.size === 0) {\n      const listenerMap = async ? this.allAsyncListeners : this.allSyncListeners;\n      listenerMap.delete(eventType);\n    }\n  }\n  addGlobalListener(listener, async = false) {\n    (async ? this.globalAsyncListeners : this.globalSyncListeners).add(listener);\n  }\n  removeGlobalListener(listener, async = false) {\n    (async ? this.globalAsyncListeners : this.globalSyncListeners).delete(listener);\n  }\n  dispatchEvent(event) {\n    let agEvent = event;\n    if (this.gos) {\n      this.gos.addGridCommonParams(agEvent);\n    }\n    this.dispatchToListeners(agEvent, true);\n    this.dispatchToListeners(agEvent, false);\n    this.firedEvents[agEvent.type] = true;\n  }\n  dispatchEventOnce(event) {\n    if (!this.firedEvents[event.type]) {\n      this.dispatchEvent(event);\n    }\n  }\n  dispatchToListeners(event, async) {\n    var _a;\n    const eventType = event.type;\n    if (async && \"event\" in event) {\n      const browserEvent = event.event;\n      if (browserEvent instanceof Event) {\n        event.eventPath = browserEvent.composedPath();\n      }\n    }\n    const processEventListeners = (listeners2, originalListeners2) => listeners2.forEach((listener) => {\n      if (!originalListeners2.has(listener)) {\n        return;\n      }\n      const callback = this.frameworkOverrides ? () => this.frameworkOverrides.wrapIncoming(() => listener(event)) : () => listener(event);\n      if (async) {\n        this.dispatchAsync(callback);\n      } else {\n        callback();\n      }\n    });\n    const originalListeners = (_a = this.getListeners(eventType, async, false)) != null ? _a : /* @__PURE__ */ new Set();\n    const listeners = new Set(originalListeners);\n    if (listeners.size > 0) {\n      processEventListeners(listeners, originalListeners);\n    }\n    const globalListeners = new Set(async ? this.globalAsyncListeners : this.globalSyncListeners);\n    globalListeners.forEach((listener) => {\n      const callback = this.frameworkOverrides ? () => this.frameworkOverrides.wrapIncoming(() => listener(eventType, event)) : () => listener(eventType, event);\n      if (async) {\n        this.dispatchAsync(callback);\n      } else {\n        callback();\n      }\n    });\n  }\n  // this gets called inside the grid's thread, for each event that it\n  // wants to set async. the grid then batches the events into one setTimeout()\n  // because setTimeout() is an expensive operation. ideally we would have\n  // each event in it's own setTimeout(), but we batch for performance.\n  dispatchAsync(func) {\n    this.asyncFunctionsQueue.push(func);\n    if (!this.scheduled) {\n      this.frameworkOverrides.wrapIncoming(() => {\n        window.setTimeout(this.flushAsyncQueue.bind(this), 0);\n      });\n      this.scheduled = true;\n    }\n  }\n  // this happens in the next VM turn only, and empties the queue of events\n  flushAsyncQueue() {\n    this.scheduled = false;\n    const queueCopy = this.asyncFunctionsQueue.slice();\n    this.asyncFunctionsQueue = [];\n    queueCopy.forEach((func) => func());\n  }\n};\n__decorateClass([\n  __decorateParam(0, Qualifier(\"gridOptionsService\")),\n  __decorateParam(1, Qualifier(\"frameworkOverrides\")),\n  __decorateParam(2, Qualifier(\"globalEventListener\")),\n  __decorateParam(3, Qualifier(\"globalSyncEventListener\"))\n], EventService.prototype, \"setBeans\", 1);\nEventService = __decorateClass([\n  Bean(\"eventService\")\n], EventService);\n\n// community-modules/core/src/misc/frameworkEventListenerService.ts\nvar FrameworkEventListenerService = class {\n  constructor(frameworkOverrides) {\n    this.frameworkOverrides = frameworkOverrides;\n    // Map from user listener to wrapped listener so we can remove listener provided by user\n    this.wrappedListeners = /* @__PURE__ */ new Map();\n    this.wrappedGlobalListeners = /* @__PURE__ */ new Map();\n  }\n  wrap(userListener) {\n    let listener = userListener;\n    if (this.frameworkOverrides.shouldWrapOutgoing) {\n      listener = (event) => {\n        this.frameworkOverrides.wrapOutgoing(() => userListener(event));\n      };\n      this.wrappedListeners.set(userListener, listener);\n    }\n    return listener;\n  }\n  wrapGlobal(userListener) {\n    let listener = userListener;\n    if (this.frameworkOverrides.shouldWrapOutgoing) {\n      listener = (eventType, event) => {\n        this.frameworkOverrides.wrapOutgoing(() => userListener(eventType, event));\n      };\n      this.wrappedGlobalListeners.set(userListener, listener);\n    }\n    return listener;\n  }\n  unwrap(userListener) {\n    var _a;\n    return (_a = this.wrappedListeners.get(userListener)) != null ? _a : userListener;\n  }\n  unwrapGlobal(userListener) {\n    var _a;\n    return (_a = this.wrappedGlobalListeners.get(userListener)) != null ? _a : userListener;\n  }\n};\n\n// community-modules/core/src/entities/column.ts\nvar COL_DEF_DEFAULTS = {\n  resizable: true,\n  sortable: true\n};\nvar instanceIdSequence = 0;\nfunction getNextColInstanceId() {\n  return instanceIdSequence++;\n}\nvar _Column = class _Column {\n  constructor(colDef, userProvidedColDef, colId, primary) {\n    // used by React (and possibly other frameworks) as key for rendering. also used to\n    // identify old vs new columns for destroying cols when no longer used.\n    this.instanceId = getNextColInstanceId();\n    // The measured height of this column's header when autoHeaderHeight is enabled\n    this.autoHeaderHeight = null;\n    this.moving = false;\n    this.menuVisible = false;\n    this.lastLeftPinned = false;\n    this.firstRightPinned = false;\n    this.filterActive = false;\n    this.eventService = new EventService();\n    this.tooltipEnabled = false;\n    this.rowGroupActive = false;\n    this.pivotActive = false;\n    this.aggregationActive = false;\n    this.colDef = colDef;\n    this.userProvidedColDef = userProvidedColDef;\n    this.colId = colId;\n    this.primary = primary;\n    this.setState(colDef);\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  setState(colDef) {\n    if (colDef.sort !== void 0) {\n      if (colDef.sort === \"asc\" || colDef.sort === \"desc\") {\n        this.sort = colDef.sort;\n      }\n    } else {\n      if (colDef.initialSort === \"asc\" || colDef.initialSort === \"desc\") {\n        this.sort = colDef.initialSort;\n      }\n    }\n    const sortIndex = colDef.sortIndex;\n    const initialSortIndex = colDef.initialSortIndex;\n    if (sortIndex !== void 0) {\n      if (sortIndex !== null) {\n        this.sortIndex = sortIndex;\n      }\n    } else {\n      if (initialSortIndex !== null) {\n        this.sortIndex = initialSortIndex;\n      }\n    }\n    const hide = colDef.hide;\n    const initialHide = colDef.initialHide;\n    if (hide !== void 0) {\n      this.visible = !hide;\n    } else {\n      this.visible = !initialHide;\n    }\n    if (colDef.pinned !== void 0) {\n      this.setPinned(colDef.pinned);\n    } else {\n      this.setPinned(colDef.initialPinned);\n    }\n    const flex = colDef.flex;\n    const initialFlex = colDef.initialFlex;\n    if (flex !== void 0) {\n      this.flex = flex;\n    } else if (initialFlex !== void 0) {\n      this.flex = initialFlex;\n    }\n  }\n  // gets called when user provides an alternative colDef, eg\n  setColDef(colDef, userProvidedColDef, source) {\n    this.colDef = colDef;\n    this.userProvidedColDef = userProvidedColDef;\n    this.initMinAndMaxWidths();\n    this.initDotNotation();\n    this.initTooltip();\n    this.eventService.dispatchEvent(this.createColumnEvent(\"colDefChanged\", source));\n  }\n  /**\n   * Returns the column definition provided by the application.\n   * This may not be correct, as items can be superseded by default column options.\n   * However it's useful for comparison, eg to know which application column definition matches that column.\n   */\n  getUserProvidedColDef() {\n    return this.userProvidedColDef;\n  }\n  setParent(parent) {\n    this.parent = parent;\n  }\n  /** Returns the parent column group, if column grouping is active. */\n  getParent() {\n    return this.parent;\n  }\n  setOriginalParent(originalParent) {\n    this.originalParent = originalParent;\n  }\n  /**\n   * Used for marryChildren, helps with comparing when duplicate groups have been created to manage split groups.\n   * \n   * Parent may contain a duplicate but not identical group when the group is split.\n   */\n  getOriginalParent() {\n    return this.originalParent;\n  }\n  initialise() {\n    this.initMinAndMaxWidths();\n    this.resetActualWidth(\"gridInitializing\");\n    this.initDotNotation();\n    this.initTooltip();\n  }\n  initDotNotation() {\n    const suppressDotNotation = this.gos.get(\"suppressFieldDotNotation\");\n    this.fieldContainsDots = exists(this.colDef.field) && this.colDef.field.indexOf(\".\") >= 0 && !suppressDotNotation;\n    this.tooltipFieldContainsDots = exists(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf(\".\") >= 0 && !suppressDotNotation;\n  }\n  initMinAndMaxWidths() {\n    var _a, _b;\n    const colDef = this.colDef;\n    this.minWidth = (_a = colDef.minWidth) != null ? _a : this.environment.getMinColWidth();\n    this.maxWidth = (_b = colDef.maxWidth) != null ? _b : Number.MAX_SAFE_INTEGER;\n  }\n  initTooltip() {\n    this.tooltipEnabled = exists(this.colDef.tooltipField) || exists(this.colDef.tooltipValueGetter) || exists(this.colDef.tooltipComponent);\n  }\n  resetActualWidth(source) {\n    const initialWidth = this.calculateColInitialWidth(this.colDef);\n    this.setActualWidth(initialWidth, source, true);\n  }\n  calculateColInitialWidth(colDef) {\n    var _a, _b;\n    const minColWidth = (_a = colDef.minWidth) != null ? _a : this.environment.getMinColWidth();\n    const maxColWidth = (_b = colDef.maxWidth) != null ? _b : Number.MAX_SAFE_INTEGER;\n    let width;\n    const colDefWidth = attrToNumber(colDef.width);\n    const colDefInitialWidth = attrToNumber(colDef.initialWidth);\n    if (colDefWidth != null) {\n      width = colDefWidth;\n    } else if (colDefInitialWidth != null) {\n      width = colDefInitialWidth;\n    } else {\n      width = 200;\n    }\n    return Math.max(Math.min(width, maxColWidth), minColWidth);\n  }\n  isEmptyGroup() {\n    return false;\n  }\n  isRowGroupDisplayed(colId) {\n    if (missing(this.colDef) || missing(this.colDef.showRowGroup)) {\n      return false;\n    }\n    const showingAllGroups = this.colDef.showRowGroup === true;\n    const showingThisGroup = this.colDef.showRowGroup === colId;\n    return showingAllGroups || showingThisGroup;\n  }\n  /** Returns `true` if column is a primary column, `false` if secondary. Secondary columns are used for pivoting. */\n  isPrimary() {\n    return this.primary;\n  }\n  /** Returns `true` if column filtering is allowed. */\n  isFilterAllowed() {\n    const filterDefined = !!this.colDef.filter;\n    return filterDefined;\n  }\n  isFieldContainsDots() {\n    return this.fieldContainsDots;\n  }\n  isTooltipEnabled() {\n    return this.tooltipEnabled;\n  }\n  isTooltipFieldContainsDots() {\n    return this.tooltipFieldContainsDots;\n  }\n  /** Add an event listener to the column. */\n  addEventListener(eventType, userListener) {\n    var _a, _b;\n    if (this.frameworkOverrides.shouldWrapOutgoing && !this.frameworkEventListenerService) {\n      this.eventService.setFrameworkOverrides(this.frameworkOverrides);\n      this.frameworkEventListenerService = new FrameworkEventListenerService(this.frameworkOverrides);\n    }\n    const listener = (_b = (_a = this.frameworkEventListenerService) == null ? void 0 : _a.wrap(userListener)) != null ? _b : userListener;\n    this.eventService.addEventListener(eventType, listener);\n  }\n  /** Remove event listener from the column. */\n  removeEventListener(eventType, userListener) {\n    var _a, _b;\n    const listener = (_b = (_a = this.frameworkEventListenerService) == null ? void 0 : _a.unwrap(userListener)) != null ? _b : userListener;\n    this.eventService.removeEventListener(eventType, listener);\n  }\n  createColumnFunctionCallbackParams(rowNode) {\n    return this.gos.addGridCommonParams({\n      node: rowNode,\n      data: rowNode.data,\n      column: this,\n      colDef: this.colDef\n    });\n  }\n  isSuppressNavigable(rowNode) {\n    if (typeof this.colDef.suppressNavigable === \"boolean\") {\n      return this.colDef.suppressNavigable;\n    }\n    if (typeof this.colDef.suppressNavigable === \"function\") {\n      const params = this.createColumnFunctionCallbackParams(rowNode);\n      const userFunc = this.colDef.suppressNavigable;\n      return userFunc(params);\n    }\n    return false;\n  }\n  /**\n   * Returns `true` if the cell for this column is editable for the given `rowNode`, otherwise `false`.\n   */\n  isCellEditable(rowNode) {\n    if (rowNode.group && !this.gos.get(\"enableGroupEdit\")) {\n      return false;\n    }\n    return this.isColumnFunc(rowNode, this.colDef.editable);\n  }\n  isSuppressFillHandle() {\n    return !!this.colDef.suppressFillHandle;\n  }\n  isAutoHeight() {\n    return !!this.colDef.autoHeight;\n  }\n  isAutoHeaderHeight() {\n    return !!this.colDef.autoHeaderHeight;\n  }\n  isRowDrag(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.rowDrag);\n  }\n  isDndSource(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.dndSource);\n  }\n  isCellCheckboxSelection(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.checkboxSelection);\n  }\n  isSuppressPaste(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef ? this.colDef.suppressPaste : null);\n  }\n  isResizable() {\n    return !!this.getColDefValue(\"resizable\");\n  }\n  /** Get value from ColDef or default if it exists. */\n  getColDefValue(key) {\n    var _a;\n    return (_a = this.colDef[key]) != null ? _a : COL_DEF_DEFAULTS[key];\n  }\n  isColumnFunc(rowNode, value) {\n    if (typeof value === \"boolean\") {\n      return value;\n    }\n    if (typeof value === \"function\") {\n      const params = this.createColumnFunctionCallbackParams(rowNode);\n      const editableFunc = value;\n      return editableFunc(params);\n    }\n    return false;\n  }\n  setMoving(moving, source) {\n    this.moving = moving;\n    this.eventService.dispatchEvent(this.createColumnEvent(\"movingChanged\", source));\n  }\n  createColumnEvent(type, source) {\n    return this.gos.addGridCommonParams({\n      type,\n      column: this,\n      columns: [this],\n      source\n    });\n  }\n  isMoving() {\n    return this.moving;\n  }\n  /** If sorting is active, returns the sort direction e.g. `'asc'` or `'desc'`. */\n  getSort() {\n    return this.sort;\n  }\n  setSort(sort, source) {\n    if (this.sort !== sort) {\n      this.sort = sort;\n      this.eventService.dispatchEvent(this.createColumnEvent(\"sortChanged\", source));\n    }\n    this.dispatchStateUpdatedEvent(\"sort\");\n  }\n  setMenuVisible(visible, source) {\n    if (this.menuVisible !== visible) {\n      this.menuVisible = visible;\n      this.eventService.dispatchEvent(this.createColumnEvent(\"menuVisibleChanged\", source));\n    }\n  }\n  isMenuVisible() {\n    return this.menuVisible;\n  }\n  isSortable() {\n    return !!this.getColDefValue(\"sortable\");\n  }\n  isSortAscending() {\n    return this.sort === \"asc\";\n  }\n  isSortDescending() {\n    return this.sort === \"desc\";\n  }\n  isSortNone() {\n    return missing(this.sort);\n  }\n  isSorting() {\n    return exists(this.sort);\n  }\n  getSortIndex() {\n    return this.sortIndex;\n  }\n  setSortIndex(sortOrder) {\n    this.sortIndex = sortOrder;\n    this.dispatchStateUpdatedEvent(\"sortIndex\");\n  }\n  setAggFunc(aggFunc) {\n    this.aggFunc = aggFunc;\n    this.dispatchStateUpdatedEvent(\"aggFunc\");\n  }\n  /** If aggregation is set for the column, returns the aggregation function. */\n  getAggFunc() {\n    return this.aggFunc;\n  }\n  getLeft() {\n    return this.left;\n  }\n  getOldLeft() {\n    return this.oldLeft;\n  }\n  getRight() {\n    return this.left + this.actualWidth;\n  }\n  setLeft(left, source) {\n    this.oldLeft = this.left;\n    if (this.left !== left) {\n      this.left = left;\n      this.eventService.dispatchEvent(this.createColumnEvent(\"leftChanged\", source));\n    }\n  }\n  /** Returns `true` if filter is active on the column. */\n  isFilterActive() {\n    return this.filterActive;\n  }\n  // additionalEventAttributes is used by provided simple floating filter, so it can add 'floatingFilter=true' to the event\n  setFilterActive(active, source, additionalEventAttributes) {\n    if (this.filterActive !== active) {\n      this.filterActive = active;\n      this.eventService.dispatchEvent(this.createColumnEvent(\"filterActiveChanged\", source));\n    }\n    const filterChangedEvent = this.createColumnEvent(\"filterChanged\", source);\n    if (additionalEventAttributes) {\n      mergeDeep(filterChangedEvent, additionalEventAttributes);\n    }\n    this.eventService.dispatchEvent(filterChangedEvent);\n  }\n  /** Returns `true` when this `Column` is hovered, otherwise `false` */\n  isHovered() {\n    return this.columnHoverService.isHovered(this);\n  }\n  setPinned(pinned) {\n    if (pinned === true || pinned === \"left\") {\n      this.pinned = \"left\";\n    } else if (pinned === \"right\") {\n      this.pinned = \"right\";\n    } else {\n      this.pinned = null;\n    }\n    this.dispatchStateUpdatedEvent(\"pinned\");\n  }\n  setFirstRightPinned(firstRightPinned, source) {\n    if (this.firstRightPinned !== firstRightPinned) {\n      this.firstRightPinned = firstRightPinned;\n      this.eventService.dispatchEvent(this.createColumnEvent(\"firstRightPinnedChanged\", source));\n    }\n  }\n  setLastLeftPinned(lastLeftPinned, source) {\n    if (this.lastLeftPinned !== lastLeftPinned) {\n      this.lastLeftPinned = lastLeftPinned;\n      this.eventService.dispatchEvent(this.createColumnEvent(\"lastLeftPinnedChanged\", source));\n    }\n  }\n  isFirstRightPinned() {\n    return this.firstRightPinned;\n  }\n  isLastLeftPinned() {\n    return this.lastLeftPinned;\n  }\n  isPinned() {\n    return this.pinned === \"left\" || this.pinned === \"right\";\n  }\n  isPinnedLeft() {\n    return this.pinned === \"left\";\n  }\n  isPinnedRight() {\n    return this.pinned === \"right\";\n  }\n  getPinned() {\n    return this.pinned;\n  }\n  setVisible(visible, source) {\n    const newValue = visible === true;\n    if (this.visible !== newValue) {\n      this.visible = newValue;\n      this.eventService.dispatchEvent(this.createColumnEvent(\"visibleChanged\", source));\n    }\n    this.dispatchStateUpdatedEvent(\"hide\");\n  }\n  isVisible() {\n    return this.visible;\n  }\n  isSpanHeaderHeight() {\n    const colDef = this.getColDef();\n    return !colDef.suppressSpanHeaderHeight && !colDef.autoHeaderHeight;\n  }\n  getColumnGroupPaddingInfo() {\n    let parent = this.getParent();\n    if (!parent || !parent.isPadding()) {\n      return { numberOfParents: 0, isSpanningTotal: false };\n    }\n    const numberOfParents = parent.getPaddingLevel() + 1;\n    let isSpanningTotal = true;\n    while (parent) {\n      if (!parent.isPadding()) {\n        isSpanningTotal = false;\n        break;\n      }\n      parent = parent.getParent();\n    }\n    return { numberOfParents, isSpanningTotal };\n  }\n  /** Returns the column definition for this column.\n   * The column definition will be the result of merging the application provided column definition with any provided defaults\n   * (e.g. `defaultColDef` grid option, or column types.\n   *\n   * Equivalent: `getDefinition` */\n  getColDef() {\n    return this.colDef;\n  }\n  getColumnGroupShow() {\n    return this.colDef.columnGroupShow;\n  }\n  /**\n   * Returns the unique ID for the column.\n   *\n   * Equivalent: `getId`, `getUniqueId` */\n  getColId() {\n    return this.colId;\n  }\n  /**\n   * Returns the unique ID for the column.\n   *\n   * Equivalent: `getColId`, `getUniqueId` */\n  getId() {\n    return this.colId;\n  }\n  /**\n   * Returns the unique ID for the column.\n   *\n   * Equivalent: `getColId`, `getId` */\n  getUniqueId() {\n    return this.colId;\n  }\n  getDefinition() {\n    return this.colDef;\n  }\n  /** Returns the current width of the column. If the column is resized, the actual width is the new size. */\n  getActualWidth() {\n    return this.actualWidth;\n  }\n  getAutoHeaderHeight() {\n    return this.autoHeaderHeight;\n  }\n  /** Returns true if the header height has changed */\n  setAutoHeaderHeight(height) {\n    const changed = height !== this.autoHeaderHeight;\n    this.autoHeaderHeight = height;\n    return changed;\n  }\n  createBaseColDefParams(rowNode) {\n    const params = this.gos.addGridCommonParams({\n      node: rowNode,\n      data: rowNode.data,\n      colDef: this.colDef,\n      column: this\n    });\n    return params;\n  }\n  getColSpan(rowNode) {\n    if (missing(this.colDef.colSpan)) {\n      return 1;\n    }\n    const params = this.createBaseColDefParams(rowNode);\n    const colSpan = this.colDef.colSpan(params);\n    return Math.max(colSpan, 1);\n  }\n  getRowSpan(rowNode) {\n    if (missing(this.colDef.rowSpan)) {\n      return 1;\n    }\n    const params = this.createBaseColDefParams(rowNode);\n    const rowSpan = this.colDef.rowSpan(params);\n    return Math.max(rowSpan, 1);\n  }\n  setActualWidth(actualWidth, source, silent = false) {\n    if (this.minWidth != null) {\n      actualWidth = Math.max(actualWidth, this.minWidth);\n    }\n    if (this.maxWidth != null) {\n      actualWidth = Math.min(actualWidth, this.maxWidth);\n    }\n    if (this.actualWidth !== actualWidth) {\n      this.actualWidth = actualWidth;\n      if (this.flex && source !== \"flex\" && source !== \"gridInitializing\") {\n        this.flex = null;\n      }\n      if (!silent) {\n        this.fireColumnWidthChangedEvent(source);\n      }\n    }\n    this.dispatchStateUpdatedEvent(\"width\");\n  }\n  fireColumnWidthChangedEvent(source) {\n    this.eventService.dispatchEvent(this.createColumnEvent(\"widthChanged\", source));\n  }\n  isGreaterThanMax(width) {\n    if (this.maxWidth != null) {\n      return width > this.maxWidth;\n    }\n    return false;\n  }\n  getMinWidth() {\n    return this.minWidth;\n  }\n  getMaxWidth() {\n    return this.maxWidth;\n  }\n  getFlex() {\n    return this.flex || 0;\n  }\n  // this method should only be used by the columnModel to\n  // change flex when required by the applyColumnState method.\n  setFlex(flex) {\n    if (this.flex !== flex) {\n      this.flex = flex;\n    }\n    this.dispatchStateUpdatedEvent(\"flex\");\n  }\n  setMinimum(source) {\n    if (exists(this.minWidth)) {\n      this.setActualWidth(this.minWidth, source);\n    }\n  }\n  setRowGroupActive(rowGroup, source) {\n    if (this.rowGroupActive !== rowGroup) {\n      this.rowGroupActive = rowGroup;\n      this.eventService.dispatchEvent(this.createColumnEvent(\"columnRowGroupChanged\", source));\n    }\n    this.dispatchStateUpdatedEvent(\"rowGroup\");\n  }\n  /** Returns `true` if row group is currently active for this column. */\n  isRowGroupActive() {\n    return this.rowGroupActive;\n  }\n  setPivotActive(pivot, source) {\n    if (this.pivotActive !== pivot) {\n      this.pivotActive = pivot;\n      this.eventService.dispatchEvent(this.createColumnEvent(\"columnPivotChanged\", source));\n    }\n    this.dispatchStateUpdatedEvent(\"pivot\");\n  }\n  /** Returns `true` if pivot is currently active for this column. */\n  isPivotActive() {\n    return this.pivotActive;\n  }\n  isAnyFunctionActive() {\n    return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();\n  }\n  isAnyFunctionAllowed() {\n    return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();\n  }\n  setValueActive(value, source) {\n    if (this.aggregationActive !== value) {\n      this.aggregationActive = value;\n      this.eventService.dispatchEvent(this.createColumnEvent(\"columnValueChanged\", source));\n    }\n  }\n  /** Returns `true` if value (aggregation) is currently active for this column. */\n  isValueActive() {\n    return this.aggregationActive;\n  }\n  isAllowPivot() {\n    return this.colDef.enablePivot === true;\n  }\n  isAllowValue() {\n    return this.colDef.enableValue === true;\n  }\n  isAllowRowGroup() {\n    return this.colDef.enableRowGroup === true;\n  }\n  /**\n   * @deprecated v31.1 Use `getColDef().menuTabs ?? defaultValues` instead.\n   */\n  getMenuTabs(defaultValues) {\n    warnOnce(`As of v31.1, 'getMenuTabs' is deprecated. Use 'getColDef().menuTabs ?? defaultValues' instead.`);\n    let menuTabs = this.getColDef().menuTabs;\n    if (menuTabs == null) {\n      menuTabs = defaultValues;\n    }\n    return menuTabs;\n  }\n  dispatchStateUpdatedEvent(key) {\n    this.eventService.dispatchEvent({\n      type: _Column.EVENT_STATE_UPDATED,\n      key\n    });\n  }\n};\n// + renderedHeaderCell - for making header cell transparent when moving\n_Column.EVENT_MOVING_CHANGED = \"movingChanged\";\n// + renderedCell - changing left position\n_Column.EVENT_LEFT_CHANGED = \"leftChanged\";\n// + renderedCell - changing width\n_Column.EVENT_WIDTH_CHANGED = \"widthChanged\";\n// + renderedCell - for changing pinned classes\n_Column.EVENT_LAST_LEFT_PINNED_CHANGED = \"lastLeftPinnedChanged\";\n_Column.EVENT_FIRST_RIGHT_PINNED_CHANGED = \"firstRightPinnedChanged\";\n// + renderedColumn - for changing visibility icon\n_Column.EVENT_VISIBLE_CHANGED = \"visibleChanged\";\n// + every time the filter changes, used in the floating filters\n_Column.EVENT_FILTER_CHANGED = \"filterChanged\";\n// + renderedHeaderCell - marks the header with filter icon\n_Column.EVENT_FILTER_ACTIVE_CHANGED = \"filterActiveChanged\";\n// + renderedHeaderCell - marks the header with sort icon\n_Column.EVENT_SORT_CHANGED = \"sortChanged\";\n// + renderedHeaderCell - marks the header with sort icon\n_Column.EVENT_COL_DEF_CHANGED = \"colDefChanged\";\n_Column.EVENT_MENU_VISIBLE_CHANGED = \"menuVisibleChanged\";\n// + toolpanel, for gui updates\n_Column.EVENT_ROW_GROUP_CHANGED = \"columnRowGroupChanged\";\n// + toolpanel, for gui updates\n_Column.EVENT_PIVOT_CHANGED = \"columnPivotChanged\";\n// + toolpanel, for gui updates\n_Column.EVENT_VALUE_CHANGED = \"columnValueChanged\";\n// + dataTypeService - when waiting to infer cell data types\n_Column.EVENT_STATE_UPDATED = \"columnStateUpdated\";\n__decorateClass([\n  Autowired(\"gridOptionsService\")\n], _Column.prototype, \"gos\", 2);\n__decorateClass([\n  Autowired(\"environment\")\n], _Column.prototype, \"environment\", 2);\n__decorateClass([\n  Autowired(\"columnHoverService\")\n], _Column.prototype, \"columnHoverService\", 2);\n__decorateClass([\n  Autowired(\"frameworkOverrides\")\n], _Column.prototype, \"frameworkOverrides\", 2);\n__decorateClass([\n  PostConstruct\n], _Column.prototype, \"initialise\", 1);\nvar Column = _Column;\n\n// community-modules/core/src/entities/providedColumnGroup.ts\nvar _ProvidedColumnGroup = class _ProvidedColumnGroup {\n  constructor(colGroupDef, groupId, padding, level) {\n    this.localEventService = new EventService();\n    this.expandable = false;\n    // used by React (and possibly other frameworks) as key for rendering. also used to\n    // identify old vs new columns for destroying cols when no longer used.\n    this.instanceId = getNextColInstanceId();\n    this.expandableListenerRemoveCallback = null;\n    this.colGroupDef = colGroupDef;\n    this.groupId = groupId;\n    this.expanded = !!colGroupDef && !!colGroupDef.openByDefault;\n    this.padding = padding;\n    this.level = level;\n  }\n  destroy() {\n    if (this.expandableListenerRemoveCallback) {\n      this.reset(null, void 0);\n    }\n  }\n  reset(colGroupDef, level) {\n    this.colGroupDef = colGroupDef;\n    this.level = level;\n    this.originalParent = null;\n    if (this.expandableListenerRemoveCallback) {\n      this.expandableListenerRemoveCallback();\n    }\n    this.children = void 0;\n    this.expandable = void 0;\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  setOriginalParent(originalParent) {\n    this.originalParent = originalParent;\n  }\n  getOriginalParent() {\n    return this.originalParent;\n  }\n  getLevel() {\n    return this.level;\n  }\n  isVisible() {\n    if (this.children) {\n      return this.children.some((child) => child.isVisible());\n    }\n    return false;\n  }\n  isPadding() {\n    return this.padding;\n  }\n  setExpanded(expanded) {\n    this.expanded = expanded === void 0 ? false : expanded;\n    const event = {\n      type: _ProvidedColumnGroup.EVENT_EXPANDED_CHANGED\n    };\n    this.localEventService.dispatchEvent(event);\n  }\n  isExpandable() {\n    return this.expandable;\n  }\n  isExpanded() {\n    return this.expanded;\n  }\n  getGroupId() {\n    return this.groupId;\n  }\n  getId() {\n    return this.getGroupId();\n  }\n  setChildren(children) {\n    this.children = children;\n  }\n  getChildren() {\n    return this.children;\n  }\n  getColGroupDef() {\n    return this.colGroupDef;\n  }\n  getLeafColumns() {\n    const result = [];\n    this.addLeafColumns(result);\n    return result;\n  }\n  addLeafColumns(leafColumns) {\n    if (!this.children) {\n      return;\n    }\n    this.children.forEach((child) => {\n      if (child instanceof Column) {\n        leafColumns.push(child);\n      } else if (child instanceof _ProvidedColumnGroup) {\n        child.addLeafColumns(leafColumns);\n      }\n    });\n  }\n  getColumnGroupShow() {\n    const colGroupDef = this.colGroupDef;\n    if (!colGroupDef) {\n      return;\n    }\n    return colGroupDef.columnGroupShow;\n  }\n  // need to check that this group has at least one col showing when both expanded and contracted.\n  // if not, then we don't allow expanding and contracting on this group\n  setupExpandable() {\n    this.setExpandable();\n    if (this.expandableListenerRemoveCallback) {\n      this.expandableListenerRemoveCallback();\n    }\n    const listener = this.onColumnVisibilityChanged.bind(this);\n    this.getLeafColumns().forEach((col) => col.addEventListener(\"visibleChanged\", listener));\n    this.expandableListenerRemoveCallback = () => {\n      this.getLeafColumns().forEach((col) => col.removeEventListener(\"visibleChanged\", listener));\n      this.expandableListenerRemoveCallback = null;\n    };\n  }\n  setExpandable() {\n    if (this.isPadding()) {\n      return;\n    }\n    let atLeastOneShowingWhenOpen = false;\n    let atLeastOneShowingWhenClosed = false;\n    let atLeastOneChangeable = false;\n    const children = this.findChildrenRemovingPadding();\n    for (let i = 0, j = children.length; i < j; i++) {\n      const abstractColumn = children[i];\n      if (!abstractColumn.isVisible()) {\n        continue;\n      }\n      const headerGroupShow = abstractColumn.getColumnGroupShow();\n      if (headerGroupShow === \"open\") {\n        atLeastOneShowingWhenOpen = true;\n        atLeastOneChangeable = true;\n      } else if (headerGroupShow === \"closed\") {\n        atLeastOneShowingWhenClosed = true;\n        atLeastOneChangeable = true;\n      } else {\n        atLeastOneShowingWhenOpen = true;\n        atLeastOneShowingWhenClosed = true;\n      }\n    }\n    const expandable = atLeastOneShowingWhenOpen && atLeastOneShowingWhenClosed && atLeastOneChangeable;\n    if (this.expandable !== expandable) {\n      this.expandable = expandable;\n      const event = {\n        type: _ProvidedColumnGroup.EVENT_EXPANDABLE_CHANGED\n      };\n      this.localEventService.dispatchEvent(event);\n    }\n  }\n  findChildrenRemovingPadding() {\n    const res = [];\n    const process = (items) => {\n      items.forEach((item) => {\n        const skipBecausePadding = item instanceof _ProvidedColumnGroup && item.isPadding();\n        if (skipBecausePadding) {\n          process(item.children);\n        } else {\n          res.push(item);\n        }\n      });\n    };\n    process(this.children);\n    return res;\n  }\n  onColumnVisibilityChanged() {\n    this.setExpandable();\n  }\n  addEventListener(eventType, listener) {\n    this.localEventService.addEventListener(eventType, listener);\n  }\n  removeEventListener(eventType, listener) {\n    this.localEventService.removeEventListener(eventType, listener);\n  }\n};\n_ProvidedColumnGroup.EVENT_EXPANDED_CHANGED = \"expandedChanged\";\n_ProvidedColumnGroup.EVENT_EXPANDABLE_CHANGED = \"expandableChanged\";\n__decorateClass([\n  PreDestroy\n], _ProvidedColumnGroup.prototype, \"destroy\", 1);\nvar ProvidedColumnGroup = _ProvidedColumnGroup;\n\n// community-modules/core/src/entities/defaultColumnTypes.ts\nvar DefaultColumnTypes = {\n  numericColumn: {\n    headerClass: \"ag-right-aligned-header\",\n    cellClass: \"ag-right-aligned-cell\"\n  },\n  rightAligned: {\n    headerClass: \"ag-right-aligned-header\",\n    cellClass: \"ag-right-aligned-cell\"\n  }\n};\n\n// community-modules/core/src/utils/event.ts\nvar event_exports = {};\n__export(event_exports, {\n  addSafePassiveEventListener: () => addSafePassiveEventListener,\n  createEventPath: () => createEventPath,\n  getCtrlForEventTarget: () => getCtrlForEventTarget,\n  getEventPath: () => getEventPath,\n  isElementInEventPath: () => isElementInEventPath,\n  isEventSupported: () => isEventSupported,\n  isStopPropagationForAgGrid: () => isStopPropagationForAgGrid,\n  stopPropagationForAgGrid: () => stopPropagationForAgGrid\n});\n\n// community-modules/core/src/utils/array.ts\nvar array_exports = {};\n__export(array_exports, {\n  areEqual: () => areEqual,\n  existsAndNotEmpty: () => existsAndNotEmpty,\n  flatten: () => flatten,\n  forEachReverse: () => forEachReverse,\n  includes: () => includes,\n  insertArrayIntoArray: () => insertArrayIntoArray,\n  insertIntoArray: () => insertIntoArray,\n  last: () => last,\n  moveInArray: () => moveInArray,\n  pushAll: () => pushAll,\n  removeAllFromArray: () => removeAllFromArray,\n  removeAllFromUnorderedArray: () => removeAllFromUnorderedArray,\n  removeFromArray: () => removeFromArray,\n  removeFromUnorderedArray: () => removeFromUnorderedArray,\n  removeRepeatsFromArray: () => removeRepeatsFromArray,\n  shallowCompare: () => shallowCompare,\n  sortNumerically: () => sortNumerically,\n  toStrings: () => toStrings\n});\nfunction existsAndNotEmpty(value) {\n  return value != null && value.length > 0;\n}\nfunction last(arr) {\n  if (!arr || !arr.length) {\n    return;\n  }\n  return arr[arr.length - 1];\n}\nfunction areEqual(a, b, comparator) {\n  if (a == null && b == null) {\n    return true;\n  }\n  return a != null && b != null && a.length === b.length && a.every((value, index) => comparator ? comparator(value, b[index]) : b[index] === value);\n}\nfunction shallowCompare(arr1, arr2) {\n  return areEqual(arr1, arr2);\n}\nfunction sortNumerically(array) {\n  return array.sort((a, b) => a - b);\n}\nfunction removeRepeatsFromArray(array, object) {\n  if (!array) {\n    return;\n  }\n  for (let index = array.length - 2; index >= 0; index--) {\n    const thisOneMatches = array[index] === object;\n    const nextOneMatches = array[index + 1] === object;\n    if (thisOneMatches && nextOneMatches) {\n      array.splice(index + 1, 1);\n    }\n  }\n}\nfunction removeFromUnorderedArray(array, object) {\n  const index = array.indexOf(object);\n  if (index >= 0) {\n    array[index] = array[array.length - 1];\n    array.pop();\n  }\n}\nfunction removeFromArray(array, object) {\n  const index = array.indexOf(object);\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n}\nfunction removeAllFromUnorderedArray(array, toRemove) {\n  for (let i = 0; i < toRemove.length; i++) {\n    removeFromUnorderedArray(array, toRemove[i]);\n  }\n}\nfunction removeAllFromArray(array, toRemove) {\n  for (let i = 0; i < toRemove.length; i++) {\n    removeFromArray(array, toRemove[i]);\n  }\n}\nfunction insertIntoArray(array, object, toIndex) {\n  array.splice(toIndex, 0, object);\n}\nfunction insertArrayIntoArray(dest, src, toIndex) {\n  if (dest == null || src == null) {\n    return;\n  }\n  for (let i = src.length - 1; i >= 0; i--) {\n    const item = src[i];\n    insertIntoArray(dest, item, toIndex);\n  }\n}\nfunction moveInArray(array, objectsToMove, toIndex) {\n  removeAllFromArray(array, objectsToMove);\n  objectsToMove.slice().reverse().forEach((obj) => insertIntoArray(array, obj, toIndex));\n}\nfunction includes(array, value) {\n  return array.indexOf(value) > -1;\n}\nfunction flatten(arrayOfArrays) {\n  return [].concat.apply([], arrayOfArrays);\n}\nfunction pushAll(target, source) {\n  if (source == null || target == null) {\n    return;\n  }\n  source.forEach((value) => target.push(value));\n}\nfunction toStrings(array) {\n  return array.map(toStringOrNull);\n}\nfunction forEachReverse(list, action) {\n  if (list == null) {\n    return;\n  }\n  for (let i = list.length - 1; i >= 0; i--) {\n    action(list[i], i);\n  }\n}\n\n// community-modules/core/src/utils/event.ts\nvar AG_GRID_STOP_PROPAGATION = \"__ag_Grid_Stop_Propagation\";\nvar PASSIVE_EVENTS = [\"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\", \"scroll\"];\nvar supports = {};\nfunction stopPropagationForAgGrid(event) {\n  event[AG_GRID_STOP_PROPAGATION] = true;\n}\nfunction isStopPropagationForAgGrid(event) {\n  return event[AG_GRID_STOP_PROPAGATION] === true;\n}\nvar isEventSupported = /* @__PURE__ */ (() => {\n  const tags = {\n    select: \"input\",\n    change: \"input\",\n    submit: \"form\",\n    reset: \"form\",\n    error: \"img\",\n    load: \"img\",\n    abort: \"img\"\n  };\n  const eventChecker = (eventName) => {\n    if (typeof supports[eventName] === \"boolean\") {\n      return supports[eventName];\n    }\n    const el = document.createElement(tags[eventName] || \"div\");\n    eventName = \"on\" + eventName;\n    return supports[eventName] = eventName in el;\n  };\n  return eventChecker;\n})();\nfunction getCtrlForEventTarget(gos, eventTarget, type) {\n  let sourceElement = eventTarget;\n  while (sourceElement) {\n    const renderedComp = gos.getDomData(sourceElement, type);\n    if (renderedComp) {\n      return renderedComp;\n    }\n    sourceElement = sourceElement.parentElement;\n  }\n  return null;\n}\nfunction isElementInEventPath(element, event) {\n  if (!event || !element) {\n    return false;\n  }\n  return getEventPath(event).indexOf(element) >= 0;\n}\nfunction createEventPath(event) {\n  const res = [];\n  let pointer = event.target;\n  while (pointer) {\n    res.push(pointer);\n    pointer = pointer.parentElement;\n  }\n  return res;\n}\nfunction getEventPath(event) {\n  const eventNoType = event;\n  if (eventNoType.path) {\n    return eventNoType.path;\n  }\n  if (eventNoType.composedPath) {\n    return eventNoType.composedPath();\n  }\n  return createEventPath(eventNoType);\n}\nfunction addSafePassiveEventListener(frameworkOverrides, eElement, event, listener) {\n  const isPassive = includes(PASSIVE_EVENTS, event);\n  const options = isPassive ? { passive: true } : void 0;\n  if (frameworkOverrides && frameworkOverrides.addEventListener) {\n    frameworkOverrides.addEventListener(eElement, event, listener, options);\n  }\n}\n\n// community-modules/core/src/context/beanStub.ts\nvar _BeanStub = class _BeanStub {\n  constructor() {\n    this.destroyFunctions = [];\n    this.destroyed = false;\n    // for vue 3 - prevents Vue from trying to make this (and obviously any sub classes) from being reactive\n    // prevents vue from creating proxies for created objects and prevents identity related issues\n    this.__v_skip = true;\n    // this was a test constructor niall built, when active, it prints after 5 seconds all beans/components that are\n    // not destroyed. to use, create a new grid, then api.destroy() before 5 seconds. then anything that gets printed\n    // points to a bean or component that was not properly disposed of.\n    // constructor() {\n    //     setTimeout(()=> {\n    //         if (this.isAlive()) {\n    //             let prototype: any = Object.getPrototypeOf(this);\n    //             const constructor: any = prototype.constructor;\n    //             const constructorString = constructor.toString();\n    //             const beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n    //             console.log('is alive ' + beanName);\n    //         }\n    //     }, 5000);\n    // }\n    // Enable multiple grid properties to be updated together by the user but only trigger shared logic once.\n    // Closely related to logic in ComponentUtil.ts\n    this.lastChangeSetIdLookup = {};\n    this.propertyListenerId = 0;\n    this.isAlive = () => !this.destroyed;\n  }\n  // CellComp and GridComp and override this because they get the FrameworkOverrides from the Beans bean\n  getFrameworkOverrides() {\n    return this.frameworkOverrides;\n  }\n  getContext() {\n    return this.context;\n  }\n  destroy() {\n    for (let i = 0; i < this.destroyFunctions.length; i++) {\n      this.destroyFunctions[i]();\n    }\n    this.destroyFunctions.length = 0;\n    this.destroyed = true;\n    this.dispatchEvent({ type: _BeanStub.EVENT_DESTROYED });\n  }\n  addEventListener(eventType, listener) {\n    if (!this.localEventService) {\n      this.localEventService = new EventService();\n    }\n    this.localEventService.addEventListener(eventType, listener);\n  }\n  removeEventListener(eventType, listener) {\n    if (this.localEventService) {\n      this.localEventService.removeEventListener(eventType, listener);\n    }\n  }\n  dispatchEvent(event) {\n    if (this.localEventService) {\n      this.localEventService.dispatchEvent(event);\n    }\n  }\n  addManagedListener(object, event, listener) {\n    if (this.destroyed) {\n      return;\n    }\n    if (object instanceof HTMLElement) {\n      addSafePassiveEventListener(this.getFrameworkOverrides(), object, event, listener);\n    } else {\n      object.addEventListener(event, listener);\n    }\n    const destroyFunc = () => {\n      object.removeEventListener(event, listener);\n      return null;\n    };\n    this.destroyFunctions.push(destroyFunc);\n    return () => {\n      destroyFunc();\n      this.destroyFunctions = this.destroyFunctions.filter((fn) => fn !== destroyFunc);\n      return null;\n    };\n  }\n  setupGridOptionListener(event, listener) {\n    this.gos.addEventListener(event, listener);\n    const destroyFunc = () => {\n      this.gos.removeEventListener(event, listener);\n      return null;\n    };\n    this.destroyFunctions.push(destroyFunc);\n    return () => {\n      destroyFunc();\n      this.destroyFunctions = this.destroyFunctions.filter((fn) => fn !== destroyFunc);\n      return null;\n    };\n  }\n  /**\n   * Setup a managed property listener for the given GridOption property.\n   * @param event GridOption property to listen to changes for.\n   * @param listener Listener to run when property value changes\n   */\n  addManagedPropertyListener(event, listener) {\n    if (this.destroyed) {\n      return () => null;\n    }\n    return this.setupGridOptionListener(event, listener);\n  }\n  /**\n   * Setup managed property listeners for the given set of GridOption properties.\n   * The listener will be run if any of the property changes but will only run once if\n   * multiple of the properties change within the same framework lifecycle event.\n   * Works on the basis that GridOptionsService updates all properties *before* any property change events are fired.\n   * @param events Array of GridOption properties to listen for changes too.\n   * @param listener Shared listener to run if any of the properties change\n   */\n  addManagedPropertyListeners(events, listener) {\n    if (this.destroyed) {\n      return;\n    }\n    const eventsKey = events.join(\"-\") + this.propertyListenerId++;\n    const wrappedListener = (event) => {\n      if (event.changeSet) {\n        if (event.changeSet && event.changeSet.id === this.lastChangeSetIdLookup[eventsKey]) {\n          return;\n        }\n        this.lastChangeSetIdLookup[eventsKey] = event.changeSet.id;\n      }\n      const propertiesChangeEvent = {\n        type: \"gridPropertyChanged\",\n        changeSet: event.changeSet,\n        source: event.source\n      };\n      listener(propertiesChangeEvent);\n    };\n    events.forEach((event) => this.setupGridOptionListener(event, wrappedListener));\n  }\n  addDestroyFunc(func) {\n    if (this.isAlive()) {\n      this.destroyFunctions.push(func);\n    } else {\n      func();\n    }\n  }\n  createManagedBean(bean, context) {\n    const res = this.createBean(bean, context);\n    this.addDestroyFunc(this.destroyBean.bind(this, bean, context));\n    return res;\n  }\n  createBean(bean, context, afterPreCreateCallback) {\n    return (context || this.getContext()).createBean(bean, afterPreCreateCallback);\n  }\n  destroyBean(bean, context) {\n    return (context || this.getContext()).destroyBean(bean);\n  }\n  destroyBeans(beans, context) {\n    if (beans) {\n      for (let i = 0; i < beans.length; i++) {\n        this.destroyBean(beans[i], context);\n      }\n    }\n    return [];\n  }\n};\n_BeanStub.EVENT_DESTROYED = \"destroyed\";\n__decorateClass([\n  Autowired(\"frameworkOverrides\")\n], _BeanStub.prototype, \"frameworkOverrides\", 2);\n__decorateClass([\n  Autowired(\"context\")\n], _BeanStub.prototype, \"context\", 2);\n__decorateClass([\n  Autowired(\"eventService\")\n], _BeanStub.prototype, \"eventService\", 2);\n__decorateClass([\n  Autowired(\"gridOptionsService\")\n], _BeanStub.prototype, \"gos\", 2);\n__decorateClass([\n  Autowired(\"localeService\")\n], _BeanStub.prototype, \"localeService\", 2);\n__decorateClass([\n  Autowired(\"environment\")\n], _BeanStub.prototype, \"environment\", 2);\n__decorateClass([\n  PreDestroy\n], _BeanStub.prototype, \"destroy\", 1);\nvar BeanStub = _BeanStub;\n\n// community-modules/core/src/columns/columnFactory.ts\nvar ColumnFactory = class extends BeanStub {\n  setBeans(loggerFactory) {\n    this.logger = loggerFactory.create(\"ColumnFactory\");\n  }\n  createColumnTree(defs, primaryColumns, existingTree, source) {\n    const columnKeyCreator = new ColumnKeyCreator();\n    const { existingCols, existingGroups, existingColKeys } = this.extractExistingTreeData(existingTree);\n    columnKeyCreator.addExistingKeys(existingColKeys);\n    const unbalancedTree = this.recursivelyCreateColumns(\n      defs,\n      0,\n      primaryColumns,\n      existingCols,\n      columnKeyCreator,\n      existingGroups,\n      source\n    );\n    const treeDept = this.findMaxDept(unbalancedTree, 0);\n    this.logger.log(\"Number of levels for grouped columns is \" + treeDept);\n    const columnTree = this.balanceColumnTree(unbalancedTree, 0, treeDept, columnKeyCreator);\n    const deptFirstCallback = (child, parent) => {\n      if (child instanceof ProvidedColumnGroup) {\n        child.setupExpandable();\n      }\n      child.setOriginalParent(parent);\n    };\n    depthFirstOriginalTreeSearch(null, columnTree, deptFirstCallback);\n    return {\n      columnTree,\n      treeDept\n    };\n  }\n  extractExistingTreeData(existingTree) {\n    const existingCols = [];\n    const existingGroups = [];\n    const existingColKeys = [];\n    if (existingTree) {\n      depthFirstOriginalTreeSearch(null, existingTree, (item) => {\n        if (item instanceof ProvidedColumnGroup) {\n          const group = item;\n          existingGroups.push(group);\n        } else {\n          const col = item;\n          existingColKeys.push(col.getId());\n          existingCols.push(col);\n        }\n      });\n    }\n    return { existingCols, existingGroups, existingColKeys };\n  }\n  createForAutoGroups(autoGroupCols, gridBalancedTree) {\n    return autoGroupCols.map((col) => this.createAutoGroupTreeItem(gridBalancedTree, col));\n  }\n  createAutoGroupTreeItem(balancedColumnTree, column) {\n    const dept = this.findDepth(balancedColumnTree);\n    let nextChild = column;\n    for (let i = dept - 1; i >= 0; i--) {\n      const autoGroup = new ProvidedColumnGroup(\n        null,\n        `FAKE_PATH_${column.getId()}}_${i}`,\n        true,\n        i\n      );\n      this.createBean(autoGroup);\n      autoGroup.setChildren([nextChild]);\n      nextChild.setOriginalParent(autoGroup);\n      nextChild = autoGroup;\n    }\n    if (dept === 0) {\n      column.setOriginalParent(null);\n    }\n    return nextChild;\n  }\n  findDepth(balancedColumnTree) {\n    let dept = 0;\n    let pointer = balancedColumnTree;\n    while (pointer && pointer[0] && pointer[0] instanceof ProvidedColumnGroup) {\n      dept++;\n      pointer = pointer[0].getChildren();\n    }\n    return dept;\n  }\n  balanceColumnTree(unbalancedTree, currentDept, columnDept, columnKeyCreator) {\n    const result = [];\n    for (let i = 0; i < unbalancedTree.length; i++) {\n      const child = unbalancedTree[i];\n      if (child instanceof ProvidedColumnGroup) {\n        const originalGroup = child;\n        const newChildren = this.balanceColumnTree(\n          originalGroup.getChildren(),\n          currentDept + 1,\n          columnDept,\n          columnKeyCreator\n        );\n        originalGroup.setChildren(newChildren);\n        result.push(originalGroup);\n      } else {\n        let firstPaddedGroup;\n        let currentPaddedGroup;\n        for (let j = columnDept - 1; j >= currentDept; j--) {\n          const newColId = columnKeyCreator.getUniqueKey(null, null);\n          const colGroupDefMerged = this.createMergedColGroupDef(null);\n          const paddedGroup = new ProvidedColumnGroup(colGroupDefMerged, newColId, true, currentDept);\n          this.createBean(paddedGroup);\n          if (currentPaddedGroup) {\n            currentPaddedGroup.setChildren([paddedGroup]);\n          }\n          currentPaddedGroup = paddedGroup;\n          if (!firstPaddedGroup) {\n            firstPaddedGroup = currentPaddedGroup;\n          }\n        }\n        if (firstPaddedGroup && currentPaddedGroup) {\n          result.push(firstPaddedGroup);\n          const hasGroups = unbalancedTree.some((leaf) => leaf instanceof ProvidedColumnGroup);\n          if (hasGroups) {\n            currentPaddedGroup.setChildren([child]);\n            continue;\n          } else {\n            currentPaddedGroup.setChildren(unbalancedTree);\n            break;\n          }\n        }\n        result.push(child);\n      }\n    }\n    return result;\n  }\n  findMaxDept(treeChildren, dept) {\n    let maxDeptThisLevel = dept;\n    for (let i = 0; i < treeChildren.length; i++) {\n      const abstractColumn = treeChildren[i];\n      if (abstractColumn instanceof ProvidedColumnGroup) {\n        const originalGroup = abstractColumn;\n        const newDept = this.findMaxDept(originalGroup.getChildren(), dept + 1);\n        if (maxDeptThisLevel < newDept) {\n          maxDeptThisLevel = newDept;\n        }\n      }\n    }\n    return maxDeptThisLevel;\n  }\n  recursivelyCreateColumns(defs, level, primaryColumns, existingColsCopy, columnKeyCreator, existingGroups, source) {\n    if (!defs)\n      return [];\n    const result = new Array(defs.length);\n    for (let i = 0; i < result.length; i++) {\n      const def = defs[i];\n      if (this.isColumnGroup(def)) {\n        result[i] = this.createColumnGroup(\n          primaryColumns,\n          def,\n          level,\n          existingColsCopy,\n          columnKeyCreator,\n          existingGroups,\n          source\n        );\n      } else {\n        result[i] = this.createColumn(primaryColumns, def, existingColsCopy, columnKeyCreator, source);\n      }\n    }\n    return result;\n  }\n  createColumnGroup(primaryColumns, colGroupDef, level, existingColumns, columnKeyCreator, existingGroups, source) {\n    const colGroupDefMerged = this.createMergedColGroupDef(colGroupDef);\n    const groupId = columnKeyCreator.getUniqueKey(colGroupDefMerged.groupId || null, null);\n    const providedGroup = new ProvidedColumnGroup(colGroupDefMerged, groupId, false, level);\n    this.createBean(providedGroup);\n    const existingGroupAndIndex = this.findExistingGroup(colGroupDef, existingGroups);\n    if (existingGroupAndIndex) {\n      existingGroups.splice(existingGroupAndIndex.idx, 1);\n    }\n    let existingGroup = existingGroupAndIndex == null ? void 0 : existingGroupAndIndex.group;\n    if (existingGroup) {\n      providedGroup.setExpanded(existingGroup.isExpanded());\n    }\n    const children = this.recursivelyCreateColumns(\n      colGroupDefMerged.children,\n      level + 1,\n      primaryColumns,\n      existingColumns,\n      columnKeyCreator,\n      existingGroups,\n      source\n    );\n    providedGroup.setChildren(children);\n    return providedGroup;\n  }\n  createMergedColGroupDef(colGroupDef) {\n    const colGroupDefMerged = {};\n    Object.assign(colGroupDefMerged, this.gos.get(\"defaultColGroupDef\"));\n    Object.assign(colGroupDefMerged, colGroupDef);\n    return colGroupDefMerged;\n  }\n  createColumn(primaryColumns, colDef, existingColsCopy, columnKeyCreator, source) {\n    const existingColAndIndex = this.findExistingColumn(colDef, existingColsCopy);\n    if (existingColAndIndex) {\n      existingColsCopy == null ? void 0 : existingColsCopy.splice(existingColAndIndex.idx, 1);\n    }\n    let column = existingColAndIndex == null ? void 0 : existingColAndIndex.column;\n    if (!column) {\n      const colId = columnKeyCreator.getUniqueKey(colDef.colId, colDef.field);\n      const colDefMerged = this.addColumnDefaultAndTypes(colDef, colId);\n      column = new Column(colDefMerged, colDef, colId, primaryColumns);\n      this.context.createBean(column);\n    } else {\n      const colDefMerged = this.addColumnDefaultAndTypes(colDef, column.getColId());\n      column.setColDef(colDefMerged, colDef, source);\n      this.applyColumnState(column, colDefMerged, source);\n    }\n    this.dataTypeService.addColumnListeners(column);\n    return column;\n  }\n  applyColumnState(column, colDef, source) {\n    const flex = attrToNumber(colDef.flex);\n    if (flex !== void 0) {\n      column.setFlex(flex);\n    }\n    const noFlexThisCol = column.getFlex() <= 0;\n    if (noFlexThisCol) {\n      const width = attrToNumber(colDef.width);\n      if (width != null) {\n        column.setActualWidth(width, source);\n      } else {\n        const widthBeforeUpdate = column.getActualWidth();\n        column.setActualWidth(widthBeforeUpdate, source);\n      }\n    }\n    if (colDef.sort !== void 0) {\n      if (colDef.sort == \"asc\" || colDef.sort == \"desc\") {\n        column.setSort(colDef.sort, source);\n      } else {\n        column.setSort(void 0, source);\n      }\n    }\n    const sortIndex = attrToNumber(colDef.sortIndex);\n    if (sortIndex !== void 0) {\n      column.setSortIndex(sortIndex);\n    }\n    const hide = attrToBoolean(colDef.hide);\n    if (hide !== void 0) {\n      column.setVisible(!hide, source);\n    }\n    if (colDef.pinned !== void 0) {\n      column.setPinned(colDef.pinned);\n    }\n  }\n  findExistingColumn(newColDef, existingColsCopy) {\n    if (!existingColsCopy)\n      return void 0;\n    for (let i = 0; i < existingColsCopy.length; i++) {\n      const def = existingColsCopy[i].getUserProvidedColDef();\n      if (!def)\n        continue;\n      const newHasId = newColDef.colId != null;\n      if (newHasId) {\n        if (existingColsCopy[i].getId() === newColDef.colId) {\n          return { idx: i, column: existingColsCopy[i] };\n        }\n        continue;\n      }\n      const newHasField = newColDef.field != null;\n      if (newHasField) {\n        if (def.field === newColDef.field) {\n          return { idx: i, column: existingColsCopy[i] };\n        }\n        continue;\n      }\n      if (def === newColDef) {\n        return { idx: i, column: existingColsCopy[i] };\n      }\n    }\n    return void 0;\n  }\n  findExistingGroup(newGroupDef, existingGroups) {\n    const newHasId = newGroupDef.groupId != null;\n    if (!newHasId) {\n      return void 0;\n    }\n    for (let i = 0; i < existingGroups.length; i++) {\n      const existingGroup = existingGroups[i];\n      const existingDef = existingGroup.getColGroupDef();\n      if (!existingDef) {\n        continue;\n      }\n      if (existingGroup.getId() === newGroupDef.groupId) {\n        return { idx: i, group: existingGroup };\n      }\n    }\n    return void 0;\n  }\n  addColumnDefaultAndTypes(colDef, colId) {\n    const res = {};\n    const defaultColDef = this.gos.get(\"defaultColDef\");\n    mergeDeep(res, defaultColDef, false, true);\n    const columnType = this.dataTypeService.updateColDefAndGetColumnType(res, colDef, colId);\n    if (columnType) {\n      this.assignColumnTypes(columnType, res);\n    }\n    mergeDeep(res, colDef, false, true);\n    const autoGroupColDef = this.gos.get(\"autoGroupColumnDef\");\n    const isSortingCoupled = this.gos.isColumnsSortingCoupledToGroup();\n    if (colDef.rowGroup && autoGroupColDef && isSortingCoupled) {\n      mergeDeep(res, { sort: autoGroupColDef.sort, initialSort: autoGroupColDef.initialSort }, false, true);\n    }\n    this.dataTypeService.validateColDef(res);\n    return res;\n  }\n  assignColumnTypes(typeKeys, colDefMerged) {\n    if (!typeKeys.length) {\n      return;\n    }\n    const allColumnTypes = Object.assign({}, DefaultColumnTypes);\n    const userTypes = this.gos.get(\"columnTypes\") || {};\n    iterateObject(userTypes, (key, value) => {\n      if (key in allColumnTypes) {\n        console.warn(`AG Grid: the column type '${key}' is a default column type and cannot be overridden.`);\n      } else {\n        const colType = value;\n        if (colType.type) {\n          warnOnce(`Column type definitions 'columnTypes' with a 'type' attribute are not supported because a column type cannot refer to another column type. Only column definitions 'columnDefs' can use the 'type' attribute to refer to a column type.`);\n        }\n        allColumnTypes[key] = value;\n      }\n    });\n    typeKeys.forEach((t) => {\n      const typeColDef = allColumnTypes[t.trim()];\n      if (typeColDef) {\n        mergeDeep(colDefMerged, typeColDef, false, true);\n      } else {\n        console.warn(\"AG Grid: colDef.type '\" + t + \"' does not correspond to defined gridOptions.columnTypes\");\n      }\n    });\n  }\n  // if object has children, we assume it's a group\n  isColumnGroup(abstractColDef) {\n    return abstractColDef.children !== void 0;\n  }\n};\n__decorateClass([\n  Autowired(\"dataTypeService\")\n], ColumnFactory.prototype, \"dataTypeService\", 2);\n__decorateClass([\n  __decorateParam(0, Qualifier(\"loggerFactory\"))\n], ColumnFactory.prototype, \"setBeans\", 1);\nColumnFactory = __decorateClass([\n  Bean(\"columnFactory\")\n], ColumnFactory);\nfunction depthFirstOriginalTreeSearch(parent, tree, callback) {\n  if (!tree) {\n    return;\n  }\n  for (let i = 0; i < tree.length; i++) {\n    const child = tree[i];\n    if (child instanceof ProvidedColumnGroup) {\n      depthFirstOriginalTreeSearch(child, child.getChildren(), callback);\n    }\n    callback(child, parent);\n  }\n}\n\n// community-modules/core/src/entities/columnGroup.ts\nvar _ColumnGroup = class _ColumnGroup {\n  constructor(providedColumnGroup, groupId, partId, pinned) {\n    // depends on the open/closed state of the group, only displaying columns are stored here\n    this.displayedChildren = [];\n    this.localEventService = new EventService();\n    this.groupId = groupId;\n    this.partId = partId;\n    this.providedColumnGroup = providedColumnGroup;\n    this.pinned = pinned;\n  }\n  // this is static, a it is used outside of this class\n  static createUniqueId(groupId, instanceId) {\n    return groupId + \"_\" + instanceId;\n  }\n  // as the user is adding and removing columns, the groups are recalculated.\n  // this reset clears out all children, ready for children to be added again\n  reset() {\n    this.parent = null;\n    this.children = null;\n    this.displayedChildren = null;\n  }\n  getParent() {\n    return this.parent;\n  }\n  setParent(parent) {\n    this.parent = parent;\n  }\n  getUniqueId() {\n    return _ColumnGroup.createUniqueId(this.groupId, this.partId);\n  }\n  isEmptyGroup() {\n    return this.displayedChildren.length === 0;\n  }\n  isMoving() {\n    const allLeafColumns = this.getProvidedColumnGroup().getLeafColumns();\n    if (!allLeafColumns || allLeafColumns.length === 0) {\n      return false;\n    }\n    return allLeafColumns.every((col) => col.isMoving());\n  }\n  checkLeft() {\n    this.displayedChildren.forEach((child) => {\n      if (child instanceof _ColumnGroup) {\n        child.checkLeft();\n      }\n    });\n    if (this.displayedChildren.length > 0) {\n      if (this.gos.get(\"enableRtl\")) {\n        const lastChild = last(this.displayedChildren);\n        const lastChildLeft = lastChild.getLeft();\n        this.setLeft(lastChildLeft);\n      } else {\n        const firstChildLeft = this.displayedChildren[0].getLeft();\n        this.setLeft(firstChildLeft);\n      }\n    } else {\n      this.setLeft(null);\n    }\n  }\n  getLeft() {\n    return this.left;\n  }\n  getOldLeft() {\n    return this.oldLeft;\n  }\n  setLeft(left) {\n    this.oldLeft = this.left;\n    if (this.left !== left) {\n      this.left = left;\n      this.localEventService.dispatchEvent(this.createAgEvent(_ColumnGroup.EVENT_LEFT_CHANGED));\n    }\n  }\n  getPinned() {\n    return this.pinned;\n  }\n  createAgEvent(type) {\n    return { type };\n  }\n  addEventListener(eventType, listener) {\n    this.localEventService.addEventListener(eventType, listener);\n  }\n  removeEventListener(eventType, listener) {\n    this.localEventService.removeEventListener(eventType, listener);\n  }\n  getGroupId() {\n    return this.groupId;\n  }\n  getPartId() {\n    return this.partId;\n  }\n  isChildInThisGroupDeepSearch(wantedChild) {\n    let result = false;\n    this.children.forEach((foundChild) => {\n      if (wantedChild === foundChild) {\n        result = true;\n      }\n      if (foundChild instanceof _ColumnGroup) {\n        if (foundChild.isChildInThisGroupDeepSearch(wantedChild)) {\n          result = true;\n        }\n      }\n    });\n    return result;\n  }\n  getActualWidth() {\n    let groupActualWidth = 0;\n    if (this.displayedChildren) {\n      this.displayedChildren.forEach((child) => {\n        groupActualWidth += child.getActualWidth();\n      });\n    }\n    return groupActualWidth;\n  }\n  isResizable() {\n    if (!this.displayedChildren) {\n      return false;\n    }\n    let result = false;\n    this.displayedChildren.forEach((child) => {\n      if (child.isResizable()) {\n        result = true;\n      }\n    });\n    return result;\n  }\n  getMinWidth() {\n    let result = 0;\n    this.displayedChildren.forEach((groupChild) => {\n      result += groupChild.getMinWidth() || 0;\n    });\n    return result;\n  }\n  addChild(child) {\n    if (!this.children) {\n      this.children = [];\n    }\n    this.children.push(child);\n  }\n  getDisplayedChildren() {\n    return this.displayedChildren;\n  }\n  getLeafColumns() {\n    const result = [];\n    this.addLeafColumns(result);\n    return result;\n  }\n  getDisplayedLeafColumns() {\n    const result = [];\n    this.addDisplayedLeafColumns(result);\n    return result;\n  }\n  getDefinition() {\n    return this.providedColumnGroup.getColGroupDef();\n  }\n  getColGroupDef() {\n    return this.providedColumnGroup.getColGroupDef();\n  }\n  isPadding() {\n    return this.providedColumnGroup.isPadding();\n  }\n  isExpandable() {\n    return this.providedColumnGroup.isExpandable();\n  }\n  isExpanded() {\n    return this.providedColumnGroup.isExpanded();\n  }\n  setExpanded(expanded) {\n    this.providedColumnGroup.setExpanded(expanded);\n  }\n  addDisplayedLeafColumns(leafColumns) {\n    this.displayedChildren.forEach((child) => {\n      if (child instanceof Column) {\n        leafColumns.push(child);\n      } else if (child instanceof _ColumnGroup) {\n        child.addDisplayedLeafColumns(leafColumns);\n      }\n    });\n  }\n  addLeafColumns(leafColumns) {\n    this.children.forEach((child) => {\n      if (child instanceof Column) {\n        leafColumns.push(child);\n      } else if (child instanceof _ColumnGroup) {\n        child.addLeafColumns(leafColumns);\n      }\n    });\n  }\n  getChildren() {\n    return this.children;\n  }\n  getColumnGroupShow() {\n    return this.providedColumnGroup.getColumnGroupShow();\n  }\n  getProvidedColumnGroup() {\n    return this.providedColumnGroup;\n  }\n  getPaddingLevel() {\n    const parent = this.getParent();\n    if (!this.isPadding() || !parent || !parent.isPadding()) {\n      return 0;\n    }\n    return 1 + parent.getPaddingLevel();\n  }\n  calculateDisplayedColumns() {\n    this.displayedChildren = [];\n    let parentWithExpansion = this;\n    while (parentWithExpansion != null && parentWithExpansion.isPadding()) {\n      parentWithExpansion = parentWithExpansion.getParent();\n    }\n    const isExpandable = parentWithExpansion ? parentWithExpansion.providedColumnGroup.isExpandable() : false;\n    if (!isExpandable) {\n      this.displayedChildren = this.children;\n      this.localEventService.dispatchEvent(this.createAgEvent(_ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED));\n      return;\n    }\n    this.children.forEach((child) => {\n      const emptyGroup = child instanceof _ColumnGroup && (!child.displayedChildren || !child.displayedChildren.length);\n      if (emptyGroup) {\n        return;\n      }\n      const headerGroupShow = child.getColumnGroupShow();\n      switch (headerGroupShow) {\n        case \"open\":\n          if (parentWithExpansion.providedColumnGroup.isExpanded()) {\n            this.displayedChildren.push(child);\n          }\n          break;\n        case \"closed\":\n          if (!parentWithExpansion.providedColumnGroup.isExpanded()) {\n            this.displayedChildren.push(child);\n          }\n          break;\n        default:\n          this.displayedChildren.push(child);\n          break;\n      }\n    });\n    this.localEventService.dispatchEvent(this.createAgEvent(_ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED));\n  }\n};\n_ColumnGroup.EVENT_LEFT_CHANGED = \"leftChanged\";\n_ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED = \"displayedChildrenChanged\";\n__decorateClass([\n  Autowired(\"gridOptionsService\")\n], _ColumnGroup.prototype, \"gos\", 2);\nvar ColumnGroup = _ColumnGroup;\n\n// community-modules/core/src/eventKeys.ts\nvar Events = class {\n  /*****************************  INTERNAL EVENTS: END ******************************************* */\n};\n/** Everything has changed with the columns. Either complete new set of columns set, or user called applyColumnState() */\n/** @deprecated - grid no longer uses this, and setSate() also fires individual events */\nEvents.EVENT_COLUMN_EVERYTHING_CHANGED = \"columnEverythingChanged\";\n/** User has set in new columns. */\nEvents.EVENT_NEW_COLUMNS_LOADED = \"newColumnsLoaded\";\n/** The pivot mode flag was changed */\nEvents.EVENT_COLUMN_PIVOT_MODE_CHANGED = \"columnPivotModeChanged\";\n/** Exceeded the pivot limit when generating columns */\nEvents.EVENT_PIVOT_MAX_COLUMNS_EXCEEDED = \"pivotMaxColumnsExceeded\";\n/** A row group column was added, removed or order changed. */\nEvents.EVENT_COLUMN_ROW_GROUP_CHANGED = \"columnRowGroupChanged\";\n/** expandAll / collapseAll was called from the api. */\nEvents.EVENT_EXPAND_COLLAPSE_ALL = \"expandOrCollapseAll\";\n/** A pivot column was added, removed or order changed. */\nEvents.EVENT_COLUMN_PIVOT_CHANGED = \"columnPivotChanged\";\n/** The list of grid columns has changed. */\nEvents.EVENT_GRID_COLUMNS_CHANGED = \"gridColumnsChanged\";\n/** A value column was added, removed or agg function was changed. */\nEvents.EVENT_COLUMN_VALUE_CHANGED = \"columnValueChanged\";\n/** A column was moved */\nEvents.EVENT_COLUMN_MOVED = \"columnMoved\";\n/** One or more columns was shown / hidden */\nEvents.EVENT_COLUMN_VISIBLE = \"columnVisible\";\n/** One or more columns was pinned / unpinned*/\nEvents.EVENT_COLUMN_PINNED = \"columnPinned\";\n/** A column group was opened / closed */\nEvents.EVENT_COLUMN_GROUP_OPENED = \"columnGroupOpened\";\n/** One or more columns was resized. If just one, the column in the event is set. */\nEvents.EVENT_COLUMN_RESIZED = \"columnResized\";\n/** The list of displayed columns has changed, can result from columns open / close, column move, pivot, group, etc */\nEvents.EVENT_DISPLAYED_COLUMNS_CHANGED = \"displayedColumnsChanged\";\n/** The grid option related to suppressing movable columns has changed */\nEvents.EVENT_SUPPRESS_COLUMN_MOVE_CHANGED = \"suppressMovableColumns\";\n/** The grid option related to suppressing column group selection has changed */\nEvents.EVENT_SUPPRESS_MENU_HIDE_CHANGED = \"suppressMenuHide\";\n/** The grid option related to suppressing movable columns has changed */\nEvents.EVENT_SUPPRESS_FIELD_DOT_NOTATION = \"suppressFieldDotNotation\";\n/** The list of virtual columns has changed, results from viewport changing */\nEvents.EVENT_VIRTUAL_COLUMNS_CHANGED = \"virtualColumnsChanged\";\n/** Column header mouse over */\nEvents.EVENT_COLUMN_HEADER_MOUSE_OVER = \"columnHeaderMouseOver\";\n/** Column header mouse leave */\nEvents.EVENT_COLUMN_HEADER_MOUSE_LEAVE = \"columnHeaderMouseLeave\";\n/** Column header clicked */\nEvents.EVENT_COLUMN_HEADER_CLICKED = \"columnHeaderClicked\";\n/** Column header context menu event, such as right-click or context menu key press */\nEvents.EVENT_COLUMN_HEADER_CONTEXT_MENU = \"columnHeaderContextMenu\";\n/** Async Transactions Executed */\nEvents.EVENT_ASYNC_TRANSACTIONS_FLUSHED = \"asyncTransactionsFlushed\";\n/** A row group was opened / closed */\nEvents.EVENT_ROW_GROUP_OPENED = \"rowGroupOpened\";\n/** Client-Side Row Model only. The client has updated data for the grid */\nEvents.EVENT_ROW_DATA_UPDATED = \"rowDataUpdated\";\n/** The client has set new floating data into the grid */\nEvents.EVENT_PINNED_ROW_DATA_CHANGED = \"pinnedRowDataChanged\";\n/** Range selection has changed */\nEvents.EVENT_RANGE_SELECTION_CHANGED = \"rangeSelectionChanged\";\n/** Chart was created */\nEvents.EVENT_CHART_CREATED = \"chartCreated\";\n/** Chart Range selection has changed */\nEvents.EVENT_CHART_RANGE_SELECTION_CHANGED = \"chartRangeSelectionChanged\";\n/** Chart Options have changed */\nEvents.EVENT_CHART_OPTIONS_CHANGED = \"chartOptionsChanged\";\n/** Chart was destroyed */\nEvents.EVENT_CHART_DESTROYED = \"chartDestroyed\";\n/** For when the tool panel is shown / hidden */\nEvents.EVENT_TOOL_PANEL_VISIBLE_CHANGED = \"toolPanelVisibleChanged\";\nEvents.EVENT_TOOL_PANEL_SIZE_CHANGED = \"toolPanelSizeChanged\";\nEvents.EVENT_COLUMN_PANEL_ITEM_DRAG_START = \"columnPanelItemDragStart\";\nEvents.EVENT_COLUMN_PANEL_ITEM_DRAG_END = \"columnPanelItemDragEnd\";\n/** Model was updated - grid updates the drawn rows when this happens */\nEvents.EVENT_MODEL_UPDATED = \"modelUpdated\";\nEvents.EVENT_CUT_START = \"cutStart\";\nEvents.EVENT_CUT_END = \"cutEnd\";\nEvents.EVENT_PASTE_START = \"pasteStart\";\nEvents.EVENT_PASTE_END = \"pasteEnd\";\nEvents.EVENT_FILL_START = \"fillStart\";\nEvents.EVENT_FILL_END = \"fillEnd\";\nEvents.EVENT_RANGE_DELETE_START = \"rangeDeleteStart\";\nEvents.EVENT_RANGE_DELETE_END = \"rangeDeleteEnd\";\n/** Undo operation has started. */\nEvents.EVENT_UNDO_STARTED = \"undoStarted\";\n/** Undo operation has ended. */\nEvents.EVENT_UNDO_ENDED = \"undoEnded\";\n/** Redo operation has started. */\nEvents.EVENT_REDO_STARTED = \"redoStarted\";\n/** Redo operation has ended. */\nEvents.EVENT_REDO_ENDED = \"redoEnded\";\nEvents.EVENT_KEY_SHORTCUT_CHANGED_CELL_START = \"keyShortcutChangedCellStart\";\nEvents.EVENT_KEY_SHORTCUT_CHANGED_CELL_END = \"keyShortcutChangedCellEnd\";\nEvents.EVENT_CELL_CLICKED = \"cellClicked\";\nEvents.EVENT_CELL_DOUBLE_CLICKED = \"cellDoubleClicked\";\nEvents.EVENT_CELL_MOUSE_DOWN = \"cellMouseDown\";\nEvents.EVENT_CELL_CONTEXT_MENU = \"cellContextMenu\";\nEvents.EVENT_CELL_VALUE_CHANGED = \"cellValueChanged\";\nEvents.EVENT_CELL_EDIT_REQUEST = \"cellEditRequest\";\nEvents.EVENT_ROW_VALUE_CHANGED = \"rowValueChanged\";\nEvents.EVENT_CELL_FOCUSED = \"cellFocused\";\nEvents.EVENT_CELL_FOCUS_CLEARED = \"cellFocusCleared\";\nEvents.EVENT_FULL_WIDTH_ROW_FOCUSED = \"fullWidthRowFocused\";\nEvents.EVENT_ROW_SELECTED = \"rowSelected\";\nEvents.EVENT_SELECTION_CHANGED = \"selectionChanged\";\nEvents.EVENT_TOOLTIP_SHOW = \"tooltipShow\";\nEvents.EVENT_TOOLTIP_HIDE = \"tooltipHide\";\nEvents.EVENT_CELL_KEY_DOWN = \"cellKeyDown\";\nEvents.EVENT_CELL_MOUSE_OVER = \"cellMouseOver\";\nEvents.EVENT_CELL_MOUSE_OUT = \"cellMouseOut\";\n/** 2 events for filtering. The grid LISTENS for filterChanged and afterFilterChanged */\nEvents.EVENT_FILTER_CHANGED = \"filterChanged\";\n/** Filter was change but not applied. Only useful if apply buttons are used in filters. */\nEvents.EVENT_FILTER_MODIFIED = \"filterModified\";\nEvents.EVENT_FILTER_OPENED = \"filterOpened\";\nEvents.EVENT_ADVANCED_FILTER_BUILDER_VISIBLE_CHANGED = \"advancedFilterBuilderVisibleChanged\";\nEvents.EVENT_SORT_CHANGED = \"sortChanged\";\n/** A row was removed from the dom, for any reason. Use to clean up resources (if any) used by the row. */\nEvents.EVENT_VIRTUAL_ROW_REMOVED = \"virtualRowRemoved\";\nEvents.EVENT_ROW_CLICKED = \"rowClicked\";\nEvents.EVENT_ROW_DOUBLE_CLICKED = \"rowDoubleClicked\";\n/** Gets called once after the grid has finished initialising. */\nEvents.EVENT_GRID_READY = \"gridReady\";\n/** Called once when the grid is about to get destroyed. */\nEvents.EVENT_GRID_PRE_DESTROYED = \"gridPreDestroyed\";\n/** Width of height of the main grid div has changed. Grid listens for this and does layout of grid if it's\n * changed, so always filling the space it was given. */\nEvents.EVENT_GRID_SIZE_CHANGED = \"gridSizeChanged\";\n/** The indexes of the rows rendered has changed, eg user has scrolled to a new vertical position. */\nEvents.EVENT_VIEWPORT_CHANGED = \"viewportChanged\";\n/* The width of the scrollbar has been calculated */\nEvents.EVENT_SCROLLBAR_WIDTH_CHANGED = \"scrollbarWidthChanged\";\n/** Rows were rendered for the first time (ie on async data load). */\nEvents.EVENT_FIRST_DATA_RENDERED = \"firstDataRendered\";\n/** A column drag has started, either resizing a column or moving a column. */\nEvents.EVENT_DRAG_STARTED = \"dragStarted\";\n/** A column drag has stopped */\nEvents.EVENT_DRAG_STOPPED = \"dragStopped\";\nEvents.EVENT_CHECKBOX_CHANGED = \"checkboxChanged\";\nEvents.EVENT_ROW_EDITING_STARTED = \"rowEditingStarted\";\nEvents.EVENT_ROW_EDITING_STOPPED = \"rowEditingStopped\";\nEvents.EVENT_CELL_EDITING_STARTED = \"cellEditingStarted\";\nEvents.EVENT_CELL_EDITING_STOPPED = \"cellEditingStopped\";\n/** Main body of grid has scrolled, either horizontally or vertically */\nEvents.EVENT_BODY_SCROLL = \"bodyScroll\";\n/** Main body of the grid has stopped scrolling, either horizontally or vertically */\nEvents.EVENT_BODY_SCROLL_END = \"bodyScrollEnd\";\nEvents.EVENT_HEIGHT_SCALE_CHANGED = \"heightScaleChanged\";\n/** The displayed page for pagination has changed. For example the data was filtered or sorted,\n * or the user has moved to a different page. */\nEvents.EVENT_PAGINATION_CHANGED = \"paginationChanged\";\n/** Only used by React, Angular, Web Components and VueJS AG Grid components\n * (not used if doing plain JavaScript). If the grid receives changes due\n * to bound properties, this event fires after the grid has finished processing the change. */\nEvents.EVENT_COMPONENT_STATE_CHANGED = \"componentStateChanged\";\n/** Only used by the SSRM, called when the grid has no more rows to refresh */\nEvents.EVENT_STORE_REFRESHED = \"storeRefreshed\";\nEvents.EVENT_STATE_UPDATED = \"stateUpdated\";\n/** The visibility of the column menu has changed. */\nEvents.EVENT_COLUMN_MENU_VISIBLE_CHANGED = \"columnMenuVisibleChanged\";\n/** The visibility of the context menu has changed. */\nEvents.EVENT_CONTEXT_MENU_VISIBLE_CHANGED = \"contextMenuVisibleChanged\";\n/*****************************  INTERNAL EVENTS: START ******************************************* */\n/** Please remember to add to ComponentUtil.EXCLUDED_INTERNAL_EVENTS to not have these events exposed to framework components. */\n/** All items from here down are used internally by the grid, not intended for external use. */\n// not documented, either experimental, or we just don't want users using an depending on them\nEvents.EVENT_BODY_HEIGHT_CHANGED = \"bodyHeightChanged\";\nEvents.EVENT_COLUMN_CONTAINER_WIDTH_CHANGED = \"columnContainerWidthChanged\";\nEvents.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED = \"displayedColumnsWidthChanged\";\nEvents.EVENT_SCROLL_VISIBILITY_CHANGED = \"scrollVisibilityChanged\";\nEvents.EVENT_COLUMN_HOVER_CHANGED = \"columnHoverChanged\";\nEvents.EVENT_FLASH_CELLS = \"flashCells\";\nEvents.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED = \"paginationPixelOffsetChanged\";\nEvents.EVENT_DISPLAYED_ROWS_CHANGED = \"displayedRowsChanged\";\nEvents.EVENT_LEFT_PINNED_WIDTH_CHANGED = \"leftPinnedWidthChanged\";\nEvents.EVENT_RIGHT_PINNED_WIDTH_CHANGED = \"rightPinnedWidthChanged\";\nEvents.EVENT_ROW_CONTAINER_HEIGHT_CHANGED = \"rowContainerHeightChanged\";\nEvents.EVENT_HEADER_HEIGHT_CHANGED = \"headerHeightChanged\";\nEvents.EVENT_COLUMN_HEADER_HEIGHT_CHANGED = \"columnHeaderHeightChanged\";\nEvents.EVENT_ROW_DRAG_ENTER = \"rowDragEnter\";\nEvents.EVENT_ROW_DRAG_MOVE = \"rowDragMove\";\nEvents.EVENT_ROW_DRAG_LEAVE = \"rowDragLeave\";\nEvents.EVENT_ROW_DRAG_END = \"rowDragEnd\";\n// environment\nEvents.EVENT_GRID_STYLES_CHANGED = \"gridStylesChanged\";\n// these are used for server side group and agg - only used by CS with Viewport Row Model - intention is\n// to design these better around server side functions and then release to general public when fully working with\n// all the row models.\nEvents.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST = \"columnRowGroupChangeRequest\";\nEvents.EVENT_COLUMN_PIVOT_CHANGE_REQUEST = \"columnPivotChangeRequest\";\nEvents.EVENT_COLUMN_VALUE_CHANGE_REQUEST = \"columnValueChangeRequest\";\nEvents.EVENT_COLUMN_AGG_FUNC_CHANGE_REQUEST = \"columnAggFuncChangeRequest\";\nEvents.EVENT_STORE_UPDATED = \"storeUpdated\";\nEvents.EVENT_FILTER_DESTROYED = \"filterDestroyed\";\nEvents.EVENT_ROW_DATA_UPDATE_STARTED = \"rowDataUpdateStarted\";\nEvents.EVENT_ROW_COUNT_READY = \"rowCountReady\";\n// Advanced Filters\nEvents.EVENT_ADVANCED_FILTER_ENABLED_CHANGED = \"advancedFilterEnabledChanged\";\nEvents.EVENT_DATA_TYPES_INFERRED = \"dataTypesInferred\";\n// Widgets\nEvents.EVENT_FIELD_VALUE_CHANGED = \"fieldValueChanged\";\nEvents.EVENT_FIELD_PICKER_VALUE_SELECTED = \"fieldPickerValueSelected\";\nEvents.EVENT_SIDE_BAR_UPDATED = \"sideBarUpdated\";\n\n// community-modules/core/src/events.ts\nvar ALWAYS_SYNC_GLOBAL_EVENTS = /* @__PURE__ */ new Set([Events.EVENT_GRID_PRE_DESTROYED, Events.EVENT_FILL_START]);\n\n// community-modules/core/src/columns/groupInstanceIdCreator.ts\nvar GroupInstanceIdCreator = class {\n  constructor() {\n    // this map contains keys to numbers, so we remember what the last call was\n    this.existingIds = {};\n  }\n  getInstanceIdForKey(key) {\n    const lastResult = this.existingIds[key];\n    let result;\n    if (typeof lastResult !== \"number\") {\n      result = 0;\n    } else {\n      result = lastResult + 1;\n    }\n    this.existingIds[key] = result;\n    return result;\n  }\n};\n\n// community-modules/core/src/columns/autoGroupColService.ts\nvar GROUP_AUTO_COLUMN_ID = \"ag-Grid-AutoColumn\";\nvar AutoGroupColService = class extends BeanStub {\n  createAutoGroupColumns(rowGroupColumns) {\n    const groupAutoColumns = [];\n    const doingTreeData = this.gos.get(\"treeData\");\n    let doingMultiAutoColumn = this.gos.isGroupMultiAutoColumn();\n    if (doingTreeData && doingMultiAutoColumn) {\n      console.warn('AG Grid: you cannot mix groupDisplayType = \"multipleColumns\" with treeData, only one column can be used to display groups when doing tree data');\n      doingMultiAutoColumn = false;\n    }\n    if (doingMultiAutoColumn) {\n      rowGroupColumns.forEach((rowGroupCol, index) => {\n        groupAutoColumns.push(this.createOneAutoGroupColumn(rowGroupCol, index));\n      });\n    } else {\n      groupAutoColumns.push(this.createOneAutoGroupColumn());\n    }\n    return groupAutoColumns;\n  }\n  updateAutoGroupColumns(autoGroupColumns, source) {\n    autoGroupColumns.forEach((column, index) => this.updateOneAutoGroupColumn(column, index, source));\n  }\n  // rowGroupCol and index are missing if groupDisplayType != \"multipleColumns\"\n  createOneAutoGroupColumn(rowGroupCol, index) {\n    let colId;\n    if (rowGroupCol) {\n      colId = `${GROUP_AUTO_COLUMN_ID}-${rowGroupCol.getId()}`;\n    } else {\n      colId = GROUP_AUTO_COLUMN_ID;\n    }\n    const colDef = this.createAutoGroupColDef(colId, rowGroupCol, index);\n    colDef.colId = colId;\n    const newCol = new Column(colDef, null, colId, true);\n    this.context.createBean(newCol);\n    return newCol;\n  }\n  /**\n   * Refreshes an auto group col to load changes from defaultColDef or autoGroupColDef\n   */\n  updateOneAutoGroupColumn(colToUpdate, index, source) {\n    const oldColDef = colToUpdate.getColDef();\n    const underlyingColId = typeof oldColDef.showRowGroup == \"string\" ? oldColDef.showRowGroup : void 0;\n    const underlyingColumn = underlyingColId != null ? this.columnModel.getPrimaryColumn(underlyingColId) : void 0;\n    const colDef = this.createAutoGroupColDef(colToUpdate.getId(), underlyingColumn != null ? underlyingColumn : void 0, index);\n    colToUpdate.setColDef(colDef, null, source);\n    this.columnFactory.applyColumnState(colToUpdate, colDef, source);\n  }\n  createAutoGroupColDef(colId, underlyingColumn, index) {\n    let res = this.createBaseColDef(underlyingColumn);\n    const autoGroupColumnDef = this.gos.get(\"autoGroupColumnDef\");\n    mergeDeep(res, autoGroupColumnDef);\n    res = this.columnFactory.addColumnDefaultAndTypes(res, colId);\n    if (!this.gos.get(\"treeData\")) {\n      const noFieldOrValueGetter = missing(res.field) && missing(res.valueGetter) && missing(res.filterValueGetter) && res.filter !== \"agGroupColumnFilter\";\n      if (noFieldOrValueGetter) {\n        res.filter = false;\n      }\n    }\n    if (index && index > 0) {\n      res.headerCheckboxSelection = false;\n    }\n    const isSortingCoupled = this.gos.isColumnsSortingCoupledToGroup();\n    const hasOwnData = res.valueGetter || res.field != null;\n    if (isSortingCoupled && !hasOwnData) {\n      res.sortIndex = void 0;\n      res.initialSort = void 0;\n    }\n    return res;\n  }\n  createBaseColDef(rowGroupCol) {\n    const userDef = this.gos.get(\"autoGroupColumnDef\");\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const res = {\n      headerName: localeTextFunc(\"group\", \"Group\")\n    };\n    const userHasProvidedGroupCellRenderer = userDef && (userDef.cellRenderer || userDef.cellRendererSelector);\n    if (!userHasProvidedGroupCellRenderer) {\n      res.cellRenderer = \"agGroupCellRenderer\";\n    }\n    if (rowGroupCol) {\n      const colDef = rowGroupCol.getColDef();\n      Object.assign(res, {\n        // cellRendererParams.groupKey: colDefToCopy.field;\n        headerName: this.columnModel.getDisplayNameForColumn(rowGroupCol, \"header\"),\n        headerValueGetter: colDef.headerValueGetter\n      });\n      if (colDef.cellRenderer) {\n        Object.assign(res, {\n          cellRendererParams: {\n            innerRenderer: colDef.cellRenderer,\n            innerRendererParams: colDef.cellRendererParams\n          }\n        });\n      }\n      res.showRowGroup = rowGroupCol.getColId();\n    } else {\n      res.showRowGroup = true;\n    }\n    return res;\n  }\n};\n__decorateClass([\n  Autowired(\"columnModel\")\n], AutoGroupColService.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"columnFactory\")\n], AutoGroupColService.prototype, \"columnFactory\", 2);\nAutoGroupColService = __decorateClass([\n  Bean(\"autoGroupColService\")\n], AutoGroupColService);\n\n// community-modules/core/src/utils/string.ts\nvar string_exports = {};\n__export(string_exports, {\n  camelCaseToHumanText: () => camelCaseToHumanText,\n  camelCaseToHyphenated: () => camelCaseToHyphenated,\n  capitalise: () => capitalise,\n  escapeString: () => escapeString,\n  utf8_encode: () => utf8_encode\n});\nvar reUnescapedHtml = /[&<>\"']/g;\nvar HTML_ESCAPES = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#39;\"\n};\nfunction utf8_encode(s) {\n  const stringFromCharCode = String.fromCharCode;\n  function ucs2decode(string) {\n    const output = [];\n    if (!string) {\n      return [];\n    }\n    const len = string.length;\n    let counter = 0;\n    let value;\n    let extra;\n    while (counter < len) {\n      value = string.charCodeAt(counter++);\n      if (value >= 55296 && value <= 56319 && counter < len) {\n        extra = string.charCodeAt(counter++);\n        if ((extra & 64512) == 56320) {\n          output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n        } else {\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n    return output;\n  }\n  function checkScalarValue(point) {\n    if (point >= 55296 && point <= 57343) {\n      throw Error(\n        \"Lone surrogate U+\" + point.toString(16).toUpperCase() + \" is not a scalar value\"\n      );\n    }\n  }\n  function createByte(point, shift) {\n    return stringFromCharCode(point >> shift & 63 | 128);\n  }\n  function encodeCodePoint(point) {\n    if (point >= 0 && point <= 31 && point !== 10) {\n      const convertedCode = point.toString(16).toUpperCase();\n      const paddedCode = convertedCode.padStart(4, \"0\");\n      return `_x${paddedCode}_`;\n    }\n    if ((point & 4294967168) == 0) {\n      return stringFromCharCode(point);\n    }\n    let symbol = \"\";\n    if ((point & 4294965248) == 0) {\n      symbol = stringFromCharCode(point >> 6 & 31 | 192);\n    } else if ((point & 4294901760) == 0) {\n      checkScalarValue(point);\n      symbol = stringFromCharCode(point >> 12 & 15 | 224);\n      symbol += createByte(point, 6);\n    } else if ((point & 4292870144) == 0) {\n      symbol = stringFromCharCode(point >> 18 & 7 | 240);\n      symbol += createByte(point, 12);\n      symbol += createByte(point, 6);\n    }\n    symbol += stringFromCharCode(point & 63 | 128);\n    return symbol;\n  }\n  const codePoints = ucs2decode(s);\n  const length = codePoints.length;\n  let index = -1;\n  let codePoint;\n  let byteString = \"\";\n  while (++index < length) {\n    codePoint = codePoints[index];\n    byteString += encodeCodePoint(codePoint);\n  }\n  return byteString;\n}\nfunction capitalise(str) {\n  return str[0].toUpperCase() + str.substring(1).toLowerCase();\n}\nfunction escapeString(toEscape, skipEscapingHtmlChars) {\n  if (toEscape == null) {\n    return null;\n  }\n  const stringResult = toEscape.toString().toString();\n  if (skipEscapingHtmlChars) {\n    return stringResult;\n  }\n  return stringResult.replace(reUnescapedHtml, (chr) => HTML_ESCAPES[chr]);\n}\nfunction camelCaseToHumanText(camelCase) {\n  if (!camelCase || camelCase == null) {\n    return null;\n  }\n  const rex = /([a-z])([A-Z])/g;\n  const rexCaps = /([A-Z]+)([A-Z])([a-z])/g;\n  const words = camelCase.replace(rex, \"$1 $2\").replace(rexCaps, \"$1 $2$3\").replace(/\\./g, \" \").split(\" \");\n  return words.map((word) => word.substring(0, 1).toUpperCase() + (word.length > 1 ? word.substring(1, word.length) : \"\")).join(\" \");\n}\nfunction camelCaseToHyphenated(camelCase) {\n  return camelCase.replace(/[A-Z]/g, (s) => `-${s.toLocaleLowerCase()}`);\n}\n\n// community-modules/core/src/utils/map.ts\nvar map_exports = {};\n__export(map_exports, {\n  convertToMap: () => convertToMap,\n  keys: () => keys,\n  mapById: () => mapById\n});\nfunction convertToMap(arr) {\n  const map = /* @__PURE__ */ new Map();\n  arr.forEach((pair) => map.set(pair[0], pair[1]));\n  return map;\n}\nfunction mapById(arr, callback) {\n  const map = /* @__PURE__ */ new Map();\n  arr.forEach((item) => map.set(callback(item), item));\n  return map;\n}\nfunction keys(map) {\n  const arr = [];\n  map.forEach((_2, key) => arr.push(key));\n  return arr;\n}\n\n// community-modules/core/src/columns/columnModel.ts\nvar ColumnModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    // header row count, based on user provided columns\n    this.primaryHeaderRowCount = 0;\n    this.secondaryHeaderRowCount = 0;\n    // header row count, either above, or based on pivoting if we are pivoting\n    this.gridHeaderRowCount = 0;\n    // leave level columns of the displayed trees\n    this.displayedColumnsLeft = [];\n    this.displayedColumnsRight = [];\n    this.displayedColumnsCenter = [];\n    // all three lists above combined\n    this.displayedColumns = [];\n    // for fast lookup, to see if a column or group is still displayed\n    this.displayedColumnsAndGroupsMap = {};\n    // all columns to be rendered\n    this.viewportColumns = [];\n    // A hash key to keep track of changes in viewport columns\n    this.viewportColumnsHash = \"\";\n    // same as viewportColumns, except we always include columns with headerAutoHeight\n    this.headerViewportColumns = [];\n    // all columns to be rendered in the centre\n    this.viewportColumnsCenter = [];\n    // same as viewportColumnsCenter, except we always include columns with headerAutoHeight\n    this.headerViewportColumnsCenter = [];\n    // all columns & groups to be rendered, index by row. used by header rows to get all items\n    // to render for that row.\n    this.viewportRowLeft = {};\n    this.viewportRowRight = {};\n    this.viewportRowCenter = {};\n    this.autoHeightActiveAtLeastOnce = false;\n    this.rowGroupColumns = [];\n    this.valueColumns = [];\n    this.pivotColumns = [];\n    this.ready = false;\n    this.changeEventsDispatching = false;\n    this.autoGroupsNeedBuilding = false;\n    this.forceRecreateAutoGroups = false;\n    this.pivotMode = false;\n    this.bodyWidth = 0;\n    this.leftWidth = 0;\n    this.rightWidth = 0;\n    this.bodyWidthDirty = true;\n    // when we're waiting for cell data types to be inferred, we need to defer column resizing\n    this.shouldQueueResizeOperations = false;\n    this.resizeOperationQueue = [];\n  }\n  init() {\n    this.suppressColumnVirtualisation = this.gos.get(\"suppressColumnVirtualisation\");\n    const pivotMode = this.gos.get(\"pivotMode\");\n    if (this.isPivotSettingAllowed(pivotMode)) {\n      this.pivotMode = pivotMode;\n    }\n    this.addManagedPropertyListeners([\"groupDisplayType\", \"treeData\", \"treeDataDisplayType\", \"groupHideOpenParents\"], (event) => this.buildAutoGroupColumns(convertSourceType(event.source)));\n    this.addManagedPropertyListener(\"autoGroupColumnDef\", (event) => this.onAutoGroupColumnDefChanged(convertSourceType(event.source)));\n    this.addManagedPropertyListeners([\"defaultColDef\", \"columnTypes\", \"suppressFieldDotNotation\"], (event) => this.onSharedColDefChanged(convertSourceType(event.source)));\n    this.addManagedPropertyListener(\"pivotMode\", (event) => this.setPivotMode(this.gos.get(\"pivotMode\"), convertSourceType(event.source)));\n    this.addManagedListener(this.eventService, Events.EVENT_FIRST_DATA_RENDERED, () => this.onFirstDataRendered());\n  }\n  buildAutoGroupColumns(source) {\n    if (!this.columnDefs) {\n      return;\n    }\n    this.autoGroupsNeedBuilding = true;\n    this.forceRecreateAutoGroups = true;\n    this.updateGridColumns();\n    this.updateDisplayedColumns(source);\n  }\n  onAutoGroupColumnDefChanged(source) {\n    if (this.groupAutoColumns) {\n      this.autoGroupColService.updateAutoGroupColumns(this.groupAutoColumns, source);\n    }\n  }\n  onSharedColDefChanged(source) {\n    if (!this.gridColumns) {\n      return;\n    }\n    if (this.groupAutoColumns) {\n      this.autoGroupColService.updateAutoGroupColumns(this.groupAutoColumns, source);\n    }\n    this.createColumnsFromColumnDefs(true, source);\n  }\n  setColumnDefs(columnDefs, source) {\n    const colsPreviouslyExisted = !!this.columnDefs;\n    this.columnDefs = columnDefs;\n    this.createColumnsFromColumnDefs(colsPreviouslyExisted, source);\n  }\n  recreateColumnDefs(source) {\n    this.onSharedColDefChanged(source);\n  }\n  destroyOldColumns(oldTree, newTree) {\n    const oldObjectsById = {};\n    if (!oldTree) {\n      return;\n    }\n    depthFirstOriginalTreeSearch(null, oldTree, (child) => {\n      oldObjectsById[child.getInstanceId()] = child;\n    });\n    if (newTree) {\n      depthFirstOriginalTreeSearch(null, newTree, (child) => {\n        oldObjectsById[child.getInstanceId()] = null;\n      });\n    }\n    const colsToDestroy = Object.values(oldObjectsById).filter((item) => item != null);\n    this.destroyBeans(colsToDestroy);\n  }\n  destroyColumns() {\n    this.destroyOldColumns(this.primaryColumnTree);\n    this.destroyOldColumns(this.secondaryBalancedTree);\n    this.destroyOldColumns(this.groupAutoColsBalancedTree);\n  }\n  createColumnsFromColumnDefs(colsPreviouslyExisted, source) {\n    const dispatchEventsFunc = colsPreviouslyExisted ? this.compareColumnStatesAndDispatchEvents(source) : void 0;\n    this.valueCache.expire();\n    this.autoGroupsNeedBuilding = true;\n    const oldPrimaryColumns = this.primaryColumns;\n    const oldPrimaryTree = this.primaryColumnTree;\n    const balancedTreeResult = this.columnFactory.createColumnTree(this.columnDefs, true, oldPrimaryTree, source);\n    this.destroyOldColumns(this.primaryColumnTree, balancedTreeResult.columnTree);\n    this.primaryColumnTree = balancedTreeResult.columnTree;\n    this.primaryHeaderRowCount = balancedTreeResult.treeDept + 1;\n    this.primaryColumns = this.getColumnsFromTree(this.primaryColumnTree);\n    this.primaryColumnsMap = {};\n    this.primaryColumns.forEach((col) => this.primaryColumnsMap[col.getId()] = col);\n    this.extractRowGroupColumns(source, oldPrimaryColumns);\n    this.extractPivotColumns(source, oldPrimaryColumns);\n    this.extractValueColumns(source, oldPrimaryColumns);\n    this.ready = true;\n    const gridColsNotProcessed = this.gridColsArePrimary === void 0;\n    const processGridCols = this.gridColsArePrimary || gridColsNotProcessed || this.autoGroupsNeedBuilding;\n    if (processGridCols) {\n      this.updateGridColumns();\n      if (colsPreviouslyExisted && this.gridColsArePrimary && !this.gos.get(\"maintainColumnOrder\")) {\n        this.orderGridColumnsLikePrimary();\n      }\n      this.updateDisplayedColumns(source);\n      this.checkViewportColumns();\n    }\n    this.dispatchEverythingChanged(source);\n    this.changeEventsDispatching = true;\n    if (dispatchEventsFunc) {\n      dispatchEventsFunc();\n    }\n    this.changeEventsDispatching = false;\n    this.dispatchNewColumnsLoaded(source);\n  }\n  shouldRowModelIgnoreRefresh() {\n    return this.changeEventsDispatching;\n  }\n  dispatchNewColumnsLoaded(source) {\n    const newColumnsLoadedEvent = {\n      type: Events.EVENT_NEW_COLUMNS_LOADED,\n      source\n    };\n    this.eventService.dispatchEvent(newColumnsLoadedEvent);\n    if (source === \"gridInitializing\") {\n      this.onColumnsReady();\n    }\n  }\n  // this event is legacy, no grid code listens to it. instead the grid listens to New Columns Loaded\n  dispatchEverythingChanged(source) {\n    const eventEverythingChanged = {\n      type: Events.EVENT_COLUMN_EVERYTHING_CHANGED,\n      source\n    };\n    this.eventService.dispatchEvent(eventEverythingChanged);\n  }\n  orderGridColumnsLikePrimary() {\n    const primaryColumns = this.primaryColumns;\n    if (!primaryColumns) {\n      return;\n    }\n    const primaryColsOrdered = primaryColumns.filter((col) => this.gridColumns.indexOf(col) >= 0);\n    const otherCols = this.gridColumns.filter((col) => primaryColsOrdered.indexOf(col) < 0);\n    this.gridColumns = [...otherCols, ...primaryColsOrdered];\n    this.gridColumns = this.placeLockedColumns(this.gridColumns);\n  }\n  getAllDisplayedAutoHeightCols() {\n    return this.displayedAutoHeightCols;\n  }\n  setViewport() {\n    if (this.gos.get(\"enableRtl\")) {\n      this.viewportLeft = this.bodyWidth - this.scrollPosition - this.scrollWidth;\n      this.viewportRight = this.bodyWidth - this.scrollPosition;\n    } else {\n      this.viewportLeft = this.scrollPosition;\n      this.viewportRight = this.scrollWidth + this.scrollPosition;\n    }\n  }\n  // checks what columns are currently displayed due to column virtualisation. dispatches an event\n  // if the list of columns has changed.\n  // + setColumnWidth(), setViewportPosition(), setColumnDefs(), sizeColumnsToFit()\n  checkViewportColumns(afterScroll = false) {\n    if (this.displayedColumnsCenter == null) {\n      return;\n    }\n    const viewportColumnsChanged = this.extractViewport();\n    if (!viewportColumnsChanged) {\n      return;\n    }\n    const event = {\n      type: Events.EVENT_VIRTUAL_COLUMNS_CHANGED,\n      afterScroll\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  setViewportPosition(scrollWidth, scrollPosition, afterScroll = false) {\n    if (scrollWidth !== this.scrollWidth || scrollPosition !== this.scrollPosition || this.bodyWidthDirty) {\n      this.scrollWidth = scrollWidth;\n      this.scrollPosition = scrollPosition;\n      this.bodyWidthDirty = true;\n      this.setViewport();\n      if (this.ready) {\n        this.checkViewportColumns(afterScroll);\n      }\n    }\n  }\n  isPivotMode() {\n    return this.pivotMode;\n  }\n  isPivotSettingAllowed(pivot) {\n    if (pivot && this.gos.get(\"treeData\")) {\n      warnOnce(\"Pivot mode not available with treeData.\");\n      return false;\n    }\n    return true;\n  }\n  setPivotMode(pivotMode, source) {\n    if (pivotMode === this.pivotMode || !this.isPivotSettingAllowed(this.pivotMode)) {\n      return;\n    }\n    this.pivotMode = pivotMode;\n    if (!this.gridColumns) {\n      return;\n    }\n    this.autoGroupsNeedBuilding = true;\n    this.updateGridColumns();\n    this.updateDisplayedColumns(source);\n    const event = {\n      type: Events.EVENT_COLUMN_PIVOT_MODE_CHANGED\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  getSecondaryPivotColumn(pivotKeys, valueColKey) {\n    if (missing(this.secondaryColumns)) {\n      return null;\n    }\n    const valueColumnToFind = this.getPrimaryColumn(valueColKey);\n    let foundColumn = null;\n    this.secondaryColumns.forEach((column) => {\n      const thisPivotKeys = column.getColDef().pivotKeys;\n      const pivotValueColumn = column.getColDef().pivotValueColumn;\n      const pivotKeyMatches = areEqual(thisPivotKeys, pivotKeys);\n      const pivotValueMatches = pivotValueColumn === valueColumnToFind;\n      if (pivotKeyMatches && pivotValueMatches) {\n        foundColumn = column;\n      }\n    });\n    return foundColumn;\n  }\n  setBeans(loggerFactory) {\n    this.logger = loggerFactory.create(\"columnModel\");\n  }\n  setFirstRightAndLastLeftPinned(source) {\n    let lastLeft;\n    let firstRight;\n    if (this.gos.get(\"enableRtl\")) {\n      lastLeft = this.displayedColumnsLeft ? this.displayedColumnsLeft[0] : null;\n      firstRight = this.displayedColumnsRight ? last(this.displayedColumnsRight) : null;\n    } else {\n      lastLeft = this.displayedColumnsLeft ? last(this.displayedColumnsLeft) : null;\n      firstRight = this.displayedColumnsRight ? this.displayedColumnsRight[0] : null;\n    }\n    this.gridColumns.forEach((column) => {\n      column.setLastLeftPinned(column === lastLeft, source);\n      column.setFirstRightPinned(column === firstRight, source);\n    });\n  }\n  autoSizeColumns(params) {\n    if (this.shouldQueueResizeOperations) {\n      this.resizeOperationQueue.push(() => this.autoSizeColumns(params));\n      return;\n    }\n    const { columns, skipHeader, skipHeaderGroups, stopAtGroup, source = \"api\" } = params;\n    this.animationFrameService.flushAllFrames();\n    const columnsAutosized = [];\n    let changesThisTimeAround = -1;\n    const shouldSkipHeader = skipHeader != null ? skipHeader : this.gos.get(\"skipHeaderOnAutoSize\");\n    const shouldSkipHeaderGroups = skipHeaderGroups != null ? skipHeaderGroups : shouldSkipHeader;\n    while (changesThisTimeAround !== 0) {\n      changesThisTimeAround = 0;\n      this.actionOnGridColumns(columns, (column) => {\n        if (columnsAutosized.indexOf(column) >= 0) {\n          return false;\n        }\n        const preferredWidth = this.autoWidthCalculator.getPreferredWidthForColumn(column, shouldSkipHeader);\n        if (preferredWidth > 0) {\n          const newWidth = this.normaliseColumnWidth(column, preferredWidth);\n          column.setActualWidth(newWidth, source);\n          columnsAutosized.push(column);\n          changesThisTimeAround++;\n        }\n        return true;\n      }, source);\n    }\n    if (!shouldSkipHeaderGroups) {\n      this.autoSizeColumnGroupsByColumns(columns, source, stopAtGroup);\n    }\n    this.dispatchColumnResizedEvent(columnsAutosized, true, \"autosizeColumns\");\n  }\n  dispatchColumnResizedEvent(columns, finished, source, flexColumns = null) {\n    if (columns && columns.length) {\n      const event = {\n        type: Events.EVENT_COLUMN_RESIZED,\n        columns,\n        column: columns.length === 1 ? columns[0] : null,\n        flexColumns,\n        finished,\n        source\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  dispatchColumnChangedEvent(type, columns, source) {\n    const event = {\n      type,\n      columns,\n      column: columns && columns.length == 1 ? columns[0] : null,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  dispatchColumnMovedEvent(params) {\n    const { movedColumns, source, toIndex, finished } = params;\n    const event = {\n      type: Events.EVENT_COLUMN_MOVED,\n      columns: movedColumns,\n      column: movedColumns && movedColumns.length === 1 ? movedColumns[0] : null,\n      toIndex,\n      finished,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  dispatchColumnPinnedEvent(changedColumns, source) {\n    if (!changedColumns.length) {\n      return;\n    }\n    const column = changedColumns.length === 1 ? changedColumns[0] : null;\n    const pinned = this.getCommonValue(changedColumns, (col) => col.getPinned());\n    const event = {\n      type: Events.EVENT_COLUMN_PINNED,\n      // mistake in typing, 'undefined' should be allowed, as 'null' means 'not pinned'\n      pinned: pinned != null ? pinned : null,\n      columns: changedColumns,\n      column,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  dispatchColumnVisibleEvent(changedColumns, source) {\n    if (!changedColumns.length) {\n      return;\n    }\n    const column = changedColumns.length === 1 ? changedColumns[0] : null;\n    const visible = this.getCommonValue(changedColumns, (col) => col.isVisible());\n    const event = {\n      type: Events.EVENT_COLUMN_VISIBLE,\n      visible,\n      columns: changedColumns,\n      column,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  autoSizeColumn(key, source, skipHeader) {\n    if (key) {\n      this.autoSizeColumns({ columns: [key], skipHeader, skipHeaderGroups: true, source });\n    }\n  }\n  autoSizeColumnGroupsByColumns(keys2, source, stopAtGroup) {\n    const columnGroups = /* @__PURE__ */ new Set();\n    const columns = this.getGridColumns(keys2);\n    columns.forEach((col) => {\n      let parent = col.getParent();\n      while (parent && parent != stopAtGroup) {\n        if (!parent.isPadding()) {\n          columnGroups.add(parent);\n        }\n        parent = parent.getParent();\n      }\n    });\n    let headerGroupCtrl;\n    const resizedColumns = [];\n    for (const columnGroup of columnGroups) {\n      for (const headerContainerCtrl of this.ctrlsService.getHeaderRowContainerCtrls()) {\n        headerGroupCtrl = headerContainerCtrl.getHeaderCtrlForColumn(columnGroup);\n        if (headerGroupCtrl) {\n          break;\n        }\n      }\n      if (headerGroupCtrl) {\n        headerGroupCtrl.resizeLeafColumnsToFit(source);\n      }\n    }\n    return resizedColumns;\n  }\n  autoSizeAllColumns(source, skipHeader) {\n    if (this.shouldQueueResizeOperations) {\n      this.resizeOperationQueue.push(() => this.autoSizeAllColumns(source, skipHeader));\n      return;\n    }\n    const allDisplayedColumns = this.getAllDisplayedColumns();\n    this.autoSizeColumns({ columns: allDisplayedColumns, skipHeader, source });\n  }\n  // Possible candidate for reuse (alot of recursive traversal duplication)\n  getColumnsFromTree(rootColumns) {\n    const result = [];\n    const recursiveFindColumns = (childColumns) => {\n      for (let i = 0; i < childColumns.length; i++) {\n        const child = childColumns[i];\n        if (child instanceof Column) {\n          result.push(child);\n        } else if (child instanceof ProvidedColumnGroup) {\n          recursiveFindColumns(child.getChildren());\n        }\n      }\n    };\n    recursiveFindColumns(rootColumns);\n    return result;\n  }\n  getAllDisplayedTrees() {\n    if (this.displayedTreeLeft && this.displayedTreeRight && this.displayedTreeCentre) {\n      return this.displayedTreeLeft.concat(this.displayedTreeCentre).concat(this.displayedTreeRight);\n    }\n    return null;\n  }\n  // + columnSelectPanel\n  getPrimaryColumnTree() {\n    return this.primaryColumnTree;\n  }\n  // + gridPanel -> for resizing the body and setting top margin\n  getHeaderRowCount() {\n    return this.gridHeaderRowCount;\n  }\n  // + headerRenderer -> setting pinned body width\n  getDisplayedTreeLeft() {\n    return this.displayedTreeLeft;\n  }\n  // + headerRenderer -> setting pinned body width\n  getDisplayedTreeRight() {\n    return this.displayedTreeRight;\n  }\n  // + headerRenderer -> setting pinned body width\n  getDisplayedTreeCentre() {\n    return this.displayedTreeCentre;\n  }\n  // gridPanel -> ensureColumnVisible\n  isColumnDisplayed(column) {\n    return this.getAllDisplayedColumns().indexOf(column) >= 0;\n  }\n  // + csvCreator\n  getAllDisplayedColumns() {\n    return this.displayedColumns;\n  }\n  getViewportColumns() {\n    return this.viewportColumns;\n  }\n  getDisplayedLeftColumnsForRow(rowNode) {\n    if (!this.colSpanActive) {\n      return this.displayedColumnsLeft;\n    }\n    return this.getDisplayedColumnsForRow(rowNode, this.displayedColumnsLeft);\n  }\n  getDisplayedRightColumnsForRow(rowNode) {\n    if (!this.colSpanActive) {\n      return this.displayedColumnsRight;\n    }\n    return this.getDisplayedColumnsForRow(rowNode, this.displayedColumnsRight);\n  }\n  isColSpanActive() {\n    return this.colSpanActive;\n  }\n  getDisplayedColumnsForRow(rowNode, displayedColumns, filterCallback, emptySpaceBeforeColumn) {\n    const result = [];\n    let lastConsideredCol = null;\n    for (let i = 0; i < displayedColumns.length; i++) {\n      const col = displayedColumns[i];\n      const maxAllowedColSpan = displayedColumns.length - i;\n      const colSpan = Math.min(col.getColSpan(rowNode), maxAllowedColSpan);\n      const columnsToCheckFilter = [col];\n      if (colSpan > 1) {\n        const colsToRemove = colSpan - 1;\n        for (let j = 1; j <= colsToRemove; j++) {\n          columnsToCheckFilter.push(displayedColumns[i + j]);\n        }\n        i += colsToRemove;\n      }\n      let filterPasses;\n      if (filterCallback) {\n        filterPasses = false;\n        columnsToCheckFilter.forEach((colForFilter) => {\n          if (filterCallback(colForFilter)) {\n            filterPasses = true;\n          }\n        });\n      } else {\n        filterPasses = true;\n      }\n      if (filterPasses) {\n        if (result.length === 0 && lastConsideredCol) {\n          const gapBeforeColumn = emptySpaceBeforeColumn ? emptySpaceBeforeColumn(col) : false;\n          if (gapBeforeColumn) {\n            result.push(lastConsideredCol);\n          }\n        }\n        result.push(col);\n      }\n      lastConsideredCol = col;\n    }\n    return result;\n  }\n  // + rowRenderer\n  // if we are not column spanning, this just returns back the virtual centre columns,\n  // however if we are column spanning, then different rows can have different virtual\n  // columns, so we have to work out the list for each individual row.\n  getViewportCenterColumnsForRow(rowNode) {\n    if (!this.colSpanActive) {\n      return this.viewportColumnsCenter;\n    }\n    const emptySpaceBeforeColumn = (col) => {\n      const left = col.getLeft();\n      return exists(left) && left > this.viewportLeft;\n    };\n    const filterCallback = this.isColumnVirtualisationSuppressed() ? null : this.isColumnInRowViewport.bind(this);\n    return this.getDisplayedColumnsForRow(\n      rowNode,\n      this.displayedColumnsCenter,\n      filterCallback,\n      emptySpaceBeforeColumn\n    );\n  }\n  isColumnAtEdge(col, edge) {\n    const allColumns = this.getAllDisplayedColumns();\n    if (!allColumns.length) {\n      return false;\n    }\n    const isFirst = edge === \"first\";\n    let columnToCompare;\n    if (col instanceof ColumnGroup) {\n      const leafColumns = col.getDisplayedLeafColumns();\n      if (!leafColumns.length) {\n        return false;\n      }\n      columnToCompare = isFirst ? leafColumns[0] : last(leafColumns);\n    } else {\n      columnToCompare = col;\n    }\n    return (isFirst ? allColumns[0] : last(allColumns)) === columnToCompare;\n  }\n  getAriaColumnIndex(col) {\n    let targetColumn;\n    if (col instanceof ColumnGroup) {\n      targetColumn = col.getLeafColumns()[0];\n    } else {\n      targetColumn = col;\n    }\n    return this.ariaOrderColumns.indexOf(targetColumn) + 1;\n  }\n  isColumnInHeaderViewport(col) {\n    if (col.isAutoHeaderHeight()) {\n      return true;\n    }\n    return this.isColumnInRowViewport(col);\n  }\n  isColumnInRowViewport(col) {\n    if (col.isAutoHeight()) {\n      return true;\n    }\n    const columnLeft = col.getLeft() || 0;\n    const columnRight = columnLeft + col.getActualWidth();\n    const leftBounds = this.viewportLeft - 200;\n    const rightBounds = this.viewportRight + 200;\n    const columnToMuchLeft = columnLeft < leftBounds && columnRight < leftBounds;\n    const columnToMuchRight = columnLeft > rightBounds && columnRight > rightBounds;\n    return !columnToMuchLeft && !columnToMuchRight;\n  }\n  // used by:\n  // + angularGrid -> setting pinned body width\n  // note: this should be cached\n  getDisplayedColumnsLeftWidth() {\n    return this.getWidthOfColsInList(this.displayedColumnsLeft);\n  }\n  // note: this should be cached\n  getDisplayedColumnsRightWidth() {\n    return this.getWidthOfColsInList(this.displayedColumnsRight);\n  }\n  updatePrimaryColumnList(keys2, masterList, actionIsAdd, columnCallback, eventType, source) {\n    if (!keys2 || missingOrEmpty(keys2)) {\n      return;\n    }\n    let atLeastOne = false;\n    keys2.forEach((key) => {\n      if (!key) {\n        return;\n      }\n      const columnToAdd = this.getPrimaryColumn(key);\n      if (!columnToAdd) {\n        return;\n      }\n      if (actionIsAdd) {\n        if (masterList.indexOf(columnToAdd) >= 0) {\n          return;\n        }\n        masterList.push(columnToAdd);\n      } else {\n        if (masterList.indexOf(columnToAdd) < 0) {\n          return;\n        }\n        removeFromArray(masterList, columnToAdd);\n      }\n      columnCallback(columnToAdd);\n      atLeastOne = true;\n    });\n    if (!atLeastOne) {\n      return;\n    }\n    if (this.autoGroupsNeedBuilding) {\n      this.updateGridColumns();\n    }\n    this.updateDisplayedColumns(source);\n    const event = {\n      type: eventType,\n      columns: masterList,\n      column: masterList.length === 1 ? masterList[0] : null,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  setRowGroupColumns(colKeys, source) {\n    this.autoGroupsNeedBuilding = true;\n    this.setPrimaryColumnList(\n      colKeys,\n      this.rowGroupColumns,\n      Events.EVENT_COLUMN_ROW_GROUP_CHANGED,\n      true,\n      this.setRowGroupActive.bind(this),\n      source\n    );\n  }\n  setRowGroupActive(active, column, source) {\n    if (active === column.isRowGroupActive()) {\n      return;\n    }\n    column.setRowGroupActive(active, source);\n    if (active && !this.gos.get(\"suppressRowGroupHidesColumns\")) {\n      this.setColumnsVisible([column], false, source);\n    }\n    if (!active && !this.gos.get(\"suppressMakeColumnVisibleAfterUnGroup\")) {\n      this.setColumnsVisible([column], true, source);\n    }\n  }\n  addRowGroupColumns(keys2, source) {\n    this.autoGroupsNeedBuilding = true;\n    this.updatePrimaryColumnList(\n      keys2,\n      this.rowGroupColumns,\n      true,\n      this.setRowGroupActive.bind(this, true),\n      Events.EVENT_COLUMN_ROW_GROUP_CHANGED,\n      source\n    );\n  }\n  removeRowGroupColumns(keys2, source) {\n    this.autoGroupsNeedBuilding = true;\n    this.updatePrimaryColumnList(\n      keys2,\n      this.rowGroupColumns,\n      false,\n      this.setRowGroupActive.bind(this, false),\n      Events.EVENT_COLUMN_ROW_GROUP_CHANGED,\n      source\n    );\n  }\n  addPivotColumns(keys2, source) {\n    this.updatePrimaryColumnList(\n      keys2,\n      this.pivotColumns,\n      true,\n      (column) => column.setPivotActive(true, source),\n      Events.EVENT_COLUMN_PIVOT_CHANGED,\n      source\n    );\n  }\n  setPivotColumns(colKeys, source) {\n    this.setPrimaryColumnList(\n      colKeys,\n      this.pivotColumns,\n      Events.EVENT_COLUMN_PIVOT_CHANGED,\n      true,\n      (added, column) => {\n        column.setPivotActive(added, source);\n      },\n      source\n    );\n  }\n  removePivotColumns(keys2, source) {\n    this.updatePrimaryColumnList(\n      keys2,\n      this.pivotColumns,\n      false,\n      (column) => column.setPivotActive(false, source),\n      Events.EVENT_COLUMN_PIVOT_CHANGED,\n      source\n    );\n  }\n  setPrimaryColumnList(colKeys, masterList, eventName, detectOrderChange, columnCallback, source) {\n    if (!this.gridColumns) {\n      return;\n    }\n    const changes = /* @__PURE__ */ new Map();\n    masterList.forEach((col, idx) => changes.set(col, idx));\n    masterList.length = 0;\n    if (exists(colKeys)) {\n      colKeys.forEach((key) => {\n        const column = this.getPrimaryColumn(key);\n        if (column) {\n          masterList.push(column);\n        }\n      });\n    }\n    masterList.forEach((col, idx) => {\n      const oldIndex = changes.get(col);\n      if (oldIndex === void 0) {\n        changes.set(col, 0);\n        return;\n      }\n      if (detectOrderChange && oldIndex !== idx) {\n        return;\n      }\n      changes.delete(col);\n    });\n    (this.primaryColumns || []).forEach((column) => {\n      const added = masterList.indexOf(column) >= 0;\n      columnCallback(added, column);\n    });\n    if (this.autoGroupsNeedBuilding) {\n      this.updateGridColumns();\n    }\n    this.updateDisplayedColumns(source);\n    this.dispatchColumnChangedEvent(eventName, [...changes.keys()], source);\n  }\n  setValueColumns(colKeys, source) {\n    this.setPrimaryColumnList(\n      colKeys,\n      this.valueColumns,\n      Events.EVENT_COLUMN_VALUE_CHANGED,\n      false,\n      this.setValueActive.bind(this),\n      source\n    );\n  }\n  setValueActive(active, column, source) {\n    if (active === column.isValueActive()) {\n      return;\n    }\n    column.setValueActive(active, source);\n    if (active && !column.getAggFunc() && this.aggFuncService) {\n      const initialAggFunc = this.aggFuncService.getDefaultAggFunc(column);\n      column.setAggFunc(initialAggFunc);\n    }\n  }\n  addValueColumns(keys2, source) {\n    this.updatePrimaryColumnList(\n      keys2,\n      this.valueColumns,\n      true,\n      this.setValueActive.bind(this, true),\n      Events.EVENT_COLUMN_VALUE_CHANGED,\n      source\n    );\n  }\n  removeValueColumns(keys2, source) {\n    this.updatePrimaryColumnList(\n      keys2,\n      this.valueColumns,\n      false,\n      this.setValueActive.bind(this, false),\n      Events.EVENT_COLUMN_VALUE_CHANGED,\n      source\n    );\n  }\n  // returns the width we can set to this col, taking into consideration min and max widths\n  normaliseColumnWidth(column, newWidth) {\n    const minWidth = column.getMinWidth();\n    if (exists(minWidth) && newWidth < minWidth) {\n      newWidth = minWidth;\n    }\n    const maxWidth = column.getMaxWidth();\n    if (exists(maxWidth) && column.isGreaterThanMax(newWidth)) {\n      newWidth = maxWidth;\n    }\n    return newWidth;\n  }\n  getPrimaryOrGridColumn(key) {\n    const column = this.getPrimaryColumn(key);\n    return column || this.getGridColumn(key);\n  }\n  setColumnWidths(columnWidths, shiftKey, finished, source) {\n    const sets = [];\n    columnWidths.forEach((columnWidth) => {\n      const col = this.getPrimaryOrGridColumn(columnWidth.key);\n      if (!col) {\n        return;\n      }\n      sets.push({\n        width: columnWidth.newWidth,\n        ratios: [1],\n        columns: [col]\n      });\n      const defaultIsShift = this.gos.get(\"colResizeDefault\") === \"shift\";\n      if (defaultIsShift) {\n        shiftKey = !shiftKey;\n      }\n      if (shiftKey) {\n        const otherCol = this.getDisplayedColAfter(col);\n        if (!otherCol) {\n          return;\n        }\n        const widthDiff = col.getActualWidth() - columnWidth.newWidth;\n        const otherColWidth = otherCol.getActualWidth() + widthDiff;\n        sets.push({\n          width: otherColWidth,\n          ratios: [1],\n          columns: [otherCol]\n        });\n      }\n    });\n    if (sets.length === 0) {\n      return;\n    }\n    this.resizeColumnSets({\n      resizeSets: sets,\n      finished,\n      source\n    });\n  }\n  checkMinAndMaxWidthsForSet(columnResizeSet) {\n    const { columns, width } = columnResizeSet;\n    let minWidthAccumulated = 0;\n    let maxWidthAccumulated = 0;\n    let maxWidthActive = true;\n    columns.forEach((col) => {\n      const minWidth = col.getMinWidth();\n      minWidthAccumulated += minWidth || 0;\n      const maxWidth = col.getMaxWidth();\n      if (exists(maxWidth) && maxWidth > 0) {\n        maxWidthAccumulated += maxWidth;\n      } else {\n        maxWidthActive = false;\n      }\n    });\n    const minWidthPasses = width >= minWidthAccumulated;\n    const maxWidthPasses = !maxWidthActive || width <= maxWidthAccumulated;\n    return minWidthPasses && maxWidthPasses;\n  }\n  // method takes sets of columns and resizes them. either all sets will be resized, or nothing\n  // be resized. this is used for example when user tries to resize a group and holds shift key,\n  // then both the current group (grows), and the adjacent group (shrinks), will get resized,\n  // so that's two sets for this method.\n  resizeColumnSets(params) {\n    const { resizeSets, finished, source } = params;\n    const passMinMaxCheck = !resizeSets || resizeSets.every((columnResizeSet) => this.checkMinAndMaxWidthsForSet(columnResizeSet));\n    if (!passMinMaxCheck) {\n      if (finished) {\n        const columns = resizeSets && resizeSets.length > 0 ? resizeSets[0].columns : null;\n        this.dispatchColumnResizedEvent(columns, finished, source);\n      }\n      return;\n    }\n    const changedCols = [];\n    const allResizedCols = [];\n    resizeSets.forEach((set) => {\n      const { width, columns, ratios } = set;\n      const newWidths = {};\n      const finishedCols = {};\n      columns.forEach((col) => allResizedCols.push(col));\n      let finishedColsGrew = true;\n      let loopCount = 0;\n      while (finishedColsGrew) {\n        loopCount++;\n        if (loopCount > 1e3) {\n          console.error(\"AG Grid: infinite loop in resizeColumnSets\");\n          break;\n        }\n        finishedColsGrew = false;\n        const subsetCols = [];\n        let subsetRatioTotal = 0;\n        let pixelsToDistribute = width;\n        columns.forEach((col, index) => {\n          const thisColFinished = finishedCols[col.getId()];\n          if (thisColFinished) {\n            pixelsToDistribute -= newWidths[col.getId()];\n          } else {\n            subsetCols.push(col);\n            const ratioThisCol = ratios[index];\n            subsetRatioTotal += ratioThisCol;\n          }\n        });\n        const ratioScale = 1 / subsetRatioTotal;\n        subsetCols.forEach((col, index) => {\n          const lastCol = index === subsetCols.length - 1;\n          let colNewWidth;\n          if (lastCol) {\n            colNewWidth = pixelsToDistribute;\n          } else {\n            colNewWidth = Math.round(ratios[index] * width * ratioScale);\n            pixelsToDistribute -= colNewWidth;\n          }\n          const minWidth = col.getMinWidth();\n          const maxWidth = col.getMaxWidth();\n          if (exists(minWidth) && colNewWidth < minWidth) {\n            colNewWidth = minWidth;\n            finishedCols[col.getId()] = true;\n            finishedColsGrew = true;\n          } else if (exists(maxWidth) && maxWidth > 0 && colNewWidth > maxWidth) {\n            colNewWidth = maxWidth;\n            finishedCols[col.getId()] = true;\n            finishedColsGrew = true;\n          }\n          newWidths[col.getId()] = colNewWidth;\n        });\n      }\n      columns.forEach((col) => {\n        const newWidth = newWidths[col.getId()];\n        const actualWidth = col.getActualWidth();\n        if (actualWidth !== newWidth) {\n          col.setActualWidth(newWidth, source);\n          changedCols.push(col);\n        }\n      });\n    });\n    const atLeastOneColChanged = changedCols.length > 0;\n    let flexedCols = [];\n    if (atLeastOneColChanged) {\n      flexedCols = this.refreshFlexedColumns({ resizingCols: allResizedCols, skipSetLeft: true });\n      this.setLeftValues(source);\n      this.updateBodyWidths();\n      this.checkViewportColumns();\n    }\n    const colsForEvent = allResizedCols.concat(flexedCols);\n    if (atLeastOneColChanged || finished) {\n      this.dispatchColumnResizedEvent(colsForEvent, finished, source, flexedCols);\n    }\n  }\n  setColumnAggFunc(key, aggFunc, source) {\n    if (!key) {\n      return;\n    }\n    const column = this.getPrimaryColumn(key);\n    if (!column) {\n      return;\n    }\n    column.setAggFunc(aggFunc);\n    this.dispatchColumnChangedEvent(Events.EVENT_COLUMN_VALUE_CHANGED, [column], source);\n  }\n  moveRowGroupColumn(fromIndex, toIndex, source) {\n    if (this.isRowGroupEmpty()) {\n      return;\n    }\n    const column = this.rowGroupColumns[fromIndex];\n    const impactedColumns = this.rowGroupColumns.slice(fromIndex, toIndex);\n    this.rowGroupColumns.splice(fromIndex, 1);\n    this.rowGroupColumns.splice(toIndex, 0, column);\n    const event = {\n      type: Events.EVENT_COLUMN_ROW_GROUP_CHANGED,\n      columns: impactedColumns,\n      column: impactedColumns.length === 1 ? impactedColumns[0] : null,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  moveColumns(columnsToMoveKeys, toIndex, source, finished = true) {\n    if (!this.gridColumns) {\n      return;\n    }\n    this.columnAnimationService.start();\n    if (toIndex > this.gridColumns.length - columnsToMoveKeys.length) {\n      console.warn(\"AG Grid: tried to insert columns in invalid location, toIndex = \" + toIndex);\n      console.warn(\"AG Grid: remember that you should not count the moving columns when calculating the new index\");\n      return;\n    }\n    const movedColumns = this.getGridColumns(columnsToMoveKeys);\n    const failedRules = !this.doesMovePassRules(movedColumns, toIndex);\n    if (failedRules) {\n      return;\n    }\n    moveInArray(this.gridColumns, movedColumns, toIndex);\n    this.updateDisplayedColumns(source);\n    this.dispatchColumnMovedEvent({ movedColumns, source, toIndex, finished });\n    this.columnAnimationService.finish();\n  }\n  doesMovePassRules(columnsToMove, toIndex) {\n    const proposedColumnOrder = this.getProposedColumnOrder(columnsToMove, toIndex);\n    return this.doesOrderPassRules(proposedColumnOrder);\n  }\n  doesOrderPassRules(gridOrder) {\n    if (!this.doesMovePassMarryChildren(gridOrder)) {\n      return false;\n    }\n    if (!this.doesMovePassLockedPositions(gridOrder)) {\n      return false;\n    }\n    return true;\n  }\n  getProposedColumnOrder(columnsToMove, toIndex) {\n    const proposedColumnOrder = this.gridColumns.slice();\n    moveInArray(proposedColumnOrder, columnsToMove, toIndex);\n    return proposedColumnOrder;\n  }\n  // returns the provided cols sorted in same order as they appear in grid columns. eg if grid columns\n  // contains [a,b,c,d,e] and col passed is [e,a] then the passed cols are sorted into [a,e]\n  sortColumnsLikeGridColumns(cols) {\n    if (!cols || cols.length <= 1) {\n      return;\n    }\n    const notAllColsInGridColumns = cols.filter((c) => this.gridColumns.indexOf(c) < 0).length > 0;\n    if (notAllColsInGridColumns) {\n      return;\n    }\n    cols.sort((a, b) => {\n      const indexA = this.gridColumns.indexOf(a);\n      const indexB = this.gridColumns.indexOf(b);\n      return indexA - indexB;\n    });\n  }\n  doesMovePassLockedPositions(proposedColumnOrder) {\n    let lastPlacement = 0;\n    let rulePassed = true;\n    const lockPositionToPlacement = (position) => {\n      if (!position) {\n        return 1;\n      }\n      if (position === true) {\n        return 0;\n      }\n      return position === \"left\" ? 0 : 2;\n    };\n    proposedColumnOrder.forEach((col) => {\n      const placement = lockPositionToPlacement(col.getColDef().lockPosition);\n      if (placement < lastPlacement) {\n        rulePassed = false;\n      }\n      lastPlacement = placement;\n    });\n    return rulePassed;\n  }\n  doesMovePassMarryChildren(allColumnsCopy) {\n    let rulePassed = true;\n    depthFirstOriginalTreeSearch(null, this.gridBalancedTree, (child) => {\n      if (!(child instanceof ProvidedColumnGroup)) {\n        return;\n      }\n      const columnGroup = child;\n      const colGroupDef = columnGroup.getColGroupDef();\n      const marryChildren = colGroupDef && colGroupDef.marryChildren;\n      if (!marryChildren) {\n        return;\n      }\n      const newIndexes = [];\n      columnGroup.getLeafColumns().forEach((col) => {\n        const newColIndex = allColumnsCopy.indexOf(col);\n        newIndexes.push(newColIndex);\n      });\n      const maxIndex = Math.max.apply(Math, newIndexes);\n      const minIndex = Math.min.apply(Math, newIndexes);\n      const spread = maxIndex - minIndex;\n      const maxSpread = columnGroup.getLeafColumns().length - 1;\n      if (spread > maxSpread) {\n        rulePassed = false;\n      }\n    });\n    return rulePassed;\n  }\n  moveColumnByIndex(fromIndex, toIndex, source) {\n    if (!this.gridColumns) {\n      return;\n    }\n    const column = this.gridColumns[fromIndex];\n    this.moveColumns([column], toIndex, source);\n  }\n  getColumnDefs() {\n    if (!this.primaryColumns) {\n      return;\n    }\n    const cols = this.primaryColumns.slice();\n    if (this.gridColsArePrimary) {\n      cols.sort((a, b) => this.gridColumns.indexOf(a) - this.gridColumns.indexOf(b));\n    } else if (this.lastPrimaryOrder) {\n      cols.sort((a, b) => this.lastPrimaryOrder.indexOf(a) - this.lastPrimaryOrder.indexOf(b));\n    }\n    return this.columnDefFactory.buildColumnDefs(cols, this.rowGroupColumns, this.pivotColumns);\n  }\n  // used by:\n  // + angularGrid -> for setting body width\n  // + rowController -> setting main row widths (when inserting and resizing)\n  // need to cache this\n  getBodyContainerWidth() {\n    return this.bodyWidth;\n  }\n  getContainerWidth(pinned) {\n    switch (pinned) {\n      case \"left\":\n        return this.leftWidth;\n      case \"right\":\n        return this.rightWidth;\n      default:\n        return this.bodyWidth;\n    }\n  }\n  // after setColumnWidth or updateGroupsAndDisplayedColumns\n  updateBodyWidths() {\n    const newBodyWidth = this.getWidthOfColsInList(this.displayedColumnsCenter);\n    const newLeftWidth = this.getWidthOfColsInList(this.displayedColumnsLeft);\n    const newRightWidth = this.getWidthOfColsInList(this.displayedColumnsRight);\n    this.bodyWidthDirty = this.bodyWidth !== newBodyWidth;\n    const atLeastOneChanged = this.bodyWidth !== newBodyWidth || this.leftWidth !== newLeftWidth || this.rightWidth !== newRightWidth;\n    if (atLeastOneChanged) {\n      this.bodyWidth = newBodyWidth;\n      this.leftWidth = newLeftWidth;\n      this.rightWidth = newRightWidth;\n      const evt = {\n        type: Events.EVENT_COLUMN_CONTAINER_WIDTH_CHANGED\n      };\n      this.eventService.dispatchEvent(evt);\n      const event = {\n        type: Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  // + rowController\n  getValueColumns() {\n    return this.valueColumns ? this.valueColumns : [];\n  }\n  // + rowController\n  getPivotColumns() {\n    return this.pivotColumns ? this.pivotColumns : [];\n  }\n  // + clientSideRowModel\n  isPivotActive() {\n    return this.pivotColumns && this.pivotColumns.length > 0 && this.pivotMode;\n  }\n  // + toolPanel\n  getRowGroupColumns() {\n    return this.rowGroupColumns ? this.rowGroupColumns : [];\n  }\n  // + rowController -> while inserting rows\n  getDisplayedCenterColumns() {\n    return this.displayedColumnsCenter;\n  }\n  // + rowController -> while inserting rows\n  getDisplayedLeftColumns() {\n    return this.displayedColumnsLeft;\n  }\n  getDisplayedRightColumns() {\n    return this.displayedColumnsRight;\n  }\n  // used by:\n  // + clientSideRowController -> sorting, building quick filter text\n  // + headerRenderer -> sorting (clearing icon)\n  getAllPrimaryColumns() {\n    return this.primaryColumns ? this.primaryColumns : null;\n  }\n  getSecondaryColumns() {\n    return this.secondaryColumns ? this.secondaryColumns : null;\n  }\n  getAllColumnsForQuickFilter() {\n    return this.columnsForQuickFilter;\n  }\n  // + moveColumnController\n  getAllGridColumns() {\n    var _a;\n    return (_a = this.gridColumns) != null ? _a : [];\n  }\n  isRowGroupEmpty() {\n    return missingOrEmpty(this.rowGroupColumns);\n  }\n  setColumnsVisible(keys2, visible = false, source) {\n    this.applyColumnState({\n      state: keys2.map(\n        (key) => ({\n          colId: typeof key === \"string\" ? key : key.getColId(),\n          hide: !visible\n        })\n      )\n    }, source);\n  }\n  setColumnsPinned(keys2, pinned, source) {\n    if (!this.gridColumns) {\n      return;\n    }\n    if (this.gos.isDomLayout(\"print\")) {\n      console.warn(`AG Grid: Changing the column pinning status is not allowed with domLayout='print'`);\n      return;\n    }\n    this.columnAnimationService.start();\n    let actualPinned;\n    if (pinned === true || pinned === \"left\") {\n      actualPinned = \"left\";\n    } else if (pinned === \"right\") {\n      actualPinned = \"right\";\n    } else {\n      actualPinned = null;\n    }\n    this.actionOnGridColumns(keys2, (col) => {\n      if (col.getPinned() !== actualPinned) {\n        col.setPinned(actualPinned);\n        return true;\n      }\n      return false;\n    }, source, () => {\n      const event = {\n        type: Events.EVENT_COLUMN_PINNED,\n        pinned: actualPinned,\n        column: null,\n        columns: null,\n        source\n      };\n      return event;\n    });\n    this.columnAnimationService.finish();\n  }\n  // does an action on a set of columns. provides common functionality for looking up the\n  // columns based on key, getting a list of effected columns, and then updated the event\n  // with either one column (if it was just one col) or a list of columns\n  // used by: autoResize, setVisible, setPinned\n  actionOnGridColumns(keys2, action, source, createEvent) {\n    if (missingOrEmpty(keys2)) {\n      return;\n    }\n    const updatedColumns = [];\n    keys2.forEach((key) => {\n      if (!key) {\n        return;\n      }\n      const column = this.getGridColumn(key);\n      if (!column) {\n        return;\n      }\n      const resultOfAction = action(column);\n      if (resultOfAction !== false) {\n        updatedColumns.push(column);\n      }\n    });\n    if (!updatedColumns.length) {\n      return;\n    }\n    this.updateDisplayedColumns(source);\n    if (exists(createEvent) && createEvent) {\n      const event = createEvent();\n      event.columns = updatedColumns;\n      event.column = updatedColumns.length === 1 ? updatedColumns[0] : null;\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  getDisplayedColBefore(col) {\n    const allDisplayedColumns = this.getAllDisplayedColumns();\n    const oldIndex = allDisplayedColumns.indexOf(col);\n    if (oldIndex > 0) {\n      return allDisplayedColumns[oldIndex - 1];\n    }\n    return null;\n  }\n  // used by:\n  // + rowRenderer -> for navigation\n  getDisplayedColAfter(col) {\n    const allDisplayedColumns = this.getAllDisplayedColumns();\n    const oldIndex = allDisplayedColumns.indexOf(col);\n    if (oldIndex < allDisplayedColumns.length - 1) {\n      return allDisplayedColumns[oldIndex + 1];\n    }\n    return null;\n  }\n  getDisplayedGroupAtDirection(columnGroup, direction) {\n    const requiredLevel = columnGroup.getProvidedColumnGroup().getLevel() + columnGroup.getPaddingLevel();\n    const colGroupLeafColumns = columnGroup.getDisplayedLeafColumns();\n    const col = direction === \"After\" ? last(colGroupLeafColumns) : colGroupLeafColumns[0];\n    const getDisplayColMethod = `getDisplayedCol${direction}`;\n    while (true) {\n      const column = this[getDisplayColMethod](col);\n      if (!column) {\n        return null;\n      }\n      const groupPointer = this.getColumnGroupAtLevel(column, requiredLevel);\n      if (groupPointer !== columnGroup) {\n        return groupPointer;\n      }\n    }\n  }\n  getColumnGroupAtLevel(column, level) {\n    let groupPointer = column.getParent();\n    let originalGroupLevel;\n    let groupPointerLevel;\n    while (true) {\n      const groupPointerProvidedColumnGroup = groupPointer.getProvidedColumnGroup();\n      originalGroupLevel = groupPointerProvidedColumnGroup.getLevel();\n      groupPointerLevel = groupPointer.getPaddingLevel();\n      if (originalGroupLevel + groupPointerLevel <= level) {\n        break;\n      }\n      groupPointer = groupPointer.getParent();\n    }\n    return groupPointer;\n  }\n  isPinningLeft() {\n    return this.displayedColumnsLeft.length > 0;\n  }\n  isPinningRight() {\n    return this.displayedColumnsRight.length > 0;\n  }\n  getPrimaryAndSecondaryAndAutoColumns() {\n    return [].concat(...[\n      this.primaryColumns || [],\n      this.groupAutoColumns || [],\n      this.secondaryColumns || []\n    ]);\n  }\n  createStateItemFromColumn(column) {\n    const rowGroupIndex = column.isRowGroupActive() ? this.rowGroupColumns.indexOf(column) : null;\n    const pivotIndex = column.isPivotActive() ? this.pivotColumns.indexOf(column) : null;\n    const aggFunc = column.isValueActive() ? column.getAggFunc() : null;\n    const sort = column.getSort() != null ? column.getSort() : null;\n    const sortIndex = column.getSortIndex() != null ? column.getSortIndex() : null;\n    const flex = column.getFlex() != null && column.getFlex() > 0 ? column.getFlex() : null;\n    const res = {\n      colId: column.getColId(),\n      width: column.getActualWidth(),\n      hide: !column.isVisible(),\n      pinned: column.getPinned(),\n      sort,\n      sortIndex,\n      aggFunc,\n      rowGroup: column.isRowGroupActive(),\n      rowGroupIndex,\n      pivot: column.isPivotActive(),\n      pivotIndex,\n      flex\n    };\n    return res;\n  }\n  getColumnState() {\n    if (missing(this.primaryColumns) || !this.isAlive()) {\n      return [];\n    }\n    const colsForState = this.getPrimaryAndSecondaryAndAutoColumns();\n    const res = colsForState.map(this.createStateItemFromColumn.bind(this));\n    this.orderColumnStateList(res);\n    return res;\n  }\n  orderColumnStateList(columnStateList) {\n    const colIdToGridIndexMap = convertToMap(this.gridColumns.map((col, index) => [col.getColId(), index]));\n    columnStateList.sort((itemA, itemB) => {\n      const posA = colIdToGridIndexMap.has(itemA.colId) ? colIdToGridIndexMap.get(itemA.colId) : -1;\n      const posB = colIdToGridIndexMap.has(itemB.colId) ? colIdToGridIndexMap.get(itemB.colId) : -1;\n      return posA - posB;\n    });\n  }\n  resetColumnState(source) {\n    if (missingOrEmpty(this.primaryColumns)) {\n      return;\n    }\n    const primaryColumns = this.getColumnsFromTree(this.primaryColumnTree);\n    const columnStates = [];\n    let letRowGroupIndex = 1e3;\n    let letPivotIndex = 1e3;\n    let colsToProcess = [];\n    if (this.groupAutoColumns) {\n      colsToProcess = colsToProcess.concat(this.groupAutoColumns);\n    }\n    if (primaryColumns) {\n      colsToProcess = colsToProcess.concat(primaryColumns);\n    }\n    colsToProcess.forEach((column) => {\n      const stateItem = this.getColumnStateFromColDef(column);\n      if (missing(stateItem.rowGroupIndex) && stateItem.rowGroup) {\n        stateItem.rowGroupIndex = letRowGroupIndex++;\n      }\n      if (missing(stateItem.pivotIndex) && stateItem.pivot) {\n        stateItem.pivotIndex = letPivotIndex++;\n      }\n      columnStates.push(stateItem);\n    });\n    this.applyColumnState({ state: columnStates, applyOrder: true }, source);\n  }\n  getColumnStateFromColDef(column) {\n    const getValueOrNull = (a, b) => a != null ? a : b != null ? b : null;\n    const colDef = column.getColDef();\n    const sort = getValueOrNull(colDef.sort, colDef.initialSort);\n    const sortIndex = getValueOrNull(colDef.sortIndex, colDef.initialSortIndex);\n    const hide = getValueOrNull(colDef.hide, colDef.initialHide);\n    const pinned = getValueOrNull(colDef.pinned, colDef.initialPinned);\n    const width = getValueOrNull(colDef.width, colDef.initialWidth);\n    const flex = getValueOrNull(colDef.flex, colDef.initialFlex);\n    let rowGroupIndex = getValueOrNull(colDef.rowGroupIndex, colDef.initialRowGroupIndex);\n    let rowGroup = getValueOrNull(colDef.rowGroup, colDef.initialRowGroup);\n    if (rowGroupIndex == null && (rowGroup == null || rowGroup == false)) {\n      rowGroupIndex = null;\n      rowGroup = null;\n    }\n    let pivotIndex = getValueOrNull(colDef.pivotIndex, colDef.initialPivotIndex);\n    let pivot = getValueOrNull(colDef.pivot, colDef.initialPivot);\n    if (pivotIndex == null && (pivot == null || pivot == false)) {\n      pivotIndex = null;\n      pivot = null;\n    }\n    const aggFunc = getValueOrNull(colDef.aggFunc, colDef.initialAggFunc);\n    return {\n      colId: column.getColId(),\n      sort,\n      sortIndex,\n      hide,\n      pinned,\n      width,\n      flex,\n      rowGroup,\n      rowGroupIndex,\n      pivot,\n      pivotIndex,\n      aggFunc\n    };\n  }\n  applyColumnState(params, source) {\n    if (missingOrEmpty(this.primaryColumns)) {\n      return false;\n    }\n    if (params && params.state && !params.state.forEach) {\n      console.warn(\"AG Grid: applyColumnState() - the state attribute should be an array, however an array was not found. Please provide an array of items (one for each col you want to change) for state.\");\n      return false;\n    }\n    const applyStates = (states, existingColumns, getById) => {\n      const dispatchEventsFunc = this.compareColumnStatesAndDispatchEvents(source);\n      this.autoGroupsNeedBuilding = true;\n      const columnsWithNoState = existingColumns.slice();\n      const rowGroupIndexes = {};\n      const pivotIndexes = {};\n      const autoGroupColumnStates = [];\n      const unmatchedAndAutoStates2 = [];\n      let unmatchedCount2 = 0;\n      const previousRowGroupCols = this.rowGroupColumns.slice();\n      const previousPivotCols = this.pivotColumns.slice();\n      states.forEach((state) => {\n        const colId = state.colId || \"\";\n        const isAutoGroupColumn = colId.startsWith(GROUP_AUTO_COLUMN_ID);\n        if (isAutoGroupColumn) {\n          autoGroupColumnStates.push(state);\n          unmatchedAndAutoStates2.push(state);\n          return;\n        }\n        const column = getById(colId);\n        if (!column) {\n          unmatchedAndAutoStates2.push(state);\n          unmatchedCount2 += 1;\n        } else {\n          this.syncColumnWithStateItem(\n            column,\n            state,\n            params.defaultState,\n            rowGroupIndexes,\n            pivotIndexes,\n            false,\n            source\n          );\n          removeFromArray(columnsWithNoState, column);\n        }\n      });\n      const applyDefaultsFunc = (col) => this.syncColumnWithStateItem(\n        col,\n        null,\n        params.defaultState,\n        rowGroupIndexes,\n        pivotIndexes,\n        false,\n        source\n      );\n      columnsWithNoState.forEach(applyDefaultsFunc);\n      const comparator = (indexes, oldList, colA, colB) => {\n        const indexA = indexes[colA.getId()];\n        const indexB = indexes[colB.getId()];\n        const aHasIndex = indexA != null;\n        const bHasIndex = indexB != null;\n        if (aHasIndex && bHasIndex) {\n          return indexA - indexB;\n        }\n        if (aHasIndex) {\n          return -1;\n        }\n        if (bHasIndex) {\n          return 1;\n        }\n        const oldIndexA = oldList.indexOf(colA);\n        const oldIndexB = oldList.indexOf(colB);\n        const aHasOldIndex = oldIndexA >= 0;\n        const bHasOldIndex = oldIndexB >= 0;\n        if (aHasOldIndex && bHasOldIndex) {\n          return oldIndexA - oldIndexB;\n        }\n        if (aHasOldIndex) {\n          return -1;\n        }\n        return 1;\n      };\n      this.rowGroupColumns.sort(comparator.bind(this, rowGroupIndexes, previousRowGroupCols));\n      this.pivotColumns.sort(comparator.bind(this, pivotIndexes, previousPivotCols));\n      this.updateGridColumns();\n      const autoGroupColsCopy = this.groupAutoColumns ? this.groupAutoColumns.slice() : [];\n      autoGroupColumnStates.forEach((stateItem) => {\n        const autoCol = this.getAutoColumn(stateItem.colId);\n        removeFromArray(autoGroupColsCopy, autoCol);\n        this.syncColumnWithStateItem(autoCol, stateItem, params.defaultState, null, null, true, source);\n      });\n      autoGroupColsCopy.forEach(applyDefaultsFunc);\n      this.applyOrderAfterApplyState(params);\n      this.updateDisplayedColumns(source);\n      this.dispatchEverythingChanged(source);\n      dispatchEventsFunc();\n      return { unmatchedAndAutoStates: unmatchedAndAutoStates2, unmatchedCount: unmatchedCount2 };\n    };\n    this.columnAnimationService.start();\n    let {\n      unmatchedAndAutoStates,\n      unmatchedCount\n    } = applyStates(params.state || [], this.primaryColumns || [], (id) => this.getPrimaryColumn(id));\n    if (unmatchedAndAutoStates.length > 0 || exists(params.defaultState)) {\n      unmatchedCount = applyStates(\n        unmatchedAndAutoStates,\n        this.secondaryColumns || [],\n        (id) => this.getSecondaryColumn(id)\n      ).unmatchedCount;\n    }\n    this.columnAnimationService.finish();\n    return unmatchedCount === 0;\n  }\n  applyOrderAfterApplyState(params) {\n    if (!params.applyOrder || !params.state) {\n      return;\n    }\n    let newOrder = [];\n    const processedColIds = {};\n    params.state.forEach((item) => {\n      if (!item.colId || processedColIds[item.colId]) {\n        return;\n      }\n      const col = this.gridColumnsMap[item.colId];\n      if (col) {\n        newOrder.push(col);\n        processedColIds[item.colId] = true;\n      }\n    });\n    let autoGroupInsertIndex = 0;\n    this.gridColumns.forEach((col) => {\n      const colId = col.getColId();\n      const alreadyProcessed = processedColIds[colId] != null;\n      if (alreadyProcessed) {\n        return;\n      }\n      const isAutoGroupCol = colId.startsWith(GROUP_AUTO_COLUMN_ID);\n      if (isAutoGroupCol) {\n        insertIntoArray(newOrder, col, autoGroupInsertIndex++);\n      } else {\n        newOrder.push(col);\n      }\n    });\n    newOrder = this.placeLockedColumns(newOrder);\n    if (!this.doesMovePassMarryChildren(newOrder)) {\n      console.warn(\"AG Grid: Applying column order broke a group where columns should be married together. Applying new order has been discarded.\");\n      return;\n    }\n    this.gridColumns = newOrder;\n  }\n  compareColumnStatesAndDispatchEvents(source) {\n    const startState = {\n      rowGroupColumns: this.rowGroupColumns.slice(),\n      pivotColumns: this.pivotColumns.slice(),\n      valueColumns: this.valueColumns.slice()\n    };\n    const columnStateBefore = this.getColumnState();\n    const columnStateBeforeMap = {};\n    columnStateBefore.forEach((col) => {\n      columnStateBeforeMap[col.colId] = col;\n    });\n    return () => {\n      const colsForState = this.getPrimaryAndSecondaryAndAutoColumns();\n      const dispatchWhenListsDifferent = (eventType, colsBefore, colsAfter, idMapper) => {\n        const beforeList = colsBefore.map(idMapper);\n        const afterList = colsAfter.map(idMapper);\n        const unchanged = areEqual(beforeList, afterList);\n        if (unchanged) {\n          return;\n        }\n        const changes = new Set(colsBefore);\n        colsAfter.forEach((id) => {\n          if (!changes.delete(id)) {\n            changes.add(id);\n          }\n        });\n        const changesArr = [...changes];\n        const event = {\n          type: eventType,\n          columns: changesArr,\n          column: changesArr.length === 1 ? changesArr[0] : null,\n          source\n        };\n        this.eventService.dispatchEvent(event);\n      };\n      const getChangedColumns = (changedPredicate) => {\n        const changedColumns2 = [];\n        colsForState.forEach((column) => {\n          const colStateBefore = columnStateBeforeMap[column.getColId()];\n          if (colStateBefore && changedPredicate(colStateBefore, column)) {\n            changedColumns2.push(column);\n          }\n        });\n        return changedColumns2;\n      };\n      const columnIdMapper = (c) => c.getColId();\n      dispatchWhenListsDifferent(\n        Events.EVENT_COLUMN_ROW_GROUP_CHANGED,\n        startState.rowGroupColumns,\n        this.rowGroupColumns,\n        columnIdMapper\n      );\n      dispatchWhenListsDifferent(\n        Events.EVENT_COLUMN_PIVOT_CHANGED,\n        startState.pivotColumns,\n        this.pivotColumns,\n        columnIdMapper\n      );\n      const valueChangePredicate = (cs, c) => {\n        const oldActive = cs.aggFunc != null;\n        const activeChanged = oldActive != c.isValueActive();\n        const aggFuncChanged = oldActive && cs.aggFunc != c.getAggFunc();\n        return activeChanged || aggFuncChanged;\n      };\n      const changedValues = getChangedColumns(valueChangePredicate);\n      if (changedValues.length > 0) {\n        this.dispatchColumnChangedEvent(Events.EVENT_COLUMN_VALUE_CHANGED, changedValues, source);\n      }\n      const resizeChangePredicate = (cs, c) => cs.width != c.getActualWidth();\n      this.dispatchColumnResizedEvent(getChangedColumns(resizeChangePredicate), true, source);\n      const pinnedChangePredicate = (cs, c) => cs.pinned != c.getPinned();\n      this.dispatchColumnPinnedEvent(getChangedColumns(pinnedChangePredicate), source);\n      const visibilityChangePredicate = (cs, c) => cs.hide == c.isVisible();\n      this.dispatchColumnVisibleEvent(getChangedColumns(visibilityChangePredicate), source);\n      const sortChangePredicate = (cs, c) => cs.sort != c.getSort() || cs.sortIndex != c.getSortIndex();\n      const changedColumns = getChangedColumns(sortChangePredicate);\n      if (changedColumns.length > 0) {\n        this.sortController.dispatchSortChangedEvents(source, changedColumns);\n      }\n      this.normaliseColumnMovedEventForColumnState(columnStateBefore, source);\n    };\n  }\n  getCommonValue(cols, valueGetter) {\n    if (!cols || cols.length == 0) {\n      return void 0;\n    }\n    const firstValue = valueGetter(cols[0]);\n    for (let i = 1; i < cols.length; i++) {\n      if (firstValue !== valueGetter(cols[i])) {\n        return void 0;\n      }\n    }\n    return firstValue;\n  }\n  normaliseColumnMovedEventForColumnState(colStateBefore, source) {\n    const colStateAfter = this.getColumnState();\n    const colStateAfterMapped = {};\n    colStateAfter.forEach((s) => colStateAfterMapped[s.colId] = s);\n    const colsIntersectIds = {};\n    colStateBefore.forEach((s) => {\n      if (colStateAfterMapped[s.colId]) {\n        colsIntersectIds[s.colId] = true;\n      }\n    });\n    const beforeFiltered = colStateBefore.filter((c) => colsIntersectIds[c.colId]);\n    const afterFiltered = colStateAfter.filter((c) => colsIntersectIds[c.colId]);\n    const movedColumns = [];\n    afterFiltered.forEach((csAfter, index) => {\n      const csBefore = beforeFiltered && beforeFiltered[index];\n      if (csBefore && csBefore.colId !== csAfter.colId) {\n        const gridCol = this.getGridColumn(csBefore.colId);\n        if (gridCol) {\n          movedColumns.push(gridCol);\n        }\n      }\n    });\n    if (!movedColumns.length) {\n      return;\n    }\n    this.dispatchColumnMovedEvent({ movedColumns, source, finished: true });\n  }\n  syncColumnWithStateItem(column, stateItem, defaultState, rowGroupIndexes, pivotIndexes, autoCol, source) {\n    var _a;\n    if (!column) {\n      return;\n    }\n    const getValue = (key1, key2) => {\n      const obj = { value1: void 0, value2: void 0 };\n      let calculated = false;\n      if (stateItem) {\n        if (stateItem[key1] !== void 0) {\n          obj.value1 = stateItem[key1];\n          calculated = true;\n        }\n        if (exists(key2) && stateItem[key2] !== void 0) {\n          obj.value2 = stateItem[key2];\n          calculated = true;\n        }\n      }\n      if (!calculated && defaultState) {\n        if (defaultState[key1] !== void 0) {\n          obj.value1 = defaultState[key1];\n        }\n        if (exists(key2) && defaultState[key2] !== void 0) {\n          obj.value2 = defaultState[key2];\n        }\n      }\n      return obj;\n    };\n    const hide = getValue(\"hide\").value1;\n    if (hide !== void 0) {\n      column.setVisible(!hide, source);\n    }\n    const pinned = getValue(\"pinned\").value1;\n    if (pinned !== void 0) {\n      column.setPinned(pinned);\n    }\n    const minColWidth = (_a = column.getColDef().minWidth) != null ? _a : this.environment.getMinColWidth();\n    const flex = getValue(\"flex\").value1;\n    if (flex !== void 0) {\n      column.setFlex(flex);\n    }\n    if (flex == null) {\n      const width = getValue(\"width\").value1;\n      if (width != null) {\n        if (minColWidth != null && width >= minColWidth) {\n          column.setActualWidth(width, source);\n        }\n      }\n    }\n    const sort = getValue(\"sort\").value1;\n    if (sort !== void 0) {\n      if (sort === \"desc\" || sort === \"asc\") {\n        column.setSort(sort, source);\n      } else {\n        column.setSort(void 0, source);\n      }\n    }\n    const sortIndex = getValue(\"sortIndex\").value1;\n    if (sortIndex !== void 0) {\n      column.setSortIndex(sortIndex);\n    }\n    if (autoCol || !column.isPrimary()) {\n      return;\n    }\n    const aggFunc = getValue(\"aggFunc\").value1;\n    if (aggFunc !== void 0) {\n      if (typeof aggFunc === \"string\") {\n        column.setAggFunc(aggFunc);\n        if (!column.isValueActive()) {\n          column.setValueActive(true, source);\n          this.valueColumns.push(column);\n        }\n      } else {\n        if (exists(aggFunc)) {\n          console.warn(\"AG Grid: stateItem.aggFunc must be a string. if using your own aggregation functions, register the functions first before using them in get/set state. This is because it is intended for the column state to be stored and retrieved as simple JSON.\");\n        }\n        if (column.isValueActive()) {\n          column.setValueActive(false, source);\n          removeFromArray(this.valueColumns, column);\n        }\n      }\n    }\n    const { value1: rowGroup, value2: rowGroupIndex } = getValue(\"rowGroup\", \"rowGroupIndex\");\n    if (rowGroup !== void 0 || rowGroupIndex !== void 0) {\n      if (typeof rowGroupIndex === \"number\" || rowGroup) {\n        if (!column.isRowGroupActive()) {\n          column.setRowGroupActive(true, source);\n          this.rowGroupColumns.push(column);\n        }\n        if (rowGroupIndexes && typeof rowGroupIndex === \"number\") {\n          rowGroupIndexes[column.getId()] = rowGroupIndex;\n        }\n      } else {\n        if (column.isRowGroupActive()) {\n          column.setRowGroupActive(false, source);\n          removeFromArray(this.rowGroupColumns, column);\n        }\n      }\n    }\n    const { value1: pivot, value2: pivotIndex } = getValue(\"pivot\", \"pivotIndex\");\n    if (pivot !== void 0 || pivotIndex !== void 0) {\n      if (typeof pivotIndex === \"number\" || pivot) {\n        if (!column.isPivotActive()) {\n          column.setPivotActive(true, source);\n          this.pivotColumns.push(column);\n        }\n        if (pivotIndexes && typeof pivotIndex === \"number\") {\n          pivotIndexes[column.getId()] = pivotIndex;\n        }\n      } else {\n        if (column.isPivotActive()) {\n          column.setPivotActive(false, source);\n          removeFromArray(this.pivotColumns, column);\n        }\n      }\n    }\n  }\n  getGridColumns(keys2) {\n    return this.getColumns(keys2, this.getGridColumn.bind(this));\n  }\n  getColumns(keys2, columnLookupCallback) {\n    const foundColumns = [];\n    if (keys2) {\n      keys2.forEach((key) => {\n        const column = columnLookupCallback(key);\n        if (column) {\n          foundColumns.push(column);\n        }\n      });\n    }\n    return foundColumns;\n  }\n  // used by growGroupPanel\n  getColumnWithValidation(key) {\n    if (key == null) {\n      return null;\n    }\n    const column = this.getGridColumn(key);\n    if (!column) {\n      console.warn(\"AG Grid: could not find column \" + key);\n    }\n    return column;\n  }\n  getPrimaryColumn(key) {\n    if (!this.primaryColumns) {\n      return null;\n    }\n    return this.getColumn(key, this.primaryColumns, this.primaryColumnsMap);\n  }\n  getGridColumn(key) {\n    return this.getColumn(key, this.gridColumns, this.gridColumnsMap);\n  }\n  lookupGridColumn(key) {\n    return this.gridColumnsMap[key];\n  }\n  getSecondaryColumn(key) {\n    if (!this.secondaryColumns) {\n      return null;\n    }\n    return this.getColumn(key, this.secondaryColumns, this.secondaryColumnsMap);\n  }\n  getColumn(key, columnList, columnMap) {\n    if (!key || !columnMap) {\n      return null;\n    }\n    if (typeof key == \"string\" && columnMap[key]) {\n      return columnMap[key];\n    }\n    for (let i = 0; i < columnList.length; i++) {\n      if (this.columnsMatch(columnList[i], key)) {\n        return columnList[i];\n      }\n    }\n    return this.getAutoColumn(key);\n  }\n  getSourceColumnsForGroupColumn(groupCol) {\n    const sourceColumnId = groupCol.getColDef().showRowGroup;\n    if (!sourceColumnId) {\n      return null;\n    }\n    if (sourceColumnId === true) {\n      return this.rowGroupColumns.slice(0);\n    }\n    const column = this.getPrimaryColumn(sourceColumnId);\n    return column ? [column] : null;\n  }\n  getAutoColumn(key) {\n    if (!this.groupAutoColumns || !exists(this.groupAutoColumns) || missing(this.groupAutoColumns)) {\n      return null;\n    }\n    return this.groupAutoColumns.find((groupCol) => this.columnsMatch(groupCol, key)) || null;\n  }\n  columnsMatch(column, key) {\n    const columnMatches = column === key;\n    const colDefMatches = column.getColDef() === key;\n    const idMatches = column.getColId() == key;\n    return columnMatches || colDefMatches || idMatches;\n  }\n  getDisplayNameForColumn(column, location, includeAggFunc = false) {\n    if (!column) {\n      return null;\n    }\n    const headerName = this.getHeaderName(column.getColDef(), column, null, null, location);\n    if (includeAggFunc) {\n      return this.wrapHeaderNameWithAggFunc(column, headerName);\n    }\n    return headerName;\n  }\n  getDisplayNameForProvidedColumnGroup(columnGroup, providedColumnGroup, location) {\n    const colGroupDef = providedColumnGroup ? providedColumnGroup.getColGroupDef() : null;\n    if (colGroupDef) {\n      return this.getHeaderName(colGroupDef, null, columnGroup, providedColumnGroup, location);\n    }\n    return null;\n  }\n  getDisplayNameForColumnGroup(columnGroup, location) {\n    return this.getDisplayNameForProvidedColumnGroup(columnGroup, columnGroup.getProvidedColumnGroup(), location);\n  }\n  // location is where the column is going to appear, ie who is calling us\n  getHeaderName(colDef, column, columnGroup, providedColumnGroup, location) {\n    const headerValueGetter = colDef.headerValueGetter;\n    if (headerValueGetter) {\n      const params = this.gos.addGridCommonParams({\n        colDef,\n        column,\n        columnGroup,\n        providedColumnGroup,\n        location\n      });\n      if (typeof headerValueGetter === \"function\") {\n        return headerValueGetter(params);\n      } else if (typeof headerValueGetter === \"string\") {\n        return this.expressionService.evaluate(headerValueGetter, params);\n      }\n      console.warn(\"AG Grid: headerValueGetter must be a function or a string\");\n      return \"\";\n    } else if (colDef.headerName != null) {\n      return colDef.headerName;\n    } else if (colDef.field) {\n      return camelCaseToHumanText(colDef.field);\n    }\n    return \"\";\n  }\n  wrapHeaderNameWithAggFunc(column, headerName) {\n    if (this.gos.get(\"suppressAggFuncInHeader\")) {\n      return headerName;\n    }\n    const pivotValueColumn = column.getColDef().pivotValueColumn;\n    const pivotActiveOnThisColumn = exists(pivotValueColumn);\n    let aggFunc = null;\n    let aggFuncFound;\n    if (pivotActiveOnThisColumn) {\n      const isCollapsedHeaderEnabled = this.gos.get(\"removePivotHeaderRowWhenSingleValueColumn\") && this.valueColumns.length === 1;\n      const isTotalColumn = column.getColDef().pivotTotalColumnIds !== void 0;\n      if (isCollapsedHeaderEnabled && !isTotalColumn) {\n        return headerName;\n      }\n      aggFunc = pivotValueColumn ? pivotValueColumn.getAggFunc() : null;\n      aggFuncFound = true;\n    } else {\n      const measureActive = column.isValueActive();\n      const aggregationPresent = this.pivotMode || !this.isRowGroupEmpty();\n      if (measureActive && aggregationPresent) {\n        aggFunc = column.getAggFunc();\n        aggFuncFound = true;\n      } else {\n        aggFuncFound = false;\n      }\n    }\n    if (aggFuncFound) {\n      const aggFuncString = typeof aggFunc === \"string\" ? aggFunc : \"func\";\n      const localeTextFunc = this.localeService.getLocaleTextFunc();\n      const aggFuncStringTranslated = localeTextFunc(aggFuncString, aggFuncString);\n      return `${aggFuncStringTranslated}(${headerName})`;\n    }\n    return headerName;\n  }\n  // returns the group with matching colId and instanceId. If instanceId is missing,\n  // matches only on the colId.\n  getColumnGroup(colId, partId) {\n    if (!colId) {\n      return null;\n    }\n    if (colId instanceof ColumnGroup) {\n      return colId;\n    }\n    const allColumnGroups = this.getAllDisplayedTrees();\n    const checkPartId = typeof partId === \"number\";\n    let result = null;\n    depthFirstAllColumnTreeSearch(allColumnGroups, false, (child) => {\n      if (child instanceof ColumnGroup) {\n        const columnGroup = child;\n        let matched;\n        if (checkPartId) {\n          matched = colId === columnGroup.getGroupId() && partId === columnGroup.getPartId();\n        } else {\n          matched = colId === columnGroup.getGroupId();\n        }\n        if (matched) {\n          result = columnGroup;\n        }\n      }\n    });\n    return result;\n  }\n  isReady() {\n    return this.ready;\n  }\n  extractValueColumns(source, oldPrimaryColumns) {\n    this.valueColumns = this.extractColumns(\n      oldPrimaryColumns,\n      this.valueColumns,\n      (col, flag) => col.setValueActive(flag, source),\n      // aggFunc doesn't have index variant, cos order of value cols doesn't matter, so always return null\n      () => void 0,\n      () => void 0,\n      // aggFunc is a string, so return it's existence\n      (colDef) => {\n        const aggFunc = colDef.aggFunc;\n        if (aggFunc === null || aggFunc === \"\") {\n          return null;\n        }\n        if (aggFunc === void 0) {\n          return;\n        }\n        return !!aggFunc;\n      },\n      (colDef) => {\n        return colDef.initialAggFunc != null && colDef.initialAggFunc != \"\";\n      }\n    );\n    this.valueColumns.forEach((col) => {\n      const colDef = col.getColDef();\n      if (colDef.aggFunc != null && colDef.aggFunc != \"\") {\n        col.setAggFunc(colDef.aggFunc);\n      } else {\n        if (!col.getAggFunc()) {\n          col.setAggFunc(colDef.initialAggFunc);\n        }\n      }\n    });\n  }\n  extractRowGroupColumns(source, oldPrimaryColumns) {\n    this.rowGroupColumns = this.extractColumns(\n      oldPrimaryColumns,\n      this.rowGroupColumns,\n      (col, flag) => col.setRowGroupActive(flag, source),\n      (colDef) => colDef.rowGroupIndex,\n      (colDef) => colDef.initialRowGroupIndex,\n      (colDef) => colDef.rowGroup,\n      (colDef) => colDef.initialRowGroup\n    );\n  }\n  extractColumns(oldPrimaryColumns = [], previousCols = [], setFlagFunc, getIndexFunc, getInitialIndexFunc, getValueFunc, getInitialValueFunc) {\n    const colsWithIndex = [];\n    const colsWithValue = [];\n    (this.primaryColumns || []).forEach((col) => {\n      const colIsNew = oldPrimaryColumns.indexOf(col) < 0;\n      const colDef = col.getColDef();\n      const value = attrToBoolean(getValueFunc(colDef));\n      const initialValue = attrToBoolean(getInitialValueFunc(colDef));\n      const index = attrToNumber(getIndexFunc(colDef));\n      const initialIndex = attrToNumber(getInitialIndexFunc(colDef));\n      let include;\n      const valuePresent = value !== void 0;\n      const indexPresent = index !== void 0;\n      const initialValuePresent = initialValue !== void 0;\n      const initialIndexPresent = initialIndex !== void 0;\n      if (valuePresent) {\n        include = value;\n      } else if (indexPresent) {\n        if (index === null) {\n          include = false;\n        } else {\n          include = index >= 0;\n        }\n      } else {\n        if (colIsNew) {\n          if (initialValuePresent) {\n            include = initialValue;\n          } else if (initialIndexPresent) {\n            include = initialIndex != null && initialIndex >= 0;\n          } else {\n            include = false;\n          }\n        } else {\n          include = previousCols.indexOf(col) >= 0;\n        }\n      }\n      if (include) {\n        const useIndex = colIsNew ? index != null || initialIndex != null : index != null;\n        useIndex ? colsWithIndex.push(col) : colsWithValue.push(col);\n      }\n    });\n    const getIndexForCol = (col) => {\n      const index = getIndexFunc(col.getColDef());\n      const defaultIndex = getInitialIndexFunc(col.getColDef());\n      return index != null ? index : defaultIndex;\n    };\n    colsWithIndex.sort((colA, colB) => {\n      const indexA = getIndexForCol(colA);\n      const indexB = getIndexForCol(colB);\n      if (indexA === indexB) {\n        return 0;\n      }\n      if (indexA < indexB) {\n        return -1;\n      }\n      return 1;\n    });\n    const res = [].concat(colsWithIndex);\n    previousCols.forEach((col) => {\n      if (colsWithValue.indexOf(col) >= 0) {\n        res.push(col);\n      }\n    });\n    colsWithValue.forEach((col) => {\n      if (res.indexOf(col) < 0) {\n        res.push(col);\n      }\n    });\n    previousCols.forEach((col) => {\n      if (res.indexOf(col) < 0) {\n        setFlagFunc(col, false);\n      }\n    });\n    res.forEach((col) => {\n      if (previousCols.indexOf(col) < 0) {\n        setFlagFunc(col, true);\n      }\n    });\n    return res;\n  }\n  extractPivotColumns(source, oldPrimaryColumns) {\n    this.pivotColumns = this.extractColumns(\n      oldPrimaryColumns,\n      this.pivotColumns,\n      (col, flag) => col.setPivotActive(flag, source),\n      (colDef) => colDef.pivotIndex,\n      (colDef) => colDef.initialPivotIndex,\n      (colDef) => colDef.pivot,\n      (colDef) => colDef.initialPivot\n    );\n  }\n  resetColumnGroupState(source) {\n    if (!this.primaryColumnTree) {\n      return;\n    }\n    const stateItems = [];\n    depthFirstOriginalTreeSearch(null, this.primaryColumnTree, (child) => {\n      if (child instanceof ProvidedColumnGroup) {\n        const colGroupDef = child.getColGroupDef();\n        const groupState = {\n          groupId: child.getGroupId(),\n          open: !colGroupDef ? void 0 : colGroupDef.openByDefault\n        };\n        stateItems.push(groupState);\n      }\n    });\n    this.setColumnGroupState(stateItems, source);\n  }\n  getColumnGroupState() {\n    const columnGroupState = [];\n    depthFirstOriginalTreeSearch(null, this.gridBalancedTree, (node) => {\n      if (node instanceof ProvidedColumnGroup) {\n        columnGroupState.push({\n          groupId: node.getGroupId(),\n          open: node.isExpanded()\n        });\n      }\n    });\n    return columnGroupState;\n  }\n  setColumnGroupState(stateItems, source) {\n    if (!this.gridBalancedTree) {\n      return;\n    }\n    this.columnAnimationService.start();\n    const impactedGroups = [];\n    stateItems.forEach((stateItem) => {\n      const groupKey = stateItem.groupId;\n      const newValue = stateItem.open;\n      const providedColumnGroup = this.getProvidedColumnGroup(groupKey);\n      if (!providedColumnGroup) {\n        return;\n      }\n      if (providedColumnGroup.isExpanded() === newValue) {\n        return;\n      }\n      this.logger.log(\"columnGroupOpened(\" + providedColumnGroup.getGroupId() + \",\" + newValue + \")\");\n      providedColumnGroup.setExpanded(newValue);\n      impactedGroups.push(providedColumnGroup);\n    });\n    this.updateGroupsAndDisplayedColumns(source);\n    this.setFirstRightAndLastLeftPinned(source);\n    if (impactedGroups.length) {\n      const event = {\n        type: Events.EVENT_COLUMN_GROUP_OPENED,\n        columnGroup: ProvidedColumnGroup.length === 1 ? impactedGroups[0] : void 0,\n        columnGroups: impactedGroups\n      };\n      this.eventService.dispatchEvent(event);\n    }\n    this.columnAnimationService.finish();\n  }\n  // called by headerRenderer - when a header is opened or closed\n  setColumnGroupOpened(key, newValue, source) {\n    let keyAsString;\n    if (key instanceof ProvidedColumnGroup) {\n      keyAsString = key.getId();\n    } else {\n      keyAsString = key || \"\";\n    }\n    this.setColumnGroupState([{ groupId: keyAsString, open: newValue }], source);\n  }\n  getProvidedColumnGroup(key) {\n    if (typeof key !== \"string\") {\n      console.error(\"AG Grid: group key must be a string\");\n    }\n    let res = null;\n    depthFirstOriginalTreeSearch(null, this.gridBalancedTree, (node) => {\n      if (node instanceof ProvidedColumnGroup) {\n        if (node.getId() === key) {\n          res = node;\n        }\n      }\n    });\n    return res;\n  }\n  calculateColumnsForDisplay() {\n    let columnsForDisplay;\n    if (this.pivotMode && missing(this.secondaryColumns)) {\n      columnsForDisplay = this.gridColumns.filter((column) => {\n        const isAutoGroupCol = this.groupAutoColumns && includes(this.groupAutoColumns, column);\n        const isValueCol = this.valueColumns && includes(this.valueColumns, column);\n        return isAutoGroupCol || isValueCol;\n      });\n    } else {\n      columnsForDisplay = this.gridColumns.filter((column) => {\n        const isAutoGroupCol = this.groupAutoColumns && includes(this.groupAutoColumns, column);\n        return isAutoGroupCol || column.isVisible();\n      });\n    }\n    return columnsForDisplay;\n  }\n  checkColSpanActiveInCols(columns) {\n    let result = false;\n    columns.forEach((col) => {\n      if (exists(col.getColDef().colSpan)) {\n        result = true;\n      }\n    });\n    return result;\n  }\n  calculateColumnsForGroupDisplay() {\n    this.groupDisplayColumns = [];\n    this.groupDisplayColumnsMap = {};\n    const checkFunc = (col) => {\n      const colDef = col.getColDef();\n      const underlyingColumn = colDef.showRowGroup;\n      if (colDef && exists(underlyingColumn)) {\n        this.groupDisplayColumns.push(col);\n        if (typeof underlyingColumn === \"string\") {\n          this.groupDisplayColumnsMap[underlyingColumn] = col;\n        } else if (underlyingColumn === true) {\n          this.getRowGroupColumns().forEach((rowGroupCol) => {\n            this.groupDisplayColumnsMap[rowGroupCol.getId()] = col;\n          });\n        }\n      }\n    };\n    this.gridColumns.forEach(checkFunc);\n  }\n  getGroupDisplayColumns() {\n    return this.groupDisplayColumns;\n  }\n  getGroupDisplayColumnForGroup(rowGroupColumnId) {\n    return this.groupDisplayColumnsMap[rowGroupColumnId];\n  }\n  updateDisplayedColumns(source) {\n    const columnsForDisplay = this.calculateColumnsForDisplay();\n    this.buildDisplayedTrees(columnsForDisplay);\n    this.updateGroupsAndDisplayedColumns(source);\n    this.setFirstRightAndLastLeftPinned(source);\n  }\n  isSecondaryColumnsPresent() {\n    return exists(this.secondaryColumns);\n  }\n  setSecondaryColumns(colDefs, source) {\n    if (!this.gridColumns) {\n      return;\n    }\n    const newColsPresent = colDefs;\n    if (!newColsPresent && missing(this.secondaryColumns)) {\n      return;\n    }\n    if (newColsPresent) {\n      this.processSecondaryColumnDefinitions(colDefs);\n      const balancedTreeResult = this.columnFactory.createColumnTree(\n        colDefs,\n        false,\n        this.secondaryBalancedTree || this.previousSecondaryColumns || void 0,\n        source\n      );\n      this.destroyOldColumns(this.secondaryBalancedTree, balancedTreeResult.columnTree);\n      this.secondaryBalancedTree = balancedTreeResult.columnTree;\n      this.secondaryHeaderRowCount = balancedTreeResult.treeDept + 1;\n      this.secondaryColumns = this.getColumnsFromTree(this.secondaryBalancedTree);\n      this.secondaryColumnsMap = {};\n      this.secondaryColumns.forEach((col) => this.secondaryColumnsMap[col.getId()] = col);\n      this.previousSecondaryColumns = null;\n    } else {\n      this.previousSecondaryColumns = this.secondaryBalancedTree;\n      this.secondaryBalancedTree = null;\n      this.secondaryHeaderRowCount = -1;\n      this.secondaryColumns = null;\n      this.secondaryColumnsMap = {};\n    }\n    this.updateGridColumns();\n    this.updateDisplayedColumns(source);\n  }\n  processSecondaryColumnDefinitions(colDefs) {\n    const columnCallback = this.gos.get(\"processPivotResultColDef\");\n    const groupCallback = this.gos.get(\"processPivotResultColGroupDef\");\n    if (!columnCallback && !groupCallback) {\n      return void 0;\n    }\n    const searchForColDefs = (colDefs2) => {\n      colDefs2.forEach((abstractColDef) => {\n        const isGroup = exists(abstractColDef.children);\n        if (isGroup) {\n          const colGroupDef = abstractColDef;\n          if (groupCallback) {\n            groupCallback(colGroupDef);\n          }\n          searchForColDefs(colGroupDef.children);\n        } else {\n          const colDef = abstractColDef;\n          if (columnCallback) {\n            columnCallback(colDef);\n          }\n        }\n      });\n    };\n    if (colDefs) {\n      searchForColDefs(colDefs);\n    }\n  }\n  // called from: applyColumnState, setColumnDefs, setSecondaryColumns\n  updateGridColumns() {\n    const prevGridCols = this.gridBalancedTree;\n    if (this.gridColsArePrimary) {\n      this.lastPrimaryOrder = this.gridColumns;\n    } else {\n      this.lastSecondaryOrder = this.gridColumns;\n    }\n    const areAutoColsChanged = this.createGroupAutoColumnsIfNeeded();\n    if (areAutoColsChanged) {\n      const groupAutoColsMap = convertToMap(this.groupAutoColumns.map((col) => [col, true]));\n      if (this.lastPrimaryOrder) {\n        this.lastPrimaryOrder = this.lastPrimaryOrder.filter((col) => !groupAutoColsMap.has(col));\n        this.lastPrimaryOrder = [...this.groupAutoColumns, ...this.lastPrimaryOrder];\n      }\n      if (this.lastSecondaryOrder) {\n        this.lastSecondaryOrder = this.lastSecondaryOrder.filter((col) => !groupAutoColsMap.has(col));\n        this.lastSecondaryOrder = [...this.groupAutoColumns, ...this.lastSecondaryOrder];\n      }\n    }\n    let sortOrderToRecover;\n    if (this.secondaryColumns && this.secondaryBalancedTree) {\n      const hasSameColumns = this.secondaryColumns.some((col) => {\n        return this.gridColumnsMap[col.getColId()] !== void 0;\n      });\n      this.gridBalancedTree = this.secondaryBalancedTree.slice();\n      this.gridHeaderRowCount = this.secondaryHeaderRowCount;\n      this.gridColumns = this.secondaryColumns.slice();\n      this.gridColsArePrimary = false;\n      if (hasSameColumns) {\n        sortOrderToRecover = this.lastSecondaryOrder;\n      }\n    } else if (this.primaryColumns) {\n      this.gridBalancedTree = this.primaryColumnTree.slice();\n      this.gridHeaderRowCount = this.primaryHeaderRowCount;\n      this.gridColumns = this.primaryColumns.slice();\n      this.gridColsArePrimary = true;\n      sortOrderToRecover = this.lastPrimaryOrder;\n    }\n    this.addAutoGroupToGridColumns();\n    this.orderGridColsLike(sortOrderToRecover);\n    this.gridColumns = this.placeLockedColumns(this.gridColumns);\n    this.calculateColumnsForGroupDisplay();\n    this.refreshQuickFilterColumns();\n    this.clearDisplayedAndViewportColumns();\n    this.colSpanActive = this.checkColSpanActiveInCols(this.gridColumns);\n    this.gridColumnsMap = {};\n    this.gridColumns.forEach((col) => this.gridColumnsMap[col.getId()] = col);\n    this.setAutoHeightActive();\n    if (!areEqual(prevGridCols, this.gridBalancedTree)) {\n      const event = {\n        type: Events.EVENT_GRID_COLUMNS_CHANGED\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  setAutoHeightActive() {\n    this.autoHeightActive = this.gridColumns.filter((col) => col.isAutoHeight()).length > 0;\n    if (this.autoHeightActive) {\n      this.autoHeightActiveAtLeastOnce = true;\n      const supportedRowModel = this.gos.isRowModelType(\"clientSide\") || this.gos.isRowModelType(\"serverSide\");\n      if (!supportedRowModel) {\n        warnOnce(\"autoHeight columns only work with Client Side Row Model and Server Side Row Model.\");\n      }\n    }\n  }\n  orderGridColsLike(colsOrder) {\n    if (missing(colsOrder)) {\n      return;\n    }\n    const lastOrderMapped = convertToMap(colsOrder.map((col, index) => [col, index]));\n    let noColsFound = true;\n    this.gridColumns.forEach((col) => {\n      if (lastOrderMapped.has(col)) {\n        noColsFound = false;\n      }\n    });\n    if (noColsFound) {\n      return;\n    }\n    const gridColsMap = convertToMap(this.gridColumns.map((col) => [col, true]));\n    const oldColsOrdered = colsOrder.filter((col) => gridColsMap.has(col));\n    const oldColsMap = convertToMap(oldColsOrdered.map((col) => [col, true]));\n    const newColsOrdered = this.gridColumns.filter((col) => !oldColsMap.has(col));\n    const newGridColumns = oldColsOrdered.slice();\n    newColsOrdered.forEach((newCol) => {\n      let parent = newCol.getOriginalParent();\n      if (!parent) {\n        newGridColumns.push(newCol);\n        return;\n      }\n      const siblings = [];\n      while (!siblings.length && parent) {\n        const leafCols = parent.getLeafColumns();\n        leafCols.forEach((leafCol) => {\n          const presentInNewGriColumns = newGridColumns.indexOf(leafCol) >= 0;\n          const noYetInSiblings = siblings.indexOf(leafCol) < 0;\n          if (presentInNewGriColumns && noYetInSiblings) {\n            siblings.push(leafCol);\n          }\n        });\n        parent = parent.getOriginalParent();\n      }\n      if (!siblings.length) {\n        newGridColumns.push(newCol);\n        return;\n      }\n      const indexes = siblings.map((col) => newGridColumns.indexOf(col));\n      const lastIndex = Math.max(...indexes);\n      insertIntoArray(newGridColumns, newCol, lastIndex + 1);\n    });\n    this.gridColumns = newGridColumns;\n  }\n  isPrimaryColumnGroupsPresent() {\n    return this.primaryHeaderRowCount > 1;\n  }\n  // if we are using autoGroupCols, then they should be included for quick filter. this covers the\n  // following scenarios:\n  // a) user provides 'field' into autoGroupCol of normal grid, so now because a valid col to filter leafs on\n  // b) using tree data and user depends on autoGroupCol for first col, and we also want to filter on this\n  //    (tree data is a bit different, as parent rows can be filtered on, unlike row grouping)\n  refreshQuickFilterColumns() {\n    var _a;\n    let columnsForQuickFilter = (_a = this.isPivotMode() && !this.gos.get(\"applyQuickFilterBeforePivotOrAgg\") ? this.secondaryColumns : this.primaryColumns) != null ? _a : [];\n    if (this.groupAutoColumns) {\n      columnsForQuickFilter = columnsForQuickFilter.concat(this.groupAutoColumns);\n    }\n    this.columnsForQuickFilter = this.gos.get(\"includeHiddenColumnsInQuickFilter\") ? columnsForQuickFilter : columnsForQuickFilter.filter((col) => col.isVisible() || col.isRowGroupActive());\n  }\n  placeLockedColumns(cols) {\n    const left = [];\n    const normal = [];\n    const right = [];\n    cols.forEach((col) => {\n      const position = col.getColDef().lockPosition;\n      if (position === \"right\") {\n        right.push(col);\n      } else if (position === \"left\" || position === true) {\n        left.push(col);\n      } else {\n        normal.push(col);\n      }\n    });\n    return [...left, ...normal, ...right];\n  }\n  addAutoGroupToGridColumns() {\n    if (missing(this.groupAutoColumns)) {\n      this.destroyOldColumns(this.groupAutoColsBalancedTree);\n      this.groupAutoColsBalancedTree = null;\n      return;\n    }\n    this.gridColumns = this.groupAutoColumns ? this.groupAutoColumns.concat(this.gridColumns) : this.gridColumns;\n    const newAutoColsTree = this.columnFactory.createForAutoGroups(this.groupAutoColumns, this.gridBalancedTree);\n    this.destroyOldColumns(this.groupAutoColsBalancedTree, newAutoColsTree);\n    this.groupAutoColsBalancedTree = newAutoColsTree;\n    this.gridBalancedTree = newAutoColsTree.concat(this.gridBalancedTree);\n  }\n  // gets called after we copy down grid columns, to make sure any part of the gui\n  // that tries to draw, eg the header, it will get empty lists of columns rather\n  // than stale columns. for example, the header will received gridColumnsChanged\n  // event, so will try and draw, but it will draw successfully when it acts on the\n  // virtualColumnsChanged event\n  clearDisplayedAndViewportColumns() {\n    this.viewportRowLeft = {};\n    this.viewportRowRight = {};\n    this.viewportRowCenter = {};\n    this.displayedColumnsLeft = [];\n    this.displayedColumnsRight = [];\n    this.displayedColumnsCenter = [];\n    this.displayedColumns = [];\n    this.ariaOrderColumns = [];\n    this.viewportColumns = [];\n    this.headerViewportColumns = [];\n    this.viewportColumnsHash = \"\";\n  }\n  updateGroupsAndDisplayedColumns(source) {\n    this.updateOpenClosedVisibilityInColumnGroups();\n    this.deriveDisplayedColumns(source);\n    this.refreshFlexedColumns();\n    this.extractViewport();\n    this.updateBodyWidths();\n    const event = {\n      type: Events.EVENT_DISPLAYED_COLUMNS_CHANGED\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  deriveDisplayedColumns(source) {\n    this.derivedDisplayedColumnsFromDisplayedTree(this.displayedTreeLeft, this.displayedColumnsLeft);\n    this.derivedDisplayedColumnsFromDisplayedTree(this.displayedTreeCentre, this.displayedColumnsCenter);\n    this.derivedDisplayedColumnsFromDisplayedTree(this.displayedTreeRight, this.displayedColumnsRight);\n    this.joinColumnsAriaOrder();\n    this.joinDisplayedColumns();\n    this.setLeftValues(source);\n    this.displayedAutoHeightCols = this.displayedColumns.filter((col) => col.isAutoHeight());\n  }\n  isAutoRowHeightActive() {\n    return this.autoHeightActive;\n  }\n  wasAutoRowHeightEverActive() {\n    return this.autoHeightActiveAtLeastOnce;\n  }\n  joinColumnsAriaOrder() {\n    const allColumns = this.getAllGridColumns();\n    const pinnedLeft = [];\n    const center = [];\n    const pinnedRight = [];\n    for (const col of allColumns) {\n      const pinned = col.getPinned();\n      if (!pinned) {\n        center.push(col);\n      } else if (pinned === true || pinned === \"left\") {\n        pinnedLeft.push(col);\n      } else {\n        pinnedRight.push(col);\n      }\n    }\n    this.ariaOrderColumns = pinnedLeft.concat(center).concat(pinnedRight);\n  }\n  joinDisplayedColumns() {\n    if (this.gos.get(\"enableRtl\")) {\n      this.displayedColumns = this.displayedColumnsRight.concat(this.displayedColumnsCenter).concat(this.displayedColumnsLeft);\n    } else {\n      this.displayedColumns = this.displayedColumnsLeft.concat(this.displayedColumnsCenter).concat(this.displayedColumnsRight);\n    }\n  }\n  // sets the left pixel position of each column\n  setLeftValues(source) {\n    this.setLeftValuesOfColumns(source);\n    this.setLeftValuesOfGroups();\n  }\n  setLeftValuesOfColumns(source) {\n    if (!this.primaryColumns) {\n      return;\n    }\n    const allColumns = this.getPrimaryAndSecondaryAndAutoColumns().slice(0);\n    const doingRtl = this.gos.get(\"enableRtl\");\n    [\n      this.displayedColumnsLeft,\n      this.displayedColumnsRight,\n      this.displayedColumnsCenter\n    ].forEach((columns) => {\n      if (doingRtl) {\n        let left = this.getWidthOfColsInList(columns);\n        columns.forEach((column) => {\n          left -= column.getActualWidth();\n          column.setLeft(left, source);\n        });\n      } else {\n        let left = 0;\n        columns.forEach((column) => {\n          column.setLeft(left, source);\n          left += column.getActualWidth();\n        });\n      }\n      removeAllFromUnorderedArray(allColumns, columns);\n    });\n    allColumns.forEach((column) => {\n      column.setLeft(null, source);\n    });\n  }\n  setLeftValuesOfGroups() {\n    [\n      this.displayedTreeLeft,\n      this.displayedTreeRight,\n      this.displayedTreeCentre\n    ].forEach((columns) => {\n      columns.forEach((column) => {\n        if (column instanceof ColumnGroup) {\n          const columnGroup = column;\n          columnGroup.checkLeft();\n        }\n      });\n    });\n  }\n  derivedDisplayedColumnsFromDisplayedTree(tree, columns) {\n    columns.length = 0;\n    depthFirstAllColumnTreeSearch(tree, true, (child) => {\n      if (child instanceof Column) {\n        columns.push(child);\n      }\n    });\n  }\n  isColumnVirtualisationSuppressed() {\n    return this.suppressColumnVirtualisation || this.viewportRight === 0;\n  }\n  extractViewportColumns() {\n    if (this.isColumnVirtualisationSuppressed()) {\n      this.viewportColumnsCenter = this.displayedColumnsCenter;\n      this.headerViewportColumnsCenter = this.displayedColumnsCenter;\n    } else {\n      this.viewportColumnsCenter = this.displayedColumnsCenter.filter(this.isColumnInRowViewport.bind(this));\n      this.headerViewportColumnsCenter = this.displayedColumnsCenter.filter(this.isColumnInHeaderViewport.bind(this));\n    }\n    this.viewportColumns = this.viewportColumnsCenter.concat(this.displayedColumnsLeft).concat(this.displayedColumnsRight);\n    this.headerViewportColumns = this.headerViewportColumnsCenter.concat(this.displayedColumnsLeft).concat(this.displayedColumnsRight);\n  }\n  getVirtualHeaderGroupRow(type, dept) {\n    let result;\n    switch (type) {\n      case \"left\":\n        result = this.viewportRowLeft[dept];\n        break;\n      case \"right\":\n        result = this.viewportRowRight[dept];\n        break;\n      default:\n        result = this.viewportRowCenter[dept];\n        break;\n    }\n    if (missing(result)) {\n      result = [];\n    }\n    return result;\n  }\n  calculateHeaderRows() {\n    this.viewportRowLeft = {};\n    this.viewportRowRight = {};\n    this.viewportRowCenter = {};\n    const virtualColIds = {};\n    this.headerViewportColumns.forEach((col) => virtualColIds[col.getId()] = true);\n    const testGroup = (children, result, dept) => {\n      let returnValue = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        let addThisItem = false;\n        if (child instanceof Column) {\n          addThisItem = virtualColIds[child.getId()] === true;\n        } else {\n          const columnGroup = child;\n          const displayedChildren = columnGroup.getDisplayedChildren();\n          if (displayedChildren) {\n            addThisItem = testGroup(displayedChildren, result, dept + 1);\n          }\n        }\n        if (addThisItem) {\n          returnValue = true;\n          if (!result[dept]) {\n            result[dept] = [];\n          }\n          result[dept].push(child);\n        }\n      }\n      return returnValue;\n    };\n    testGroup(this.displayedTreeLeft, this.viewportRowLeft, 0);\n    testGroup(this.displayedTreeRight, this.viewportRowRight, 0);\n    testGroup(this.displayedTreeCentre, this.viewportRowCenter, 0);\n  }\n  extractViewport() {\n    const hashColumn = (c) => `${c.getId()}-${c.getPinned() || \"normal\"}`;\n    this.extractViewportColumns();\n    const newHash = this.viewportColumns.map(hashColumn).join(\"#\");\n    const changed = this.viewportColumnsHash !== newHash;\n    if (changed) {\n      this.viewportColumnsHash = newHash;\n      this.calculateHeaderRows();\n    }\n    return changed;\n  }\n  refreshFlexedColumns(params = {}) {\n    var _a;\n    const source = params.source ? params.source : \"flex\";\n    if (params.viewportWidth != null) {\n      this.flexViewportWidth = params.viewportWidth;\n    }\n    if (!this.flexViewportWidth) {\n      return [];\n    }\n    let flexAfterDisplayIndex = -1;\n    if (params.resizingCols) {\n      const allResizingCols = new Set(params.resizingCols);\n      let displayedCols = this.displayedColumnsCenter;\n      for (let i = displayedCols.length - 1; i >= 0; i--) {\n        if (allResizingCols.has(displayedCols[i])) {\n          flexAfterDisplayIndex = i;\n          break;\n        }\n      }\n    }\n    let knownColumnsWidth = 0;\n    let flexingColumns = [];\n    let minimumFlexedWidth = 0;\n    let totalFlex = 0;\n    for (let i = 0; i < this.displayedColumnsCenter.length; i++) {\n      const isFlex = this.displayedColumnsCenter[i].getFlex() && i > flexAfterDisplayIndex;\n      if (isFlex) {\n        flexingColumns.push(this.displayedColumnsCenter[i]);\n        totalFlex += this.displayedColumnsCenter[i].getFlex();\n        minimumFlexedWidth += (_a = this.displayedColumnsCenter[i].getMinWidth()) != null ? _a : 0;\n      } else {\n        knownColumnsWidth += this.displayedColumnsCenter[i].getActualWidth();\n      }\n    }\n    ;\n    if (!flexingColumns.length) {\n      return [];\n    }\n    let changedColumns = [];\n    if (knownColumnsWidth + minimumFlexedWidth > this.flexViewportWidth) {\n      flexingColumns.forEach((col) => {\n        var _a2;\n        return col.setActualWidth((_a2 = col.getMinWidth()) != null ? _a2 : 0, source);\n      });\n      changedColumns = flexingColumns;\n      flexingColumns = [];\n    }\n    const flexingColumnSizes = [];\n    let spaceForFlexingColumns;\n    outer:\n      while (true) {\n        spaceForFlexingColumns = this.flexViewportWidth - knownColumnsWidth;\n        const spacePerFlex = spaceForFlexingColumns / totalFlex;\n        for (let i = 0; i < flexingColumns.length; i++) {\n          const col = flexingColumns[i];\n          const widthByFlexRule = spacePerFlex * col.getFlex();\n          let constrainedWidth = 0;\n          const minWidth = col.getMinWidth();\n          const maxWidth = col.getMaxWidth();\n          if (exists(minWidth) && widthByFlexRule < minWidth) {\n            constrainedWidth = minWidth;\n          } else if (exists(maxWidth) && widthByFlexRule > maxWidth) {\n            constrainedWidth = maxWidth;\n          }\n          if (constrainedWidth) {\n            col.setActualWidth(constrainedWidth, source);\n            removeFromUnorderedArray(flexingColumns, col);\n            totalFlex -= col.getFlex();\n            changedColumns.push(col);\n            knownColumnsWidth += col.getActualWidth();\n            continue outer;\n          }\n          flexingColumnSizes[i] = Math.round(widthByFlexRule);\n        }\n        break;\n      }\n    let remainingSpace = spaceForFlexingColumns;\n    flexingColumns.forEach((col, i) => {\n      col.setActualWidth(Math.min(flexingColumnSizes[i], remainingSpace), source);\n      changedColumns.push(col);\n      remainingSpace -= flexingColumnSizes[i];\n    });\n    if (!params.skipSetLeft) {\n      this.setLeftValues(source);\n    }\n    if (params.updateBodyWidths) {\n      this.updateBodyWidths();\n    }\n    if (params.fireResizedEvent) {\n      this.dispatchColumnResizedEvent(changedColumns, true, source, flexingColumns);\n    }\n    return flexingColumns;\n  }\n  // called from api\n  sizeColumnsToFit(gridWidth, source = \"sizeColumnsToFit\", silent, params) {\n    var _c, _d, _e, _f, _g;\n    if (this.shouldQueueResizeOperations) {\n      this.resizeOperationQueue.push(() => this.sizeColumnsToFit(gridWidth, source, silent, params));\n      return;\n    }\n    const limitsMap = {};\n    if (params) {\n      (_c = params == null ? void 0 : params.columnLimits) == null ? void 0 : _c.forEach((_a) => {\n        var _b = _a, { key } = _b, dimensions = __objRest(_b, [\"key\"]);\n        limitsMap[typeof key === \"string\" ? key : key.getColId()] = dimensions;\n      });\n    }\n    const allDisplayedColumns = this.getAllDisplayedColumns();\n    const doColumnsAlreadyFit = gridWidth === this.getWidthOfColsInList(allDisplayedColumns);\n    if (gridWidth <= 0 || !allDisplayedColumns.length || doColumnsAlreadyFit) {\n      return;\n    }\n    const colsToSpread = [];\n    const colsToNotSpread = [];\n    allDisplayedColumns.forEach((column) => {\n      if (column.getColDef().suppressSizeToFit === true) {\n        colsToNotSpread.push(column);\n      } else {\n        colsToSpread.push(column);\n      }\n    });\n    const colsToDispatchEventFor = colsToSpread.slice(0);\n    let finishedResizing = false;\n    const moveToNotSpread = (column) => {\n      removeFromArray(colsToSpread, column);\n      colsToNotSpread.push(column);\n    };\n    colsToSpread.forEach((column) => {\n      var _a, _b;\n      column.resetActualWidth(source);\n      const widthOverride = limitsMap == null ? void 0 : limitsMap[column.getId()];\n      const minOverride = (_a = widthOverride == null ? void 0 : widthOverride.minWidth) != null ? _a : params == null ? void 0 : params.defaultMinWidth;\n      const maxOverride = (_b = widthOverride == null ? void 0 : widthOverride.maxWidth) != null ? _b : params == null ? void 0 : params.defaultMaxWidth;\n      const colWidth = column.getActualWidth();\n      if (typeof minOverride === \"number\" && colWidth < minOverride) {\n        column.setActualWidth(minOverride, source, true);\n      } else if (typeof maxOverride === \"number\" && colWidth > maxOverride) {\n        column.setActualWidth(maxOverride, source, true);\n      }\n    });\n    while (!finishedResizing) {\n      finishedResizing = true;\n      const availablePixels = gridWidth - this.getWidthOfColsInList(colsToNotSpread);\n      if (availablePixels <= 0) {\n        colsToSpread.forEach((column) => {\n          var _a, _b;\n          const widthOverride = (_b = (_a = limitsMap == null ? void 0 : limitsMap[column.getId()]) == null ? void 0 : _a.minWidth) != null ? _b : params == null ? void 0 : params.defaultMinWidth;\n          if (typeof widthOverride === \"number\") {\n            column.setActualWidth(widthOverride, source, true);\n            return;\n          }\n          column.setMinimum(source);\n        });\n      } else {\n        const scale = availablePixels / this.getWidthOfColsInList(colsToSpread);\n        let pixelsForLastCol = availablePixels;\n        for (let i = colsToSpread.length - 1; i >= 0; i--) {\n          const column = colsToSpread[i];\n          const widthOverride = limitsMap == null ? void 0 : limitsMap[column.getId()];\n          const minOverride = (_d = widthOverride == null ? void 0 : widthOverride.minWidth) != null ? _d : params == null ? void 0 : params.defaultMinWidth;\n          const maxOverride = (_e = widthOverride == null ? void 0 : widthOverride.maxWidth) != null ? _e : params == null ? void 0 : params.defaultMaxWidth;\n          const colMinWidth = (_f = column.getMinWidth()) != null ? _f : 0;\n          const colMaxWidth = (_g = column.getMaxWidth()) != null ? _g : Number.MAX_VALUE;\n          const minWidth = typeof minOverride === \"number\" && minOverride > colMinWidth ? minOverride : column.getMinWidth();\n          const maxWidth = typeof maxOverride === \"number\" && maxOverride < colMaxWidth ? maxOverride : column.getMaxWidth();\n          let newWidth = Math.round(column.getActualWidth() * scale);\n          if (exists(minWidth) && newWidth < minWidth) {\n            newWidth = minWidth;\n            moveToNotSpread(column);\n            finishedResizing = false;\n          } else if (exists(maxWidth) && newWidth > maxWidth) {\n            newWidth = maxWidth;\n            moveToNotSpread(column);\n            finishedResizing = false;\n          } else if (i === 0) {\n            newWidth = pixelsForLastCol;\n          }\n          column.setActualWidth(newWidth, source, true);\n          pixelsForLastCol -= newWidth;\n        }\n      }\n    }\n    colsToDispatchEventFor.forEach((col) => {\n      col.fireColumnWidthChangedEvent(source);\n    });\n    this.setLeftValues(source);\n    this.updateBodyWidths();\n    if (silent) {\n      return;\n    }\n    this.dispatchColumnResizedEvent(colsToDispatchEventFor, true, source);\n  }\n  buildDisplayedTrees(visibleColumns) {\n    const leftVisibleColumns = [];\n    const rightVisibleColumns = [];\n    const centerVisibleColumns = [];\n    visibleColumns.forEach((column) => {\n      switch (column.getPinned()) {\n        case \"left\":\n          leftVisibleColumns.push(column);\n          break;\n        case \"right\":\n          rightVisibleColumns.push(column);\n          break;\n        default:\n          centerVisibleColumns.push(column);\n          break;\n      }\n    });\n    const groupInstanceIdCreator = new GroupInstanceIdCreator();\n    this.displayedTreeLeft = this.displayedGroupCreator.createDisplayedGroups(\n      leftVisibleColumns,\n      groupInstanceIdCreator,\n      \"left\",\n      this.displayedTreeLeft\n    );\n    this.displayedTreeRight = this.displayedGroupCreator.createDisplayedGroups(\n      rightVisibleColumns,\n      groupInstanceIdCreator,\n      \"right\",\n      this.displayedTreeRight\n    );\n    this.displayedTreeCentre = this.displayedGroupCreator.createDisplayedGroups(\n      centerVisibleColumns,\n      groupInstanceIdCreator,\n      null,\n      this.displayedTreeCentre\n    );\n    this.updateDisplayedMap();\n  }\n  updateDisplayedMap() {\n    this.displayedColumnsAndGroupsMap = {};\n    const func = (child) => {\n      this.displayedColumnsAndGroupsMap[child.getUniqueId()] = child;\n    };\n    depthFirstAllColumnTreeSearch(this.displayedTreeCentre, false, func);\n    depthFirstAllColumnTreeSearch(this.displayedTreeLeft, false, func);\n    depthFirstAllColumnTreeSearch(this.displayedTreeRight, false, func);\n  }\n  isDisplayed(item) {\n    const fromMap = this.displayedColumnsAndGroupsMap[item.getUniqueId()];\n    return fromMap === item;\n  }\n  updateOpenClosedVisibilityInColumnGroups() {\n    const allColumnGroups = this.getAllDisplayedTrees();\n    depthFirstAllColumnTreeSearch(allColumnGroups, false, (child) => {\n      if (child instanceof ColumnGroup) {\n        child.calculateDisplayedColumns();\n      }\n    });\n  }\n  getGroupAutoColumns() {\n    return this.groupAutoColumns;\n  }\n  /**\n   * Creates new auto group columns if required\n   * @returns whether auto cols have changed\n   */\n  createGroupAutoColumnsIfNeeded() {\n    const forceRecreateAutoGroups = this.forceRecreateAutoGroups;\n    this.forceRecreateAutoGroups = false;\n    if (!this.autoGroupsNeedBuilding) {\n      return false;\n    }\n    this.autoGroupsNeedBuilding = false;\n    const groupFullWidthRow = this.gos.isGroupUseEntireRow(this.pivotMode);\n    const suppressAutoColumn = this.pivotMode ? this.gos.get(\"pivotSuppressAutoColumn\") : this.isGroupSuppressAutoColumn();\n    const groupingActive = this.rowGroupColumns.length > 0 || this.gos.get(\"treeData\");\n    const needAutoColumns = groupingActive && !suppressAutoColumn && !groupFullWidthRow;\n    if (needAutoColumns) {\n      const newAutoGroupCols = this.autoGroupColService.createAutoGroupColumns(this.rowGroupColumns);\n      const autoColsDifferent = !this.autoColsEqual(newAutoGroupCols, this.groupAutoColumns);\n      if (autoColsDifferent || forceRecreateAutoGroups) {\n        this.groupAutoColumns = newAutoGroupCols;\n        return true;\n      }\n    } else {\n      this.groupAutoColumns = null;\n    }\n    return false;\n  }\n  isGroupSuppressAutoColumn() {\n    const groupDisplayType = this.gos.get(\"groupDisplayType\");\n    const isCustomRowGroups = groupDisplayType === \"custom\";\n    if (isCustomRowGroups) {\n      return true;\n    }\n    const treeDataDisplayType = this.gos.get(\"treeDataDisplayType\");\n    return treeDataDisplayType === \"custom\";\n  }\n  autoColsEqual(colsA, colsB) {\n    return areEqual(colsA, colsB, (a, b) => a.getColId() === b.getColId());\n  }\n  getWidthOfColsInList(columnList) {\n    return columnList.reduce((width, col) => width + col.getActualWidth(), 0);\n  }\n  getFirstDisplayedColumn() {\n    const isRtl = this.gos.get(\"enableRtl\");\n    const queryOrder = [\n      \"getDisplayedLeftColumns\",\n      \"getDisplayedCenterColumns\",\n      \"getDisplayedRightColumns\"\n    ];\n    if (isRtl) {\n      queryOrder.reverse();\n    }\n    for (let i = 0; i < queryOrder.length; i++) {\n      const container = this[queryOrder[i]]();\n      if (container.length) {\n        return isRtl ? last(container) : container[0];\n      }\n    }\n    return null;\n  }\n  setColumnHeaderHeight(col, height) {\n    const changed = col.setAutoHeaderHeight(height);\n    if (changed) {\n      const event = {\n        type: Events.EVENT_COLUMN_HEADER_HEIGHT_CHANGED,\n        column: col,\n        columns: [col],\n        source: \"autosizeColumnHeaderHeight\"\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  getColumnGroupHeaderRowHeight() {\n    if (this.isPivotMode()) {\n      return this.getPivotGroupHeaderHeight();\n    }\n    return this.getGroupHeaderHeight();\n  }\n  getColumnHeaderRowHeight() {\n    const defaultHeight = this.isPivotMode() ? this.getPivotHeaderHeight() : this.getHeaderHeight();\n    const displayedHeights = this.getAllDisplayedColumns().filter((col) => col.isAutoHeaderHeight()).map((col) => col.getAutoHeaderHeight() || 0);\n    return Math.max(defaultHeight, ...displayedHeights);\n  }\n  getHeaderHeight() {\n    var _a;\n    return (_a = this.gos.get(\"headerHeight\")) != null ? _a : this.environment.getFromTheme(25, \"headerHeight\");\n  }\n  getFloatingFiltersHeight() {\n    var _a;\n    return (_a = this.gos.get(\"floatingFiltersHeight\")) != null ? _a : this.getHeaderHeight();\n  }\n  getGroupHeaderHeight() {\n    var _a;\n    return (_a = this.gos.get(\"groupHeaderHeight\")) != null ? _a : this.getHeaderHeight();\n  }\n  getPivotHeaderHeight() {\n    var _a;\n    return (_a = this.gos.get(\"pivotHeaderHeight\")) != null ? _a : this.getHeaderHeight();\n  }\n  getPivotGroupHeaderHeight() {\n    var _a;\n    return (_a = this.gos.get(\"pivotGroupHeaderHeight\")) != null ? _a : this.getGroupHeaderHeight();\n  }\n  queueResizeOperations() {\n    this.shouldQueueResizeOperations = true;\n  }\n  processResizeOperations() {\n    this.shouldQueueResizeOperations = false;\n    this.resizeOperationQueue.forEach((resizeOperation) => resizeOperation());\n    this.resizeOperationQueue = [];\n  }\n  resetColumnDefIntoColumn(column, source) {\n    const userColDef = column.getUserProvidedColDef();\n    if (!userColDef) {\n      return false;\n    }\n    const newColDef = this.columnFactory.addColumnDefaultAndTypes(userColDef, column.getColId());\n    column.setColDef(newColDef, userColDef, source);\n    return true;\n  }\n  isColumnGroupingLocked(column) {\n    const groupLockGroupColumns = this.gos.get(\"groupLockGroupColumns\");\n    if (!column.isRowGroupActive() || groupLockGroupColumns === 0) {\n      return false;\n    }\n    if (groupLockGroupColumns === -1) {\n      return true;\n    }\n    const colIndex = this.rowGroupColumns.findIndex((groupCol) => groupCol.getColId() === column.getColId());\n    return groupLockGroupColumns > colIndex;\n  }\n  generateColumnStateForRowGroupAndPivotIndexes(updatedRowGroupColumnState, updatedPivotColumnState) {\n    let existingColumnStateUpdates = {};\n    const orderColumns = (updatedColumnState, colList, enableProp, initialEnableProp, indexProp, initialIndexProp) => {\n      if (!colList.length || !this.primaryColumns) {\n        return [];\n      }\n      const updatedColIdArray = Object.keys(updatedColumnState);\n      const updatedColIds = new Set(updatedColIdArray);\n      const newColIds = new Set(updatedColIdArray);\n      const allColIds = new Set(colList.map((column) => {\n        const colId = column.getColId();\n        newColIds.delete(colId);\n        return colId;\n      }).concat(updatedColIdArray));\n      const colIdsInOriginalOrder = [];\n      const originalOrderMap = {};\n      let orderIndex = 0;\n      for (let i = 0; i < this.primaryColumns.length; i++) {\n        const colId = this.primaryColumns[i].getColId();\n        if (allColIds.has(colId)) {\n          colIdsInOriginalOrder.push(colId);\n          originalOrderMap[colId] = orderIndex++;\n        }\n      }\n      let index = 1e3;\n      let hasAddedNewCols = false;\n      let lastIndex = 0;\n      const processPrecedingNewCols = (colId) => {\n        const originalOrderIndex = originalOrderMap[colId];\n        for (let i = lastIndex; i < originalOrderIndex; i++) {\n          const newColId = colIdsInOriginalOrder[i];\n          if (newColIds.has(newColId)) {\n            updatedColumnState[newColId][indexProp] = index++;\n            newColIds.delete(newColId);\n          }\n        }\n        lastIndex = originalOrderIndex;\n      };\n      colList.forEach((column) => {\n        const colId = column.getColId();\n        if (updatedColIds.has(colId)) {\n          processPrecedingNewCols(colId);\n          updatedColumnState[colId][indexProp] = index++;\n        } else {\n          const colDef = column.getColDef();\n          const missingIndex = colDef[indexProp] === null || colDef[indexProp] === void 0 && colDef[initialIndexProp] == null;\n          if (missingIndex) {\n            if (!hasAddedNewCols) {\n              const propEnabled = colDef[enableProp] || colDef[enableProp] === void 0 && colDef[initialEnableProp];\n              if (propEnabled) {\n                processPrecedingNewCols(colId);\n              } else {\n                newColIds.forEach((newColId) => {\n                  updatedColumnState[newColId][indexProp] = index + originalOrderMap[newColId];\n                });\n                index += colIdsInOriginalOrder.length;\n                hasAddedNewCols = true;\n              }\n            }\n            if (!existingColumnStateUpdates[colId]) {\n              existingColumnStateUpdates[colId] = { colId };\n            }\n            existingColumnStateUpdates[colId][indexProp] = index++;\n          }\n        }\n      });\n    };\n    orderColumns(updatedRowGroupColumnState, this.rowGroupColumns, \"rowGroup\", \"initialRowGroup\", \"rowGroupIndex\", \"initialRowGroupIndex\");\n    orderColumns(updatedPivotColumnState, this.pivotColumns, \"pivot\", \"initialPivot\", \"pivotIndex\", \"initialPivotIndex\");\n    return Object.values(existingColumnStateUpdates);\n  }\n  onColumnsReady() {\n    const autoSizeStrategy = this.gos.get(\"autoSizeStrategy\");\n    if (!autoSizeStrategy) {\n      return;\n    }\n    const { type } = autoSizeStrategy;\n    setTimeout(() => {\n      if (type === \"fitGridWidth\") {\n        const { columnLimits: propColumnLimits, defaultMinWidth, defaultMaxWidth } = autoSizeStrategy;\n        const columnLimits = propColumnLimits == null ? void 0 : propColumnLimits.map(({ colId: key, minWidth, maxWidth }) => ({\n          key,\n          minWidth,\n          maxWidth\n        }));\n        this.ctrlsService.getGridBodyCtrl().sizeColumnsToFit({\n          defaultMinWidth,\n          defaultMaxWidth,\n          columnLimits\n        });\n      } else if (type === \"fitProvidedWidth\") {\n        this.sizeColumnsToFit(autoSizeStrategy.width, \"sizeColumnsToFit\");\n      }\n    });\n  }\n  onFirstDataRendered() {\n    const autoSizeStrategy = this.gos.get(\"autoSizeStrategy\");\n    if ((autoSizeStrategy == null ? void 0 : autoSizeStrategy.type) !== \"fitCellContents\") {\n      return;\n    }\n    const { colIds: columns, skipHeader } = autoSizeStrategy;\n    setTimeout(() => {\n      if (columns) {\n        this.autoSizeColumns({\n          columns,\n          skipHeader,\n          source: \"autosizeColumns\"\n        });\n      } else {\n        this.autoSizeAllColumns(\"autosizeColumns\", skipHeader);\n      }\n    });\n  }\n};\n__decorateClass([\n  Autowired(\"expressionService\")\n], ColumnModel.prototype, \"expressionService\", 2);\n__decorateClass([\n  Autowired(\"columnFactory\")\n], ColumnModel.prototype, \"columnFactory\", 2);\n__decorateClass([\n  Autowired(\"displayedGroupCreator\")\n], ColumnModel.prototype, \"displayedGroupCreator\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], ColumnModel.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"autoWidthCalculator\")\n], ColumnModel.prototype, \"autoWidthCalculator\", 2);\n__decorateClass([\n  Autowired(\"columnAnimationService\")\n], ColumnModel.prototype, \"columnAnimationService\", 2);\n__decorateClass([\n  Autowired(\"autoGroupColService\")\n], ColumnModel.prototype, \"autoGroupColService\", 2);\n__decorateClass([\n  Autowired(\"valueCache\")\n], ColumnModel.prototype, \"valueCache\", 2);\n__decorateClass([\n  Autowired(\"animationFrameService\")\n], ColumnModel.prototype, \"animationFrameService\", 2);\n__decorateClass([\n  Autowired(\"sortController\")\n], ColumnModel.prototype, \"sortController\", 2);\n__decorateClass([\n  Autowired(\"columnDefFactory\")\n], ColumnModel.prototype, \"columnDefFactory\", 2);\n__decorateClass([\n  Optional(\"aggFuncService\")\n], ColumnModel.prototype, \"aggFuncService\", 2);\n__decorateClass([\n  PostConstruct\n], ColumnModel.prototype, \"init\", 1);\n__decorateClass([\n  PreDestroy\n], ColumnModel.prototype, \"destroyColumns\", 1);\n__decorateClass([\n  __decorateParam(0, Qualifier(\"loggerFactory\"))\n], ColumnModel.prototype, \"setBeans\", 1);\nColumnModel = __decorateClass([\n  Bean(\"columnModel\")\n], ColumnModel);\nfunction convertSourceType(source) {\n  return source === \"gridOptionsUpdated\" ? \"gridOptionsChanged\" : source;\n}\nfunction depthFirstAllColumnTreeSearch(tree, useDisplayedChildren, callback) {\n  if (!tree) {\n    return;\n  }\n  for (let i = 0; i < tree.length; i++) {\n    const child = tree[i];\n    if (child instanceof ColumnGroup) {\n      const childTree = useDisplayedChildren ? child.getDisplayedChildren() : child.getChildren();\n      depthFirstAllColumnTreeSearch(childTree, useDisplayedChildren, callback);\n    }\n    callback(child);\n  }\n}\n\n// community-modules/core/src/columns/displayedGroupCreator.ts\nvar DisplayedGroupCreator = class extends BeanStub {\n  createDisplayedGroups(sortedVisibleColumns, groupInstanceIdCreator, pinned, oldDisplayedGroups) {\n    const oldColumnsMapped = this.mapOldGroupsById(oldDisplayedGroups);\n    const topLevelResultCols = [];\n    let groupsOrColsAtCurrentLevel = sortedVisibleColumns;\n    while (groupsOrColsAtCurrentLevel.length) {\n      const currentlyIterating = groupsOrColsAtCurrentLevel;\n      groupsOrColsAtCurrentLevel = [];\n      let lastGroupedColIdx = 0;\n      const createGroupToIndex = (to) => {\n        const from = lastGroupedColIdx;\n        lastGroupedColIdx = to;\n        const previousNode = currentlyIterating[from];\n        const previousNodeProvided = previousNode instanceof ColumnGroup ? previousNode.getProvidedColumnGroup() : previousNode;\n        const previousNodeParent = previousNodeProvided.getOriginalParent();\n        if (previousNodeParent == null) {\n          for (let i = from; i < to; i++) {\n            topLevelResultCols.push(currentlyIterating[i]);\n          }\n          return;\n        }\n        const newGroup = this.createColumnGroup(\n          previousNodeParent,\n          groupInstanceIdCreator,\n          oldColumnsMapped,\n          pinned\n        );\n        for (let i = from; i < to; i++) {\n          newGroup.addChild(currentlyIterating[i]);\n        }\n        groupsOrColsAtCurrentLevel.push(newGroup);\n      };\n      for (let i = 1; i < currentlyIterating.length; i++) {\n        const thisNode = currentlyIterating[i];\n        const thisNodeProvided = thisNode instanceof ColumnGroup ? thisNode.getProvidedColumnGroup() : thisNode;\n        const thisNodeParent = thisNodeProvided.getOriginalParent();\n        const previousNode = currentlyIterating[lastGroupedColIdx];\n        const previousNodeProvided = previousNode instanceof ColumnGroup ? previousNode.getProvidedColumnGroup() : previousNode;\n        const previousNodeParent = previousNodeProvided.getOriginalParent();\n        if (thisNodeParent !== previousNodeParent) {\n          createGroupToIndex(i);\n        }\n      }\n      if (lastGroupedColIdx < currentlyIterating.length) {\n        createGroupToIndex(currentlyIterating.length);\n      }\n    }\n    this.setupParentsIntoColumns(topLevelResultCols, null);\n    return topLevelResultCols;\n  }\n  createColumnGroup(providedGroup, groupInstanceIdCreator, oldColumnsMapped, pinned) {\n    const groupId = providedGroup.getGroupId();\n    const instanceId = groupInstanceIdCreator.getInstanceIdForKey(groupId);\n    const uniqueId = ColumnGroup.createUniqueId(groupId, instanceId);\n    let columnGroup = oldColumnsMapped[uniqueId];\n    if (columnGroup && columnGroup.getProvidedColumnGroup() !== providedGroup) {\n      columnGroup = null;\n    }\n    if (exists(columnGroup)) {\n      columnGroup.reset();\n    } else {\n      columnGroup = new ColumnGroup(providedGroup, groupId, instanceId, pinned);\n      this.context.createBean(columnGroup);\n    }\n    return columnGroup;\n  }\n  // returns back a 2d map of ColumnGroup as follows: groupId -> instanceId -> ColumnGroup\n  mapOldGroupsById(displayedGroups) {\n    const result = {};\n    const recursive = (columnsOrGroups) => {\n      columnsOrGroups.forEach((columnOrGroup) => {\n        if (columnOrGroup instanceof ColumnGroup) {\n          const columnGroup = columnOrGroup;\n          result[columnOrGroup.getUniqueId()] = columnGroup;\n          recursive(columnGroup.getChildren());\n        }\n      });\n    };\n    if (displayedGroups) {\n      recursive(displayedGroups);\n    }\n    return result;\n  }\n  setupParentsIntoColumns(columnsOrGroups, parent) {\n    columnsOrGroups.forEach((columnsOrGroup) => {\n      columnsOrGroup.setParent(parent);\n      if (columnsOrGroup instanceof ColumnGroup) {\n        const columnGroup = columnsOrGroup;\n        this.setupParentsIntoColumns(columnGroup.getChildren(), columnGroup);\n      }\n    });\n  }\n};\nDisplayedGroupCreator = __decorateClass([\n  Bean(\"displayedGroupCreator\")\n], DisplayedGroupCreator);\n\n// community-modules/core/src/propertyKeys.ts\nvar INITIAL_GRID_OPTION_KEYS = {\n  enableBrowserTooltips: true,\n  tooltipTrigger: true,\n  tooltipMouseTrack: true,\n  tooltipShowMode: true,\n  tooltipInteraction: true,\n  defaultColGroupDef: true,\n  suppressAutoSize: true,\n  skipHeaderOnAutoSize: true,\n  autoSizeStrategy: true,\n  components: true,\n  stopEditingWhenCellsLoseFocus: true,\n  undoRedoCellEditing: true,\n  undoRedoCellEditingLimit: true,\n  excelStyles: true,\n  cacheQuickFilter: true,\n  excludeHiddenColumnsFromQuickFilter: true,\n  advancedFilterModel: true,\n  customChartThemes: true,\n  chartThemeOverrides: true,\n  enableChartToolPanelsButton: true,\n  suppressChartToolPanelsButton: true,\n  chartToolPanelsDef: true,\n  loadingCellRendererSelector: true,\n  localeText: true,\n  keepDetailRows: true,\n  keepDetailRowsCount: true,\n  detailRowHeight: true,\n  detailRowAutoHeight: true,\n  tabIndex: true,\n  valueCache: true,\n  valueCacheNeverExpires: true,\n  enableCellExpressions: true,\n  suppressParentsInRowNodes: true,\n  suppressTouch: true,\n  suppressAsyncEvents: true,\n  suppressBrowserResizeObserver: true,\n  suppressPropertyNamesCheck: true,\n  debug: true,\n  loadingOverlayComponent: true,\n  suppressLoadingOverlay: true,\n  noRowsOverlayComponent: true,\n  paginationPageSizeSelector: true,\n  paginateChildRows: true,\n  pivotPanelShow: true,\n  pivotSuppressAutoColumn: true,\n  suppressExpandablePivotGroups: true,\n  aggFuncs: true,\n  suppressAggFuncInHeader: true,\n  suppressAggAtRootLevel: true,\n  removePivotHeaderRowWhenSingleValueColumn: true,\n  allowShowChangeAfterFilter: true,\n  ensureDomOrder: true,\n  enableRtl: true,\n  suppressColumnVirtualisation: true,\n  suppressMaxRenderedRowRestriction: true,\n  suppressRowVirtualisation: true,\n  rowDragText: true,\n  suppressGroupMaintainValueType: true,\n  groupLockGroupColumns: true,\n  rowGroupPanelSuppressSort: true,\n  suppressGroupRowsSticky: true,\n  rowModelType: true,\n  cacheOverflowSize: true,\n  infiniteInitialRowCount: true,\n  serverSideInitialRowCount: true,\n  suppressServerSideInfiniteScroll: true,\n  maxBlocksInCache: true,\n  maxConcurrentDatasourceRequests: true,\n  blockLoadDebounceMillis: true,\n  serverSideOnlyRefreshFilteredGroups: true,\n  serverSidePivotResultFieldSeparator: true,\n  viewportRowModelPageSize: true,\n  viewportRowModelBufferSize: true,\n  debounceVerticalScrollbar: true,\n  suppressAnimationFrame: true,\n  suppressPreventDefaultOnMouseWheel: true,\n  scrollbarWidth: true,\n  icons: true,\n  suppressRowTransform: true,\n  gridId: true,\n  functionsPassive: true,\n  enableGroupEdit: true,\n  initialState: true,\n  processUnpinnedColumns: true,\n  createChartContainer: true,\n  getLocaleText: true,\n  getRowId: true,\n  reactiveCustomComponents: true,\n  columnMenu: true\n};\nvar _PropertyKeys = class _PropertyKeys {\n};\n_PropertyKeys.STRING_PROPERTIES = [\n  \"rowSelection\",\n  \"overlayLoadingTemplate\",\n  \"overlayNoRowsTemplate\",\n  \"gridId\",\n  \"quickFilterText\",\n  \"rowModelType\",\n  \"editType\",\n  \"domLayout\",\n  \"clipboardDelimiter\",\n  \"rowGroupPanelShow\",\n  \"multiSortKey\",\n  \"pivotColumnGroupTotals\",\n  \"pivotRowTotals\",\n  \"pivotPanelShow\",\n  \"fillHandleDirection\",\n  \"groupDisplayType\",\n  \"treeDataDisplayType\",\n  \"colResizeDefault\",\n  \"tooltipTrigger\",\n  \"serverSidePivotResultFieldSeparator\",\n  \"columnMenu\",\n  \"tooltipShowMode\",\n  \"grandTotalRow\"\n];\n_PropertyKeys.OBJECT_PROPERTIES = [\n  \"components\",\n  \"rowStyle\",\n  \"context\",\n  \"autoGroupColumnDef\",\n  \"localeText\",\n  \"icons\",\n  \"datasource\",\n  \"serverSideDatasource\",\n  \"viewportDatasource\",\n  \"groupRowRendererParams\",\n  \"aggFuncs\",\n  \"fullWidthCellRendererParams\",\n  \"defaultColGroupDef\",\n  \"defaultColDef\",\n  \"defaultCsvExportParams\",\n  \"defaultExcelExportParams\",\n  \"columnTypes\",\n  \"rowClassRules\",\n  \"detailCellRendererParams\",\n  \"loadingCellRendererParams\",\n  \"loadingOverlayComponentParams\",\n  \"noRowsOverlayComponentParams\",\n  \"popupParent\",\n  \"statusBar\",\n  \"sideBar\",\n  \"chartThemeOverrides\",\n  \"customChartThemes\",\n  \"chartToolPanelsDef\",\n  \"dataTypeDefinitions\",\n  \"advancedFilterModel\",\n  \"advancedFilterParent\",\n  \"advancedFilterBuilderParams\",\n  \"initialState\",\n  \"autoSizeStrategy\"\n];\n_PropertyKeys.ARRAY_PROPERTIES = [\n  \"sortingOrder\",\n  \"alignedGrids\",\n  \"rowData\",\n  \"columnDefs\",\n  \"excelStyles\",\n  \"pinnedTopRowData\",\n  \"pinnedBottomRowData\",\n  \"chartThemes\",\n  \"rowClass\",\n  \"paginationPageSizeSelector\"\n];\n// These properties are coerced at runtime, do not do union types\n_PropertyKeys.NUMBER_PROPERTIES = [\n  \"rowHeight\",\n  \"detailRowHeight\",\n  \"rowBuffer\",\n  \"headerHeight\",\n  \"groupHeaderHeight\",\n  \"groupLockGroupColumns\",\n  \"floatingFiltersHeight\",\n  \"pivotHeaderHeight\",\n  \"pivotGroupHeaderHeight\",\n  \"groupDefaultExpanded\",\n  \"pivotDefaultExpanded\",\n  \"viewportRowModelPageSize\",\n  \"viewportRowModelBufferSize\",\n  \"autoSizePadding\",\n  \"maxBlocksInCache\",\n  \"maxConcurrentDatasourceRequests\",\n  \"tooltipShowDelay\",\n  \"tooltipHideDelay\",\n  \"cacheOverflowSize\",\n  \"paginationPageSize\",\n  \"cacheBlockSize\",\n  \"infiniteInitialRowCount\",\n  \"serverSideInitialRowCount\",\n  \"scrollbarWidth\",\n  \"asyncTransactionWaitMillis\",\n  \"blockLoadDebounceMillis\",\n  \"keepDetailRowsCount\",\n  \"undoRedoCellEditingLimit\",\n  \"cellFlashDelay\",\n  \"cellFadeDelay\",\n  \"cellFlashDuration\",\n  \"cellFadeDuration\",\n  \"tabIndex\",\n  \"pivotMaxGeneratedColumns\"\n];\n// These properties are coerced at runtime, do not do union types\n_PropertyKeys.BOOLEAN_PROPERTIES = [\n  \"suppressMakeColumnVisibleAfterUnGroup\",\n  \"suppressRowClickSelection\",\n  \"suppressCellFocus\",\n  \"suppressHeaderFocus\",\n  \"suppressHorizontalScroll\",\n  \"groupSelectsChildren\",\n  \"alwaysShowHorizontalScroll\",\n  \"alwaysShowVerticalScroll\",\n  \"debug\",\n  \"enableBrowserTooltips\",\n  \"enableCellExpressions\",\n  \"groupIncludeTotalFooter\",\n  \"groupSuppressBlankHeader\",\n  \"suppressMenuHide\",\n  \"suppressRowDeselection\",\n  \"unSortIcon\",\n  \"suppressMultiSort\",\n  \"alwaysMultiSort\",\n  \"singleClickEdit\",\n  \"suppressLoadingOverlay\",\n  \"suppressNoRowsOverlay\",\n  \"suppressAutoSize\",\n  \"skipHeaderOnAutoSize\",\n  \"suppressParentsInRowNodes\",\n  \"suppressColumnMoveAnimation\",\n  \"suppressMovableColumns\",\n  \"suppressFieldDotNotation\",\n  \"enableRangeSelection\",\n  \"enableRangeHandle\",\n  \"enableFillHandle\",\n  \"suppressClearOnFillReduction\",\n  \"deltaSort\",\n  \"suppressTouch\",\n  \"suppressAsyncEvents\",\n  \"allowContextMenuWithControlKey\",\n  \"suppressContextMenu\",\n  \"enableCellChangeFlash\",\n  \"suppressDragLeaveHidesColumns\",\n  \"suppressRowGroupHidesColumns\",\n  \"suppressMiddleClickScrolls\",\n  \"suppressPreventDefaultOnMouseWheel\",\n  \"suppressCopyRowsToClipboard\",\n  \"copyHeadersToClipboard\",\n  \"copyGroupHeadersToClipboard\",\n  \"pivotMode\",\n  \"suppressAggFuncInHeader\",\n  \"suppressColumnVirtualisation\",\n  \"alwaysAggregateAtRootLevel\",\n  \"suppressAggAtRootLevel\",\n  \"suppressFocusAfterRefresh\",\n  \"functionsPassive\",\n  \"functionsReadOnly\",\n  \"animateRows\",\n  \"groupSelectsFiltered\",\n  \"groupRemoveSingleChildren\",\n  \"groupRemoveLowestSingleChildren\",\n  \"enableRtl\",\n  \"suppressClickEdit\",\n  \"rowDragEntireRow\",\n  \"rowDragManaged\",\n  \"suppressRowDrag\",\n  \"suppressMoveWhenRowDragging\",\n  \"rowDragMultiRow\",\n  \"enableGroupEdit\",\n  \"embedFullWidthRows\",\n  \"suppressPaginationPanel\",\n  \"groupHideOpenParents\",\n  \"groupAllowUnbalanced\",\n  \"pagination\",\n  \"paginationAutoPageSize\",\n  \"suppressScrollOnNewData\",\n  \"suppressScrollWhenPopupsAreOpen\",\n  \"purgeClosedRowNodes\",\n  \"cacheQuickFilter\",\n  \"includeHiddenColumnsInQuickFilter\",\n  \"excludeHiddenColumnsFromQuickFilter\",\n  \"ensureDomOrder\",\n  \"accentedSort\",\n  \"suppressChangeDetection\",\n  \"valueCache\",\n  \"valueCacheNeverExpires\",\n  \"aggregateOnlyChangedColumns\",\n  \"suppressAnimationFrame\",\n  \"suppressExcelExport\",\n  \"suppressCsvExport\",\n  \"includeHiddenColumnsInAdvancedFilter\",\n  \"suppressMultiRangeSelection\",\n  \"enterMovesDown\",\n  \"enterMovesDownAfterEdit\",\n  \"enterNavigatesVerticallyAfterEdit\",\n  \"enterNavigatesVertically\",\n  \"suppressPropertyNamesCheck\",\n  \"rowMultiSelectWithClick\",\n  \"suppressRowHoverHighlight\",\n  \"suppressRowTransform\",\n  \"suppressClipboardPaste\",\n  \"suppressLastEmptyLineOnPaste\",\n  \"enableCharts\",\n  \"enableChartToolPanelsButton\",\n  \"suppressChartToolPanelsButton\",\n  \"suppressMaintainUnsortedOrder\",\n  \"enableCellTextSelection\",\n  \"suppressBrowserResizeObserver\",\n  \"suppressMaxRenderedRowRestriction\",\n  \"excludeChildrenWhenTreeDataFiltering\",\n  \"tooltipMouseTrack\",\n  \"tooltipInteraction\",\n  \"keepDetailRows\",\n  \"paginateChildRows\",\n  \"preventDefaultOnContextMenu\",\n  \"undoRedoCellEditing\",\n  \"allowDragFromColumnsToolPanel\",\n  \"pivotSuppressAutoColumn\",\n  \"suppressExpandablePivotGroups\",\n  \"debounceVerticalScrollbar\",\n  \"detailRowAutoHeight\",\n  \"serverSideFilterAllLevels\",\n  \"serverSideSortAllLevels\",\n  \"serverSideEnableClientSideSort\",\n  \"serverSideOnlyRefreshFilteredGroups\",\n  \"serverSideSortOnServer\",\n  \"serverSideFilterOnServer\",\n  \"suppressAggFilteredOnly\",\n  \"showOpenedGroup\",\n  \"suppressClipboardApi\",\n  \"suppressModelUpdateAfterUpdateTransaction\",\n  \"stopEditingWhenCellsLoseFocus\",\n  \"maintainColumnOrder\",\n  \"groupMaintainOrder\",\n  \"columnHoverHighlight\",\n  \"readOnlyEdit\",\n  \"suppressRowVirtualisation\",\n  \"enableCellEditingOnBackspace\",\n  \"resetRowDataOnUpdate\",\n  \"removePivotHeaderRowWhenSingleValueColumn\",\n  \"suppressCopySingleCellRanges\",\n  \"suppressGroupRowsSticky\",\n  \"suppressCutToClipboard\",\n  \"suppressServerSideInfiniteScroll\",\n  \"rowGroupPanelSuppressSort\",\n  \"allowShowChangeAfterFilter\",\n  \"enableAdvancedFilter\",\n  \"masterDetail\",\n  \"treeData\",\n  \"suppressGroupMaintainValueType\",\n  \"reactiveCustomComponents\",\n  \"applyQuickFilterBeforePivotOrAgg\",\n  \"suppressServerSideFullWidthLoadingRow\",\n  \"suppressAdvancedFilterEval\"\n];\n// If property does not fit above, i.e union that should not be coerced.\n_PropertyKeys.OTHER_PROPERTIES = [\n  \"suppressStickyTotalRow\"\n];\n/** You do not need to include event callbacks in this list, as they are generated automatically. */\n_PropertyKeys.FUNCTIONAL_PROPERTIES = [\n  \"doesExternalFilterPass\",\n  \"processPivotResultColDef\",\n  \"processPivotResultColGroupDef\",\n  \"getBusinessKeyForNode\",\n  \"isRowSelectable\",\n  \"rowDragText\",\n  \"groupRowRenderer\",\n  \"fullWidthCellRenderer\",\n  \"loadingCellRenderer\",\n  \"loadingOverlayComponent\",\n  \"noRowsOverlayComponent\",\n  \"detailCellRenderer\",\n  \"quickFilterParser\",\n  \"quickFilterMatcher\"\n];\n/** These callbacks extend AgGridCommon interface */\n_PropertyKeys.CALLBACK_PROPERTIES = [\n  \"getLocaleText\",\n  \"isExternalFilterPresent\",\n  \"getRowHeight\",\n  \"getRowClass\",\n  \"getRowStyle\",\n  \"getContextMenuItems\",\n  \"getMainMenuItems\",\n  \"processRowPostCreate\",\n  \"processCellForClipboard\",\n  \"getGroupRowAgg\",\n  \"isFullWidthRow\",\n  \"sendToClipboard\",\n  \"navigateToNextHeader\",\n  \"tabToNextHeader\",\n  \"navigateToNextCell\",\n  \"tabToNextCell\",\n  \"processCellFromClipboard\",\n  \"getDocument\",\n  \"postProcessPopup\",\n  \"getChildCount\",\n  \"getDataPath\",\n  \"isRowMaster\",\n  \"postSortRows\",\n  \"processHeaderForClipboard\",\n  \"processUnpinnedColumns\",\n  \"processGroupHeaderForClipboard\",\n  \"paginationNumberFormatter\",\n  \"processDataFromClipboard\",\n  \"getServerSideGroupKey\",\n  \"isServerSideGroup\",\n  \"createChartContainer\",\n  \"getChartToolbarItems\",\n  \"fillOperation\",\n  \"isApplyServerSideTransaction\",\n  \"getServerSideGroupLevelParams\",\n  \"isServerSideGroupOpenByDefault\",\n  \"isGroupOpenByDefault\",\n  \"initialGroupOrderComparator\",\n  \"groupIncludeFooter\",\n  \"loadingCellRendererSelector\",\n  \"getRowId\",\n  \"groupAggFiltering\",\n  \"chartMenuItems\",\n  \"groupTotalRow\"\n];\n_PropertyKeys.FUNCTION_PROPERTIES = [\n  ..._PropertyKeys.FUNCTIONAL_PROPERTIES,\n  ..._PropertyKeys.CALLBACK_PROPERTIES\n];\n_PropertyKeys.ALL_PROPERTIES = [\n  ..._PropertyKeys.ARRAY_PROPERTIES,\n  ..._PropertyKeys.OBJECT_PROPERTIES,\n  ..._PropertyKeys.STRING_PROPERTIES,\n  ..._PropertyKeys.NUMBER_PROPERTIES,\n  ..._PropertyKeys.FUNCTION_PROPERTIES,\n  ..._PropertyKeys.BOOLEAN_PROPERTIES,\n  ..._PropertyKeys.OTHER_PROPERTIES\n];\nvar PropertyKeys = _PropertyKeys;\n\n// community-modules/core/src/components/componentUtil.ts\nvar _ComponentUtil = class _ComponentUtil {\n  static getCallbackForEvent(eventName) {\n    if (!eventName || eventName.length < 2) {\n      return eventName;\n    }\n    return \"on\" + eventName[0].toUpperCase() + eventName.substring(1);\n  }\n  static getGridOptionKeys() {\n    return this.ALL_PROPERTIES_AND_CALLBACKS;\n  }\n  /** Combines component props / attributes with the provided gridOptions returning a new combined gridOptions object */\n  static combineAttributesAndGridOptions(gridOptions, component) {\n    if (typeof gridOptions !== \"object\") {\n      gridOptions = {};\n    }\n    const mergedOptions = __spreadValues({}, gridOptions);\n    const keys2 = _ComponentUtil.getGridOptionKeys();\n    keys2.forEach((key) => {\n      const value = component[key];\n      if (typeof value !== \"undefined\" && value !== _ComponentUtil.VUE_OMITTED_PROPERTY) {\n        mergedOptions[key] = value;\n      }\n    });\n    return mergedOptions;\n  }\n  static processOnChange(changes, api, isVue) {\n    if (!changes) {\n      return;\n    }\n    const gridChanges = {};\n    let hasChanges = false;\n    Object.keys(changes).filter((key) => _ComponentUtil.ALL_PROPERTIES_AND_CALLBACKS_SET.has(key)).forEach((key) => {\n      gridChanges[key] = changes[key];\n      hasChanges = true;\n    });\n    if (!hasChanges) {\n      return;\n    }\n    api.__internalUpdateGridOptions(gridChanges, true);\n    const event = {\n      type: Events.EVENT_COMPONENT_STATE_CHANGED\n    };\n    iterateObject(gridChanges, (key, value) => {\n      event[key] = value;\n    });\n    api.dispatchEvent(event);\n  }\n};\n// all events\n_ComponentUtil.EVENTS = values(Events);\n_ComponentUtil.VUE_OMITTED_PROPERTY = \"AG-VUE-OMITTED-PROPERTY\";\n// events that are internal to AG Grid and should not be exposed to users via documentation or generated framework components\n/** Exclude the following internal events from code generation to prevent exposing these events via framework components */\n_ComponentUtil.EXCLUDED_INTERNAL_EVENTS = [\n  Events.EVENT_SCROLLBAR_WIDTH_CHANGED,\n  Events.EVENT_CHECKBOX_CHANGED,\n  Events.EVENT_HEIGHT_SCALE_CHANGED,\n  Events.EVENT_BODY_HEIGHT_CHANGED,\n  Events.EVENT_COLUMN_CONTAINER_WIDTH_CHANGED,\n  Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,\n  Events.EVENT_SCROLL_VISIBILITY_CHANGED,\n  Events.EVENT_COLUMN_HOVER_CHANGED,\n  Events.EVENT_FLASH_CELLS,\n  Events.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED,\n  Events.EVENT_DISPLAYED_ROWS_CHANGED,\n  Events.EVENT_LEFT_PINNED_WIDTH_CHANGED,\n  Events.EVENT_RIGHT_PINNED_WIDTH_CHANGED,\n  Events.EVENT_ROW_CONTAINER_HEIGHT_CHANGED,\n  Events.EVENT_STORE_UPDATED,\n  Events.EVENT_COLUMN_PANEL_ITEM_DRAG_START,\n  Events.EVENT_COLUMN_PANEL_ITEM_DRAG_END,\n  Events.EVENT_KEY_SHORTCUT_CHANGED_CELL_START,\n  Events.EVENT_KEY_SHORTCUT_CHANGED_CELL_END,\n  Events.EVENT_FULL_WIDTH_ROW_FOCUSED,\n  Events.EVENT_HEADER_HEIGHT_CHANGED,\n  Events.EVENT_COLUMN_HEADER_HEIGHT_CHANGED,\n  Events.EVENT_CELL_FOCUS_CLEARED,\n  Events.EVENT_GRID_STYLES_CHANGED,\n  Events.EVENT_FILTER_DESTROYED,\n  Events.EVENT_ROW_DATA_UPDATE_STARTED,\n  Events.EVENT_ADVANCED_FILTER_ENABLED_CHANGED,\n  Events.EVENT_DATA_TYPES_INFERRED,\n  Events.EVENT_FIELD_VALUE_CHANGED,\n  Events.EVENT_FIELD_PICKER_VALUE_SELECTED,\n  Events.EVENT_SUPPRESS_COLUMN_MOVE_CHANGED,\n  Events.EVENT_SUPPRESS_MENU_HIDE_CHANGED,\n  Events.EVENT_SUPPRESS_FIELD_DOT_NOTATION,\n  Events.EVENT_ROW_COUNT_READY,\n  Events.EVENT_SIDE_BAR_UPDATED\n];\n// events that are available for use by users of AG Grid and so should be documented\n/** EVENTS that should be exposed via code generation for the framework components.  */\n_ComponentUtil.PUBLIC_EVENTS = _ComponentUtil.EVENTS.filter((e) => !includes(_ComponentUtil.EXCLUDED_INTERNAL_EVENTS, e));\n// onXXX methods, based on the above events\n_ComponentUtil.EVENT_CALLBACKS = _ComponentUtil.EVENTS.map((event) => _ComponentUtil.getCallbackForEvent(event));\n_ComponentUtil.BOOLEAN_PROPERTIES = PropertyKeys.BOOLEAN_PROPERTIES;\n_ComponentUtil.ALL_PROPERTIES = PropertyKeys.ALL_PROPERTIES;\n_ComponentUtil.ALL_PROPERTIES_AND_CALLBACKS = [..._ComponentUtil.ALL_PROPERTIES, ..._ComponentUtil.EVENT_CALLBACKS];\n_ComponentUtil.ALL_PROPERTIES_AND_CALLBACKS_SET = new Set(_ComponentUtil.ALL_PROPERTIES_AND_CALLBACKS);\nvar ComponentUtil = _ComponentUtil;\n\n// community-modules/core/src/components/agStackComponentsRegistry.ts\nvar AgStackComponentsRegistry = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.componentsMappedByName = {};\n  }\n  setupComponents(components) {\n    if (components) {\n      components.forEach((componentMeta) => this.addComponent(componentMeta));\n    }\n  }\n  addComponent(componentMeta) {\n    const classEscaped = componentMeta.componentName.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n    const classUpperCase = classEscaped.toUpperCase();\n    this.componentsMappedByName[classUpperCase] = componentMeta.componentClass;\n  }\n  getComponentClass(htmlTag) {\n    return this.componentsMappedByName[htmlTag];\n  }\n};\nAgStackComponentsRegistry = __decorateClass([\n  Bean(\"agStackComponentsRegistry\")\n], AgStackComponentsRegistry);\n\n// community-modules/core/src/utils/aria.ts\nvar aria_exports = {};\n__export(aria_exports, {\n  getAriaCheckboxStateName: () => getAriaCheckboxStateName,\n  getAriaLabel: () => getAriaLabel,\n  getAriaLevel: () => getAriaLevel,\n  getAriaPosInSet: () => getAriaPosInSet,\n  getAriaSortState: () => getAriaSortState,\n  removeAriaExpanded: () => removeAriaExpanded,\n  removeAriaSort: () => removeAriaSort,\n  setAriaActiveDescendant: () => setAriaActiveDescendant,\n  setAriaAtomic: () => setAriaAtomic,\n  setAriaChecked: () => setAriaChecked,\n  setAriaColCount: () => setAriaColCount,\n  setAriaColIndex: () => setAriaColIndex,\n  setAriaColSpan: () => setAriaColSpan,\n  setAriaControls: () => setAriaControls,\n  setAriaDescribedBy: () => setAriaDescribedBy,\n  setAriaDisabled: () => setAriaDisabled,\n  setAriaExpanded: () => setAriaExpanded,\n  setAriaHidden: () => setAriaHidden,\n  setAriaLabel: () => setAriaLabel,\n  setAriaLabelledBy: () => setAriaLabelledBy,\n  setAriaLevel: () => setAriaLevel,\n  setAriaLive: () => setAriaLive,\n  setAriaMultiSelectable: () => setAriaMultiSelectable,\n  setAriaPosInSet: () => setAriaPosInSet,\n  setAriaRelevant: () => setAriaRelevant,\n  setAriaRole: () => setAriaRole,\n  setAriaRowCount: () => setAriaRowCount,\n  setAriaRowIndex: () => setAriaRowIndex,\n  setAriaSelected: () => setAriaSelected,\n  setAriaSetSize: () => setAriaSetSize,\n  setAriaSort: () => setAriaSort\n});\nfunction toggleAriaAttribute(element, attribute, value) {\n  if (value == null || typeof value === \"string\" && value == \"\") {\n    removeAriaAttribute(element, attribute);\n  } else {\n    setAriaAttribute(element, attribute, value);\n  }\n}\nfunction setAriaAttribute(element, attribute, value) {\n  element.setAttribute(ariaAttributeName(attribute), value.toString());\n}\nfunction removeAriaAttribute(element, attribute) {\n  element.removeAttribute(ariaAttributeName(attribute));\n}\nfunction ariaAttributeName(attribute) {\n  return `aria-${attribute}`;\n}\nfunction setAriaRole(element, role) {\n  if (role) {\n    element.setAttribute(\"role\", role);\n  } else {\n    element.removeAttribute(\"role\");\n  }\n}\nfunction getAriaSortState(sortDirection) {\n  let sort;\n  if (sortDirection === \"asc\") {\n    sort = \"ascending\";\n  } else if (sortDirection === \"desc\") {\n    sort = \"descending\";\n  } else if (sortDirection === \"mixed\") {\n    sort = \"other\";\n  } else {\n    sort = \"none\";\n  }\n  return sort;\n}\nfunction getAriaLevel(element) {\n  return parseInt(element.getAttribute(\"aria-level\"), 10);\n}\nfunction getAriaPosInSet(element) {\n  return parseInt(element.getAttribute(\"aria-posinset\"), 10);\n}\nfunction getAriaLabel(element) {\n  return element.getAttribute(\"aria-label\");\n}\nfunction setAriaLabel(element, label) {\n  toggleAriaAttribute(element, \"label\", label);\n}\nfunction setAriaLabelledBy(element, labelledBy) {\n  toggleAriaAttribute(element, \"labelledby\", labelledBy);\n}\nfunction setAriaDescribedBy(element, describedby) {\n  toggleAriaAttribute(element, \"describedby\", describedby);\n}\nfunction setAriaLive(element, live) {\n  toggleAriaAttribute(element, \"live\", live);\n}\nfunction setAriaAtomic(element, atomic) {\n  toggleAriaAttribute(element, \"atomic\", atomic);\n}\nfunction setAriaRelevant(element, relevant) {\n  toggleAriaAttribute(element, \"relevant\", relevant);\n}\nfunction setAriaLevel(element, level) {\n  toggleAriaAttribute(element, \"level\", level);\n}\nfunction setAriaDisabled(element, disabled) {\n  toggleAriaAttribute(element, \"disabled\", disabled);\n}\nfunction setAriaHidden(element, hidden) {\n  toggleAriaAttribute(element, \"hidden\", hidden);\n}\nfunction setAriaActiveDescendant(element, descendantId) {\n  toggleAriaAttribute(element, \"activedescendant\", descendantId);\n}\nfunction setAriaExpanded(element, expanded) {\n  setAriaAttribute(element, \"expanded\", expanded);\n}\nfunction removeAriaExpanded(element) {\n  removeAriaAttribute(element, \"expanded\");\n}\nfunction setAriaSetSize(element, setsize) {\n  setAriaAttribute(element, \"setsize\", setsize);\n}\nfunction setAriaPosInSet(element, position) {\n  setAriaAttribute(element, \"posinset\", position);\n}\nfunction setAriaMultiSelectable(element, multiSelectable) {\n  setAriaAttribute(element, \"multiselectable\", multiSelectable);\n}\nfunction setAriaRowCount(element, rowCount) {\n  setAriaAttribute(element, \"rowcount\", rowCount);\n}\nfunction setAriaRowIndex(element, rowIndex) {\n  setAriaAttribute(element, \"rowindex\", rowIndex);\n}\nfunction setAriaColCount(element, colCount) {\n  setAriaAttribute(element, \"colcount\", colCount);\n}\nfunction setAriaColIndex(element, colIndex) {\n  setAriaAttribute(element, \"colindex\", colIndex);\n}\nfunction setAriaColSpan(element, colSpan) {\n  setAriaAttribute(element, \"colspan\", colSpan);\n}\nfunction setAriaSort(element, sort) {\n  setAriaAttribute(element, \"sort\", sort);\n}\nfunction removeAriaSort(element) {\n  removeAriaAttribute(element, \"sort\");\n}\nfunction setAriaSelected(element, selected) {\n  toggleAriaAttribute(element, \"selected\", selected);\n}\nfunction setAriaChecked(element, checked) {\n  setAriaAttribute(element, \"checked\", checked === void 0 ? \"mixed\" : checked);\n}\nfunction setAriaControls(controllerElement, controlledElement) {\n  toggleAriaAttribute(controllerElement, \"controls\", controlledElement.id);\n  setAriaLabelledBy(controlledElement, controllerElement.id);\n}\nfunction getAriaCheckboxStateName(translate, state) {\n  return state === void 0 ? translate(\"ariaIndeterminate\", \"indeterminate\") : state === true ? translate(\"ariaChecked\", \"checked\") : translate(\"ariaUnchecked\", \"unchecked\");\n}\n\n// community-modules/core/src/utils/browser.ts\nvar browser_exports = {};\n__export(browser_exports, {\n  browserSupportsPreventScroll: () => browserSupportsPreventScroll,\n  getBodyHeight: () => getBodyHeight,\n  getBodyWidth: () => getBodyWidth,\n  getMaxDivHeight: () => getMaxDivHeight,\n  getSafariVersion: () => getSafariVersion,\n  getScrollbarWidth: () => getScrollbarWidth,\n  getTabIndex: () => getTabIndex,\n  isBrowserChrome: () => isBrowserChrome,\n  isBrowserFirefox: () => isBrowserFirefox,\n  isBrowserSafari: () => isBrowserSafari,\n  isIOSUserAgent: () => isIOSUserAgent,\n  isInvisibleScrollbar: () => isInvisibleScrollbar,\n  isMacOsUserAgent: () => isMacOsUserAgent\n});\nvar isSafari;\nvar safariVersion;\nvar isChrome;\nvar isFirefox;\nvar isMacOs;\nvar isIOS;\nvar invisibleScrollbar;\nvar browserScrollbarWidth;\nfunction isBrowserSafari() {\n  if (isSafari === void 0) {\n    isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  }\n  return isSafari;\n}\nfunction getSafariVersion() {\n  if (safariVersion === void 0) {\n    if (isBrowserSafari()) {\n      const versionMatch = navigator.userAgent.match(/version\\/(\\d+)/i);\n      if (versionMatch) {\n        safariVersion = versionMatch[1] != null ? parseFloat(versionMatch[1]) : 0;\n      }\n    } else {\n      safariVersion = 0;\n    }\n  }\n  return safariVersion;\n}\nfunction isBrowserChrome() {\n  if (isChrome === void 0) {\n    const win = window;\n    isChrome = !!win.chrome && (!!win.chrome.webstore || !!win.chrome.runtime) || /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n  }\n  return isChrome;\n}\nfunction isBrowserFirefox() {\n  if (isFirefox === void 0) {\n    isFirefox = /(firefox)/i.test(navigator.userAgent);\n  }\n  return isFirefox;\n}\nfunction isMacOsUserAgent() {\n  if (isMacOs === void 0) {\n    isMacOs = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n  }\n  return isMacOs;\n}\nfunction isIOSUserAgent() {\n  if (isIOS === void 0) {\n    isIOS = /iPad|iPhone|iPod/.test(navigator.platform) || // eslint-disable-next-line\n    navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1;\n  }\n  return isIOS;\n}\nfunction browserSupportsPreventScroll() {\n  return !isBrowserSafari() || getSafariVersion() >= 15;\n}\nfunction getTabIndex(el) {\n  if (!el) {\n    return null;\n  }\n  const numberTabIndex = el.tabIndex;\n  const tabIndex = el.getAttribute(\"tabIndex\");\n  if (numberTabIndex === -1 && (tabIndex === null || tabIndex === \"\" && !isBrowserFirefox())) {\n    return null;\n  }\n  return numberTabIndex.toString();\n}\nfunction getMaxDivHeight() {\n  if (!document.body) {\n    return -1;\n  }\n  let res = 1e6;\n  const testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6e6 : 1e9;\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  while (true) {\n    const test = res * 2;\n    div.style.height = test + \"px\";\n    if (test > testUpTo || div.clientHeight !== test) {\n      break;\n    } else {\n      res = test;\n    }\n  }\n  document.body.removeChild(div);\n  return res;\n}\nfunction getBodyWidth() {\n  var _a, _b, _c;\n  return (_c = (_a = document.body) == null ? void 0 : _a.clientWidth) != null ? _c : window.innerHeight || ((_b = document.documentElement) == null ? void 0 : _b.clientWidth) || -1;\n}\nfunction getBodyHeight() {\n  var _a, _b, _c;\n  return (_c = (_a = document.body) == null ? void 0 : _a.clientHeight) != null ? _c : window.innerHeight || ((_b = document.documentElement) == null ? void 0 : _b.clientHeight) || -1;\n}\nfunction getScrollbarWidth() {\n  if (browserScrollbarWidth == null) {\n    initScrollbarWidthAndVisibility();\n  }\n  return browserScrollbarWidth;\n}\nfunction initScrollbarWidthAndVisibility() {\n  const body = document.body;\n  const div = document.createElement(\"div\");\n  div.style.width = div.style.height = \"100px\";\n  div.style.opacity = \"0\";\n  div.style.overflow = \"scroll\";\n  div.style.msOverflowStyle = \"scrollbar\";\n  div.style.position = \"absolute\";\n  body.appendChild(div);\n  let width = div.offsetWidth - div.clientWidth;\n  if (width === 0 && div.clientWidth === 0) {\n    width = null;\n  }\n  if (div.parentNode) {\n    div.parentNode.removeChild(div);\n  }\n  if (width != null) {\n    browserScrollbarWidth = width;\n    invisibleScrollbar = width === 0;\n  }\n}\nfunction isInvisibleScrollbar() {\n  if (invisibleScrollbar == null) {\n    initScrollbarWidthAndVisibility();\n  }\n  return invisibleScrollbar;\n}\n\n// community-modules/core/src/utils/date.ts\nvar date_exports = {};\n__export(date_exports, {\n  dateToFormattedString: () => dateToFormattedString,\n  parseDateTimeFromString: () => parseDateTimeFromString,\n  serialiseDate: () => serialiseDate\n});\n\n// community-modules/core/src/utils/number.ts\nvar number_exports = {};\n__export(number_exports, {\n  cleanNumber: () => cleanNumber,\n  createArrayOfNumbers: () => createArrayOfNumbers,\n  decToHex: () => decToHex,\n  formatNumberCommas: () => formatNumberCommas,\n  formatNumberTwoDecimalPlacesAndCommas: () => formatNumberTwoDecimalPlacesAndCommas,\n  padStartWidthZeros: () => padStartWidthZeros,\n  sum: () => sum\n});\nfunction padStartWidthZeros(value, totalStringSize) {\n  return value.toString().padStart(totalStringSize, \"0\");\n}\nfunction createArrayOfNumbers(first, last2) {\n  const result = [];\n  for (let i = first; i <= last2; i++) {\n    result.push(i);\n  }\n  return result;\n}\nfunction cleanNumber(value) {\n  if (typeof value === \"string\") {\n    value = parseInt(value, 10);\n  }\n  if (typeof value === \"number\") {\n    return Math.floor(value);\n  }\n  return null;\n}\nfunction decToHex(number, bytes) {\n  let hex = \"\";\n  for (let i = 0; i < bytes; i++) {\n    hex += String.fromCharCode(number & 255);\n    number >>>= 8;\n  }\n  return hex;\n}\nfunction formatNumberTwoDecimalPlacesAndCommas(value, thousandSeparator, decimalSeparator) {\n  if (typeof value !== \"number\") {\n    return \"\";\n  }\n  return formatNumberCommas(Math.round(value * 100) / 100, thousandSeparator, decimalSeparator);\n}\nfunction formatNumberCommas(value, thousandSeparator, decimalSeparator) {\n  if (typeof value !== \"number\") {\n    return \"\";\n  }\n  return value.toString().replace(\".\", decimalSeparator).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, `$1${thousandSeparator}`);\n}\nfunction sum(values2) {\n  return values2 == null ? null : values2.reduce((total, value) => total + value, 0);\n}\n\n// community-modules/core/src/utils/date.ts\nfunction serialiseDate(date, includeTime = true, separator = \"-\") {\n  if (!date) {\n    return null;\n  }\n  let serialised = [date.getFullYear(), date.getMonth() + 1, date.getDate()].map((part) => padStartWidthZeros(part, 2)).join(separator);\n  if (includeTime) {\n    serialised += \" \" + [date.getHours(), date.getMinutes(), date.getSeconds()].map((part) => padStartWidthZeros(part, 2)).join(\":\");\n  }\n  return serialised;\n}\nvar calculateOrdinal = (value) => {\n  if (value > 3 && value < 21) {\n    return \"th\";\n  }\n  const remainder = value % 10;\n  switch (remainder) {\n    case 1:\n      return \"st\";\n    case 2:\n      return \"nd\";\n    case 3:\n      return \"rd\";\n  }\n  return \"th\";\n};\nfunction dateToFormattedString(date, format = \"YYYY-MM-DD\") {\n  const fullYear = padStartWidthZeros(date.getFullYear(), 4);\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n  const replace = {\n    YYYY: () => fullYear.slice(fullYear.length - 4, fullYear.length),\n    YY: () => fullYear.slice(fullYear.length - 2, fullYear.length),\n    Y: () => `${date.getFullYear()}`,\n    MMMM: () => months[date.getMonth()],\n    MMM: () => months[date.getMonth()].slice(0, 3),\n    MM: () => padStartWidthZeros(date.getMonth() + 1, 2),\n    Mo: () => `${date.getMonth() + 1}${calculateOrdinal(date.getMonth() + 1)}`,\n    M: () => `${date.getMonth() + 1}`,\n    Do: () => `${date.getDate()}${calculateOrdinal(date.getDate())}`,\n    DD: () => padStartWidthZeros(date.getDate(), 2),\n    D: () => `${date.getDate()}`,\n    dddd: () => days[date.getDay()],\n    ddd: () => days[date.getDay()].slice(0, 3),\n    dd: () => days[date.getDay()].slice(0, 2),\n    do: () => `${date.getDay()}${calculateOrdinal(date.getDay())}`,\n    d: () => `${date.getDay()}`\n  };\n  const regexp = new RegExp(Object.keys(replace).join(\"|\"), \"g\");\n  return format.replace(regexp, (match) => {\n    if (match in replace) {\n      return replace[match]();\n    }\n    return match;\n  });\n}\nfunction parseDateTimeFromString(value) {\n  if (!value) {\n    return null;\n  }\n  const [dateStr, timeStr] = value.split(\" \");\n  if (!dateStr) {\n    return null;\n  }\n  const fields = dateStr.split(\"-\").map((f) => parseInt(f, 10));\n  if (fields.filter((f) => !isNaN(f)).length !== 3) {\n    return null;\n  }\n  const [year, month, day] = fields;\n  const date = new Date(year, month - 1, day);\n  if (date.getFullYear() !== year || date.getMonth() !== month - 1 || date.getDate() !== day) {\n    return null;\n  }\n  if (!timeStr || timeStr === \"00:00:00\") {\n    return date;\n  }\n  const [hours, minutes, seconds] = timeStr.split(\":\").map((part) => parseInt(part, 10));\n  if (hours >= 0 && hours < 24) {\n    date.setHours(hours);\n  }\n  if (minutes >= 0 && minutes < 60) {\n    date.setMinutes(minutes);\n  }\n  if (seconds >= 0 && seconds < 60) {\n    date.setSeconds(seconds);\n  }\n  return date;\n}\n\n// community-modules/core/src/utils/dom.ts\nvar dom_exports = {};\n__export(dom_exports, {\n  FOCUSABLE_EXCLUDE: () => FOCUSABLE_EXCLUDE,\n  FOCUSABLE_SELECTOR: () => FOCUSABLE_SELECTOR,\n  addOrRemoveAttribute: () => addOrRemoveAttribute,\n  addStylesToElement: () => addStylesToElement,\n  bindCellRendererToHtmlElement: () => bindCellRendererToHtmlElement,\n  clearElement: () => clearElement,\n  copyNodeList: () => copyNodeList,\n  ensureDomOrder: () => ensureDomOrder,\n  formatSize: () => formatSize,\n  getAbsoluteHeight: () => getAbsoluteHeight,\n  getAbsoluteWidth: () => getAbsoluteWidth,\n  getElementRectWithOffset: () => getElementRectWithOffset,\n  getElementSize: () => getElementSize,\n  getInnerHeight: () => getInnerHeight,\n  getInnerWidth: () => getInnerWidth,\n  getScrollLeft: () => getScrollLeft,\n  insertWithDomOrder: () => insertWithDomOrder,\n  isElementChildOfClass: () => isElementChildOfClass,\n  isFocusableFormField: () => isFocusableFormField,\n  isHorizontalScrollShowing: () => isHorizontalScrollShowing,\n  isInDOM: () => isInDOM,\n  isNodeOrElement: () => isNodeOrElement,\n  isRtlNegativeScroll: () => isRtlNegativeScroll,\n  isVerticalScrollShowing: () => isVerticalScrollShowing,\n  isVisible: () => isVisible,\n  iterateNamedNodeMap: () => iterateNamedNodeMap,\n  loadTemplate: () => loadTemplate,\n  nodeListForEach: () => nodeListForEach,\n  radioCssClass: () => radioCssClass,\n  removeFromParent: () => removeFromParent,\n  setDisabled: () => setDisabled,\n  setDisplayed: () => setDisplayed,\n  setDomChildOrder: () => setDomChildOrder,\n  setElementHeight: () => setElementHeight,\n  setElementWidth: () => setElementWidth,\n  setFixedHeight: () => setFixedHeight,\n  setFixedWidth: () => setFixedWidth,\n  setScrollLeft: () => setScrollLeft,\n  setVisible: () => setVisible\n});\nvar rtlNegativeScroll;\nfunction radioCssClass(element, elementClass, otherElementClass) {\n  const parent = element.parentElement;\n  let sibling = parent && parent.firstChild;\n  while (sibling) {\n    if (elementClass) {\n      sibling.classList.toggle(elementClass, sibling === element);\n    }\n    if (otherElementClass) {\n      sibling.classList.toggle(otherElementClass, sibling !== element);\n    }\n    sibling = sibling.nextSibling;\n  }\n}\nvar FOCUSABLE_SELECTOR = \"[tabindex], input, select, button, textarea, [href]\";\nvar FOCUSABLE_EXCLUDE = \"[disabled], .ag-disabled:not(.ag-button), .ag-disabled *\";\nfunction isFocusableFormField(element) {\n  const matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n  const inputSelector = \"input, select, button, textarea\";\n  const isFocusable = matches.call(element, inputSelector);\n  const isNotFocusable = matches.call(element, FOCUSABLE_EXCLUDE);\n  const isElementVisible = isVisible(element);\n  const focusable = isFocusable && !isNotFocusable && isElementVisible;\n  return focusable;\n}\nfunction setDisplayed(element, displayed, options = {}) {\n  const { skipAriaHidden } = options;\n  element.classList.toggle(\"ag-hidden\", !displayed);\n  if (!skipAriaHidden) {\n    setAriaHidden(element, !displayed);\n  }\n}\nfunction setVisible(element, visible, options = {}) {\n  const { skipAriaHidden } = options;\n  element.classList.toggle(\"ag-invisible\", !visible);\n  if (!skipAriaHidden) {\n    setAriaHidden(element, !visible);\n  }\n}\nfunction setDisabled(element, disabled) {\n  const attributeName = \"disabled\";\n  const addOrRemoveDisabledAttribute = disabled ? (e) => e.setAttribute(attributeName, \"\") : (e) => e.removeAttribute(attributeName);\n  addOrRemoveDisabledAttribute(element);\n  nodeListForEach(element.querySelectorAll(\"input\"), (input) => addOrRemoveDisabledAttribute(input));\n}\nfunction isElementChildOfClass(element, cls, maxNest) {\n  let counter = 0;\n  while (element) {\n    if (element.classList.contains(cls)) {\n      return true;\n    }\n    element = element.parentElement;\n    if (typeof maxNest == \"number\") {\n      if (++counter > maxNest) {\n        break;\n      }\n    } else if (element === maxNest) {\n      break;\n    }\n  }\n  return false;\n}\nfunction getElementSize(el) {\n  const {\n    height,\n    width,\n    borderTopWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderLeftWidth,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    boxSizing\n  } = window.getComputedStyle(el);\n  return {\n    height: parseFloat(height || \"0\"),\n    width: parseFloat(width || \"0\"),\n    borderTopWidth: parseFloat(borderTopWidth || \"0\"),\n    borderRightWidth: parseFloat(borderRightWidth || \"0\"),\n    borderBottomWidth: parseFloat(borderBottomWidth || \"0\"),\n    borderLeftWidth: parseFloat(borderLeftWidth || \"0\"),\n    paddingTop: parseFloat(paddingTop || \"0\"),\n    paddingRight: parseFloat(paddingRight || \"0\"),\n    paddingBottom: parseFloat(paddingBottom || \"0\"),\n    paddingLeft: parseFloat(paddingLeft || \"0\"),\n    marginTop: parseFloat(marginTop || \"0\"),\n    marginRight: parseFloat(marginRight || \"0\"),\n    marginBottom: parseFloat(marginBottom || \"0\"),\n    marginLeft: parseFloat(marginLeft || \"0\"),\n    boxSizing\n  };\n}\nfunction getInnerHeight(el) {\n  const size = getElementSize(el);\n  if (size.boxSizing === \"border-box\") {\n    return size.height - size.paddingTop - size.paddingBottom;\n  }\n  return size.height;\n}\nfunction getInnerWidth(el) {\n  const size = getElementSize(el);\n  if (size.boxSizing === \"border-box\") {\n    return size.width - size.paddingLeft - size.paddingRight;\n  }\n  return size.width;\n}\nfunction getAbsoluteHeight(el) {\n  const size = getElementSize(el);\n  const marginRight = size.marginBottom + size.marginTop;\n  return Math.ceil(el.offsetHeight + marginRight);\n}\nfunction getAbsoluteWidth(el) {\n  const size = getElementSize(el);\n  const marginWidth = size.marginLeft + size.marginRight;\n  return Math.ceil(el.offsetWidth + marginWidth);\n}\nfunction getElementRectWithOffset(el) {\n  const offsetElementRect = el.getBoundingClientRect();\n  const { borderTopWidth, borderLeftWidth, borderRightWidth, borderBottomWidth } = getElementSize(el);\n  return {\n    top: offsetElementRect.top + (borderTopWidth || 0),\n    left: offsetElementRect.left + (borderLeftWidth || 0),\n    right: offsetElementRect.right + (borderRightWidth || 0),\n    bottom: offsetElementRect.bottom + (borderBottomWidth || 0)\n  };\n}\nfunction isRtlNegativeScroll() {\n  if (typeof rtlNegativeScroll === \"boolean\") {\n    return rtlNegativeScroll;\n  }\n  const template = document.createElement(\"div\");\n  template.style.direction = \"rtl\";\n  template.style.width = \"1px\";\n  template.style.height = \"1px\";\n  template.style.position = \"fixed\";\n  template.style.top = \"0px\";\n  template.style.overflow = \"hidden\";\n  template.dir = \"rtl\";\n  template.innerHTML = /* html */\n  `<div style=\"width: 2px\">\n            <span style=\"display: inline-block; width: 1px\"></span>\n            <span style=\"display: inline-block; width: 1px\"></span>\n        </div>`;\n  document.body.appendChild(template);\n  template.scrollLeft = 1;\n  rtlNegativeScroll = Math.floor(template.scrollLeft) === 0;\n  document.body.removeChild(template);\n  return rtlNegativeScroll;\n}\nfunction getScrollLeft(element, rtl) {\n  let scrollLeft = element.scrollLeft;\n  if (rtl) {\n    scrollLeft = Math.abs(scrollLeft);\n    if (isBrowserChrome() && !isRtlNegativeScroll()) {\n      scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\n    }\n  }\n  return scrollLeft;\n}\nfunction setScrollLeft(element, value, rtl) {\n  if (rtl) {\n    if (isRtlNegativeScroll()) {\n      value *= -1;\n    } else if (isBrowserSafari() || isBrowserChrome()) {\n      value = element.scrollWidth - element.clientWidth - value;\n    }\n  }\n  element.scrollLeft = value;\n}\nfunction clearElement(el) {\n  while (el && el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n}\nfunction removeFromParent(node) {\n  if (node && node.parentNode) {\n    node.parentNode.removeChild(node);\n  }\n}\nfunction isInDOM(element) {\n  return !!element.offsetParent;\n}\nfunction isVisible(element) {\n  const el = element;\n  if (el.checkVisibility) {\n    return el.checkVisibility({ checkVisibilityCSS: true });\n  }\n  const isHidden = !isInDOM(element) || window.getComputedStyle(element).visibility !== \"visible\";\n  return !isHidden;\n}\nfunction loadTemplate(template) {\n  const tempDiv = document.createElement(\"div\");\n  tempDiv.innerHTML = (template || \"\").trim();\n  return tempDiv.firstChild;\n}\nfunction ensureDomOrder(eContainer, eChild, eChildBefore) {\n  if (eChildBefore && eChildBefore.nextSibling === eChild) {\n    return;\n  }\n  if (eChildBefore) {\n    if (eChildBefore.nextSibling) {\n      eContainer.insertBefore(eChild, eChildBefore.nextSibling);\n    } else {\n      eContainer.appendChild(eChild);\n    }\n  } else {\n    if (eContainer.firstChild && eContainer.firstChild !== eChild) {\n      eContainer.insertAdjacentElement(\"afterbegin\", eChild);\n    }\n  }\n}\nfunction setDomChildOrder(eContainer, orderedChildren) {\n  for (let i = 0; i < orderedChildren.length; i++) {\n    const correctCellAtIndex = orderedChildren[i];\n    const actualCellAtIndex = eContainer.children[i];\n    if (actualCellAtIndex !== correctCellAtIndex) {\n      eContainer.insertBefore(correctCellAtIndex, actualCellAtIndex);\n    }\n  }\n}\nfunction insertWithDomOrder(eContainer, eToInsert, eChildBefore) {\n  if (eChildBefore) {\n    eChildBefore.insertAdjacentElement(\"afterend\", eToInsert);\n  } else {\n    if (eContainer.firstChild) {\n      eContainer.insertAdjacentElement(\"afterbegin\", eToInsert);\n    } else {\n      eContainer.appendChild(eToInsert);\n    }\n  }\n}\nfunction addStylesToElement(eElement, styles) {\n  if (!styles) {\n    return;\n  }\n  for (const [key, value] of Object.entries(styles)) {\n    if (!key || !key.length || value == null) {\n      continue;\n    }\n    const parsedKey = camelCaseToHyphenated(key);\n    const valueAsString = value.toString();\n    const parsedValue = valueAsString.replace(/\\s*!important/g, \"\");\n    const priority = parsedValue.length != valueAsString.length ? \"important\" : void 0;\n    eElement.style.setProperty(parsedKey, parsedValue, priority);\n  }\n}\nfunction isHorizontalScrollShowing(element) {\n  return element.clientWidth < element.scrollWidth;\n}\nfunction isVerticalScrollShowing(element) {\n  return element.clientHeight < element.scrollHeight;\n}\nfunction setElementWidth(element, width) {\n  if (width === \"flex\") {\n    element.style.removeProperty(\"width\");\n    element.style.removeProperty(\"minWidth\");\n    element.style.removeProperty(\"maxWidth\");\n    element.style.flex = \"1 1 auto\";\n  } else {\n    setFixedWidth(element, width);\n  }\n}\nfunction setFixedWidth(element, width) {\n  width = formatSize(width);\n  element.style.width = width.toString();\n  element.style.maxWidth = width.toString();\n  element.style.minWidth = width.toString();\n}\nfunction setElementHeight(element, height) {\n  if (height === \"flex\") {\n    element.style.removeProperty(\"height\");\n    element.style.removeProperty(\"minHeight\");\n    element.style.removeProperty(\"maxHeight\");\n    element.style.flex = \"1 1 auto\";\n  } else {\n    setFixedHeight(element, height);\n  }\n}\nfunction setFixedHeight(element, height) {\n  height = formatSize(height);\n  element.style.height = height.toString();\n  element.style.maxHeight = height.toString();\n  element.style.minHeight = height.toString();\n}\nfunction formatSize(size) {\n  if (typeof size === \"number\") {\n    return `${size}px`;\n  }\n  return size;\n}\nfunction isNodeOrElement(o) {\n  return o instanceof Node || o instanceof HTMLElement;\n}\nfunction copyNodeList(nodeList) {\n  if (nodeList == null) {\n    return [];\n  }\n  const result = [];\n  nodeListForEach(nodeList, (node) => result.push(node));\n  return result;\n}\nfunction iterateNamedNodeMap(map, callback) {\n  if (!map) {\n    return;\n  }\n  for (let i = 0; i < map.length; i++) {\n    const attr = map[i];\n    callback(attr.name, attr.value);\n  }\n}\nfunction addOrRemoveAttribute(element, name, value) {\n  if (value == null) {\n    element.removeAttribute(name);\n  } else {\n    element.setAttribute(name, value.toString());\n  }\n}\nfunction nodeListForEach(nodeList, action) {\n  if (nodeList == null) {\n    return;\n  }\n  for (let i = 0; i < nodeList.length; i++) {\n    action(nodeList[i]);\n  }\n}\nfunction bindCellRendererToHtmlElement(cellRendererPromise, eTarget) {\n  cellRendererPromise.then((cellRenderer) => {\n    const gui = cellRenderer.getGui();\n    if (gui != null) {\n      if (typeof gui === \"object\") {\n        eTarget.appendChild(gui);\n      } else {\n        eTarget.innerHTML = gui;\n      }\n    }\n  });\n}\n\n// community-modules/core/src/utils/fuzzyMatch.ts\nvar fuzzyMatch_exports = {};\n__export(fuzzyMatch_exports, {\n  fuzzyCheckStrings: () => fuzzyCheckStrings,\n  fuzzySuggestions: () => fuzzySuggestions\n});\nfunction fuzzyCheckStrings(inputValues, validValues, allSuggestions) {\n  const fuzzyMatches = {};\n  const invalidInputs = inputValues.filter(\n    (inputValue) => !validValues.some(\n      (validValue) => validValue === inputValue\n    )\n  );\n  if (invalidInputs.length > 0) {\n    invalidInputs.forEach(\n      (invalidInput) => fuzzyMatches[invalidInput] = fuzzySuggestions(invalidInput, allSuggestions).values\n    );\n  }\n  return fuzzyMatches;\n}\nfunction fuzzySuggestions(inputValue, allSuggestions, hideIrrelevant, filterByPercentageOfBestMatch) {\n  let thisSuggestions = allSuggestions.map((text, idx) => ({\n    value: text,\n    relevance: stringWeightedDistances(inputValue.toLowerCase(), text.toLocaleLowerCase()),\n    idx\n  }));\n  thisSuggestions.sort((a, b) => b.relevance - a.relevance);\n  if (hideIrrelevant) {\n    thisSuggestions = thisSuggestions.filter((suggestion) => suggestion.relevance !== 0);\n  }\n  if (thisSuggestions.length > 0 && filterByPercentageOfBestMatch && filterByPercentageOfBestMatch > 0) {\n    const bestMatch = thisSuggestions[0].relevance;\n    const limit = bestMatch * filterByPercentageOfBestMatch;\n    thisSuggestions = thisSuggestions.filter((suggestion) => limit - suggestion.relevance < 0);\n  }\n  const values2 = [];\n  const indices = [];\n  for (const suggestion of thisSuggestions) {\n    values2.push(suggestion.value);\n    indices.push(suggestion.idx);\n  }\n  return { values: values2, indices };\n}\nfunction stringWeightedDistances(str1, str2) {\n  const a = str1.replace(/\\s/g, \"\");\n  const b = str2.replace(/\\s/g, \"\");\n  let weight = 0;\n  let lastIndex = -1;\n  for (let i = 0; i < a.length; i++) {\n    const idx = b.indexOf(a[i], lastIndex + 1);\n    if (idx === -1) {\n      continue;\n    }\n    lastIndex = idx;\n    weight += 100 - lastIndex * 100 / 1e4 * 100;\n  }\n  return weight;\n}\n\n// community-modules/core/src/utils/icon.ts\nvar icon_exports = {};\n__export(icon_exports, {\n  createIcon: () => createIcon,\n  createIconNoSpan: () => createIconNoSpan,\n  iconNameClassMap: () => iconNameClassMap\n});\nvar iconNameClassMap = {\n  // header column group shown when expanded (click to contract)\n  columnGroupOpened: \"expanded\",\n  // header column group shown when contracted (click to expand)\n  columnGroupClosed: \"contracted\",\n  // tool panel column group contracted (click to expand)\n  columnSelectClosed: \"tree-closed\",\n  // tool panel column group expanded (click to contract)\n  columnSelectOpen: \"tree-open\",\n  // column tool panel header expand/collapse all button, shown when some children are expanded and\n  //     others are collapsed\n  columnSelectIndeterminate: \"tree-indeterminate\",\n  // shown on ghost icon while dragging column to the side of the grid to pin\n  columnMovePin: \"pin\",\n  // shown on ghost icon while dragging over part of the page that is not a drop zone\n  columnMoveHide: \"eye-slash\",\n  // shown on ghost icon while dragging columns to reorder\n  columnMoveMove: \"arrows\",\n  // animating icon shown when dragging a column to the right of the grid causes horizontal scrolling\n  columnMoveLeft: \"left\",\n  // animating icon shown when dragging a column to the left of the grid causes horizontal scrolling\n  columnMoveRight: \"right\",\n  // shown on ghost icon while dragging over Row Groups drop zone\n  columnMoveGroup: \"group\",\n  // shown on ghost icon while dragging over Values drop zone\n  columnMoveValue: \"aggregation\",\n  // shown on ghost icon while dragging over pivot drop zone\n  columnMovePivot: \"pivot\",\n  // shown on ghost icon while dragging over drop zone that doesn't support it, e.g.\n  //     string column over aggregation drop zone\n  dropNotAllowed: \"not-allowed\",\n  // shown on row group when contracted (click to expand)\n  groupContracted: \"tree-closed\",\n  // shown on row group when expanded (click to contract)\n  groupExpanded: \"tree-open\",\n  // set filter tree list group contracted (click to expand)\n  setFilterGroupClosed: \"tree-closed\",\n  // set filter tree list group expanded (click to contract)\n  setFilterGroupOpen: \"tree-open\",\n  // set filter tree list expand/collapse all button, shown when some children are expanded and\n  //     others are collapsed\n  setFilterGroupIndeterminate: \"tree-indeterminate\",\n  // context menu chart item\n  chart: \"chart\",\n  // chart window title bar\n  close: \"cross\",\n  // X (remove) on column 'pill' after adding it to a drop zone list\n  cancel: \"cancel\",\n  // indicates the currently active pin state in the \"Pin column\" sub-menu of the column menu\n  check: \"tick\",\n  // \"go to first\" button in pagination controls\n  first: \"first\",\n  // \"go to previous\" button in pagination controls\n  previous: \"previous\",\n  // \"go to next\" button in pagination controls\n  next: \"next\",\n  // \"go to last\" button in pagination controls\n  last: \"last\",\n  // shown on top right of chart when chart is linked to range data (click to unlink)\n  linked: \"linked\",\n  // shown on top right of chart when chart is not linked to range data (click to link)\n  unlinked: \"unlinked\",\n  // \"Choose colour\" button on chart settings tab\n  colorPicker: \"color-picker\",\n  // rotating spinner shown by the loading cell renderer\n  groupLoading: \"loading\",\n  // button to launch enterprise column menu\n  menu: \"menu\",\n  menuAlt: \"menu-alt\",\n  // filter tool panel tab\n  filter: \"filter\",\n  // column tool panel tab\n  columns: \"columns\",\n  // button in chart regular size window title bar (click to maximise)\n  maximize: \"maximize\",\n  // button in chart maximised window title bar (click to make regular size)\n  minimize: \"minimize\",\n  // \"Pin column\" item in column header menu\n  menuPin: \"pin\",\n  // \"Value aggregation\" column menu item (shown on numeric columns when grouping is active)\"\n  menuValue: \"aggregation\",\n  // \"Group by {column-name}\" item in column header menu\n  menuAddRowGroup: \"group\",\n  // \"Un-Group by {column-name}\" item in column header menu\n  menuRemoveRowGroup: \"group\",\n  // context menu copy item\n  clipboardCopy: \"copy\",\n  // context menu cut item\n  clipboardCut: \"cut\",\n  // context menu paste item\n  clipboardPaste: \"paste\",\n  // identifies the pivot drop zone\n  pivotPanel: \"pivot\",\n  // \"Row groups\" drop zone in column tool panel\n  rowGroupPanel: \"group\",\n  // columns tool panel Values drop zone\n  valuePanel: \"aggregation\",\n  // drag handle used to pick up draggable columns\n  columnDrag: \"grip\",\n  // drag handle used to pick up draggable rows\n  rowDrag: \"grip\",\n  // context menu export item\n  save: \"save\",\n  // csv export\n  csvExport: \"csv\",\n  // excel export,\n  excelExport: \"excel\",\n  // icon on dropdown editors\n  smallDown: \"small-down\",\n  // version of small-right used in RTL mode\n  smallLeft: \"small-left\",\n  // separater between column 'pills' when you add multiple columns to the header drop zone\n  smallRight: \"small-right\",\n  smallUp: \"small-up\",\n  // show on column header when column is sorted ascending\n  sortAscending: \"asc\",\n  // show on column header when column is sorted descending\n  sortDescending: \"desc\",\n  // show on column header when column has no sort, only when enabled with gridOptions.unSortIcon=true\n  sortUnSort: \"none\",\n  // Builder button in Advanced Filter\n  advancedFilterBuilder: \"group\",\n  // drag handle used to pick up Advanced Filter Builder rows\n  advancedFilterBuilderDrag: \"grip\",\n  // Advanced Filter Builder row validation error\n  advancedFilterBuilderInvalid: \"not-allowed\",\n  // shown on Advanced Filter Builder rows to move them up\n  advancedFilterBuilderMoveUp: \"up\",\n  // shown on Advanced Filter Builder rows to move them down\n  advancedFilterBuilderMoveDown: \"down\",\n  // shown on Advanced Filter Builder rows to add new rows\n  advancedFilterBuilderAdd: \"plus\",\n  // shown on Advanced Filter Builder rows to remove row\n  advancedFilterBuilderRemove: \"minus\",\n  // Edit Chart menu item shown in Integrated Charts menu\n  chartsMenuEdit: \"chart\",\n  // Advanced Settings menu item shown in Integrated Charts menu\n  chartsMenuAdvancedSettings: \"settings\",\n  // shown in Integrated Charts menu add fields\n  chartsMenuAdd: \"plus\"\n};\nfunction createIcon(iconName, gos, column) {\n  const iconContents = createIconNoSpan(iconName, gos, column);\n  if (iconContents) {\n    const { className } = iconContents;\n    if (typeof className === \"string\" && className.indexOf(\"ag-icon\") > -1 || typeof className === \"object\" && className[\"ag-icon\"]) {\n      return iconContents;\n    }\n  }\n  const eResult = document.createElement(\"span\");\n  eResult.appendChild(iconContents);\n  return eResult;\n}\nfunction createIconNoSpan(iconName, gos, column, forceCreate) {\n  let userProvidedIcon = null;\n  const icons = column && column.getColDef().icons;\n  if (icons) {\n    userProvidedIcon = icons[iconName];\n  }\n  if (gos && !userProvidedIcon) {\n    const optionsIcons = gos.get(\"icons\");\n    if (optionsIcons) {\n      userProvidedIcon = optionsIcons[iconName];\n    }\n  }\n  if (userProvidedIcon) {\n    let rendererResult;\n    if (typeof userProvidedIcon === \"function\") {\n      rendererResult = userProvidedIcon();\n    } else if (typeof userProvidedIcon === \"string\") {\n      rendererResult = userProvidedIcon;\n    } else {\n      throw new Error(\"icon from grid options needs to be a string or a function\");\n    }\n    if (typeof rendererResult === \"string\") {\n      return loadTemplate(rendererResult);\n    }\n    if (isNodeOrElement(rendererResult)) {\n      return rendererResult;\n    }\n    console.warn(\"AG Grid: iconRenderer should return back a string or a dom object\");\n  } else {\n    const span = document.createElement(\"span\");\n    let cssClass = iconNameClassMap[iconName];\n    if (!cssClass) {\n      if (!forceCreate) {\n        console.warn(`AG Grid: Did not find icon ${iconName}`);\n        cssClass = \"\";\n      } else {\n        cssClass = iconName;\n      }\n    }\n    span.setAttribute(\"class\", `ag-icon ag-icon-${cssClass}`);\n    span.setAttribute(\"unselectable\", \"on\");\n    setAriaRole(span, \"presentation\");\n    return span;\n  }\n}\n\n// community-modules/core/src/utils/keyboard.ts\nvar keyboard_exports = {};\n__export(keyboard_exports, {\n  isDeleteKey: () => isDeleteKey,\n  isEventFromPrintableCharacter: () => isEventFromPrintableCharacter,\n  isUserSuppressingHeaderKeyboardEvent: () => isUserSuppressingHeaderKeyboardEvent,\n  isUserSuppressingKeyboardEvent: () => isUserSuppressingKeyboardEvent,\n  normaliseQwertyAzerty: () => normaliseQwertyAzerty\n});\n\n// community-modules/core/src/constants/keyCode.ts\nvar KeyCode = class {\n};\nKeyCode.BACKSPACE = \"Backspace\";\nKeyCode.TAB = \"Tab\";\nKeyCode.ENTER = \"Enter\";\nKeyCode.ESCAPE = \"Escape\";\nKeyCode.SPACE = \" \";\nKeyCode.LEFT = \"ArrowLeft\";\nKeyCode.UP = \"ArrowUp\";\nKeyCode.RIGHT = \"ArrowRight\";\nKeyCode.DOWN = \"ArrowDown\";\nKeyCode.DELETE = \"Delete\";\nKeyCode.F2 = \"F2\";\nKeyCode.PAGE_UP = \"PageUp\";\nKeyCode.PAGE_DOWN = \"PageDown\";\nKeyCode.PAGE_HOME = \"Home\";\nKeyCode.PAGE_END = \"End\";\n// these should be used with `event.code` instead of `event.key`\n// as `event.key` changes when non-latin keyboards are used\nKeyCode.A = \"KeyA\";\nKeyCode.C = \"KeyC\";\nKeyCode.D = \"KeyD\";\nKeyCode.V = \"KeyV\";\nKeyCode.X = \"KeyX\";\nKeyCode.Y = \"KeyY\";\nKeyCode.Z = \"KeyZ\";\n\n// community-modules/core/src/utils/keyboard.ts\nvar A_KEYCODE = 65;\nvar C_KEYCODE = 67;\nvar V_KEYCODE = 86;\nvar D_KEYCODE = 68;\nvar Z_KEYCODE = 90;\nvar Y_KEYCODE = 89;\nfunction isEventFromPrintableCharacter(event) {\n  if (event.altKey || event.ctrlKey || event.metaKey) {\n    return false;\n  }\n  const printableCharacter = event.key.length === 1;\n  return printableCharacter;\n}\nfunction isUserSuppressingKeyboardEvent(gos, keyboardEvent, rowNode, column, editing) {\n  const colDefFunc = column ? column.getColDef().suppressKeyboardEvent : void 0;\n  if (!colDefFunc) {\n    return false;\n  }\n  const params = gos.addGridCommonParams({\n    event: keyboardEvent,\n    editing,\n    column,\n    node: rowNode,\n    data: rowNode.data,\n    colDef: column.getColDef()\n  });\n  if (colDefFunc) {\n    const colDefFuncResult = colDefFunc(params);\n    if (colDefFuncResult) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUserSuppressingHeaderKeyboardEvent(gos, keyboardEvent, headerRowIndex, column) {\n  const colDef = column.getDefinition();\n  const colDefFunc = colDef && colDef.suppressHeaderKeyboardEvent;\n  if (!exists(colDefFunc)) {\n    return false;\n  }\n  const params = gos.addGridCommonParams({\n    colDef,\n    column,\n    headerRowIndex,\n    event: keyboardEvent\n  });\n  return !!colDefFunc(params);\n}\nfunction normaliseQwertyAzerty(keyboardEvent) {\n  const { keyCode } = keyboardEvent;\n  let code;\n  switch (keyCode) {\n    case A_KEYCODE:\n      code = KeyCode.A;\n      break;\n    case C_KEYCODE:\n      code = KeyCode.C;\n      break;\n    case V_KEYCODE:\n      code = KeyCode.V;\n      break;\n    case D_KEYCODE:\n      code = KeyCode.D;\n      break;\n    case Z_KEYCODE:\n      code = KeyCode.Z;\n      break;\n    case Y_KEYCODE:\n      code = KeyCode.Y;\n      break;\n    default:\n      code = keyboardEvent.code;\n  }\n  return code;\n}\nfunction isDeleteKey(key, alwaysReturnFalseOnBackspace = false) {\n  if (key === KeyCode.DELETE) {\n    return true;\n  }\n  if (!alwaysReturnFalseOnBackspace && key === KeyCode.BACKSPACE) {\n    return isMacOsUserAgent();\n  }\n  return false;\n}\n\n// community-modules/core/src/utils/mouse.ts\nvar mouse_exports = {};\n__export(mouse_exports, {\n  areEventsNear: () => areEventsNear\n});\nfunction areEventsNear(e1, e2, pixelCount) {\n  if (pixelCount === 0) {\n    return false;\n  }\n  const diffX = Math.abs(e1.clientX - e2.clientX);\n  const diffY = Math.abs(e1.clientY - e2.clientY);\n  return Math.max(diffX, diffY) <= pixelCount;\n}\n\n// community-modules/core/src/utils/rowNode.ts\nvar rowNode_exports = {};\n__export(rowNode_exports, {\n  sortRowNodesByOrder: () => sortRowNodesByOrder\n});\nfunction sortRowNodesByOrder(rowNodes, rowNodeOrder) {\n  if (!rowNodes) {\n    return false;\n  }\n  const comparator = (nodeA, nodeB) => {\n    const positionA = rowNodeOrder[nodeA.id];\n    const positionB = rowNodeOrder[nodeB.id];\n    const aHasIndex = positionA !== void 0;\n    const bHasIndex = positionB !== void 0;\n    const bothNodesAreUserNodes = aHasIndex && bHasIndex;\n    const bothNodesAreFillerNodes = !aHasIndex && !bHasIndex;\n    if (bothNodesAreUserNodes) {\n      return positionA - positionB;\n    }\n    if (bothNodesAreFillerNodes) {\n      return nodeA.__objectId - nodeB.__objectId;\n    }\n    if (aHasIndex) {\n      return 1;\n    }\n    return -1;\n  };\n  let rowNodeA;\n  let rowNodeB;\n  let atLeastOneOutOfOrder = false;\n  for (let i = 0; i < rowNodes.length - 1; i++) {\n    rowNodeA = rowNodes[i];\n    rowNodeB = rowNodes[i + 1];\n    if (comparator(rowNodeA, rowNodeB) > 0) {\n      atLeastOneOutOfOrder = true;\n      break;\n    }\n  }\n  if (atLeastOneOutOfOrder) {\n    rowNodes.sort(comparator);\n    return true;\n  }\n  return false;\n}\n\n// community-modules/core/src/utils/set.ts\nvar set_exports = {};\n__export(set_exports, {\n  convertToSet: () => convertToSet\n});\nfunction convertToSet(list) {\n  const set = /* @__PURE__ */ new Set();\n  list.forEach((x) => set.add(x));\n  return set;\n}\n\n// community-modules/core/src/utils/utils.ts\nvar utils = __spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues({}, aria_exports), array_exports), browser_exports), date_exports), dom_exports), event_exports), function_exports), fuzzyMatch_exports), generic_exports), icon_exports), keyboard_exports), map_exports), mouse_exports), number_exports), object_exports), rowNode_exports), set_exports), string_exports);\nvar _ = utils;\n\n// community-modules/core/src/utils/numberSequence.ts\nvar NumberSequence = class {\n  constructor(initValue = 0, step = 1) {\n    this.nextValue = initValue;\n    this.step = step;\n  }\n  next() {\n    const valToReturn = this.nextValue;\n    this.nextValue += this.step;\n    return valToReturn;\n  }\n  peek() {\n    return this.nextValue;\n  }\n  skip(count) {\n    this.nextValue += count;\n  }\n};\n\n// community-modules/core/src/utils/promise.ts\nvar AgPromiseStatus = /* @__PURE__ */ ((AgPromiseStatus2) => {\n  AgPromiseStatus2[AgPromiseStatus2[\"IN_PROGRESS\"] = 0] = \"IN_PROGRESS\";\n  AgPromiseStatus2[AgPromiseStatus2[\"RESOLVED\"] = 1] = \"RESOLVED\";\n  return AgPromiseStatus2;\n})(AgPromiseStatus || {});\nvar AgPromise = class _AgPromise {\n  constructor(callback) {\n    this.status = 0 /* IN_PROGRESS */;\n    this.resolution = null;\n    this.waiters = [];\n    callback((value) => this.onDone(value), (params) => this.onReject(params));\n  }\n  static all(promises) {\n    return new _AgPromise((resolve) => {\n      let remainingToResolve = promises.length;\n      const combinedValues = new Array(remainingToResolve);\n      promises.forEach((promise, index) => {\n        promise.then((value) => {\n          combinedValues[index] = value;\n          remainingToResolve--;\n          if (remainingToResolve === 0) {\n            resolve(combinedValues);\n          }\n        });\n      });\n    });\n  }\n  static resolve(value = null) {\n    return new _AgPromise((resolve) => resolve(value));\n  }\n  then(func) {\n    return new _AgPromise((resolve) => {\n      if (this.status === 1 /* RESOLVED */) {\n        resolve(func(this.resolution));\n      } else {\n        this.waiters.push((value) => resolve(func(value)));\n      }\n    });\n  }\n  resolveNow(ifNotResolvedValue, ifResolved) {\n    return this.status === 1 /* RESOLVED */ ? ifResolved(this.resolution) : ifNotResolvedValue;\n  }\n  onDone(value) {\n    this.status = 1 /* RESOLVED */;\n    this.resolution = value;\n    this.waiters.forEach((waiter) => waiter(value));\n  }\n  onReject(params) {\n    console.warn(\"TBI\");\n  }\n};\n\n// community-modules/core/src/utils/timer.ts\nvar Timer = class {\n  constructor() {\n    this.timestamp = (/* @__PURE__ */ new Date()).getTime();\n  }\n  print(msg) {\n    const duration = (/* @__PURE__ */ new Date()).getTime() - this.timestamp;\n    console.info(`${msg} = ${duration}`);\n    this.timestamp = (/* @__PURE__ */ new Date()).getTime();\n  }\n};\n\n// community-modules/core/src/rendering/cssClassManager.ts\nvar CssClassManager = class {\n  constructor(getGui) {\n    // to minimise DOM hits, we only apply CSS classes if they have changed. as adding a CSS class that is already\n    // there, or removing one that wasn't present, all takes CPU.\n    this.cssClassStates = {};\n    this.getGui = getGui;\n  }\n  addCssClass(className) {\n    const list = (className || \"\").split(\" \");\n    if (list.length > 1) {\n      list.forEach((cls) => this.addCssClass(cls));\n      return;\n    }\n    const updateNeeded = this.cssClassStates[className] !== true;\n    if (updateNeeded && className.length) {\n      const eGui = this.getGui();\n      if (eGui) {\n        eGui.classList.add(className);\n      }\n      this.cssClassStates[className] = true;\n    }\n  }\n  removeCssClass(className) {\n    const list = (className || \"\").split(\" \");\n    if (list.length > 1) {\n      list.forEach((cls) => this.removeCssClass(cls));\n      return;\n    }\n    const updateNeeded = this.cssClassStates[className] !== false;\n    if (updateNeeded && className.length) {\n      const eGui = this.getGui();\n      if (eGui) {\n        eGui.classList.remove(className);\n      }\n      this.cssClassStates[className] = false;\n    }\n  }\n  containsCssClass(className) {\n    const eGui = this.getGui();\n    if (!eGui) {\n      return false;\n    }\n    return eGui.classList.contains(className);\n  }\n  addOrRemoveCssClass(className, addOrRemove) {\n    if (!className) {\n      return;\n    }\n    if (className.indexOf(\" \") >= 0) {\n      const list = (className || \"\").split(\" \");\n      if (list.length > 1) {\n        list.forEach((cls) => this.addOrRemoveCssClass(cls, addOrRemove));\n        return;\n      }\n    }\n    const updateNeeded = this.cssClassStates[className] !== addOrRemove;\n    if (updateNeeded && className.length) {\n      const eGui = this.getGui();\n      if (eGui) {\n        eGui.classList.toggle(className, addOrRemove);\n      }\n      this.cssClassStates[className] = addOrRemove;\n    }\n  }\n};\n\n// community-modules/core/src/widgets/tooltipStateManager.ts\nvar _TooltipStateManager = class _TooltipStateManager extends BeanStub {\n  constructor(parentComp, tooltipShowDelayOverride, tooltipHideDelayOverride, shouldDisplayTooltip) {\n    super();\n    this.parentComp = parentComp;\n    this.tooltipShowDelayOverride = tooltipShowDelayOverride;\n    this.tooltipHideDelayOverride = tooltipHideDelayOverride;\n    this.shouldDisplayTooltip = shouldDisplayTooltip;\n    this.SHOW_QUICK_TOOLTIP_DIFF = 1e3;\n    this.FADE_OUT_TOOLTIP_TIMEOUT = 1e3;\n    this.INTERACTIVE_HIDE_DELAY = 100;\n    this.interactionEnabled = false;\n    this.isInteractingWithTooltip = false;\n    this.state = 0 /* NOTHING */;\n    // when showing the tooltip, we need to make sure it's the most recent instance we request, as due to\n    // async we could request two tooltips before the first instance returns, in which case we should\n    // disregard the second instance.\n    this.tooltipInstanceCount = 0;\n    this.tooltipMouseTrack = false;\n  }\n  postConstruct() {\n    if (this.gos.get(\"tooltipInteraction\")) {\n      this.interactionEnabled = true;\n    }\n    this.tooltipTrigger = this.getTooltipTrigger();\n    this.tooltipMouseTrack = this.gos.get(\"tooltipMouseTrack\");\n    const el = this.parentComp.getGui();\n    if (this.tooltipTrigger === 0 /* HOVER */) {\n      this.addManagedListener(el, \"mouseenter\", this.onMouseEnter.bind(this));\n      this.addManagedListener(el, \"mouseleave\", this.onMouseLeave.bind(this));\n    }\n    if (this.tooltipTrigger === 1 /* FOCUS */) {\n      this.addManagedListener(el, \"focusin\", this.onFocusIn.bind(this));\n      this.addManagedListener(el, \"focusout\", this.onFocusOut.bind(this));\n    }\n    this.addManagedListener(el, \"mousemove\", this.onMouseMove.bind(this));\n    if (!this.interactionEnabled) {\n      this.addManagedListener(el, \"mousedown\", this.onMouseDown.bind(this));\n      this.addManagedListener(el, \"keydown\", this.onKeyDown.bind(this));\n    }\n  }\n  getGridOptionsTooltipDelay(delayOption) {\n    const delay = this.gos.get(delayOption);\n    if (delay < 0) {\n      warnOnce(`${delayOption} should not be lower than 0`);\n    }\n    return Math.max(200, delay);\n  }\n  getTooltipDelay(type) {\n    var _a, _b;\n    if (type === \"show\") {\n      return (_a = this.tooltipShowDelayOverride) != null ? _a : this.getGridOptionsTooltipDelay(\"tooltipShowDelay\");\n    }\n    return (_b = this.tooltipHideDelayOverride) != null ? _b : this.getGridOptionsTooltipDelay(\"tooltipHideDelay\");\n  }\n  destroy() {\n    this.setToDoNothing();\n    super.destroy();\n  }\n  getTooltipTrigger() {\n    const trigger = this.gos.get(\"tooltipTrigger\");\n    if (!trigger || trigger === \"hover\") {\n      return 0 /* HOVER */;\n    }\n    return 1 /* FOCUS */;\n  }\n  onMouseEnter(e) {\n    if (this.interactionEnabled && this.interactiveTooltipTimeoutId) {\n      this.unlockService();\n      this.startHideTimeout();\n    }\n    if (isIOSUserAgent()) {\n      return;\n    }\n    if (_TooltipStateManager.isLocked) {\n      this.showTooltipTimeoutId = window.setTimeout(() => {\n        this.prepareToShowTooltip(e);\n      }, this.INTERACTIVE_HIDE_DELAY);\n    } else {\n      this.prepareToShowTooltip(e);\n    }\n  }\n  onMouseMove(e) {\n    if (this.lastMouseEvent) {\n      this.lastMouseEvent = e;\n    }\n    if (this.tooltipMouseTrack && this.state === 2 /* SHOWING */ && this.tooltipComp) {\n      this.positionTooltip();\n    }\n  }\n  onMouseDown() {\n    this.setToDoNothing();\n  }\n  onMouseLeave() {\n    if (this.interactionEnabled) {\n      this.lockService();\n    } else {\n      this.setToDoNothing();\n    }\n  }\n  onFocusIn() {\n    this.prepareToShowTooltip();\n  }\n  onFocusOut(e) {\n    var _a;\n    const relatedTarget = e.relatedTarget;\n    const parentCompGui = this.parentComp.getGui();\n    const tooltipGui = (_a = this.tooltipComp) == null ? void 0 : _a.getGui();\n    if (this.isInteractingWithTooltip || parentCompGui.contains(relatedTarget) || this.interactionEnabled && (tooltipGui == null ? void 0 : tooltipGui.contains(relatedTarget))) {\n      return;\n    }\n    this.setToDoNothing();\n  }\n  onKeyDown() {\n    this.setToDoNothing();\n  }\n  prepareToShowTooltip(mouseEvent) {\n    if (this.state != 0 /* NOTHING */ || _TooltipStateManager.isLocked) {\n      return;\n    }\n    let delay = 0;\n    if (mouseEvent) {\n      delay = this.isLastTooltipHiddenRecently() ? 200 : this.getTooltipDelay(\"show\");\n    }\n    this.lastMouseEvent = mouseEvent || null;\n    this.showTooltipTimeoutId = window.setTimeout(this.showTooltip.bind(this), delay);\n    this.state = 1 /* WAITING_TO_SHOW */;\n  }\n  isLastTooltipHiddenRecently() {\n    const now = (/* @__PURE__ */ new Date()).getTime();\n    const then = _TooltipStateManager.lastTooltipHideTime;\n    return now - then < this.SHOW_QUICK_TOOLTIP_DIFF;\n  }\n  setToDoNothing() {\n    if (this.state === 2 /* SHOWING */) {\n      this.hideTooltip();\n    }\n    if (this.onBodyScrollEventCallback) {\n      this.onBodyScrollEventCallback();\n      this.onBodyScrollEventCallback = void 0;\n    }\n    if (this.onColumnMovedEventCallback) {\n      this.onColumnMovedEventCallback();\n      this.onColumnMovedEventCallback = void 0;\n    }\n    this.clearTimeouts();\n    this.state = 0 /* NOTHING */;\n    this.lastMouseEvent = null;\n  }\n  showTooltip() {\n    const params = __spreadValues({}, this.parentComp.getTooltipParams());\n    if (!exists(params.value) || this.shouldDisplayTooltip && !this.shouldDisplayTooltip()) {\n      this.setToDoNothing();\n      return;\n    }\n    this.state = 2 /* SHOWING */;\n    this.tooltipInstanceCount++;\n    const callback = this.newTooltipComponentCallback.bind(this, this.tooltipInstanceCount);\n    const userDetails = this.userComponentFactory.getTooltipCompDetails(params);\n    userDetails.newAgStackInstance().then(callback);\n  }\n  hideTooltip(forceHide) {\n    if (!forceHide && this.isInteractingWithTooltip) {\n      return;\n    }\n    if (this.tooltipComp) {\n      this.destroyTooltipComp();\n      _TooltipStateManager.lastTooltipHideTime = (/* @__PURE__ */ new Date()).getTime();\n    }\n    const event = {\n      type: Events.EVENT_TOOLTIP_HIDE,\n      parentGui: this.parentComp.getGui()\n    };\n    this.eventService.dispatchEvent(event);\n    this.state = 0 /* NOTHING */;\n  }\n  newTooltipComponentCallback(tooltipInstanceCopy, tooltipComp) {\n    const compNoLongerNeeded = this.state !== 2 /* SHOWING */ || this.tooltipInstanceCount !== tooltipInstanceCopy;\n    if (compNoLongerNeeded) {\n      this.getContext().destroyBean(tooltipComp);\n      return;\n    }\n    const eGui = tooltipComp.getGui();\n    this.tooltipComp = tooltipComp;\n    if (!eGui.classList.contains(\"ag-tooltip\")) {\n      eGui.classList.add(\"ag-tooltip-custom\");\n    }\n    if (this.tooltipTrigger === 0 /* HOVER */) {\n      eGui.classList.add(\"ag-tooltip-animate\");\n    }\n    if (this.interactionEnabled) {\n      eGui.classList.add(\"ag-tooltip-interactive\");\n    }\n    const translate = this.localeService.getLocaleTextFunc();\n    const addPopupRes = this.popupService.addPopup({\n      eChild: eGui,\n      ariaLabel: translate(\"ariaLabelTooltip\", \"Tooltip\")\n    });\n    if (addPopupRes) {\n      this.tooltipPopupDestroyFunc = addPopupRes.hideFunc;\n    }\n    this.positionTooltip();\n    if (this.tooltipTrigger === 1 /* FOCUS */) {\n      this.onBodyScrollEventCallback = this.addManagedListener(this.eventService, Events.EVENT_BODY_SCROLL, this.setToDoNothing.bind(this));\n      this.onColumnMovedEventCallback = this.addManagedListener(this.eventService, Events.EVENT_COLUMN_MOVED, this.setToDoNothing.bind(this));\n    }\n    if (this.interactionEnabled) {\n      if (this.tooltipTrigger === 0 /* HOVER */) {\n        this.tooltipMouseEnterListener = this.addManagedListener(eGui, \"mouseenter\", this.onTooltipMouseEnter.bind(this)) || null;\n        this.tooltipMouseLeaveListener = this.addManagedListener(eGui, \"mouseleave\", this.onTooltipMouseLeave.bind(this)) || null;\n      } else {\n        this.tooltipFocusInListener = this.addManagedListener(eGui, \"focusin\", this.onTooltipFocusIn.bind(this)) || null;\n        this.tooltipFocusOutListener = this.addManagedListener(eGui, \"focusout\", this.onTooltipFocusOut.bind(this)) || null;\n      }\n    }\n    const event = {\n      type: Events.EVENT_TOOLTIP_SHOW,\n      tooltipGui: eGui,\n      parentGui: this.parentComp.getGui()\n    };\n    this.eventService.dispatchEvent(event);\n    this.startHideTimeout();\n  }\n  onTooltipMouseEnter() {\n    this.isInteractingWithTooltip = true;\n    this.unlockService();\n  }\n  onTooltipMouseLeave() {\n    this.isInteractingWithTooltip = false;\n    this.lockService();\n  }\n  onTooltipFocusIn() {\n    this.isInteractingWithTooltip = true;\n  }\n  onTooltipFocusOut(e) {\n    var _a;\n    const parentGui = this.parentComp.getGui();\n    const tooltipGui = (_a = this.tooltipComp) == null ? void 0 : _a.getGui();\n    const relatedTarget = e.relatedTarget;\n    if (tooltipGui == null ? void 0 : tooltipGui.contains(relatedTarget)) {\n      return;\n    }\n    this.isInteractingWithTooltip = false;\n    if (parentGui.contains(relatedTarget)) {\n      this.startHideTimeout();\n    } else {\n      this.hideTooltip();\n    }\n  }\n  positionTooltip() {\n    const params = {\n      type: \"tooltip\",\n      ePopup: this.tooltipComp.getGui(),\n      nudgeY: 18,\n      skipObserver: this.tooltipMouseTrack\n    };\n    if (this.lastMouseEvent) {\n      this.popupService.positionPopupUnderMouseEvent(__spreadProps(__spreadValues({}, params), {\n        mouseEvent: this.lastMouseEvent\n      }));\n    } else {\n      this.popupService.positionPopupByComponent(__spreadProps(__spreadValues({}, params), {\n        eventSource: this.parentComp.getGui(),\n        position: \"under\",\n        keepWithinBounds: true,\n        nudgeY: 5\n      }));\n    }\n  }\n  destroyTooltipComp() {\n    this.tooltipComp.getGui().classList.add(\"ag-tooltip-hiding\");\n    const tooltipPopupDestroyFunc = this.tooltipPopupDestroyFunc;\n    const tooltipComp = this.tooltipComp;\n    const delay = this.tooltipTrigger === 0 /* HOVER */ ? this.FADE_OUT_TOOLTIP_TIMEOUT : 0;\n    window.setTimeout(() => {\n      tooltipPopupDestroyFunc();\n      this.getContext().destroyBean(tooltipComp);\n    }, delay);\n    this.clearTooltipListeners();\n    this.tooltipPopupDestroyFunc = void 0;\n    this.tooltipComp = void 0;\n  }\n  clearTooltipListeners() {\n    [\n      this.tooltipMouseEnterListener,\n      this.tooltipMouseLeaveListener,\n      this.tooltipFocusInListener,\n      this.tooltipFocusOutListener\n    ].forEach((listener) => {\n      if (listener) {\n        listener();\n      }\n    });\n    this.tooltipMouseEnterListener = this.tooltipMouseLeaveListener = this.tooltipFocusInListener = this.tooltipFocusOutListener = null;\n  }\n  lockService() {\n    _TooltipStateManager.isLocked = true;\n    this.interactiveTooltipTimeoutId = window.setTimeout(() => {\n      this.unlockService();\n      this.setToDoNothing();\n    }, this.INTERACTIVE_HIDE_DELAY);\n  }\n  unlockService() {\n    _TooltipStateManager.isLocked = false;\n    this.clearInteractiveTimeout();\n  }\n  startHideTimeout() {\n    this.clearHideTimeout();\n    this.hideTooltipTimeoutId = window.setTimeout(this.hideTooltip.bind(this), this.getTooltipDelay(\"hide\"));\n  }\n  clearShowTimeout() {\n    if (!this.showTooltipTimeoutId) {\n      return;\n    }\n    window.clearTimeout(this.showTooltipTimeoutId);\n    this.showTooltipTimeoutId = void 0;\n  }\n  clearHideTimeout() {\n    if (!this.hideTooltipTimeoutId) {\n      return;\n    }\n    window.clearTimeout(this.hideTooltipTimeoutId);\n    this.hideTooltipTimeoutId = void 0;\n  }\n  clearInteractiveTimeout() {\n    if (!this.interactiveTooltipTimeoutId) {\n      return;\n    }\n    window.clearTimeout(this.interactiveTooltipTimeoutId);\n    this.interactiveTooltipTimeoutId = void 0;\n  }\n  clearTimeouts() {\n    this.clearShowTimeout();\n    this.clearHideTimeout();\n    this.clearInteractiveTimeout();\n  }\n};\n_TooltipStateManager.isLocked = false;\n__decorateClass([\n  Autowired(\"popupService\")\n], _TooltipStateManager.prototype, \"popupService\", 2);\n__decorateClass([\n  Autowired(\"userComponentFactory\")\n], _TooltipStateManager.prototype, \"userComponentFactory\", 2);\n__decorateClass([\n  PostConstruct\n], _TooltipStateManager.prototype, \"postConstruct\", 1);\nvar TooltipStateManager = _TooltipStateManager;\n\n// community-modules/core/src/widgets/tooltipFeature.ts\nvar TooltipFeature = class extends BeanStub {\n  constructor(ctrl, beans) {\n    super();\n    this.ctrl = ctrl;\n    if (beans) {\n      this.beans = beans;\n    }\n  }\n  postConstruct() {\n    this.refreshToolTip();\n  }\n  setBrowserTooltip(tooltip) {\n    const name = \"title\";\n    const eGui = this.ctrl.getGui();\n    if (!eGui) {\n      return;\n    }\n    if (tooltip != null && tooltip != \"\") {\n      eGui.setAttribute(name, tooltip);\n    } else {\n      eGui.removeAttribute(name);\n    }\n  }\n  updateTooltipText() {\n    this.tooltip = this.ctrl.getTooltipValue();\n  }\n  createTooltipFeatureIfNeeded() {\n    var _a, _b, _c, _d;\n    if (this.tooltipManager != null) {\n      return;\n    }\n    const parent = {\n      getTooltipParams: () => this.getTooltipParams(),\n      getGui: () => this.ctrl.getGui()\n    };\n    this.tooltipManager = this.createBean(new TooltipStateManager(\n      parent,\n      (_b = (_a = this.ctrl).getTooltipShowDelayOverride) == null ? void 0 : _b.call(_a),\n      (_d = (_c = this.ctrl).getTooltipHideDelayOverride) == null ? void 0 : _d.call(_c),\n      this.ctrl.shouldDisplayTooltip\n    ), this.beans.context);\n  }\n  refreshToolTip() {\n    this.browserTooltips = this.beans.gos.get(\"enableBrowserTooltips\");\n    this.updateTooltipText();\n    if (this.browserTooltips) {\n      this.setBrowserTooltip(this.tooltip);\n      if (this.tooltipManager) {\n        this.tooltipManager = this.destroyBean(this.tooltipManager, this.beans.context);\n      }\n    } else {\n      this.setBrowserTooltip(null);\n      this.createTooltipFeatureIfNeeded();\n    }\n  }\n  getTooltipParams() {\n    const ctrl = this.ctrl;\n    const column = ctrl.getColumn ? ctrl.getColumn() : void 0;\n    const colDef = ctrl.getColDef ? ctrl.getColDef() : void 0;\n    const rowNode = ctrl.getRowNode ? ctrl.getRowNode() : void 0;\n    return {\n      location: ctrl.getLocation(),\n      //'cell',\n      colDef,\n      column,\n      rowIndex: ctrl.getRowIndex ? ctrl.getRowIndex() : void 0,\n      node: rowNode,\n      data: rowNode ? rowNode.data : void 0,\n      value: this.getTooltipText(),\n      valueFormatted: ctrl.getValueFormatted ? ctrl.getValueFormatted() : void 0,\n      hideTooltipCallback: () => {\n        var _a;\n        return (_a = this.tooltipManager) == null ? void 0 : _a.hideTooltip(true);\n      }\n    };\n  }\n  getTooltipText() {\n    return this.tooltip;\n  }\n  // overriding to make public, as we don't dispose this bean via context\n  destroy() {\n    if (this.tooltipManager) {\n      this.tooltipManager = this.destroyBean(this.tooltipManager, this.beans.context);\n    }\n    super.destroy();\n  }\n};\n__decorateClass([\n  Autowired(\"beans\")\n], TooltipFeature.prototype, \"beans\", 2);\n__decorateClass([\n  PostConstruct\n], TooltipFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/widgets/component.ts\nvar compIdSequence = new NumberSequence();\nvar _Component = class _Component extends BeanStub {\n  constructor(template) {\n    super();\n    // if false, then CSS class \"ag-hidden\" is applied, which sets \"display: none\"\n    this.displayed = true;\n    // if false, then CSS class \"ag-invisible\" is applied, which sets \"visibility: hidden\"\n    this.visible = true;\n    // unique id for this row component. this is used for getting a reference to the HTML dom.\n    // we cannot use the RowNode id as this is not unique (due to animation, old rows can be lying\n    // around as we create a new rowComp instance for the same row node).\n    this.compId = compIdSequence.next();\n    this.cssClassManager = new CssClassManager(() => this.eGui);\n    if (template) {\n      this.setTemplate(template);\n    }\n  }\n  preConstructOnComponent() {\n    this.usingBrowserTooltips = this.gos.get(\"enableBrowserTooltips\");\n  }\n  getCompId() {\n    return this.compId;\n  }\n  getTooltipParams() {\n    return {\n      value: this.tooltipText,\n      location: \"UNKNOWN\"\n    };\n  }\n  setTooltip(params) {\n    const { newTooltipText, showDelayOverride, hideDelayOverride, location, shouldDisplayTooltip } = params || {};\n    if (this.tooltipFeature) {\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    }\n    if (this.tooltipText !== newTooltipText) {\n      this.tooltipText = newTooltipText;\n    }\n    const getTooltipValue = () => this.tooltipText;\n    if (newTooltipText != null) {\n      this.tooltipFeature = this.createBean(new TooltipFeature({\n        getTooltipValue,\n        getGui: () => this.getGui(),\n        getLocation: () => location != null ? location : \"UNKNOWN\",\n        getColDef: params == null ? void 0 : params.getColDef,\n        getColumn: params == null ? void 0 : params.getColumn,\n        getTooltipShowDelayOverride: showDelayOverride != null ? () => showDelayOverride : void 0,\n        getTooltipHideDelayOverride: hideDelayOverride != null ? () => hideDelayOverride : void 0,\n        shouldDisplayTooltip\n      }));\n    }\n  }\n  // for registered components only, eg creates AgCheckbox instance from ag-checkbox HTML tag\n  createChildComponentsFromTags(parentNode, paramsMap) {\n    const childNodeList = copyNodeList(parentNode.childNodes);\n    childNodeList.forEach((childNode) => {\n      if (!(childNode instanceof HTMLElement)) {\n        return;\n      }\n      const childComp = this.createComponentFromElement(childNode, (childComp2) => {\n        const childGui = childComp2.getGui();\n        if (childGui) {\n          this.copyAttributesFromNode(childNode, childComp2.getGui());\n        }\n      }, paramsMap);\n      if (childComp) {\n        if (childComp.addItems && childNode.children.length) {\n          this.createChildComponentsFromTags(childNode, paramsMap);\n          const items = Array.prototype.slice.call(childNode.children);\n          childComp.addItems(items);\n        }\n        this.swapComponentForNode(childComp, parentNode, childNode);\n      } else if (childNode.childNodes) {\n        this.createChildComponentsFromTags(childNode, paramsMap);\n      }\n    });\n  }\n  createComponentFromElement(element, afterPreCreateCallback, paramsMap) {\n    const key = element.nodeName;\n    const componentParams = paramsMap ? paramsMap[element.getAttribute(\"ref\")] : void 0;\n    const ComponentClass = this.agStackComponentsRegistry.getComponentClass(key);\n    if (ComponentClass) {\n      _Component.elementGettingCreated = element;\n      const newComponent = new ComponentClass(componentParams);\n      newComponent.setParentComponent(this);\n      this.createBean(newComponent, null, afterPreCreateCallback);\n      return newComponent;\n    }\n    return null;\n  }\n  copyAttributesFromNode(source, dest) {\n    iterateNamedNodeMap(source.attributes, (name, value) => dest.setAttribute(name, value));\n  }\n  swapComponentForNode(newComponent, parentNode, childNode) {\n    const eComponent = newComponent.getGui();\n    parentNode.replaceChild(eComponent, childNode);\n    parentNode.insertBefore(document.createComment(childNode.nodeName), eComponent);\n    this.addDestroyFunc(this.destroyBean.bind(this, newComponent));\n    this.swapInComponentForQuerySelectors(newComponent, childNode);\n  }\n  swapInComponentForQuerySelectors(newComponent, childNode) {\n    const thisNoType = this;\n    this.iterateOverQuerySelectors((querySelector) => {\n      if (thisNoType[querySelector.attributeName] === childNode) {\n        thisNoType[querySelector.attributeName] = newComponent;\n      }\n    });\n  }\n  iterateOverQuerySelectors(action) {\n    let thisPrototype = Object.getPrototypeOf(this);\n    while (thisPrototype != null) {\n      const metaData = thisPrototype.__agComponentMetaData;\n      const currentProtoName = getFunctionName(thisPrototype.constructor);\n      if (metaData && metaData[currentProtoName] && metaData[currentProtoName].querySelectors) {\n        metaData[currentProtoName].querySelectors.forEach((querySelector) => action(querySelector));\n      }\n      thisPrototype = Object.getPrototypeOf(thisPrototype);\n    }\n  }\n  activateTabIndex(elements) {\n    const tabIndex = this.gos.get(\"tabIndex\");\n    if (!elements) {\n      elements = [];\n    }\n    if (!elements.length) {\n      elements.push(this.getGui());\n    }\n    elements.forEach((el) => el.setAttribute(\"tabindex\", tabIndex.toString()));\n  }\n  setTemplate(template, paramsMap) {\n    const eGui = loadTemplate(template);\n    this.setTemplateFromElement(eGui, paramsMap);\n  }\n  setTemplateFromElement(element, paramsMap) {\n    this.eGui = element;\n    this.eGui.__agComponent = this;\n    this.wireQuerySelectors();\n    if (!!this.getContext()) {\n      this.createChildComponentsFromTags(this.getGui(), paramsMap);\n    }\n  }\n  createChildComponentsPreConstruct() {\n    if (!!this.getGui()) {\n      this.createChildComponentsFromTags(this.getGui());\n    }\n  }\n  wireQuerySelectors() {\n    if (!this.eGui) {\n      return;\n    }\n    const thisNoType = this;\n    this.iterateOverQuerySelectors((querySelector) => {\n      const setResult = (result) => thisNoType[querySelector.attributeName] = result;\n      const topLevelRefMatch = querySelector.refSelector && this.getAttribute(\"ref\") === querySelector.refSelector;\n      if (topLevelRefMatch) {\n        setResult(this.eGui);\n      } else {\n        const resultOfQuery = this.eGui.querySelector(querySelector.querySelector);\n        if (resultOfQuery) {\n          setResult(resultOfQuery.__agComponent || resultOfQuery);\n        }\n      }\n    });\n  }\n  getGui() {\n    return this.eGui;\n  }\n  getFocusableElement() {\n    return this.eGui;\n  }\n  getAriaElement() {\n    return this.getFocusableElement();\n  }\n  setParentComponent(component) {\n    this.parentComponent = component;\n  }\n  getParentComponent() {\n    return this.parentComponent;\n  }\n  // this method is for older code, that wants to provide the gui element,\n  // it is not intended for this to be in ag-Stack\n  setGui(eGui) {\n    this.eGui = eGui;\n  }\n  queryForHtmlElement(cssSelector) {\n    return this.eGui.querySelector(cssSelector);\n  }\n  queryForHtmlInputElement(cssSelector) {\n    return this.eGui.querySelector(cssSelector);\n  }\n  appendChild(newChild, container) {\n    if (newChild == null) {\n      return;\n    }\n    if (!container) {\n      container = this.eGui;\n    }\n    if (isNodeOrElement(newChild)) {\n      container.appendChild(newChild);\n    } else {\n      const childComponent = newChild;\n      container.appendChild(childComponent.getGui());\n    }\n  }\n  isDisplayed() {\n    return this.displayed;\n  }\n  setVisible(visible, options = {}) {\n    if (visible !== this.visible) {\n      this.visible = visible;\n      const { skipAriaHidden } = options;\n      setVisible(this.eGui, visible, { skipAriaHidden });\n    }\n  }\n  setDisplayed(displayed, options = {}) {\n    if (displayed !== this.displayed) {\n      this.displayed = displayed;\n      const { skipAriaHidden } = options;\n      setDisplayed(this.eGui, displayed, { skipAriaHidden });\n      const event = {\n        type: _Component.EVENT_DISPLAYED_CHANGED,\n        visible: this.displayed\n      };\n      this.dispatchEvent(event);\n    }\n  }\n  destroy() {\n    if (this.parentComponent) {\n      this.parentComponent = void 0;\n    }\n    if (this.tooltipFeature) {\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    }\n    const eGui = this.eGui;\n    if (eGui && eGui.__agComponent) {\n      eGui.__agComponent = void 0;\n    }\n    super.destroy();\n  }\n  addGuiEventListener(event, listener, options) {\n    this.eGui.addEventListener(event, listener, options);\n    this.addDestroyFunc(() => this.eGui.removeEventListener(event, listener));\n  }\n  addCssClass(className) {\n    this.cssClassManager.addCssClass(className);\n  }\n  removeCssClass(className) {\n    this.cssClassManager.removeCssClass(className);\n  }\n  containsCssClass(className) {\n    return this.cssClassManager.containsCssClass(className);\n  }\n  addOrRemoveCssClass(className, addOrRemove) {\n    this.cssClassManager.addOrRemoveCssClass(className, addOrRemove);\n  }\n  getAttribute(key) {\n    const { eGui } = this;\n    return eGui ? eGui.getAttribute(key) : null;\n  }\n  getRefElement(refName) {\n    return this.queryForHtmlElement(`[ref=\"${refName}\"]`);\n  }\n};\n_Component.EVENT_DISPLAYED_CHANGED = \"displayedChanged\";\n__decorateClass([\n  Autowired(\"agStackComponentsRegistry\")\n], _Component.prototype, \"agStackComponentsRegistry\", 2);\n__decorateClass([\n  PreConstruct\n], _Component.prototype, \"preConstructOnComponent\", 1);\n__decorateClass([\n  PreConstruct\n], _Component.prototype, \"createChildComponentsPreConstruct\", 1);\nvar Component = _Component;\n\n// community-modules/core/src/widgets/componentAnnotations.ts\nfunction QuerySelector(selector) {\n  return querySelectorFunc.bind(this, selector, void 0);\n}\nfunction RefSelector(ref) {\n  return querySelectorFunc.bind(this, `[ref=${ref}]`, ref);\n}\nfunction querySelectorFunc(selector, refSelector, classPrototype, methodOrAttributeName, index) {\n  if (selector === null) {\n    console.error(\"AG Grid: QuerySelector selector should not be null\");\n    return;\n  }\n  if (typeof index === \"number\") {\n    console.error(\"AG Grid: QuerySelector should be on an attribute\");\n    return;\n  }\n  addToObjectProps(classPrototype, \"querySelectors\", {\n    attributeName: methodOrAttributeName,\n    querySelector: selector,\n    refSelector\n  });\n}\nfunction addToObjectProps(target, key, value) {\n  const props = getOrCreateProps2(target, getFunctionName(target.constructor));\n  if (!props[key]) {\n    props[key] = [];\n  }\n  props[key].push(value);\n}\nfunction getOrCreateProps2(target, instanceName) {\n  if (!target.__agComponentMetaData) {\n    target.__agComponentMetaData = {};\n  }\n  if (!target.__agComponentMetaData[instanceName]) {\n    target.__agComponentMetaData[instanceName] = {};\n  }\n  return target.__agComponentMetaData[instanceName];\n}\n\n// community-modules/core/src/filter/floating/provided/readOnlyFloatingFilter.ts\nvar ReadOnlyFloatingFilter = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-floating-filter-input\" role=\"presentation\">\n                <ag-input-text-field ref=\"eFloatingFilterText\"></ag-input-text-field>\n            </div>`\n    );\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  init(params) {\n    this.params = params;\n    const displayName = this.columnModel.getDisplayNameForColumn(params.column, \"header\", true);\n    const translate = this.localeService.getLocaleTextFunc();\n    this.eFloatingFilterText.setDisabled(true).setInputAriaLabel(`${displayName} ${translate(\"ariaFilterInput\", \"Filter Input\")}`);\n  }\n  onParentModelChanged(parentModel) {\n    if (parentModel == null) {\n      this.eFloatingFilterText.setValue(\"\");\n      return;\n    }\n    this.params.parentFilterInstance((filterInstance) => {\n      if (filterInstance.getModelAsString) {\n        const modelAsString = filterInstance.getModelAsString(parentModel);\n        this.eFloatingFilterText.setValue(modelAsString);\n      }\n    });\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    this.init(params);\n  }\n};\n__decorateClass([\n  RefSelector(\"eFloatingFilterText\")\n], ReadOnlyFloatingFilter.prototype, \"eFloatingFilterText\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], ReadOnlyFloatingFilter.prototype, \"columnModel\", 2);\n\n// community-modules/core/src/filter/provided/date/dateCompWrapper.ts\nvar DateCompWrapper = class {\n  constructor(context, userComponentFactory, dateComponentParams, eParent, onReady) {\n    this.alive = true;\n    this.context = context;\n    this.eParent = eParent;\n    const compDetails = userComponentFactory.getDateCompDetails(dateComponentParams);\n    const promise = compDetails.newAgStackInstance();\n    promise.then((dateComp) => {\n      if (!this.alive) {\n        context.destroyBean(dateComp);\n        return;\n      }\n      this.dateComp = dateComp;\n      if (!dateComp) {\n        return;\n      }\n      eParent.appendChild(dateComp.getGui());\n      if (dateComp.afterGuiAttached) {\n        dateComp.afterGuiAttached();\n      }\n      if (this.tempValue) {\n        dateComp.setDate(this.tempValue);\n      }\n      if (this.disabled != null) {\n        this.setDateCompDisabled(this.disabled);\n      }\n      onReady == null ? void 0 : onReady(this);\n    });\n  }\n  destroy() {\n    this.alive = false;\n    this.dateComp = this.context.destroyBean(this.dateComp);\n  }\n  getDate() {\n    return this.dateComp ? this.dateComp.getDate() : this.tempValue;\n  }\n  setDate(value) {\n    if (this.dateComp) {\n      this.dateComp.setDate(value);\n    } else {\n      this.tempValue = value;\n    }\n  }\n  setDisabled(disabled) {\n    if (this.dateComp) {\n      this.setDateCompDisabled(disabled);\n    } else {\n      this.disabled = disabled;\n    }\n  }\n  setDisplayed(displayed) {\n    setDisplayed(this.eParent, displayed);\n  }\n  setInputPlaceholder(placeholder) {\n    if (this.dateComp && this.dateComp.setInputPlaceholder) {\n      this.dateComp.setInputPlaceholder(placeholder);\n    }\n  }\n  setInputAriaLabel(label) {\n    if (this.dateComp && this.dateComp.setInputAriaLabel) {\n      this.dateComp.setInputAriaLabel(label);\n    }\n  }\n  afterGuiAttached(params) {\n    if (this.dateComp && typeof this.dateComp.afterGuiAttached === \"function\") {\n      this.dateComp.afterGuiAttached(params);\n    }\n  }\n  updateParams(params) {\n    var _a, _b;\n    let hasRefreshed = false;\n    if (((_a = this.dateComp) == null ? void 0 : _a.refresh) && typeof this.dateComp.refresh === \"function\") {\n      const result = this.dateComp.refresh(params);\n      if (result !== null) {\n        hasRefreshed = true;\n      }\n    }\n    if (!hasRefreshed && ((_b = this.dateComp) == null ? void 0 : _b.onParamsUpdated) && typeof this.dateComp.onParamsUpdated === \"function\") {\n      const result = this.dateComp.onParamsUpdated(params);\n      if (result !== null) {\n        warnOnce(`Custom date component method 'onParamsUpdated' is deprecated. Use 'refresh' instead.`);\n      }\n    }\n  }\n  setDateCompDisabled(disabled) {\n    if (this.dateComp == null) {\n      return;\n    }\n    if (this.dateComp.setDisabled == null) {\n      return;\n    }\n    this.dateComp.setDisabled(disabled);\n  }\n};\n\n// community-modules/core/src/filter/provided/optionsFactory.ts\nvar OptionsFactory = class {\n  constructor() {\n    this.customFilterOptions = {};\n  }\n  init(params, defaultOptions) {\n    this.filterOptions = params.filterOptions || defaultOptions;\n    this.mapCustomOptions();\n    this.selectDefaultItem(params);\n  }\n  getFilterOptions() {\n    return this.filterOptions;\n  }\n  mapCustomOptions() {\n    if (!this.filterOptions) {\n      return;\n    }\n    this.filterOptions.forEach((filterOption) => {\n      if (typeof filterOption === \"string\") {\n        return;\n      }\n      const requiredProperties = [[\"displayKey\"], [\"displayName\"], [\"predicate\", \"test\"]];\n      const propertyCheck = (keys2) => {\n        if (!keys2.some((key) => filterOption[key] != null)) {\n          console.warn(`AG Grid: ignoring FilterOptionDef as it doesn't contain one of '${keys2}'`);\n          return false;\n        }\n        return true;\n      };\n      if (!requiredProperties.every(propertyCheck)) {\n        this.filterOptions = this.filterOptions.filter((v) => v === filterOption) || [];\n        return;\n      }\n      this.customFilterOptions[filterOption.displayKey] = filterOption;\n    });\n  }\n  selectDefaultItem(params) {\n    if (params.defaultOption) {\n      this.defaultOption = params.defaultOption;\n    } else if (this.filterOptions.length >= 1) {\n      const firstFilterOption = this.filterOptions[0];\n      if (typeof firstFilterOption === \"string\") {\n        this.defaultOption = firstFilterOption;\n      } else if (firstFilterOption.displayKey) {\n        this.defaultOption = firstFilterOption.displayKey;\n      } else {\n        console.warn(`AG Grid: invalid FilterOptionDef supplied as it doesn't contain a 'displayKey'`);\n      }\n    } else {\n      console.warn(\"AG Grid: no filter options for filter\");\n    }\n  }\n  getDefaultOption() {\n    return this.defaultOption;\n  }\n  getCustomOption(name) {\n    return this.customFilterOptions[name];\n  }\n};\n\n// community-modules/core/src/filter/filterLocaleText.ts\nvar FILTER_LOCALE_TEXT = {\n  applyFilter: \"Apply\",\n  clearFilter: \"Clear\",\n  resetFilter: \"Reset\",\n  cancelFilter: \"Cancel\",\n  textFilter: \"Text Filter\",\n  numberFilter: \"Number Filter\",\n  dateFilter: \"Date Filter\",\n  setFilter: \"Set Filter\",\n  filterOoo: \"Filter...\",\n  empty: \"Choose one\",\n  equals: \"Equals\",\n  notEqual: \"Does not equal\",\n  lessThan: \"Less than\",\n  greaterThan: \"Greater than\",\n  inRange: \"Between\",\n  inRangeStart: \"From\",\n  inRangeEnd: \"To\",\n  lessThanOrEqual: \"Less than or equal to\",\n  greaterThanOrEqual: \"Greater than or equal to\",\n  contains: \"Contains\",\n  notContains: \"Does not contain\",\n  startsWith: \"Begins with\",\n  endsWith: \"Ends with\",\n  blank: \"Blank\",\n  notBlank: \"Not blank\",\n  before: \"Before\",\n  after: \"After\",\n  andCondition: \"AND\",\n  orCondition: \"OR\",\n  dateFormatOoo: \"yyyy-mm-dd\"\n};\n\n// community-modules/core/src/widgets/managedFocusFeature.ts\nvar _ManagedFocusFeature = class _ManagedFocusFeature extends BeanStub {\n  constructor(eFocusableElement, callbacks = {}) {\n    super();\n    this.eFocusableElement = eFocusableElement;\n    this.callbacks = callbacks;\n    this.callbacks = __spreadValues({\n      shouldStopEventPropagation: () => false,\n      onTabKeyDown: (e) => {\n        if (e.defaultPrevented) {\n          return;\n        }\n        const nextRoot = this.focusService.findNextFocusableElement(this.eFocusableElement, false, e.shiftKey);\n        if (!nextRoot) {\n          return;\n        }\n        nextRoot.focus();\n        e.preventDefault();\n      }\n    }, callbacks);\n  }\n  postConstruct() {\n    this.eFocusableElement.classList.add(_ManagedFocusFeature.FOCUS_MANAGED_CLASS);\n    this.addKeyDownListeners(this.eFocusableElement);\n    if (this.callbacks.onFocusIn) {\n      this.addManagedListener(this.eFocusableElement, \"focusin\", this.callbacks.onFocusIn);\n    }\n    if (this.callbacks.onFocusOut) {\n      this.addManagedListener(this.eFocusableElement, \"focusout\", this.callbacks.onFocusOut);\n    }\n  }\n  addKeyDownListeners(eGui) {\n    this.addManagedListener(eGui, \"keydown\", (e) => {\n      if (e.defaultPrevented || isStopPropagationForAgGrid(e)) {\n        return;\n      }\n      if (this.callbacks.shouldStopEventPropagation(e)) {\n        stopPropagationForAgGrid(e);\n        return;\n      }\n      if (e.key === KeyCode.TAB) {\n        this.callbacks.onTabKeyDown(e);\n      } else if (this.callbacks.handleKeyDown) {\n        this.callbacks.handleKeyDown(e);\n      }\n    });\n  }\n};\n_ManagedFocusFeature.FOCUS_MANAGED_CLASS = \"ag-focus-managed\";\n__decorateClass([\n  Autowired(\"focusService\")\n], _ManagedFocusFeature.prototype, \"focusService\", 2);\n__decorateClass([\n  PostConstruct\n], _ManagedFocusFeature.prototype, \"postConstruct\", 1);\nvar ManagedFocusFeature = _ManagedFocusFeature;\n\n// community-modules/core/src/rendering/features/positionableFeature.ts\nvar RESIZE_CONTAINER_STYLE = \"ag-resizer-wrapper\";\nvar RESIZE_TEMPLATE = (\n  /* html */\n  `<div class=\"${RESIZE_CONTAINER_STYLE}\">\n        <div ref=\"eTopLeftResizer\" class=\"ag-resizer ag-resizer-topLeft\"></div>\n        <div ref=\"eTopResizer\" class=\"ag-resizer ag-resizer-top\"></div>\n        <div ref=\"eTopRightResizer\" class=\"ag-resizer ag-resizer-topRight\"></div>\n        <div ref=\"eRightResizer\" class=\"ag-resizer ag-resizer-right\"></div>\n        <div ref=\"eBottomRightResizer\" class=\"ag-resizer ag-resizer-bottomRight\"></div>\n        <div ref=\"eBottomResizer\" class=\"ag-resizer ag-resizer-bottom\"></div>\n        <div ref=\"eBottomLeftResizer\" class=\"ag-resizer ag-resizer-bottomLeft\"></div>\n        <div ref=\"eLeftResizer\" class=\"ag-resizer ag-resizer-left\"></div>\n    </div>`\n);\nvar PositionableFeature = class extends BeanStub {\n  constructor(element, config) {\n    super();\n    this.element = element;\n    this.dragStartPosition = {\n      x: 0,\n      y: 0\n    };\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    this.lastSize = {\n      width: -1,\n      height: -1\n    };\n    this.positioned = false;\n    this.resizersAdded = false;\n    this.resizeListeners = [];\n    this.boundaryEl = null;\n    this.isResizing = false;\n    this.isMoving = false;\n    this.resizable = {};\n    this.movable = false;\n    this.currentResizer = null;\n    this.config = Object.assign({}, { popup: false }, config);\n  }\n  center() {\n    const { clientHeight, clientWidth } = this.offsetParent;\n    const x = clientWidth / 2 - this.getWidth() / 2;\n    const y = clientHeight / 2 - this.getHeight() / 2;\n    this.offsetElement(x, y);\n  }\n  initialisePosition() {\n    if (this.positioned) {\n      return;\n    }\n    const { centered, forcePopupParentAsOffsetParent, minWidth, width, minHeight, height, x, y } = this.config;\n    if (!this.offsetParent) {\n      this.setOffsetParent();\n    }\n    let computedMinHeight = 0;\n    let computedMinWidth = 0;\n    const isElementVisible = isVisible(this.element);\n    if (isElementVisible) {\n      const boundaryEl = this.findBoundaryElement();\n      const offsetParentComputedStyles = window.getComputedStyle(boundaryEl);\n      if (offsetParentComputedStyles.minWidth != null) {\n        const paddingWidth = boundaryEl.offsetWidth - this.element.offsetWidth;\n        computedMinWidth = parseInt(offsetParentComputedStyles.minWidth, 10) - paddingWidth;\n      }\n      if (offsetParentComputedStyles.minHeight != null) {\n        const paddingHeight = boundaryEl.offsetHeight - this.element.offsetHeight;\n        computedMinHeight = parseInt(offsetParentComputedStyles.minHeight, 10) - paddingHeight;\n      }\n    }\n    this.minHeight = minHeight || computedMinHeight;\n    this.minWidth = minWidth || computedMinWidth;\n    if (width) {\n      this.setWidth(width);\n    }\n    if (height) {\n      this.setHeight(height);\n    }\n    if (!width || !height) {\n      this.refreshSize();\n    }\n    if (centered) {\n      this.center();\n    } else if (x || y) {\n      this.offsetElement(x, y);\n    } else if (isElementVisible && forcePopupParentAsOffsetParent) {\n      let boundaryEl = this.boundaryEl;\n      let initialisedDuringPositioning = true;\n      if (!boundaryEl) {\n        boundaryEl = this.findBoundaryElement();\n        initialisedDuringPositioning = false;\n      }\n      if (boundaryEl) {\n        const top = parseFloat(boundaryEl.style.top);\n        const left = parseFloat(boundaryEl.style.left);\n        if (initialisedDuringPositioning) {\n          this.offsetElement(\n            isNaN(left) ? 0 : left,\n            isNaN(top) ? 0 : top\n          );\n        } else {\n          this.setPosition(left, top);\n        }\n      }\n    }\n    this.positioned = !!this.offsetParent;\n  }\n  isPositioned() {\n    return this.positioned;\n  }\n  getPosition() {\n    return this.position;\n  }\n  setMovable(movable, moveElement) {\n    if (!this.config.popup || movable === this.movable) {\n      return;\n    }\n    this.movable = movable;\n    const params = this.moveElementDragListener || {\n      eElement: moveElement,\n      onDragStart: this.onMoveStart.bind(this),\n      onDragging: this.onMove.bind(this),\n      onDragStop: this.onMoveEnd.bind(this)\n    };\n    if (movable) {\n      this.dragService.addDragSource(params);\n      this.moveElementDragListener = params;\n    } else {\n      this.dragService.removeDragSource(params);\n      this.moveElementDragListener = void 0;\n    }\n  }\n  setResizable(resizable) {\n    this.clearResizeListeners();\n    if (resizable) {\n      this.addResizers();\n    } else {\n      this.removeResizers();\n    }\n    if (typeof resizable === \"boolean\") {\n      if (resizable === false) {\n        return;\n      }\n      resizable = {\n        topLeft: resizable,\n        top: resizable,\n        topRight: resizable,\n        right: resizable,\n        bottomRight: resizable,\n        bottom: resizable,\n        bottomLeft: resizable,\n        left: resizable\n      };\n    }\n    Object.keys(resizable).forEach((side) => {\n      const resizableStructure = resizable;\n      const isSideResizable = !!resizableStructure[side];\n      const resizerEl = this.getResizerElement(side);\n      const params = {\n        dragStartPixels: 0,\n        eElement: resizerEl,\n        onDragStart: (e) => this.onResizeStart(e, side),\n        onDragging: this.onResize.bind(this),\n        onDragStop: (e) => this.onResizeEnd(e, side)\n      };\n      if (isSideResizable || !this.isAlive() && !isSideResizable) {\n        if (isSideResizable) {\n          this.dragService.addDragSource(params);\n          this.resizeListeners.push(params);\n          resizerEl.style.pointerEvents = \"all\";\n        } else {\n          resizerEl.style.pointerEvents = \"none\";\n        }\n        this.resizable[side] = isSideResizable;\n      }\n    });\n  }\n  removeSizeFromEl() {\n    this.element.style.removeProperty(\"height\");\n    this.element.style.removeProperty(\"width\");\n    this.element.style.removeProperty(\"flex\");\n  }\n  restoreLastSize() {\n    this.element.style.flex = \"0 0 auto\";\n    const { height, width } = this.lastSize;\n    if (width !== -1) {\n      this.element.style.width = `${width}px`;\n    }\n    if (height !== -1) {\n      this.element.style.height = `${height}px`;\n    }\n  }\n  getHeight() {\n    return this.element.offsetHeight;\n  }\n  setHeight(height) {\n    const { popup } = this.config;\n    const eGui = this.element;\n    let isPercent = false;\n    if (typeof height === \"string\" && height.indexOf(\"%\") !== -1) {\n      setFixedHeight(eGui, height);\n      height = getAbsoluteHeight(eGui);\n      isPercent = true;\n    } else {\n      height = Math.max(this.minHeight, height);\n      if (this.positioned) {\n        const availableHeight = this.getAvailableHeight();\n        if (availableHeight && height > availableHeight) {\n          height = availableHeight;\n        }\n      }\n    }\n    if (this.getHeight() === height) {\n      return;\n    }\n    if (!isPercent) {\n      if (popup) {\n        setFixedHeight(eGui, height);\n      } else {\n        eGui.style.height = `${height}px`;\n        eGui.style.flex = \"0 0 auto\";\n        this.lastSize.height = typeof height === \"number\" ? height : parseFloat(height);\n      }\n    } else {\n      eGui.style.maxHeight = \"unset\";\n      eGui.style.minHeight = \"unset\";\n    }\n  }\n  getAvailableHeight() {\n    const { popup, forcePopupParentAsOffsetParent } = this.config;\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    const { clientHeight } = this.offsetParent;\n    if (!clientHeight) {\n      return null;\n    }\n    const elRect = this.element.getBoundingClientRect();\n    const offsetParentRect = this.offsetParent.getBoundingClientRect();\n    const yPosition = popup ? this.position.y : elRect.top;\n    const parentTop = popup ? 0 : offsetParentRect.top;\n    let additionalHeight = 0;\n    if (forcePopupParentAsOffsetParent) {\n      const parentEl = this.element.parentElement;\n      if (parentEl) {\n        const { bottom } = parentEl.getBoundingClientRect();\n        additionalHeight = bottom - elRect.bottom;\n      }\n    }\n    const availableHeight = clientHeight + parentTop - yPosition - additionalHeight;\n    return availableHeight;\n  }\n  getWidth() {\n    return this.element.offsetWidth;\n  }\n  setWidth(width) {\n    const eGui = this.element;\n    const { popup } = this.config;\n    let isPercent = false;\n    if (typeof width === \"string\" && width.indexOf(\"%\") !== -1) {\n      setFixedWidth(eGui, width);\n      width = getAbsoluteWidth(eGui);\n      isPercent = true;\n    } else if (this.positioned) {\n      width = Math.max(this.minWidth, width);\n      const { clientWidth } = this.offsetParent;\n      const xPosition = popup ? this.position.x : this.element.getBoundingClientRect().left;\n      if (clientWidth && width + xPosition > clientWidth) {\n        width = clientWidth - xPosition;\n      }\n    }\n    if (this.getWidth() === width) {\n      return;\n    }\n    if (!isPercent) {\n      if (this.config.popup) {\n        setFixedWidth(eGui, width);\n      } else {\n        eGui.style.width = `${width}px`;\n        eGui.style.flex = \" unset\";\n        this.lastSize.width = typeof width === \"number\" ? width : parseFloat(width);\n      }\n    } else {\n      eGui.style.maxWidth = \"unset\";\n      eGui.style.minWidth = \"unset\";\n    }\n  }\n  offsetElement(x = 0, y = 0) {\n    const { forcePopupParentAsOffsetParent } = this.config;\n    const ePopup = forcePopupParentAsOffsetParent ? this.boundaryEl : this.element;\n    if (!ePopup) {\n      return;\n    }\n    this.popupService.positionPopup({\n      ePopup,\n      keepWithinBounds: true,\n      skipObserver: this.movable || this.isResizable(),\n      updatePosition: () => ({ x, y })\n    });\n    this.setPosition(\n      parseFloat(ePopup.style.left),\n      parseFloat(ePopup.style.top)\n    );\n  }\n  constrainSizeToAvailableHeight(constrain) {\n    if (!this.config.forcePopupParentAsOffsetParent) {\n      return;\n    }\n    const applyMaxHeightToElement = () => {\n      const availableHeight = this.getAvailableHeight();\n      this.element.style.setProperty(\"max-height\", `${availableHeight}px`);\n    };\n    if (constrain) {\n      this.resizeObserverSubscriber = this.resizeObserverService.observeResize(\n        this.popupService.getPopupParent(),\n        applyMaxHeightToElement\n      );\n    } else {\n      this.element.style.removeProperty(\"max-height\");\n      if (this.resizeObserverSubscriber) {\n        this.resizeObserverSubscriber();\n        this.resizeObserverSubscriber = void 0;\n      }\n    }\n  }\n  setPosition(x, y) {\n    this.position.x = x;\n    this.position.y = y;\n  }\n  updateDragStartPosition(x, y) {\n    this.dragStartPosition = { x, y };\n  }\n  calculateMouseMovement(params) {\n    const { e, isLeft, isTop, anywhereWithin, topBuffer } = params;\n    const xDiff = e.clientX - this.dragStartPosition.x;\n    const yDiff = e.clientY - this.dragStartPosition.y;\n    const movementX = this.shouldSkipX(e, !!isLeft, !!anywhereWithin, xDiff) ? 0 : xDiff;\n    const movementY = this.shouldSkipY(e, !!isTop, topBuffer, yDiff) ? 0 : yDiff;\n    return { movementX, movementY };\n  }\n  shouldSkipX(e, isLeft, anywhereWithin, diff) {\n    const elRect = this.element.getBoundingClientRect();\n    const parentRect = this.offsetParent.getBoundingClientRect();\n    const boundaryElRect = this.boundaryEl.getBoundingClientRect();\n    const xPosition = this.config.popup ? this.position.x : elRect.left;\n    let skipX = xPosition <= 0 && parentRect.left >= e.clientX || parentRect.right <= e.clientX && parentRect.right <= boundaryElRect.right;\n    if (skipX) {\n      return true;\n    }\n    if (isLeft) {\n      skipX = // skip if we are moving to the left and the cursor\n      // is positioned to the right of the left side anchor\n      diff < 0 && e.clientX > xPosition + parentRect.left || // skip if we are moving to the right and the cursor\n      // is positioned to the left of the dialog\n      diff > 0 && e.clientX < xPosition + parentRect.left;\n    } else {\n      if (anywhereWithin) {\n        skipX = diff < 0 && e.clientX > boundaryElRect.right || diff > 0 && e.clientX < xPosition + parentRect.left;\n      } else {\n        skipX = // if the movement is bound to the right side of the dialog\n        // we skip if we are moving to the left and the cursor\n        // is to the right of the dialog\n        diff < 0 && e.clientX > boundaryElRect.right || // or skip if we are moving to the right and the cursor\n        // is to the left of the right side anchor\n        diff > 0 && e.clientX < boundaryElRect.right;\n      }\n    }\n    return skipX;\n  }\n  shouldSkipY(e, isTop, topBuffer = 0, diff) {\n    const elRect = this.element.getBoundingClientRect();\n    const parentRect = this.offsetParent.getBoundingClientRect();\n    const boundaryElRect = this.boundaryEl.getBoundingClientRect();\n    const yPosition = this.config.popup ? this.position.y : elRect.top;\n    let skipY = yPosition <= 0 && parentRect.top >= e.clientY || parentRect.bottom <= e.clientY && parentRect.bottom <= boundaryElRect.bottom;\n    if (skipY) {\n      return true;\n    }\n    if (isTop) {\n      skipY = // skip if we are moving to towards top and the cursor is\n      // below the top anchor + topBuffer\n      // note: topBuffer is used when moving the dialog using the title bar\n      diff < 0 && e.clientY > yPosition + parentRect.top + topBuffer || // skip if we are moving to the bottom and the cursor is\n      // above the top anchor\n      diff > 0 && e.clientY < yPosition + parentRect.top;\n    } else {\n      skipY = // skip if we are moving towards the top and the cursor\n      // is below the bottom anchor\n      diff < 0 && e.clientY > boundaryElRect.bottom || // skip if we are moving towards the bottom and the cursor\n      // is above the bottom anchor\n      diff > 0 && e.clientY < boundaryElRect.bottom;\n    }\n    return skipY;\n  }\n  createResizeMap() {\n    const eGui = this.element;\n    this.resizerMap = {\n      topLeft: { element: eGui.querySelector(\"[ref=eTopLeftResizer]\") },\n      top: { element: eGui.querySelector(\"[ref=eTopResizer]\") },\n      topRight: { element: eGui.querySelector(\"[ref=eTopRightResizer]\") },\n      right: { element: eGui.querySelector(\"[ref=eRightResizer]\") },\n      bottomRight: { element: eGui.querySelector(\"[ref=eBottomRightResizer]\") },\n      bottom: { element: eGui.querySelector(\"[ref=eBottomResizer]\") },\n      bottomLeft: { element: eGui.querySelector(\"[ref=eBottomLeftResizer]\") },\n      left: { element: eGui.querySelector(\"[ref=eLeftResizer]\") }\n    };\n  }\n  addResizers() {\n    if (this.resizersAdded) {\n      return;\n    }\n    const eGui = this.element;\n    if (!eGui) {\n      return;\n    }\n    const parser = new DOMParser();\n    const resizers = parser.parseFromString(RESIZE_TEMPLATE, \"text/html\").body;\n    eGui.appendChild(resizers.firstChild);\n    this.createResizeMap();\n    this.resizersAdded = true;\n  }\n  removeResizers() {\n    this.resizerMap = void 0;\n    const resizerEl = this.element.querySelector(`.${RESIZE_CONTAINER_STYLE}`);\n    if (resizerEl) {\n      this.element.removeChild(resizerEl);\n    }\n    this.resizersAdded = false;\n  }\n  getResizerElement(side) {\n    return this.resizerMap[side].element;\n  }\n  onResizeStart(e, side) {\n    this.boundaryEl = this.findBoundaryElement();\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    this.currentResizer = {\n      isTop: !!side.match(/top/i),\n      isRight: !!side.match(/right/i),\n      isBottom: !!side.match(/bottom/i),\n      isLeft: !!side.match(/left/i)\n    };\n    this.element.classList.add(\"ag-resizing\");\n    this.resizerMap[side].element.classList.add(\"ag-active\");\n    const { popup, forcePopupParentAsOffsetParent } = this.config;\n    if (!popup && !forcePopupParentAsOffsetParent) {\n      this.applySizeToSiblings(this.currentResizer.isBottom || this.currentResizer.isTop);\n    }\n    this.isResizing = true;\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  getSiblings() {\n    const element = this.element;\n    const parent = element.parentElement;\n    if (!parent) {\n      return null;\n    }\n    return Array.prototype.slice.call(parent.children).filter((el) => !el.classList.contains(\"ag-hidden\"));\n  }\n  getMinSizeOfSiblings() {\n    const siblings = this.getSiblings() || [];\n    let height = 0;\n    let width = 0;\n    for (let i = 0; i < siblings.length; i++) {\n      const currentEl = siblings[i];\n      const isFlex = !!currentEl.style.flex && currentEl.style.flex !== \"0 0 auto\";\n      if (currentEl === this.element) {\n        continue;\n      }\n      let nextHeight = this.minHeight || 0;\n      let nextWidth = this.minWidth || 0;\n      if (isFlex) {\n        const computedStyle = window.getComputedStyle(currentEl);\n        if (computedStyle.minHeight) {\n          nextHeight = parseInt(computedStyle.minHeight, 10);\n        }\n        if (computedStyle.minWidth) {\n          nextWidth = parseInt(computedStyle.minWidth, 10);\n        }\n      } else {\n        nextHeight = currentEl.offsetHeight;\n        nextWidth = currentEl.offsetWidth;\n      }\n      height += nextHeight;\n      width += nextWidth;\n    }\n    return { height, width };\n  }\n  applySizeToSiblings(vertical) {\n    let containerToFlex = null;\n    const siblings = this.getSiblings();\n    if (!siblings) {\n      return;\n    }\n    for (let i = 0; i < siblings.length; i++) {\n      const el = siblings[i];\n      if (el === containerToFlex) {\n        continue;\n      }\n      if (vertical) {\n        el.style.height = `${el.offsetHeight}px`;\n      } else {\n        el.style.width = `${el.offsetWidth}px`;\n      }\n      el.style.flex = \"0 0 auto\";\n      if (el === this.element) {\n        containerToFlex = siblings[i + 1];\n      }\n    }\n    if (containerToFlex) {\n      containerToFlex.style.removeProperty(\"height\");\n      containerToFlex.style.removeProperty(\"min-height\");\n      containerToFlex.style.removeProperty(\"max-height\");\n      containerToFlex.style.flex = \"1 1 auto\";\n    }\n  }\n  isResizable() {\n    return Object.values(this.resizable).some((value) => value);\n  }\n  onResize(e) {\n    if (!this.isResizing || !this.currentResizer) {\n      return;\n    }\n    const { popup, forcePopupParentAsOffsetParent } = this.config;\n    const { isTop, isRight, isBottom, isLeft } = this.currentResizer;\n    const isHorizontal = isRight || isLeft;\n    const isVertical = isBottom || isTop;\n    const { movementX, movementY } = this.calculateMouseMovement({ e, isLeft, isTop });\n    const xPosition = this.position.x;\n    const yPosition = this.position.y;\n    let offsetLeft = 0;\n    let offsetTop = 0;\n    if (isHorizontal && movementX) {\n      const direction = isLeft ? -1 : 1;\n      const oldWidth = this.getWidth();\n      const newWidth = oldWidth + movementX * direction;\n      let skipWidth = false;\n      if (isLeft) {\n        offsetLeft = oldWidth - newWidth;\n        if (xPosition + offsetLeft <= 0 || newWidth <= this.minWidth) {\n          skipWidth = true;\n          offsetLeft = 0;\n        }\n      }\n      if (!skipWidth) {\n        this.setWidth(newWidth);\n      }\n    }\n    if (isVertical && movementY) {\n      const direction = isTop ? -1 : 1;\n      const oldHeight = this.getHeight();\n      const newHeight = oldHeight + movementY * direction;\n      let skipHeight = false;\n      if (isTop) {\n        offsetTop = oldHeight - newHeight;\n        if (yPosition + offsetTop <= 0 || newHeight <= this.minHeight) {\n          skipHeight = true;\n          offsetTop = 0;\n        }\n      } else {\n        if (!this.config.popup && !this.config.forcePopupParentAsOffsetParent && oldHeight < newHeight && this.getMinSizeOfSiblings().height + newHeight > this.element.parentElement.offsetHeight) {\n          skipHeight = true;\n        }\n      }\n      if (!skipHeight) {\n        this.setHeight(newHeight);\n      }\n    }\n    this.updateDragStartPosition(e.clientX, e.clientY);\n    if ((popup || forcePopupParentAsOffsetParent) && offsetLeft || offsetTop) {\n      this.offsetElement(\n        xPosition + offsetLeft,\n        yPosition + offsetTop\n      );\n    }\n  }\n  onResizeEnd(e, side) {\n    this.isResizing = false;\n    this.currentResizer = null;\n    this.boundaryEl = null;\n    const params = {\n      type: \"resize\"\n    };\n    this.element.classList.remove(\"ag-resizing\");\n    this.resizerMap[side].element.classList.remove(\"ag-active\");\n    this.dispatchEvent(params);\n  }\n  refreshSize() {\n    const eGui = this.element;\n    if (this.config.popup) {\n      if (!this.config.width) {\n        this.setWidth(eGui.offsetWidth);\n      }\n      if (!this.config.height) {\n        this.setHeight(eGui.offsetHeight);\n      }\n    }\n  }\n  onMoveStart(e) {\n    this.boundaryEl = this.findBoundaryElement();\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    this.isMoving = true;\n    this.element.classList.add(\"ag-moving\");\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  onMove(e) {\n    if (!this.isMoving) {\n      return;\n    }\n    const { x, y } = this.position;\n    let topBuffer;\n    if (this.config.calculateTopBuffer) {\n      topBuffer = this.config.calculateTopBuffer();\n    }\n    const { movementX, movementY } = this.calculateMouseMovement({\n      e,\n      isTop: true,\n      anywhereWithin: true,\n      topBuffer\n    });\n    this.offsetElement(x + movementX, y + movementY);\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  onMoveEnd() {\n    this.isMoving = false;\n    this.boundaryEl = null;\n    this.element.classList.remove(\"ag-moving\");\n  }\n  setOffsetParent() {\n    if (this.config.forcePopupParentAsOffsetParent) {\n      this.offsetParent = this.popupService.getPopupParent();\n    } else {\n      this.offsetParent = this.element.offsetParent;\n    }\n  }\n  findBoundaryElement() {\n    let el = this.element;\n    while (el) {\n      if (window.getComputedStyle(el).position !== \"static\") {\n        return el;\n      }\n      el = el.parentElement;\n    }\n    return this.element;\n  }\n  clearResizeListeners() {\n    while (this.resizeListeners.length) {\n      const params = this.resizeListeners.pop();\n      this.dragService.removeDragSource(params);\n    }\n  }\n  destroy() {\n    super.destroy();\n    if (this.moveElementDragListener) {\n      this.dragService.removeDragSource(this.moveElementDragListener);\n    }\n    this.constrainSizeToAvailableHeight(false);\n    this.clearResizeListeners();\n    this.removeResizers();\n  }\n};\n__decorateClass([\n  Autowired(\"popupService\")\n], PositionableFeature.prototype, \"popupService\", 2);\n__decorateClass([\n  Autowired(\"resizeObserverService\")\n], PositionableFeature.prototype, \"resizeObserverService\", 2);\n__decorateClass([\n  Autowired(\"dragService\")\n], PositionableFeature.prototype, \"dragService\", 2);\n\n// community-modules/core/src/filter/provided/providedFilter.ts\nvar _ProvidedFilter = class _ProvidedFilter extends Component {\n  constructor(filterNameKey) {\n    super();\n    this.filterNameKey = filterNameKey;\n    this.applyActive = false;\n    this.hidePopup = null;\n    this.debouncePending = false;\n    // after the user hits 'apply' the model gets copied to here. this is then the model that we use for\n    // all filtering. so if user changes UI but doesn't hit apply, then the UI will be out of sync with this model.\n    // this is what we want, as the UI should only become the 'active' filter once it's applied. when apply is\n    // inactive, this model will be in sync (following the debounce ms). if the UI is not a valid filter\n    // (eg the value is missing so nothing to filter on, or for set filter all checkboxes are checked so filter\n    // not active) then this appliedModel will be null/undefined.\n    this.appliedModel = null;\n    this.buttonListeners = [];\n  }\n  postConstruct() {\n    this.resetTemplate();\n    this.createManagedBean(new ManagedFocusFeature(\n      this.getFocusableElement(),\n      {\n        handleKeyDown: this.handleKeyDown.bind(this)\n      }\n    ));\n    this.positionableFeature = new PositionableFeature(\n      this.getPositionableElement(),\n      {\n        forcePopupParentAsOffsetParent: true\n      }\n    );\n    this.createBean(this.positionableFeature);\n  }\n  // override\n  handleKeyDown(e) {\n  }\n  getFilterTitle() {\n    return this.translate(this.filterNameKey);\n  }\n  isFilterActive() {\n    return !!this.appliedModel;\n  }\n  resetTemplate(paramsMap) {\n    let eGui = this.getGui();\n    if (eGui) {\n      eGui.removeEventListener(\"submit\", this.onFormSubmit);\n    }\n    const templateString = (\n      /* html */\n      `\n            <form class=\"ag-filter-wrapper\">\n                <div class=\"ag-filter-body-wrapper ag-${this.getCssIdentifier()}-body-wrapper\" ref=\"eFilterBody\">\n                    ${this.createBodyTemplate()}\n                </div>\n            </form>`\n    );\n    this.setTemplate(templateString, paramsMap);\n    eGui = this.getGui();\n    if (eGui) {\n      eGui.addEventListener(\"submit\", this.onFormSubmit);\n    }\n  }\n  isReadOnly() {\n    return !!this.providedFilterParams.readOnly;\n  }\n  init(params) {\n    this.setParams(params);\n    this.resetUiToDefaults(true).then(() => {\n      this.updateUiVisibility();\n      this.setupOnBtApplyDebounce();\n    });\n  }\n  setParams(params) {\n    this.providedFilterParams = params;\n    this.applyActive = _ProvidedFilter.isUseApplyButton(params);\n    this.resetButtonsPanel();\n  }\n  updateParams(params) {\n    this.providedFilterParams = params;\n    this.applyActive = _ProvidedFilter.isUseApplyButton(params);\n    this.resetUiToActiveModel(this.getModel(), () => {\n      this.updateUiVisibility();\n      this.setupOnBtApplyDebounce();\n    });\n  }\n  resetButtonsPanel() {\n    const { buttons } = this.providedFilterParams;\n    const hasButtons = buttons && buttons.length > 0 && !this.isReadOnly();\n    if (!this.eButtonsPanel) {\n      if (hasButtons) {\n        this.eButtonsPanel = document.createElement(\"div\");\n        this.eButtonsPanel.classList.add(\"ag-filter-apply-panel\");\n      }\n    } else {\n      clearElement(this.eButtonsPanel);\n      this.buttonListeners.forEach((destroyFunc) => destroyFunc == null ? void 0 : destroyFunc());\n      this.buttonListeners = [];\n    }\n    if (!hasButtons) {\n      if (this.eButtonsPanel) {\n        removeFromParent(this.eButtonsPanel);\n      }\n      return;\n    }\n    const fragment = document.createDocumentFragment();\n    const addButton = (type) => {\n      let text;\n      let clickListener;\n      switch (type) {\n        case \"apply\":\n          text = this.translate(\"applyFilter\");\n          clickListener = (e) => this.onBtApply(false, false, e);\n          break;\n        case \"clear\":\n          text = this.translate(\"clearFilter\");\n          clickListener = () => this.onBtClear();\n          break;\n        case \"reset\":\n          text = this.translate(\"resetFilter\");\n          clickListener = () => this.onBtReset();\n          break;\n        case \"cancel\":\n          text = this.translate(\"cancelFilter\");\n          clickListener = (e) => {\n            this.onBtCancel(e);\n          };\n          break;\n        default:\n          console.warn(\"AG Grid: Unknown button type specified\");\n          return;\n      }\n      const buttonType = type === \"apply\" ? \"submit\" : \"button\";\n      const button = loadTemplate(\n        /* html */\n        `<button\n                    type=\"${buttonType}\"\n                    ref=\"${type}FilterButton\"\n                    class=\"ag-button ag-standard-button ag-filter-apply-panel-button\"\n                >${text}\n                </button>`\n      );\n      this.buttonListeners.push(this.addManagedListener(button, \"click\", clickListener));\n      fragment.append(button);\n    };\n    convertToSet(buttons).forEach((type) => addButton(type));\n    this.eButtonsPanel.append(fragment);\n    this.getGui().appendChild(this.eButtonsPanel);\n  }\n  // subclasses can override this to provide alternative debounce defaults\n  getDefaultDebounceMs() {\n    return 0;\n  }\n  setupOnBtApplyDebounce() {\n    const debounceMs = _ProvidedFilter.getDebounceMs(this.providedFilterParams, this.getDefaultDebounceMs());\n    const debounceFunc = debounce(this.checkApplyDebounce.bind(this), debounceMs);\n    this.onBtApplyDebounce = () => {\n      this.debouncePending = true;\n      debounceFunc();\n    };\n  }\n  checkApplyDebounce() {\n    if (this.debouncePending) {\n      this.debouncePending = false;\n      this.onBtApply();\n    }\n  }\n  getModel() {\n    return this.appliedModel ? this.appliedModel : null;\n  }\n  setModel(model) {\n    const promise = model != null ? this.setModelIntoUi(model) : this.resetUiToDefaults();\n    return promise.then(() => {\n      this.updateUiVisibility();\n      this.applyModel(\"api\");\n    });\n  }\n  onBtCancel(e) {\n    this.resetUiToActiveModel(this.getModel(), () => {\n      this.handleCancelEnd(e);\n    });\n  }\n  handleCancelEnd(e) {\n    if (this.providedFilterParams.closeOnApply) {\n      this.close(e);\n    }\n  }\n  resetUiToActiveModel(currentModel, afterUiUpdatedFunc) {\n    const afterAppliedFunc = () => {\n      this.onUiChanged(false, \"prevent\");\n      afterUiUpdatedFunc == null ? void 0 : afterUiUpdatedFunc();\n    };\n    if (currentModel != null) {\n      this.setModelIntoUi(currentModel).then(afterAppliedFunc);\n    } else {\n      this.resetUiToDefaults().then(afterAppliedFunc);\n    }\n  }\n  onBtClear() {\n    this.resetUiToDefaults().then(() => this.onUiChanged());\n  }\n  onBtReset() {\n    this.onBtClear();\n    this.onBtApply();\n  }\n  /**\n   * Applies changes made in the UI to the filter, and returns true if the model has changed.\n   */\n  applyModel(source = \"api\") {\n    const newModel = this.getModelFromUi();\n    if (!this.isModelValid(newModel)) {\n      return false;\n    }\n    const previousModel = this.appliedModel;\n    this.appliedModel = newModel;\n    return !this.areModelsEqual(previousModel, newModel);\n  }\n  isModelValid(model) {\n    return true;\n  }\n  onFormSubmit(e) {\n    e.preventDefault();\n  }\n  onBtApply(afterFloatingFilter = false, afterDataChange = false, e) {\n    if (e) {\n      e.preventDefault();\n    }\n    if (this.applyModel(afterDataChange ? \"rowDataUpdated\" : \"ui\")) {\n      const source = \"columnFilter\";\n      this.providedFilterParams.filterChangedCallback({ afterFloatingFilter, afterDataChange, source });\n    }\n    const { closeOnApply } = this.providedFilterParams;\n    if (closeOnApply && this.applyActive && !afterFloatingFilter && !afterDataChange) {\n      this.close(e);\n    }\n  }\n  onNewRowsLoaded() {\n  }\n  close(e) {\n    if (!this.hidePopup) {\n      return;\n    }\n    const keyboardEvent = e;\n    const key = keyboardEvent && keyboardEvent.key;\n    let params;\n    if (key === \"Enter\" || key === \"Space\") {\n      params = { keyboardEvent };\n    }\n    this.hidePopup(params);\n    this.hidePopup = null;\n  }\n  /**\n   * By default, if the change came from a floating filter it will be applied immediately, otherwise if there is no\n   * apply button it will be applied after a debounce, otherwise it will not be applied at all. This behaviour can\n   * be adjusted by using the apply parameter.\n   */\n  onUiChanged(fromFloatingFilter = false, apply) {\n    this.updateUiVisibility();\n    this.providedFilterParams.filterModifiedCallback();\n    if (this.applyActive && !this.isReadOnly()) {\n      const isValid = this.isModelValid(this.getModelFromUi());\n      const applyFilterButton = this.getRefElement(\"applyFilterButton\");\n      if (applyFilterButton) {\n        setDisabled(applyFilterButton, !isValid);\n      }\n    }\n    if (fromFloatingFilter && !apply || apply === \"immediately\") {\n      this.onBtApply(fromFloatingFilter);\n    } else if (!this.applyActive && !apply || apply === \"debounce\") {\n      this.onBtApplyDebounce();\n    }\n  }\n  afterGuiAttached(params) {\n    if (params) {\n      this.hidePopup = params.hidePopup;\n    }\n    this.refreshFilterResizer(params == null ? void 0 : params.container);\n  }\n  refreshFilterResizer(containerType) {\n    if (!this.positionableFeature || containerType === \"toolPanel\") {\n      return;\n    }\n    const isResizable = containerType === \"floatingFilter\" || containerType === \"columnFilter\";\n    const { positionableFeature, gos } = this;\n    if (isResizable) {\n      positionableFeature.restoreLastSize();\n      positionableFeature.setResizable(\n        gos.get(\"enableRtl\") ? { bottom: true, bottomLeft: true, left: true } : { bottom: true, bottomRight: true, right: true }\n      );\n    } else {\n      this.positionableFeature.removeSizeFromEl();\n      this.positionableFeature.setResizable(false);\n    }\n    this.positionableFeature.constrainSizeToAvailableHeight(true);\n  }\n  afterGuiDetached() {\n    this.checkApplyDebounce();\n    if (this.positionableFeature) {\n      this.positionableFeature.constrainSizeToAvailableHeight(false);\n    }\n  }\n  // static, as used by floating filter also\n  static getDebounceMs(params, debounceDefault) {\n    if (_ProvidedFilter.isUseApplyButton(params)) {\n      if (params.debounceMs != null) {\n        console.warn(\"AG Grid: debounceMs is ignored when apply button is present\");\n      }\n      return 0;\n    }\n    return params.debounceMs != null ? params.debounceMs : debounceDefault;\n  }\n  // static, as used by floating filter also\n  static isUseApplyButton(params) {\n    return !!params.buttons && params.buttons.indexOf(\"apply\") >= 0;\n  }\n  refresh(newParams) {\n    this.providedFilterParams = newParams;\n    return true;\n  }\n  destroy() {\n    const eGui = this.getGui();\n    if (eGui) {\n      eGui.removeEventListener(\"submit\", this.onFormSubmit);\n    }\n    this.hidePopup = null;\n    if (this.positionableFeature) {\n      this.positionableFeature = this.destroyBean(this.positionableFeature);\n    }\n    this.appliedModel = null;\n    super.destroy();\n  }\n  translate(key) {\n    const translate = this.localeService.getLocaleTextFunc();\n    return translate(key, FILTER_LOCALE_TEXT[key]);\n  }\n  getCellValue(rowNode) {\n    return this.providedFilterParams.getValue(rowNode);\n  }\n  // override to control positionable feature\n  getPositionableElement() {\n    return this.eFilterBody;\n  }\n};\n__decorateClass([\n  Autowired(\"rowModel\")\n], _ProvidedFilter.prototype, \"rowModel\", 2);\n__decorateClass([\n  RefSelector(\"eFilterBody\")\n], _ProvidedFilter.prototype, \"eFilterBody\", 2);\n__decorateClass([\n  PostConstruct\n], _ProvidedFilter.prototype, \"postConstruct\", 1);\nvar ProvidedFilter = _ProvidedFilter;\n\n// community-modules/core/src/widgets/agAbstractLabel.ts\nvar AgAbstractLabel = class extends Component {\n  constructor(config, template) {\n    super(template);\n    this.labelSeparator = \"\";\n    this.labelAlignment = \"left\";\n    this.disabled = false;\n    this.label = \"\";\n    this.config = config || {};\n  }\n  postConstruct() {\n    this.addCssClass(\"ag-labeled\");\n    this.eLabel.classList.add(\"ag-label\");\n    const { labelSeparator, label, labelWidth, labelAlignment, disabled } = this.config;\n    if (disabled != null) {\n      this.setDisabled(disabled);\n    }\n    if (labelSeparator != null) {\n      this.setLabelSeparator(labelSeparator);\n    }\n    if (label != null) {\n      this.setLabel(label);\n    }\n    if (labelWidth != null) {\n      this.setLabelWidth(labelWidth);\n    }\n    this.setLabelAlignment(labelAlignment || this.labelAlignment);\n    this.refreshLabel();\n  }\n  refreshLabel() {\n    clearElement(this.eLabel);\n    if (typeof this.label === \"string\") {\n      this.eLabel.innerText = this.label + this.labelSeparator;\n    } else if (this.label) {\n      this.eLabel.appendChild(this.label);\n    }\n    if (this.label === \"\") {\n      setDisplayed(this.eLabel, false);\n      setAriaRole(this.eLabel, \"presentation\");\n    } else {\n      setDisplayed(this.eLabel, true);\n      setAriaRole(this.eLabel, null);\n    }\n  }\n  setLabelSeparator(labelSeparator) {\n    if (this.labelSeparator === labelSeparator) {\n      return this;\n    }\n    this.labelSeparator = labelSeparator;\n    if (this.label != null) {\n      this.refreshLabel();\n    }\n    return this;\n  }\n  getLabelId() {\n    this.eLabel.id = this.eLabel.id || `ag-${this.getCompId()}-label`;\n    return this.eLabel.id;\n  }\n  getLabel() {\n    return this.label;\n  }\n  setLabel(label) {\n    if (this.label === label) {\n      return this;\n    }\n    this.label = label;\n    this.refreshLabel();\n    return this;\n  }\n  setLabelAlignment(alignment) {\n    const eGui = this.getGui();\n    const eGuiClassList = eGui.classList;\n    eGuiClassList.toggle(\"ag-label-align-left\", alignment === \"left\");\n    eGuiClassList.toggle(\"ag-label-align-right\", alignment === \"right\");\n    eGuiClassList.toggle(\"ag-label-align-top\", alignment === \"top\");\n    return this;\n  }\n  setLabelEllipsis(hasEllipsis) {\n    this.eLabel.classList.toggle(\"ag-label-ellipsis\", hasEllipsis);\n    return this;\n  }\n  setLabelWidth(width) {\n    if (this.label == null) {\n      return this;\n    }\n    setElementWidth(this.eLabel, width);\n    return this;\n  }\n  setDisabled(disabled) {\n    disabled = !!disabled;\n    const element = this.getGui();\n    setDisabled(element, disabled);\n    element.classList.toggle(\"ag-disabled\", disabled);\n    this.disabled = disabled;\n    return this;\n  }\n  isDisabled() {\n    return !!this.disabled;\n  }\n};\n__decorateClass([\n  PostConstruct\n], AgAbstractLabel.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/widgets/agAbstractField.ts\nvar AgAbstractField = class extends AgAbstractLabel {\n  constructor(config, template, className) {\n    super(config, template);\n    this.className = className;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const { width, value, onValueChange } = this.config;\n    if (width != null) {\n      this.setWidth(width);\n    }\n    if (value != null) {\n      this.setValue(value);\n    }\n    if (onValueChange != null) {\n      this.onValueChange(onValueChange);\n    }\n    if (this.className) {\n      this.addCssClass(this.className);\n    }\n    this.refreshAriaLabelledBy();\n  }\n  refreshAriaLabelledBy() {\n    const ariaEl = this.getAriaElement();\n    const labelId = this.getLabelId();\n    if (getAriaLabel(ariaEl) !== null) {\n      setAriaLabelledBy(ariaEl, \"\");\n    } else {\n      setAriaLabelledBy(ariaEl, labelId != null ? labelId : \"\");\n    }\n  }\n  setAriaLabel(label) {\n    setAriaLabel(this.getAriaElement(), label);\n    this.refreshAriaLabelledBy();\n    return this;\n  }\n  onValueChange(callbackFn) {\n    this.addManagedListener(this, Events.EVENT_FIELD_VALUE_CHANGED, () => callbackFn(this.getValue()));\n    return this;\n  }\n  getWidth() {\n    return this.getGui().clientWidth;\n  }\n  setWidth(width) {\n    setFixedWidth(this.getGui(), width);\n    return this;\n  }\n  getPreviousValue() {\n    return this.previousValue;\n  }\n  getValue() {\n    return this.value;\n  }\n  setValue(value, silent) {\n    if (this.value === value) {\n      return this;\n    }\n    this.previousValue = this.value;\n    this.value = value;\n    if (!silent) {\n      this.dispatchEvent({ type: Events.EVENT_FIELD_VALUE_CHANGED });\n    }\n    return this;\n  }\n};\n\n// community-modules/core/src/widgets/agPickerField.ts\nvar TEMPLATE = (\n  /* html */\n  `\n    <div class=\"ag-picker-field\" role=\"presentation\">\n        <div ref=\"eLabel\"></div>\n            <div ref=\"eWrapper\" class=\"ag-wrapper ag-picker-field-wrapper ag-picker-collapsed\">\n            <div ref=\"eDisplayField\" class=\"ag-picker-field-display\"></div>\n            <div ref=\"eIcon\" class=\"ag-picker-field-icon\" aria-hidden=\"true\"></div>\n        </div>\n    </div>`\n);\nvar AgPickerField = class extends AgAbstractField {\n  constructor(config) {\n    super(config, (config == null ? void 0 : config.template) || TEMPLATE, config == null ? void 0 : config.className);\n    this.isPickerDisplayed = false;\n    this.skipClick = false;\n    this.pickerGap = 4;\n    this.hideCurrentPicker = null;\n    this.ariaRole = config == null ? void 0 : config.ariaRole;\n    this.onPickerFocusIn = this.onPickerFocusIn.bind(this);\n    this.onPickerFocusOut = this.onPickerFocusOut.bind(this);\n    if (!config) {\n      return;\n    }\n    const { pickerGap, maxPickerHeight, variableWidth, minPickerWidth, maxPickerWidth } = config;\n    if (pickerGap != null) {\n      this.pickerGap = pickerGap;\n    }\n    this.variableWidth = !!variableWidth;\n    if (maxPickerHeight != null) {\n      this.setPickerMaxHeight(maxPickerHeight);\n    }\n    if (minPickerWidth != null) {\n      this.setPickerMinWidth(minPickerWidth);\n    }\n    if (maxPickerWidth != null) {\n      this.setPickerMaxWidth(maxPickerWidth);\n    }\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.setupAria();\n    const displayId = `ag-${this.getCompId()}-display`;\n    this.eDisplayField.setAttribute(\"id\", displayId);\n    const ariaEl = this.getAriaElement();\n    this.addManagedListener(ariaEl, \"keydown\", this.onKeyDown.bind(this));\n    this.addManagedListener(this.eLabel, \"mousedown\", this.onLabelOrWrapperMouseDown.bind(this));\n    this.addManagedListener(this.eWrapper, \"mousedown\", this.onLabelOrWrapperMouseDown.bind(this));\n    const { pickerIcon, inputWidth } = this.config;\n    if (pickerIcon) {\n      const icon = createIconNoSpan(pickerIcon, this.gos);\n      if (icon) {\n        this.eIcon.appendChild(icon);\n      }\n    }\n    if (inputWidth != null) {\n      this.setInputWidth(inputWidth);\n    }\n  }\n  setupAria() {\n    const ariaEl = this.getAriaElement();\n    ariaEl.setAttribute(\"tabindex\", this.gos.get(\"tabIndex\").toString());\n    setAriaExpanded(ariaEl, false);\n    if (this.ariaRole) {\n      setAriaRole(ariaEl, this.ariaRole);\n    }\n  }\n  onLabelOrWrapperMouseDown(e) {\n    if (e) {\n      const focusableEl = this.getFocusableElement();\n      if (focusableEl !== this.eWrapper && (e == null ? void 0 : e.target) === focusableEl) {\n        return;\n      }\n      e.preventDefault();\n      this.getFocusableElement().focus();\n    }\n    if (this.skipClick) {\n      this.skipClick = false;\n      return;\n    }\n    if (this.isDisabled()) {\n      return;\n    }\n    if (this.isPickerDisplayed) {\n      this.hidePicker();\n    } else {\n      this.showPicker();\n    }\n  }\n  onKeyDown(e) {\n    switch (e.key) {\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n      case KeyCode.ENTER:\n      case KeyCode.SPACE:\n        e.preventDefault();\n        this.onLabelOrWrapperMouseDown();\n        break;\n      case KeyCode.ESCAPE:\n        if (this.isPickerDisplayed) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (this.hideCurrentPicker) {\n            this.hideCurrentPicker();\n          }\n        }\n        break;\n    }\n  }\n  showPicker() {\n    this.isPickerDisplayed = true;\n    if (!this.pickerComponent) {\n      this.pickerComponent = this.createPickerComponent();\n    }\n    const pickerGui = this.pickerComponent.getGui();\n    pickerGui.addEventListener(\"focusin\", this.onPickerFocusIn);\n    pickerGui.addEventListener(\"focusout\", this.onPickerFocusOut);\n    this.hideCurrentPicker = this.renderAndPositionPicker();\n    this.toggleExpandedStyles(true);\n  }\n  renderAndPositionPicker() {\n    const eDocument = this.gos.getDocument();\n    const ePicker = this.pickerComponent.getGui();\n    if (!this.gos.get(\"suppressScrollWhenPopupsAreOpen\")) {\n      this.destroyMouseWheelFunc = this.addManagedListener(this.eventService, Events.EVENT_BODY_SCROLL, () => {\n        this.hidePicker();\n      });\n    }\n    const translate = this.localeService.getLocaleTextFunc();\n    const { pickerAriaLabelKey, pickerAriaLabelValue, modalPicker = true } = this.config;\n    const popupParams = {\n      modal: modalPicker,\n      eChild: ePicker,\n      closeOnEsc: true,\n      closedCallback: () => {\n        const activeEl = this.gos.getActiveDomElement();\n        const shouldRestoreFocus = !activeEl || activeEl === eDocument.body;\n        this.beforeHidePicker();\n        if (shouldRestoreFocus && this.isAlive()) {\n          this.getFocusableElement().focus();\n        }\n      },\n      ariaLabel: translate(pickerAriaLabelKey, pickerAriaLabelValue)\n    };\n    const addPopupRes = this.popupService.addPopup(popupParams);\n    const { maxPickerHeight, minPickerWidth, maxPickerWidth, variableWidth } = this;\n    if (variableWidth) {\n      if (minPickerWidth) {\n        ePicker.style.minWidth = minPickerWidth;\n      }\n      ePicker.style.width = formatSize(getAbsoluteWidth(this.eWrapper));\n      if (maxPickerWidth) {\n        ePicker.style.maxWidth = maxPickerWidth;\n      }\n    } else {\n      setElementWidth(ePicker, maxPickerWidth != null ? maxPickerWidth : getAbsoluteWidth(this.eWrapper));\n    }\n    const maxHeight = maxPickerHeight != null ? maxPickerHeight : `${getInnerHeight(this.popupService.getPopupParent())}px`;\n    ePicker.style.setProperty(\"max-height\", maxHeight);\n    ePicker.style.position = \"absolute\";\n    this.alignPickerToComponent();\n    return addPopupRes.hideFunc;\n  }\n  alignPickerToComponent() {\n    if (!this.pickerComponent) {\n      return;\n    }\n    const { pickerType } = this.config;\n    const { pickerGap } = this;\n    const alignSide = this.gos.get(\"enableRtl\") ? \"right\" : \"left\";\n    this.popupService.positionPopupByComponent({\n      type: pickerType,\n      eventSource: this.eWrapper,\n      ePopup: this.pickerComponent.getGui(),\n      position: \"under\",\n      alignSide,\n      keepWithinBounds: true,\n      nudgeY: pickerGap\n    });\n  }\n  beforeHidePicker() {\n    if (this.destroyMouseWheelFunc) {\n      this.destroyMouseWheelFunc();\n      this.destroyMouseWheelFunc = void 0;\n    }\n    this.toggleExpandedStyles(false);\n    const pickerGui = this.pickerComponent.getGui();\n    pickerGui.removeEventListener(\"focusin\", this.onPickerFocusIn);\n    pickerGui.removeEventListener(\"focusout\", this.onPickerFocusOut);\n    this.isPickerDisplayed = false;\n    this.pickerComponent = void 0;\n    this.hideCurrentPicker = null;\n  }\n  toggleExpandedStyles(expanded) {\n    if (!this.isAlive()) {\n      return;\n    }\n    const ariaEl = this.getAriaElement();\n    setAriaExpanded(ariaEl, expanded);\n    this.eWrapper.classList.toggle(\"ag-picker-expanded\", expanded);\n    this.eWrapper.classList.toggle(\"ag-picker-collapsed\", !expanded);\n  }\n  onPickerFocusIn() {\n    this.togglePickerHasFocus(true);\n  }\n  onPickerFocusOut(e) {\n    var _a;\n    if (!((_a = this.pickerComponent) == null ? void 0 : _a.getGui().contains(e.relatedTarget))) {\n      this.togglePickerHasFocus(false);\n    }\n  }\n  togglePickerHasFocus(focused) {\n    if (!this.pickerComponent) {\n      return;\n    }\n    this.eWrapper.classList.toggle(\"ag-picker-has-focus\", focused);\n  }\n  hidePicker() {\n    if (this.hideCurrentPicker) {\n      this.hideCurrentPicker();\n    }\n  }\n  setInputWidth(width) {\n    setElementWidth(this.eWrapper, width);\n    return this;\n  }\n  getFocusableElement() {\n    return this.eWrapper;\n  }\n  setPickerGap(gap) {\n    this.pickerGap = gap;\n    return this;\n  }\n  setPickerMinWidth(width) {\n    if (typeof width === \"number\") {\n      width = `${width}px`;\n    }\n    this.minPickerWidth = width == null ? void 0 : width;\n    return this;\n  }\n  setPickerMaxWidth(width) {\n    if (typeof width === \"number\") {\n      width = `${width}px`;\n    }\n    this.maxPickerWidth = width == null ? void 0 : width;\n    return this;\n  }\n  setPickerMaxHeight(height) {\n    if (typeof height === \"number\") {\n      height = `${height}px`;\n    }\n    this.maxPickerHeight = height == null ? void 0 : height;\n    return this;\n  }\n  destroy() {\n    this.hidePicker();\n    super.destroy();\n  }\n};\n__decorateClass([\n  Autowired(\"popupService\")\n], AgPickerField.prototype, \"popupService\", 2);\n__decorateClass([\n  RefSelector(\"eLabel\")\n], AgPickerField.prototype, \"eLabel\", 2);\n__decorateClass([\n  RefSelector(\"eWrapper\")\n], AgPickerField.prototype, \"eWrapper\", 2);\n__decorateClass([\n  RefSelector(\"eDisplayField\")\n], AgPickerField.prototype, \"eDisplayField\", 2);\n__decorateClass([\n  RefSelector(\"eIcon\")\n], AgPickerField.prototype, \"eIcon\", 2);\n\n// community-modules/core/src/widgets/agList.ts\nvar _AgList = class _AgList extends Component {\n  constructor(cssIdentifier = \"default\", unFocusable = false) {\n    super(\n      /* html */\n      `<div class=\"ag-list ag-${cssIdentifier}-list\" role=\"listbox\"></div>`\n    );\n    this.cssIdentifier = cssIdentifier;\n    this.unFocusable = unFocusable;\n    this.options = [];\n    this.itemEls = [];\n  }\n  init() {\n    const eGui = this.getGui();\n    this.addManagedListener(eGui, \"mouseleave\", () => this.clearHighlighted());\n    if (this.unFocusable) {\n      return;\n    }\n    this.addManagedListener(eGui, \"keydown\", this.handleKeyDown.bind(this));\n  }\n  handleKeyDown(e) {\n    const key = e.key;\n    switch (key) {\n      case KeyCode.ENTER:\n        if (!this.highlightedEl) {\n          this.setValue(this.getValue());\n        } else {\n          const pos = this.itemEls.indexOf(this.highlightedEl);\n          this.setValueByIndex(pos);\n        }\n        break;\n      case KeyCode.DOWN:\n      case KeyCode.UP:\n        e.preventDefault();\n        this.navigate(key);\n        break;\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        e.preventDefault();\n        this.navigateToPage(key);\n        break;\n    }\n  }\n  navigate(key) {\n    const isDown = key === KeyCode.DOWN;\n    let itemToHighlight;\n    if (!this.highlightedEl) {\n      itemToHighlight = this.itemEls[isDown ? 0 : this.itemEls.length - 1];\n    } else {\n      const currentIdx = this.itemEls.indexOf(this.highlightedEl);\n      let nextPos = currentIdx + (isDown ? 1 : -1);\n      nextPos = Math.min(Math.max(nextPos, 0), this.itemEls.length - 1);\n      itemToHighlight = this.itemEls[nextPos];\n    }\n    this.highlightItem(itemToHighlight);\n  }\n  navigateToPage(key) {\n    if (!this.highlightedEl || this.itemEls.length === 0) {\n      return;\n    }\n    const currentIdx = this.itemEls.indexOf(this.highlightedEl);\n    const rowCount = this.options.length - 1;\n    const itemHeight = this.itemEls[0].clientHeight;\n    const pageSize = Math.floor(this.getGui().clientHeight / itemHeight);\n    let newIndex = -1;\n    if (key === KeyCode.PAGE_HOME) {\n      newIndex = 0;\n    } else if (key === KeyCode.PAGE_END) {\n      newIndex = rowCount;\n    } else if (key === KeyCode.PAGE_DOWN) {\n      newIndex = Math.min(currentIdx + pageSize, rowCount);\n    } else if (key === KeyCode.PAGE_UP) {\n      newIndex = Math.max(currentIdx - pageSize, 0);\n    }\n    if (newIndex === -1) {\n      return;\n    }\n    this.highlightItem(this.itemEls[newIndex]);\n  }\n  addOptions(listOptions) {\n    listOptions.forEach((listOption) => this.addOption(listOption));\n    return this;\n  }\n  addOption(listOption) {\n    const { value, text } = listOption;\n    const valueToRender = text || value;\n    this.options.push({ value, text: valueToRender });\n    this.renderOption(value, valueToRender);\n    this.updateIndices();\n    return this;\n  }\n  clearOptions() {\n    this.options = [];\n    this.reset(true);\n    this.itemEls.forEach((itemEl) => {\n      removeFromParent(itemEl);\n    });\n    this.itemEls = [];\n  }\n  updateIndices() {\n    const options = this.getGui().querySelectorAll(\".ag-list-item\");\n    options.forEach((option, idx) => {\n      setAriaPosInSet(option, idx + 1);\n      setAriaSetSize(option, options.length);\n    });\n  }\n  renderOption(value, text) {\n    const eDocument = this.gos.getDocument();\n    const itemEl = eDocument.createElement(\"div\");\n    setAriaRole(itemEl, \"option\");\n    itemEl.classList.add(\"ag-list-item\", `ag-${this.cssIdentifier}-list-item`);\n    const span = eDocument.createElement(\"span\");\n    itemEl.appendChild(span);\n    span.textContent = text;\n    if (!this.unFocusable) {\n      itemEl.tabIndex = -1;\n    }\n    this.itemEls.push(itemEl);\n    this.addManagedListener(itemEl, \"mousemove\", () => this.highlightItem(itemEl));\n    this.addManagedListener(itemEl, \"mousedown\", (e) => {\n      e.preventDefault();\n      this.setValue(value);\n    });\n    this.createManagedBean(new TooltipFeature({\n      getTooltipValue: () => text,\n      getGui: () => itemEl,\n      getLocation: () => \"UNKNOWN\",\n      // only show tooltips for items where the text cannot be fully displayed\n      shouldDisplayTooltip: () => span.scrollWidth > span.clientWidth\n    }));\n    this.getGui().appendChild(itemEl);\n  }\n  setValue(value, silent) {\n    if (this.value === value) {\n      this.fireItemSelected();\n      return this;\n    }\n    if (value == null) {\n      this.reset(silent);\n      return this;\n    }\n    const idx = this.options.findIndex((option) => option.value === value);\n    if (idx !== -1) {\n      const option = this.options[idx];\n      this.value = option.value;\n      this.displayValue = option.text;\n      this.highlightItem(this.itemEls[idx]);\n      if (!silent) {\n        this.fireChangeEvent();\n      }\n    }\n    return this;\n  }\n  setValueByIndex(idx) {\n    return this.setValue(this.options[idx].value);\n  }\n  getValue() {\n    return this.value;\n  }\n  getDisplayValue() {\n    return this.displayValue;\n  }\n  refreshHighlighted() {\n    this.clearHighlighted();\n    const idx = this.options.findIndex((option) => option.value === this.value);\n    if (idx !== -1) {\n      this.highlightItem(this.itemEls[idx]);\n    }\n  }\n  reset(silent) {\n    this.value = null;\n    this.displayValue = null;\n    this.clearHighlighted();\n    if (!silent) {\n      this.fireChangeEvent();\n    }\n  }\n  highlightItem(el) {\n    if (!isVisible(el)) {\n      return;\n    }\n    this.clearHighlighted();\n    this.highlightedEl = el;\n    this.highlightedEl.classList.add(_AgList.ACTIVE_CLASS);\n    setAriaSelected(this.highlightedEl, true);\n    const eGui = this.getGui();\n    const { scrollTop, clientHeight } = eGui;\n    const { offsetTop, offsetHeight } = el;\n    if (offsetTop + offsetHeight > scrollTop + clientHeight || offsetTop < scrollTop) {\n      this.highlightedEl.scrollIntoView({ block: \"nearest\" });\n    }\n    if (!this.unFocusable) {\n      this.highlightedEl.focus();\n    }\n  }\n  clearHighlighted() {\n    if (!this.highlightedEl || !isVisible(this.highlightedEl)) {\n      return;\n    }\n    this.highlightedEl.classList.remove(_AgList.ACTIVE_CLASS);\n    setAriaSelected(this.highlightedEl, false);\n    this.highlightedEl = null;\n  }\n  fireChangeEvent() {\n    this.dispatchEvent({ type: Events.EVENT_FIELD_VALUE_CHANGED });\n    this.fireItemSelected();\n  }\n  fireItemSelected() {\n    this.dispatchEvent({ type: _AgList.EVENT_ITEM_SELECTED });\n  }\n};\n_AgList.EVENT_ITEM_SELECTED = \"selectedItem\";\n_AgList.ACTIVE_CLASS = \"ag-active-item\";\n__decorateClass([\n  PostConstruct\n], _AgList.prototype, \"init\", 1);\nvar AgList = _AgList;\n\n// community-modules/core/src/widgets/agSelect.ts\nvar _AgSelect = class _AgSelect extends AgPickerField {\n  constructor(config) {\n    super(__spreadValues({\n      pickerAriaLabelKey: \"ariaLabelSelectField\",\n      pickerAriaLabelValue: \"Select Field\",\n      pickerType: \"ag-list\",\n      className: \"ag-select\",\n      pickerIcon: \"smallDown\",\n      ariaRole: \"combobox\"\n    }, config));\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.createListComponent();\n    this.eWrapper.tabIndex = this.gos.get(\"tabIndex\");\n    const { options, value, placeholder } = this.config;\n    if (options != null) {\n      this.addOptions(options);\n    }\n    if (value != null) {\n      this.setValue(value, true);\n    }\n    if (placeholder && value == null) {\n      this.eDisplayField.textContent = placeholder;\n    }\n    this.addManagedListener(this.eWrapper, \"focusout\", this.onWrapperFocusOut.bind(this));\n  }\n  onWrapperFocusOut(e) {\n    if (!this.eWrapper.contains(e.relatedTarget)) {\n      this.hidePicker();\n    }\n  }\n  createListComponent() {\n    this.listComponent = this.createBean(new AgList(\"select\", true));\n    this.listComponent.setParentComponent(this);\n    const eListAriaEl = this.listComponent.getAriaElement();\n    const listId = `ag-select-list-${this.listComponent.getCompId()}`;\n    eListAriaEl.setAttribute(\"id\", listId);\n    setAriaControls(this.getAriaElement(), eListAriaEl);\n    this.listComponent.addManagedListener(\n      this.listComponent,\n      AgList.EVENT_ITEM_SELECTED,\n      () => {\n        this.hidePicker();\n        this.dispatchEvent({ type: _AgSelect.EVENT_ITEM_SELECTED });\n      }\n    );\n    this.listComponent.addManagedListener(\n      this.listComponent,\n      Events.EVENT_FIELD_VALUE_CHANGED,\n      () => {\n        if (!this.listComponent) {\n          return;\n        }\n        this.setValue(this.listComponent.getValue(), false, true);\n        this.hidePicker();\n      }\n    );\n  }\n  createPickerComponent() {\n    return this.listComponent;\n  }\n  onKeyDown(e) {\n    var _a;\n    const { key } = e;\n    if (key === KeyCode.TAB) {\n      this.hidePicker();\n    }\n    switch (key) {\n      case KeyCode.ENTER:\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        e.preventDefault();\n        if (this.isPickerDisplayed) {\n          (_a = this.listComponent) == null ? void 0 : _a.handleKeyDown(e);\n        } else {\n          super.onKeyDown(e);\n        }\n        break;\n      case KeyCode.ESCAPE:\n        super.onKeyDown(e);\n        break;\n    }\n  }\n  showPicker() {\n    if (!this.listComponent) {\n      return;\n    }\n    super.showPicker();\n    this.listComponent.refreshHighlighted();\n  }\n  addOptions(options) {\n    options.forEach((option) => this.addOption(option));\n    return this;\n  }\n  addOption(option) {\n    this.listComponent.addOption(option);\n    return this;\n  }\n  clearOptions() {\n    var _a;\n    (_a = this.listComponent) == null ? void 0 : _a.clearOptions();\n    return this;\n  }\n  setValue(value, silent, fromPicker) {\n    if (this.value === value || !this.listComponent) {\n      return this;\n    }\n    if (!fromPicker) {\n      this.listComponent.setValue(value, true);\n    }\n    const newValue = this.listComponent.getValue();\n    if (newValue === this.getValue()) {\n      return this;\n    }\n    let displayValue = this.listComponent.getDisplayValue();\n    if (displayValue == null && this.config.placeholder) {\n      displayValue = this.config.placeholder;\n    }\n    this.eDisplayField.textContent = displayValue;\n    this.setTooltip({\n      newTooltipText: displayValue != null ? displayValue : null,\n      shouldDisplayTooltip: () => this.eDisplayField.scrollWidth > this.eDisplayField.clientWidth\n    });\n    return super.setValue(value, silent);\n  }\n  destroy() {\n    if (this.listComponent) {\n      this.destroyBean(this.listComponent);\n      this.listComponent = void 0;\n    }\n    super.destroy();\n  }\n};\n_AgSelect.EVENT_ITEM_SELECTED = \"selectedItem\";\nvar AgSelect = _AgSelect;\n\n// community-modules/core/src/widgets/agAbstractInputField.ts\nvar AgAbstractInputField = class extends AgAbstractField {\n  constructor(config, className, inputType = \"text\", displayFieldTag = \"input\") {\n    super(\n      config,\n      /* html */\n      `\n            <div role=\"presentation\">\n                <div ref=\"eLabel\" class=\"ag-input-field-label\"></div>\n                <div ref=\"eWrapper\" class=\"ag-wrapper ag-input-wrapper\" role=\"presentation\">\n                    <${displayFieldTag} ref=\"eInput\" class=\"ag-input-field-input\"></${displayFieldTag}>\n                </div>\n            </div>`,\n      className\n    );\n    this.inputType = inputType;\n    this.displayFieldTag = displayFieldTag;\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.setInputType();\n    this.eLabel.classList.add(`${this.className}-label`);\n    this.eWrapper.classList.add(`${this.className}-input-wrapper`);\n    this.eInput.classList.add(`${this.className}-input`);\n    this.addCssClass(\"ag-input-field\");\n    this.eInput.id = this.eInput.id || `ag-${this.getCompId()}-input`;\n    const { inputName, inputWidth } = this.config;\n    if (inputName != null) {\n      this.setInputName(inputName);\n    }\n    if (inputWidth != null) {\n      this.setInputWidth(inputWidth);\n    }\n    this.addInputListeners();\n    this.activateTabIndex([this.eInput]);\n  }\n  addInputListeners() {\n    this.addManagedListener(this.eInput, \"input\", (e) => this.setValue(e.target.value));\n  }\n  setInputType() {\n    if (this.displayFieldTag === \"input\") {\n      this.eInput.setAttribute(\"type\", this.inputType);\n    }\n  }\n  getInputElement() {\n    return this.eInput;\n  }\n  setInputWidth(width) {\n    setElementWidth(this.eWrapper, width);\n    return this;\n  }\n  setInputName(name) {\n    this.getInputElement().setAttribute(\"name\", name);\n    return this;\n  }\n  getFocusableElement() {\n    return this.eInput;\n  }\n  setMaxLength(length) {\n    const eInput = this.eInput;\n    eInput.maxLength = length;\n    return this;\n  }\n  setInputPlaceholder(placeholder) {\n    addOrRemoveAttribute(this.eInput, \"placeholder\", placeholder);\n    return this;\n  }\n  setInputAriaLabel(label) {\n    setAriaLabel(this.eInput, label);\n    this.refreshAriaLabelledBy();\n    return this;\n  }\n  setDisabled(disabled) {\n    setDisabled(this.eInput, disabled);\n    return super.setDisabled(disabled);\n  }\n  setAutoComplete(value) {\n    if (value === true) {\n      addOrRemoveAttribute(this.eInput, \"autocomplete\", null);\n    } else {\n      const autoCompleteValue = typeof value === \"string\" ? value : \"off\";\n      addOrRemoveAttribute(this.eInput, \"autocomplete\", autoCompleteValue);\n    }\n    return this;\n  }\n};\n__decorateClass([\n  RefSelector(\"eLabel\")\n], AgAbstractInputField.prototype, \"eLabel\", 2);\n__decorateClass([\n  RefSelector(\"eWrapper\")\n], AgAbstractInputField.prototype, \"eWrapper\", 2);\n__decorateClass([\n  RefSelector(\"eInput\")\n], AgAbstractInputField.prototype, \"eInput\", 2);\n\n// community-modules/core/src/widgets/agCheckbox.ts\nvar AgCheckbox = class extends AgAbstractInputField {\n  constructor(config, className = \"ag-checkbox\", inputType = \"checkbox\") {\n    super(config, className, inputType);\n    this.labelAlignment = \"right\";\n    this.selected = false;\n    this.readOnly = false;\n    this.passive = false;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const { readOnly, passive } = this.config;\n    if (typeof readOnly === \"boolean\")\n      this.setReadOnly(readOnly);\n    if (typeof passive === \"boolean\")\n      this.setPassive(passive);\n  }\n  addInputListeners() {\n    this.addManagedListener(this.eInput, \"click\", this.onCheckboxClick.bind(this));\n    this.addManagedListener(this.eLabel, \"click\", this.toggle.bind(this));\n  }\n  getNextValue() {\n    return this.selected === void 0 ? true : !this.selected;\n  }\n  setPassive(passive) {\n    this.passive = passive;\n  }\n  isReadOnly() {\n    return this.readOnly;\n  }\n  setReadOnly(readOnly) {\n    this.eWrapper.classList.toggle(\"ag-disabled\", readOnly);\n    this.eInput.disabled = readOnly;\n    this.readOnly = readOnly;\n  }\n  setDisabled(disabled) {\n    this.eWrapper.classList.toggle(\"ag-disabled\", disabled);\n    return super.setDisabled(disabled);\n  }\n  toggle() {\n    if (this.eInput.disabled) {\n      return;\n    }\n    const previousValue = this.isSelected();\n    const nextValue = this.getNextValue();\n    if (this.passive) {\n      this.dispatchChange(nextValue, previousValue);\n    } else {\n      this.setValue(nextValue);\n    }\n  }\n  getValue() {\n    return this.isSelected();\n  }\n  setValue(value, silent) {\n    this.refreshSelectedClass(value);\n    this.setSelected(value, silent);\n    return this;\n  }\n  setName(name) {\n    const input = this.getInputElement();\n    input.name = name;\n    return this;\n  }\n  isSelected() {\n    return this.selected;\n  }\n  setSelected(selected, silent) {\n    if (this.isSelected() === selected) {\n      return;\n    }\n    this.previousValue = this.isSelected();\n    selected = this.selected = typeof selected === \"boolean\" ? selected : void 0;\n    this.eInput.checked = selected;\n    this.eInput.indeterminate = selected === void 0;\n    if (!silent) {\n      this.dispatchChange(this.selected, this.previousValue);\n    }\n  }\n  dispatchChange(selected, previousValue, event) {\n    this.dispatchEvent({ type: Events.EVENT_FIELD_VALUE_CHANGED, selected, previousValue, event });\n    const input = this.getInputElement();\n    const checkboxChangedEvent = {\n      type: Events.EVENT_CHECKBOX_CHANGED,\n      id: input.id,\n      name: input.name,\n      selected,\n      previousValue\n    };\n    this.eventService.dispatchEvent(checkboxChangedEvent);\n  }\n  onCheckboxClick(e) {\n    if (this.passive || this.eInput.disabled) {\n      return;\n    }\n    const previousValue = this.isSelected();\n    const selected = this.selected = e.target.checked;\n    this.refreshSelectedClass(selected);\n    this.dispatchChange(selected, previousValue, e);\n  }\n  refreshSelectedClass(value) {\n    this.eWrapper.classList.toggle(\"ag-checked\", value === true);\n    this.eWrapper.classList.toggle(\"ag-indeterminate\", value == null);\n  }\n};\n\n// community-modules/core/src/widgets/agRadioButton.ts\nvar AgRadioButton = class extends AgCheckbox {\n  constructor(config) {\n    super(config, \"ag-radio-button\", \"radio\");\n  }\n  isSelected() {\n    return this.eInput.checked;\n  }\n  toggle() {\n    if (this.eInput.disabled) {\n      return;\n    }\n    if (!this.isSelected()) {\n      this.setValue(true);\n    }\n  }\n  addInputListeners() {\n    super.addInputListeners();\n    this.addManagedListener(this.eventService, Events.EVENT_CHECKBOX_CHANGED, this.onChange.bind(this));\n  }\n  /**\n   * This ensures that if another radio button in the same named group is selected, we deselect this radio button.\n   * By default the browser does this for you, but we are managing classes ourselves in order to ensure input\n   * elements are styled correctly in IE11, and the DOM 'changed' event is only fired when a button is selected,\n   * not deselected, so we need to use our own event.\n   */\n  onChange(event) {\n    if (event.selected && event.name && this.eInput.name && this.eInput.name === event.name && event.id && this.eInput.id !== event.id) {\n      this.setValue(false, true);\n    }\n  }\n};\n\n// community-modules/core/src/filter/provided/simpleFilter.ts\nvar SimpleFilterModelFormatter = class {\n  constructor(localeService, optionsFactory, valueFormatter) {\n    this.localeService = localeService;\n    this.optionsFactory = optionsFactory;\n    this.valueFormatter = valueFormatter;\n  }\n  // used by:\n  // 1) NumberFloatingFilter & TextFloatingFilter: Always, for both when editable and read only.\n  // 2) DateFloatingFilter: Only when read only (as we show text rather than a date picker when read only)\n  getModelAsString(model) {\n    if (!model) {\n      return null;\n    }\n    const isCombined = model.operator != null;\n    const translate = this.localeService.getLocaleTextFunc();\n    if (isCombined) {\n      const combinedModel = model;\n      let { conditions } = combinedModel;\n      if (!conditions) {\n        const { condition1, condition2 } = combinedModel;\n        conditions = [condition1, condition2];\n      }\n      const customOptions = conditions.map((condition) => this.getModelAsString(condition));\n      const joinOperatorTranslateKey = combinedModel.operator === \"AND\" ? \"andCondition\" : \"orCondition\";\n      return customOptions.join(` ${translate(joinOperatorTranslateKey, FILTER_LOCALE_TEXT[joinOperatorTranslateKey])} `);\n    } else if (model.type === SimpleFilter.BLANK || model.type === SimpleFilter.NOT_BLANK) {\n      return translate(model.type, model.type);\n    } else {\n      const condition = model;\n      const customOption = this.optionsFactory.getCustomOption(condition.type);\n      const { displayKey, displayName, numberOfInputs } = customOption || {};\n      if (displayKey && displayName && numberOfInputs === 0) {\n        translate(displayKey, displayName);\n        return displayName;\n      }\n      return this.conditionToString(condition, customOption);\n    }\n  }\n  updateParams(params) {\n    this.optionsFactory = params.optionsFactory;\n  }\n  formatValue(value) {\n    var _a;\n    return this.valueFormatter ? (_a = this.valueFormatter(value != null ? value : null)) != null ? _a : \"\" : String(value);\n  }\n};\nvar _SimpleFilter = class _SimpleFilter extends ProvidedFilter {\n  constructor() {\n    super(...arguments);\n    this.eTypes = [];\n    this.eJoinOperatorPanels = [];\n    this.eJoinOperatorsAnd = [];\n    this.eJoinOperatorsOr = [];\n    this.eConditionBodies = [];\n    this.listener = () => this.onUiChanged();\n    this.lastUiCompletePosition = null;\n    this.joinOperatorId = 0;\n  }\n  getNumberOfInputs(type) {\n    const customOpts = this.optionsFactory.getCustomOption(type);\n    if (customOpts) {\n      const { numberOfInputs } = customOpts;\n      return numberOfInputs != null ? numberOfInputs : 1;\n    }\n    const zeroInputTypes = [\n      _SimpleFilter.EMPTY,\n      _SimpleFilter.NOT_BLANK,\n      _SimpleFilter.BLANK\n    ];\n    if (type && zeroInputTypes.indexOf(type) >= 0) {\n      return 0;\n    } else if (type === _SimpleFilter.IN_RANGE) {\n      return 2;\n    }\n    return 1;\n  }\n  // floating filter calls this when user applies filter from floating filter\n  onFloatingFilterChanged(type, value) {\n    this.setTypeFromFloatingFilter(type);\n    this.setValueFromFloatingFilter(value);\n    this.onUiChanged(true);\n  }\n  setTypeFromFloatingFilter(type) {\n    this.eTypes.forEach((eType, position) => {\n      if (position === 0) {\n        eType.setValue(type, true);\n      } else {\n        eType.setValue(this.optionsFactory.getDefaultOption(), true);\n      }\n    });\n  }\n  getModelFromUi() {\n    const conditions = this.getUiCompleteConditions();\n    if (conditions.length === 0) {\n      return null;\n    }\n    if (this.maxNumConditions > 1 && conditions.length > 1) {\n      return {\n        filterType: this.getFilterType(),\n        operator: this.getJoinOperator(),\n        condition1: conditions[0],\n        condition2: conditions[1],\n        conditions\n      };\n    }\n    return conditions[0];\n  }\n  getConditionTypes() {\n    return this.eTypes.map((eType) => eType.getValue());\n  }\n  getConditionType(position) {\n    return this.eTypes[position].getValue();\n  }\n  getJoinOperator() {\n    if (this.eJoinOperatorsOr.length === 0) {\n      return this.defaultJoinOperator;\n    }\n    return this.eJoinOperatorsOr[0].getValue() === true ? \"OR\" : \"AND\";\n  }\n  areModelsEqual(a, b) {\n    if (!a && !b) {\n      return true;\n    }\n    if (!a && b || a && !b) {\n      return false;\n    }\n    const aIsSimple = !a.operator;\n    const bIsSimple = !b.operator;\n    const oneSimpleOneCombined = !aIsSimple && bIsSimple || aIsSimple && !bIsSimple;\n    if (oneSimpleOneCombined) {\n      return false;\n    }\n    let res;\n    if (aIsSimple) {\n      const aSimple = a;\n      const bSimple = b;\n      res = this.areSimpleModelsEqual(aSimple, bSimple);\n    } else {\n      const aCombined = a;\n      const bCombined = b;\n      res = aCombined.operator === bCombined.operator && areEqual(aCombined.conditions, bCombined.conditions, (aModel, bModel) => this.areSimpleModelsEqual(aModel, bModel));\n    }\n    return res;\n  }\n  shouldRefresh(newParams) {\n    var _a, _b, _c;\n    const model = this.getModel();\n    const conditions = model ? (_a = model.conditions) != null ? _a : [model] : null;\n    const newOptionsList = (_c = (_b = newParams.filterOptions) == null ? void 0 : _b.map(\n      (option) => typeof option === \"string\" ? option : option.displayKey\n    )) != null ? _c : this.getDefaultFilterOptions();\n    const allConditionsExistInNewOptionsList = !conditions || conditions.every((condition) => newOptionsList.find((option) => option === condition.type) !== void 0);\n    if (!allConditionsExistInNewOptionsList) {\n      return false;\n    }\n    if (typeof newParams.maxNumConditions === \"number\" && conditions && conditions.length > newParams.maxNumConditions) {\n      return false;\n    }\n    return true;\n  }\n  refresh(newParams) {\n    if (!this.shouldRefresh(newParams)) {\n      return false;\n    }\n    const parentRefreshed = super.refresh(newParams);\n    if (!parentRefreshed) {\n      return false;\n    }\n    this.setParams(newParams);\n    this.removeConditionsAndOperators(0);\n    this.createOption();\n    this.setModel(this.getModel());\n    return true;\n  }\n  setModelIntoUi(model) {\n    const isCombined = model.operator;\n    if (isCombined) {\n      let combinedModel = model;\n      if (!combinedModel.conditions) {\n        combinedModel.conditions = [\n          combinedModel.condition1,\n          combinedModel.condition2\n        ];\n      }\n      const numConditions = this.validateAndUpdateConditions(combinedModel.conditions);\n      const numPrevConditions = this.getNumConditions();\n      if (numConditions < numPrevConditions) {\n        this.removeConditionsAndOperators(numConditions);\n      } else if (numConditions > numPrevConditions) {\n        for (let i = numPrevConditions; i < numConditions; i++) {\n          this.createJoinOperatorPanel();\n          this.createOption();\n        }\n      }\n      const orChecked = combinedModel.operator === \"OR\";\n      this.eJoinOperatorsAnd.forEach((eJoinOperatorAnd) => eJoinOperatorAnd.setValue(!orChecked, true));\n      this.eJoinOperatorsOr.forEach((eJoinOperatorOr) => eJoinOperatorOr.setValue(orChecked, true));\n      combinedModel.conditions.forEach((condition, position) => {\n        this.eTypes[position].setValue(condition.type, true);\n        this.setConditionIntoUi(condition, position);\n      });\n    } else {\n      const simpleModel = model;\n      if (this.getNumConditions() > 1) {\n        this.removeConditionsAndOperators(1);\n      }\n      this.eTypes[0].setValue(simpleModel.type, true);\n      this.setConditionIntoUi(simpleModel, 0);\n    }\n    this.lastUiCompletePosition = this.getNumConditions() - 1;\n    this.createMissingConditionsAndOperators();\n    this.onUiChanged();\n    return AgPromise.resolve();\n  }\n  validateAndUpdateConditions(conditions) {\n    let numConditions = conditions.length;\n    if (numConditions > this.maxNumConditions) {\n      conditions.splice(this.maxNumConditions);\n      warnOnce('Filter Model contains more conditions than \"filterParams.maxNumConditions\". Additional conditions have been ignored.');\n      numConditions = this.maxNumConditions;\n    }\n    return numConditions;\n  }\n  doesFilterPass(params) {\n    var _a;\n    const model = this.getModel();\n    if (model == null) {\n      return true;\n    }\n    const { operator } = model;\n    const models = [];\n    if (operator) {\n      const combinedModel = model;\n      models.push(...(_a = combinedModel.conditions) != null ? _a : []);\n    } else {\n      models.push(model);\n    }\n    const combineFunction = operator && operator === \"OR\" ? \"some\" : \"every\";\n    return models[combineFunction]((m) => this.individualConditionPasses(params, m));\n  }\n  setParams(params) {\n    super.setParams(params);\n    this.setNumConditions(params);\n    this.defaultJoinOperator = this.getDefaultJoinOperator(params.defaultJoinOperator);\n    this.filterPlaceholder = params.filterPlaceholder;\n    this.optionsFactory = new OptionsFactory();\n    this.optionsFactory.init(params, this.getDefaultFilterOptions());\n    this.createFilterListOptions();\n    this.createOption();\n    this.createMissingConditionsAndOperators();\n    if (this.isReadOnly()) {\n      this.eFilterBody.setAttribute(\"tabindex\", \"-1\");\n    }\n  }\n  setNumConditions(params) {\n    var _a, _b;\n    if (params.suppressAndOrCondition != null) {\n      warnOnce('Since v29.2 \"filterParams.suppressAndOrCondition\" is deprecated. Use \"filterParams.maxNumConditions = 1\" instead.');\n    }\n    if (params.alwaysShowBothConditions != null) {\n      warnOnce('Since v29.2 \"filterParams.alwaysShowBothConditions\" is deprecated. Use \"filterParams.numAlwaysVisibleConditions = 2\" instead.');\n    }\n    this.maxNumConditions = (_a = params.maxNumConditions) != null ? _a : params.suppressAndOrCondition ? 1 : 2;\n    if (this.maxNumConditions < 1) {\n      warnOnce('\"filterParams.maxNumConditions\" must be greater than or equal to zero.');\n      this.maxNumConditions = 1;\n    }\n    this.numAlwaysVisibleConditions = (_b = params.numAlwaysVisibleConditions) != null ? _b : params.alwaysShowBothConditions ? 2 : 1;\n    if (this.numAlwaysVisibleConditions < 1) {\n      warnOnce('\"filterParams.numAlwaysVisibleConditions\" must be greater than or equal to zero.');\n      this.numAlwaysVisibleConditions = 1;\n    }\n    if (this.numAlwaysVisibleConditions > this.maxNumConditions) {\n      warnOnce('\"filterParams.numAlwaysVisibleConditions\" cannot be greater than \"filterParams.maxNumConditions\".');\n      this.numAlwaysVisibleConditions = this.maxNumConditions;\n    }\n  }\n  createOption() {\n    const eType = this.createManagedBean(new AgSelect());\n    this.eTypes.push(eType);\n    eType.addCssClass(\"ag-filter-select\");\n    this.eFilterBody.appendChild(eType.getGui());\n    const eConditionBody = this.createValueElement();\n    this.eConditionBodies.push(eConditionBody);\n    this.eFilterBody.appendChild(eConditionBody);\n    this.putOptionsIntoDropdown(eType);\n    this.resetType(eType);\n    const position = this.getNumConditions() - 1;\n    this.forEachPositionInput(position, (element) => this.resetInput(element));\n    this.addChangedListeners(eType, position);\n  }\n  createJoinOperatorPanel() {\n    const eJoinOperatorPanel = document.createElement(\"div\");\n    this.eJoinOperatorPanels.push(eJoinOperatorPanel);\n    eJoinOperatorPanel.classList.add(\"ag-filter-condition\");\n    const eJoinOperatorAnd = this.createJoinOperator(this.eJoinOperatorsAnd, eJoinOperatorPanel, \"and\");\n    const eJoinOperatorOr = this.createJoinOperator(this.eJoinOperatorsOr, eJoinOperatorPanel, \"or\");\n    this.eFilterBody.appendChild(eJoinOperatorPanel);\n    const index = this.eJoinOperatorPanels.length - 1;\n    const uniqueGroupId = this.joinOperatorId++;\n    this.resetJoinOperatorAnd(eJoinOperatorAnd, index, uniqueGroupId);\n    this.resetJoinOperatorOr(eJoinOperatorOr, index, uniqueGroupId);\n    if (!this.isReadOnly()) {\n      eJoinOperatorAnd.onValueChange(this.listener);\n      eJoinOperatorOr.onValueChange(this.listener);\n    }\n  }\n  createJoinOperator(eJoinOperators, eJoinOperatorPanel, andOr) {\n    const eJoinOperator = this.createManagedBean(new AgRadioButton());\n    eJoinOperators.push(eJoinOperator);\n    eJoinOperator.addCssClass(\"ag-filter-condition-operator\");\n    eJoinOperator.addCssClass(`ag-filter-condition-operator-${andOr}`);\n    eJoinOperatorPanel.appendChild(eJoinOperator.getGui());\n    return eJoinOperator;\n  }\n  getDefaultJoinOperator(defaultJoinOperator) {\n    return defaultJoinOperator === \"AND\" || defaultJoinOperator === \"OR\" ? defaultJoinOperator : \"AND\";\n  }\n  createFilterListOptions() {\n    const filterOptions = this.optionsFactory.getFilterOptions();\n    this.filterListOptions = filterOptions.map(\n      (option) => typeof option === \"string\" ? this.createBoilerplateListOption(option) : this.createCustomListOption(option)\n    );\n  }\n  putOptionsIntoDropdown(eType) {\n    this.filterListOptions.forEach((listOption) => {\n      eType.addOption(listOption);\n    });\n    eType.setDisabled(this.filterListOptions.length <= 1);\n  }\n  createBoilerplateListOption(option) {\n    return { value: option, text: this.translate(option) };\n  }\n  createCustomListOption(option) {\n    const { displayKey } = option;\n    const customOption = this.optionsFactory.getCustomOption(option.displayKey);\n    return {\n      value: displayKey,\n      text: customOption ? this.localeService.getLocaleTextFunc()(customOption.displayKey, customOption.displayName) : this.translate(displayKey)\n    };\n  }\n  /**\n   * @deprecated As of v29.2 filters can have more than two conditions. Check `colDef.filterParams.maxNumConditions` instead.\n   */\n  isAllowTwoConditions() {\n    return this.maxNumConditions >= 2;\n  }\n  createBodyTemplate() {\n    return \"\";\n  }\n  getCssIdentifier() {\n    return \"simple-filter\";\n  }\n  updateUiVisibility() {\n    const joinOperator = this.getJoinOperator();\n    this.updateNumConditions();\n    this.updateConditionStatusesAndValues(this.lastUiCompletePosition, joinOperator);\n  }\n  updateNumConditions() {\n    var _a;\n    let lastUiCompletePosition = -1;\n    let areAllConditionsUiComplete = true;\n    for (let position = 0; position < this.getNumConditions(); position++) {\n      if (this.isConditionUiComplete(position)) {\n        lastUiCompletePosition = position;\n      } else {\n        areAllConditionsUiComplete = false;\n      }\n    }\n    if (this.shouldAddNewConditionAtEnd(areAllConditionsUiComplete)) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n    } else {\n      const activePosition = (_a = this.lastUiCompletePosition) != null ? _a : this.getNumConditions() - 2;\n      if (lastUiCompletePosition < activePosition) {\n        this.removeConditionsAndOperators(activePosition + 1);\n        const removeStartPosition = lastUiCompletePosition + 1;\n        const numConditionsToRemove = activePosition - removeStartPosition;\n        if (numConditionsToRemove > 0) {\n          this.removeConditionsAndOperators(removeStartPosition, numConditionsToRemove);\n        }\n        this.createMissingConditionsAndOperators();\n      }\n    }\n    this.lastUiCompletePosition = lastUiCompletePosition;\n  }\n  updateConditionStatusesAndValues(lastUiCompletePosition, joinOperator) {\n    this.eTypes.forEach((eType, position) => {\n      const disabled = this.isConditionDisabled(position, lastUiCompletePosition);\n      eType.setDisabled(disabled || this.filterListOptions.length <= 1);\n      if (position === 1) {\n        setDisabled(this.eJoinOperatorPanels[0], disabled);\n        this.eJoinOperatorsAnd[0].setDisabled(disabled);\n        this.eJoinOperatorsOr[0].setDisabled(disabled);\n      }\n    });\n    this.eConditionBodies.forEach((element, index) => {\n      setDisplayed(element, this.isConditionBodyVisible(index));\n    });\n    const orChecked = (joinOperator != null ? joinOperator : this.getJoinOperator()) === \"OR\";\n    this.eJoinOperatorsAnd.forEach((eJoinOperatorAnd, index) => {\n      eJoinOperatorAnd.setValue(!orChecked, true);\n    });\n    this.eJoinOperatorsOr.forEach((eJoinOperatorOr, index) => {\n      eJoinOperatorOr.setValue(orChecked, true);\n    });\n    this.forEachInput((element, index, position, numberOfInputs) => {\n      this.setElementDisplayed(element, index < numberOfInputs);\n      this.setElementDisabled(element, this.isConditionDisabled(position, lastUiCompletePosition));\n    });\n    this.resetPlaceholder();\n  }\n  shouldAddNewConditionAtEnd(areAllConditionsUiComplete) {\n    return areAllConditionsUiComplete && this.getNumConditions() < this.maxNumConditions && !this.isReadOnly();\n  }\n  removeConditionsAndOperators(startPosition, deleteCount) {\n    if (startPosition >= this.getNumConditions()) {\n      return;\n    }\n    this.removeComponents(this.eTypes, startPosition, deleteCount);\n    this.removeElements(this.eConditionBodies, startPosition, deleteCount);\n    this.removeValueElements(startPosition, deleteCount);\n    const joinOperatorIndex = Math.max(startPosition - 1, 0);\n    this.removeElements(this.eJoinOperatorPanels, joinOperatorIndex, deleteCount);\n    this.removeComponents(this.eJoinOperatorsAnd, joinOperatorIndex, deleteCount);\n    this.removeComponents(this.eJoinOperatorsOr, joinOperatorIndex, deleteCount);\n  }\n  removeElements(elements, startPosition, deleteCount) {\n    const removedElements = this.removeItems(elements, startPosition, deleteCount);\n    removedElements.forEach((element) => removeFromParent(element));\n  }\n  removeComponents(components, startPosition, deleteCount) {\n    const removedComponents = this.removeItems(components, startPosition, deleteCount);\n    removedComponents.forEach((comp) => {\n      removeFromParent(comp.getGui());\n      this.destroyBean(comp);\n    });\n  }\n  removeItems(items, startPosition, deleteCount) {\n    return deleteCount == null ? items.splice(startPosition) : items.splice(startPosition, deleteCount);\n  }\n  afterGuiAttached(params) {\n    super.afterGuiAttached(params);\n    this.resetPlaceholder();\n    if (!(params == null ? void 0 : params.suppressFocus)) {\n      if (this.isReadOnly()) {\n        this.eFilterBody.focus();\n      } else {\n        const firstInput = this.getInputs(0)[0];\n        if (!firstInput) {\n          return;\n        }\n        if (firstInput instanceof AgAbstractInputField) {\n          firstInput.getInputElement().focus();\n        }\n      }\n    }\n  }\n  afterGuiDetached() {\n    super.afterGuiDetached();\n    const appliedModel = this.getModel();\n    this.resetUiToActiveModel(appliedModel);\n    let lastUiCompletePosition = -1;\n    let updatedLastUiCompletePosition = -1;\n    let conditionsRemoved = false;\n    const joinOperator = this.getJoinOperator();\n    for (let position = this.getNumConditions() - 1; position >= 0; position--) {\n      if (this.isConditionUiComplete(position)) {\n        if (lastUiCompletePosition === -1) {\n          lastUiCompletePosition = position;\n          updatedLastUiCompletePosition = position;\n        }\n      } else {\n        const shouldRemovePositionAtEnd = position >= this.numAlwaysVisibleConditions && !this.isConditionUiComplete(position - 1);\n        const positionBeforeLastUiCompletePosition = position < lastUiCompletePosition;\n        if (shouldRemovePositionAtEnd || positionBeforeLastUiCompletePosition) {\n          this.removeConditionsAndOperators(position, 1);\n          conditionsRemoved = true;\n          if (positionBeforeLastUiCompletePosition) {\n            updatedLastUiCompletePosition--;\n          }\n        }\n      }\n    }\n    let shouldUpdateConditionStatusesAndValues = false;\n    if (this.getNumConditions() < this.numAlwaysVisibleConditions) {\n      this.createMissingConditionsAndOperators();\n      shouldUpdateConditionStatusesAndValues = true;\n    }\n    if (this.shouldAddNewConditionAtEnd(updatedLastUiCompletePosition === this.getNumConditions() - 1)) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n      shouldUpdateConditionStatusesAndValues = true;\n    }\n    if (shouldUpdateConditionStatusesAndValues) {\n      this.updateConditionStatusesAndValues(updatedLastUiCompletePosition, joinOperator);\n    }\n    if (conditionsRemoved) {\n      this.updateJoinOperatorsDisabled();\n    }\n    this.lastUiCompletePosition = updatedLastUiCompletePosition;\n  }\n  getPlaceholderText(defaultPlaceholder, position) {\n    let placeholder = this.translate(defaultPlaceholder);\n    if (isFunction(this.filterPlaceholder)) {\n      const filterPlaceholderFn = this.filterPlaceholder;\n      const filterOptionKey = this.eTypes[position].getValue();\n      const filterOption = this.translate(filterOptionKey);\n      placeholder = filterPlaceholderFn({\n        filterOptionKey,\n        filterOption,\n        placeholder\n      });\n    } else if (typeof this.filterPlaceholder === \"string\") {\n      placeholder = this.filterPlaceholder;\n    }\n    return placeholder;\n  }\n  // allow sub-classes to reset HTML placeholders after UI update.\n  resetPlaceholder() {\n    const globalTranslate = this.localeService.getLocaleTextFunc();\n    this.forEachInput((element, index, position, numberOfInputs) => {\n      if (!(element instanceof AgAbstractInputField)) {\n        return;\n      }\n      const placeholder = index === 0 && numberOfInputs > 1 ? \"inRangeStart\" : index === 0 ? \"filterOoo\" : \"inRangeEnd\";\n      const ariaLabel = index === 0 && numberOfInputs > 1 ? globalTranslate(\"ariaFilterFromValue\", \"Filter from value\") : index === 0 ? globalTranslate(\"ariaFilterValue\", \"Filter Value\") : globalTranslate(\"ariaFilterToValue\", \"Filter to Value\");\n      element.setInputPlaceholder(this.getPlaceholderText(placeholder, position));\n      element.setInputAriaLabel(ariaLabel);\n    });\n  }\n  setElementValue(element, value, fromFloatingFilter) {\n    if (element instanceof AgAbstractInputField) {\n      element.setValue(value != null ? String(value) : null, true);\n    }\n  }\n  setElementDisplayed(element, displayed) {\n    if (element instanceof Component) {\n      setDisplayed(element.getGui(), displayed);\n    }\n  }\n  setElementDisabled(element, disabled) {\n    if (element instanceof Component) {\n      setDisabled(element.getGui(), disabled);\n    }\n  }\n  attachElementOnChange(element, listener) {\n    if (element instanceof AgAbstractInputField) {\n      element.onValueChange(listener);\n    }\n  }\n  forEachInput(cb) {\n    this.getConditionTypes().forEach((type, position) => {\n      this.forEachPositionTypeInput(position, type, cb);\n    });\n  }\n  forEachPositionInput(position, cb) {\n    const type = this.getConditionType(position);\n    this.forEachPositionTypeInput(position, type, cb);\n  }\n  forEachPositionTypeInput(position, type, cb) {\n    const numberOfInputs = this.getNumberOfInputs(type);\n    const inputs = this.getInputs(position);\n    for (let index = 0; index < inputs.length; index++) {\n      const input = inputs[index];\n      if (input != null) {\n        cb(input, index, position, numberOfInputs);\n      }\n    }\n  }\n  isConditionDisabled(position, lastUiCompletePosition) {\n    if (this.isReadOnly()) {\n      return true;\n    }\n    if (position === 0) {\n      return false;\n    }\n    return position > lastUiCompletePosition + 1;\n  }\n  isConditionBodyVisible(position) {\n    const type = this.getConditionType(position);\n    const numberOfInputs = this.getNumberOfInputs(type);\n    return numberOfInputs > 0;\n  }\n  // returns true if the UI represents a working filter, eg all parts are filled out.\n  // eg if text filter and textfield blank then returns false.\n  isConditionUiComplete(position) {\n    if (position >= this.getNumConditions()) {\n      return false;\n    }\n    const type = this.getConditionType(position);\n    if (type === _SimpleFilter.EMPTY) {\n      return false;\n    }\n    if (this.getValues(position).some((v) => v == null)) {\n      return false;\n    }\n    return true;\n  }\n  getNumConditions() {\n    return this.eTypes.length;\n  }\n  getUiCompleteConditions() {\n    const conditions = [];\n    for (let position = 0; position < this.getNumConditions(); position++) {\n      if (this.isConditionUiComplete(position)) {\n        conditions.push(this.createCondition(position));\n      }\n    }\n    return conditions;\n  }\n  createMissingConditionsAndOperators() {\n    if (this.isReadOnly()) {\n      return;\n    }\n    for (let i = this.getNumConditions(); i < this.numAlwaysVisibleConditions; i++) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n    }\n  }\n  resetUiToDefaults(silent) {\n    this.removeConditionsAndOperators(this.isReadOnly() ? 1 : this.numAlwaysVisibleConditions);\n    this.eTypes.forEach((eType) => this.resetType(eType));\n    this.eJoinOperatorsAnd.forEach((eJoinOperatorAnd, index) => this.resetJoinOperatorAnd(eJoinOperatorAnd, index, this.joinOperatorId + index));\n    this.eJoinOperatorsOr.forEach((eJoinOperatorOr, index) => this.resetJoinOperatorOr(eJoinOperatorOr, index, this.joinOperatorId + index));\n    this.joinOperatorId++;\n    this.forEachInput((element) => this.resetInput(element));\n    this.resetPlaceholder();\n    this.createMissingConditionsAndOperators();\n    this.lastUiCompletePosition = null;\n    if (!silent) {\n      this.onUiChanged();\n    }\n    return AgPromise.resolve();\n  }\n  resetType(eType) {\n    const translate = this.localeService.getLocaleTextFunc();\n    const filteringLabel = translate(\"ariaFilteringOperator\", \"Filtering operator\");\n    eType.setValue(this.optionsFactory.getDefaultOption(), true).setAriaLabel(filteringLabel).setDisabled(this.isReadOnly() || this.filterListOptions.length <= 1);\n  }\n  resetJoinOperatorAnd(eJoinOperatorAnd, index, uniqueGroupId) {\n    this.resetJoinOperator(eJoinOperatorAnd, index, this.isDefaultOperator(\"AND\"), this.translate(\"andCondition\"), uniqueGroupId);\n  }\n  resetJoinOperatorOr(eJoinOperatorOr, index, uniqueGroupId) {\n    this.resetJoinOperator(eJoinOperatorOr, index, this.isDefaultOperator(\"OR\"), this.translate(\"orCondition\"), uniqueGroupId);\n  }\n  resetJoinOperator(eJoinOperator, index, value, label, uniqueGroupId) {\n    this.updateJoinOperatorDisabled(\n      eJoinOperator.setValue(value, true).setName(`ag-simple-filter-and-or-${this.getCompId()}-${uniqueGroupId}`).setLabel(label),\n      index\n    );\n  }\n  updateJoinOperatorsDisabled() {\n    this.eJoinOperatorsAnd.forEach((eJoinOperator, index) => this.updateJoinOperatorDisabled(eJoinOperator, index));\n    this.eJoinOperatorsOr.forEach((eJoinOperator, index) => this.updateJoinOperatorDisabled(eJoinOperator, index));\n  }\n  updateJoinOperatorDisabled(eJoinOperator, index) {\n    eJoinOperator.setDisabled(this.isReadOnly() || index > 0);\n  }\n  resetInput(element) {\n    this.setElementValue(element, null);\n    this.setElementDisabled(element, this.isReadOnly());\n  }\n  // puts model values into the UI\n  setConditionIntoUi(model, position) {\n    const values2 = this.mapValuesFromModel(model);\n    this.forEachInput((element, index, elPosition, _2) => {\n      if (elPosition !== position) {\n        return;\n      }\n      this.setElementValue(element, values2[index] != null ? values2[index] : null);\n    });\n  }\n  // after floating filter changes, this sets the 'value' section. this is implemented by the base class\n  // (as that's where value is controlled), the 'type' part from the floating filter is dealt with in this class.\n  setValueFromFloatingFilter(value) {\n    this.forEachInput((element, index, position, _2) => {\n      this.setElementValue(element, index === 0 && position === 0 ? value : null, true);\n    });\n  }\n  isDefaultOperator(operator) {\n    return operator === this.defaultJoinOperator;\n  }\n  addChangedListeners(eType, position) {\n    if (this.isReadOnly()) {\n      return;\n    }\n    eType.onValueChange(this.listener);\n    this.forEachPositionInput(position, (element) => {\n      this.attachElementOnChange(element, this.listener);\n    });\n  }\n  /** returns true if the row passes the said condition */\n  individualConditionPasses(params, filterModel) {\n    const cellValue = this.getCellValue(params.node);\n    const values2 = this.mapValuesFromModel(filterModel);\n    const customFilterOption = this.optionsFactory.getCustomOption(filterModel.type);\n    const customFilterResult = this.evaluateCustomFilter(customFilterOption, values2, cellValue);\n    if (customFilterResult != null) {\n      return customFilterResult;\n    }\n    if (cellValue == null) {\n      return this.evaluateNullValue(filterModel.type);\n    }\n    return this.evaluateNonNullValue(values2, cellValue, filterModel, params);\n  }\n  evaluateCustomFilter(customFilterOption, values2, cellValue) {\n    if (customFilterOption == null) {\n      return;\n    }\n    const { predicate } = customFilterOption;\n    if (predicate != null && !values2.some((v) => v == null)) {\n      return predicate(values2, cellValue);\n    }\n    return;\n  }\n  isBlank(cellValue) {\n    return cellValue == null || typeof cellValue === \"string\" && cellValue.trim().length === 0;\n  }\n  hasInvalidInputs() {\n    return false;\n  }\n};\n_SimpleFilter.EMPTY = \"empty\";\n_SimpleFilter.BLANK = \"blank\";\n_SimpleFilter.NOT_BLANK = \"notBlank\";\n_SimpleFilter.EQUALS = \"equals\";\n_SimpleFilter.NOT_EQUAL = \"notEqual\";\n_SimpleFilter.LESS_THAN = \"lessThan\";\n_SimpleFilter.LESS_THAN_OR_EQUAL = \"lessThanOrEqual\";\n_SimpleFilter.GREATER_THAN = \"greaterThan\";\n_SimpleFilter.GREATER_THAN_OR_EQUAL = \"greaterThanOrEqual\";\n_SimpleFilter.IN_RANGE = \"inRange\";\n_SimpleFilter.CONTAINS = \"contains\";\n_SimpleFilter.NOT_CONTAINS = \"notContains\";\n_SimpleFilter.STARTS_WITH = \"startsWith\";\n_SimpleFilter.ENDS_WITH = \"endsWith\";\nvar SimpleFilter = _SimpleFilter;\n\n// community-modules/core/src/filter/provided/scalarFilter.ts\nvar ScalarFilter = class _ScalarFilter extends SimpleFilter {\n  setParams(params) {\n    super.setParams(params);\n    this.scalarFilterParams = params;\n  }\n  evaluateNullValue(filterType) {\n    switch (filterType) {\n      case _ScalarFilter.EQUALS:\n      case _ScalarFilter.NOT_EQUAL:\n        if (this.scalarFilterParams.includeBlanksInEquals) {\n          return true;\n        }\n        break;\n      case _ScalarFilter.GREATER_THAN:\n      case _ScalarFilter.GREATER_THAN_OR_EQUAL:\n        if (this.scalarFilterParams.includeBlanksInGreaterThan) {\n          return true;\n        }\n        break;\n      case _ScalarFilter.LESS_THAN:\n      case _ScalarFilter.LESS_THAN_OR_EQUAL:\n        if (this.scalarFilterParams.includeBlanksInLessThan) {\n          return true;\n        }\n        break;\n      case _ScalarFilter.IN_RANGE:\n        if (this.scalarFilterParams.includeBlanksInRange) {\n          return true;\n        }\n        break;\n      case _ScalarFilter.BLANK:\n        return true;\n      case _ScalarFilter.NOT_BLANK:\n        return false;\n    }\n    return false;\n  }\n  evaluateNonNullValue(values2, cellValue, filterModel) {\n    const comparator = this.comparator();\n    const compareResult = values2[0] != null ? comparator(values2[0], cellValue) : 0;\n    switch (filterModel.type) {\n      case _ScalarFilter.EQUALS:\n        return compareResult === 0;\n      case _ScalarFilter.NOT_EQUAL:\n        return compareResult !== 0;\n      case _ScalarFilter.GREATER_THAN:\n        return compareResult > 0;\n      case _ScalarFilter.GREATER_THAN_OR_EQUAL:\n        return compareResult >= 0;\n      case _ScalarFilter.LESS_THAN:\n        return compareResult < 0;\n      case _ScalarFilter.LESS_THAN_OR_EQUAL:\n        return compareResult <= 0;\n      case _ScalarFilter.IN_RANGE: {\n        const compareToResult = comparator(values2[1], cellValue);\n        return this.scalarFilterParams.inRangeInclusive ? compareResult >= 0 && compareToResult <= 0 : compareResult > 0 && compareToResult < 0;\n      }\n      case _ScalarFilter.BLANK:\n        return this.isBlank(cellValue);\n      case _ScalarFilter.NOT_BLANK:\n        return !this.isBlank(cellValue);\n      default:\n        console.warn('AG Grid: Unexpected type of filter \"' + filterModel.type + '\", it looks like the filter was configured with incorrect Filter Options');\n        return true;\n    }\n  }\n};\n\n// community-modules/core/src/filter/provided/date/dateFilter.ts\nvar DEFAULT_MIN_YEAR = 1e3;\nvar DEFAULT_MAX_YEAR = Infinity;\nvar DateFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  constructor(dateFilterParams, localeService, optionsFactory) {\n    super(localeService, optionsFactory);\n    this.dateFilterParams = dateFilterParams;\n  }\n  conditionToString(condition, options) {\n    const { type } = condition;\n    const { numberOfInputs } = options || {};\n    const isRange = type == SimpleFilter.IN_RANGE || numberOfInputs === 2;\n    const dateFrom = parseDateTimeFromString(condition.dateFrom);\n    const dateTo = parseDateTimeFromString(condition.dateTo);\n    const format = this.dateFilterParams.inRangeFloatingFilterDateFormat;\n    if (isRange) {\n      const formattedFrom = dateFrom !== null ? dateToFormattedString(dateFrom, format) : \"null\";\n      const formattedTo = dateTo !== null ? dateToFormattedString(dateTo, format) : \"null\";\n      return `${formattedFrom}-${formattedTo}`;\n    }\n    if (dateFrom != null) {\n      return dateToFormattedString(dateFrom, format);\n    }\n    return `${type}`;\n  }\n  updateParams(params) {\n    super.updateParams(params);\n    this.dateFilterParams = params.dateFilterParams;\n  }\n};\nvar _DateFilter = class _DateFilter extends ScalarFilter {\n  constructor() {\n    super(\"dateFilter\");\n    this.eConditionPanelsFrom = [];\n    this.eConditionPanelsTo = [];\n    this.dateConditionFromComps = [];\n    this.dateConditionToComps = [];\n    this.minValidYear = DEFAULT_MIN_YEAR;\n    this.maxValidYear = DEFAULT_MAX_YEAR;\n    this.minValidDate = null;\n    this.maxValidDate = null;\n  }\n  afterGuiAttached(params) {\n    super.afterGuiAttached(params);\n    this.dateConditionFromComps[0].afterGuiAttached(params);\n  }\n  mapValuesFromModel(filterModel) {\n    const { dateFrom, dateTo, type } = filterModel || {};\n    return [\n      dateFrom && parseDateTimeFromString(dateFrom) || null,\n      dateTo && parseDateTimeFromString(dateTo) || null\n    ].slice(0, this.getNumberOfInputs(type));\n  }\n  comparator() {\n    return this.dateFilterParams.comparator ? this.dateFilterParams.comparator : this.defaultComparator.bind(this);\n  }\n  defaultComparator(filterDate, cellValue) {\n    const cellAsDate = cellValue;\n    if (cellValue == null || cellAsDate < filterDate) {\n      return -1;\n    }\n    if (cellAsDate > filterDate) {\n      return 1;\n    }\n    return 0;\n  }\n  setParams(params) {\n    this.dateFilterParams = params;\n    super.setParams(params);\n    const yearParser = (param, fallback) => {\n      if (params[param] != null) {\n        if (!isNaN(params[param])) {\n          return params[param] == null ? fallback : Number(params[param]);\n        } else {\n          console.warn(`AG Grid: DateFilter ${param} is not a number`);\n        }\n      }\n      return fallback;\n    };\n    this.minValidYear = yearParser(\"minValidYear\", DEFAULT_MIN_YEAR);\n    this.maxValidYear = yearParser(\"maxValidYear\", DEFAULT_MAX_YEAR);\n    if (this.minValidYear > this.maxValidYear) {\n      console.warn(`AG Grid: DateFilter minValidYear should be <= maxValidYear`);\n    }\n    if (params.minValidDate) {\n      this.minValidDate = params.minValidDate instanceof Date ? params.minValidDate : parseDateTimeFromString(params.minValidDate);\n    } else {\n      this.minValidDate = null;\n    }\n    if (params.maxValidDate) {\n      this.maxValidDate = params.maxValidDate instanceof Date ? params.maxValidDate : parseDateTimeFromString(params.maxValidDate);\n    } else {\n      this.maxValidDate = null;\n    }\n    if (this.minValidDate && this.maxValidDate && this.minValidDate > this.maxValidDate) {\n      console.warn(`AG Grid: DateFilter minValidDate should be <= maxValidDate`);\n    }\n    this.filterModelFormatter = new DateFilterModelFormatter(this.dateFilterParams, this.localeService, this.optionsFactory);\n  }\n  createDateCompWrapper(element) {\n    const dateCompWrapper = new DateCompWrapper(\n      this.getContext(),\n      this.userComponentFactory,\n      {\n        onDateChanged: () => this.onUiChanged(),\n        filterParams: this.dateFilterParams\n      },\n      element\n    );\n    this.addDestroyFunc(() => dateCompWrapper.destroy());\n    return dateCompWrapper;\n  }\n  setElementValue(element, value) {\n    element.setDate(value);\n  }\n  setElementDisplayed(element, displayed) {\n    element.setDisplayed(displayed);\n  }\n  setElementDisabled(element, disabled) {\n    element.setDisabled(disabled);\n  }\n  getDefaultFilterOptions() {\n    return _DateFilter.DEFAULT_FILTER_OPTIONS;\n  }\n  createValueElement() {\n    const eDocument = this.gos.getDocument();\n    const eCondition = eDocument.createElement(\"div\");\n    eCondition.classList.add(\"ag-filter-body\");\n    this.createFromToElement(eCondition, this.eConditionPanelsFrom, this.dateConditionFromComps, \"from\");\n    this.createFromToElement(eCondition, this.eConditionPanelsTo, this.dateConditionToComps, \"to\");\n    return eCondition;\n  }\n  createFromToElement(eCondition, eConditionPanels, dateConditionComps, fromTo) {\n    const eDocument = this.gos.getDocument();\n    const eConditionPanel = eDocument.createElement(\"div\");\n    eConditionPanel.classList.add(`ag-filter-${fromTo}`);\n    eConditionPanel.classList.add(`ag-filter-date-${fromTo}`);\n    eConditionPanels.push(eConditionPanel);\n    eCondition.appendChild(eConditionPanel);\n    dateConditionComps.push(this.createDateCompWrapper(eConditionPanel));\n  }\n  removeValueElements(startPosition, deleteCount) {\n    this.removeDateComps(this.dateConditionFromComps, startPosition, deleteCount);\n    this.removeDateComps(this.dateConditionToComps, startPosition, deleteCount);\n    this.removeItems(this.eConditionPanelsFrom, startPosition, deleteCount);\n    this.removeItems(this.eConditionPanelsTo, startPosition, deleteCount);\n  }\n  removeDateComps(components, startPosition, deleteCount) {\n    const removedComponents = this.removeItems(components, startPosition, deleteCount);\n    removedComponents.forEach((comp) => comp.destroy());\n  }\n  isValidDateValue(value) {\n    if (value === null) {\n      return false;\n    }\n    if (this.minValidDate) {\n      if (value < this.minValidDate) {\n        return false;\n      }\n    } else {\n      if (value.getUTCFullYear() < this.minValidYear) {\n        return false;\n      }\n    }\n    if (this.maxValidDate) {\n      if (value > this.maxValidDate) {\n        return false;\n      }\n    } else {\n      if (value.getUTCFullYear() > this.maxValidYear) {\n        return false;\n      }\n    }\n    return true;\n  }\n  isConditionUiComplete(position) {\n    if (!super.isConditionUiComplete(position)) {\n      return false;\n    }\n    let valid = true;\n    this.forEachInput((element, index, elPosition, numberOfInputs) => {\n      if (elPosition !== position || !valid || index >= numberOfInputs) {\n        return;\n      }\n      valid = valid && this.isValidDateValue(element.getDate());\n    });\n    return valid;\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.dateFrom === bSimple.dateFrom && aSimple.dateTo === bSimple.dateTo && aSimple.type === bSimple.type;\n  }\n  getFilterType() {\n    return \"date\";\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {};\n    const values2 = this.getValues(position);\n    if (values2.length > 0) {\n      model.dateFrom = serialiseDate(values2[0]);\n    }\n    if (values2.length > 1) {\n      model.dateTo = serialiseDate(values2[1]);\n    }\n    return __spreadValues({\n      dateFrom: null,\n      dateTo: null,\n      filterType: this.getFilterType(),\n      type\n    }, model);\n  }\n  resetPlaceholder() {\n    const globalTranslate = this.localeService.getLocaleTextFunc();\n    const placeholder = this.translate(\"dateFormatOoo\");\n    const ariaLabel = globalTranslate(\"ariaFilterValue\", \"Filter Value\");\n    this.forEachInput((element) => {\n      element.setInputPlaceholder(placeholder);\n      element.setInputAriaLabel(ariaLabel);\n    });\n  }\n  getInputs(position) {\n    if (position >= this.dateConditionFromComps.length) {\n      return [null, null];\n    }\n    return [this.dateConditionFromComps[position], this.dateConditionToComps[position]];\n  }\n  getValues(position) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      if (index < numberOfInputs) {\n        result.push(element.getDate());\n      }\n    });\n    return result;\n  }\n  translate(key) {\n    if (key === ScalarFilter.LESS_THAN) {\n      return super.translate(\"before\");\n    }\n    if (key === ScalarFilter.GREATER_THAN) {\n      return super.translate(\"after\");\n    }\n    return super.translate(key);\n  }\n  getModelAsString(model) {\n    var _a;\n    return (_a = this.filterModelFormatter.getModelAsString(model)) != null ? _a : \"\";\n  }\n};\n_DateFilter.DEFAULT_FILTER_OPTIONS = [\n  ScalarFilter.EQUALS,\n  ScalarFilter.NOT_EQUAL,\n  ScalarFilter.LESS_THAN,\n  ScalarFilter.GREATER_THAN,\n  ScalarFilter.IN_RANGE,\n  ScalarFilter.BLANK,\n  ScalarFilter.NOT_BLANK\n];\n__decorateClass([\n  Autowired(\"userComponentFactory\")\n], _DateFilter.prototype, \"userComponentFactory\", 2);\nvar DateFilter = _DateFilter;\n\n// community-modules/core/src/filter/floating/provided/simpleFloatingFilter.ts\nvar SimpleFloatingFilter = class extends Component {\n  getDefaultDebounceMs() {\n    return 0;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  isEventFromFloatingFilter(event) {\n    return event && event.afterFloatingFilter;\n  }\n  isEventFromDataChange(event) {\n    return event == null ? void 0 : event.afterDataChange;\n  }\n  getLastType() {\n    return this.lastType;\n  }\n  isReadOnly() {\n    return this.readOnly;\n  }\n  setLastTypeFromModel(model) {\n    if (!model) {\n      this.lastType = this.optionsFactory.getDefaultOption();\n      return;\n    }\n    const isCombined = model.operator;\n    let condition;\n    if (isCombined) {\n      const combinedModel = model;\n      condition = combinedModel.conditions[0];\n    } else {\n      condition = model;\n    }\n    this.lastType = condition.type;\n  }\n  canWeEditAfterModelFromParentFilter(model) {\n    if (!model) {\n      return this.isTypeEditable(this.lastType);\n    }\n    const isCombined = model.operator;\n    if (isCombined) {\n      return false;\n    }\n    const simpleModel = model;\n    return this.isTypeEditable(simpleModel.type);\n  }\n  init(params) {\n    this.setSimpleParams(params, false);\n  }\n  setSimpleParams(params, update = true) {\n    this.optionsFactory = new OptionsFactory();\n    this.optionsFactory.init(params.filterParams, this.getDefaultFilterOptions());\n    if (!update) {\n      this.lastType = this.optionsFactory.getDefaultOption();\n    }\n    this.readOnly = !!params.filterParams.readOnly;\n    const editable = this.isTypeEditable(this.optionsFactory.getDefaultOption());\n    this.setEditable(editable);\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    this.setSimpleParams(params);\n  }\n  doesFilterHaveSingleInput(filterType) {\n    const customFilterOption = this.optionsFactory.getCustomOption(filterType);\n    const { numberOfInputs } = customFilterOption || {};\n    return numberOfInputs == null || numberOfInputs == 1;\n  }\n  isTypeEditable(type) {\n    const uneditableTypes = [\n      SimpleFilter.IN_RANGE,\n      SimpleFilter.EMPTY,\n      SimpleFilter.BLANK,\n      SimpleFilter.NOT_BLANK\n    ];\n    return !!type && !this.isReadOnly() && this.doesFilterHaveSingleInput(type) && uneditableTypes.indexOf(type) < 0;\n  }\n  getAriaLabel(params) {\n    const displayName = this.columnModel.getDisplayNameForColumn(params.column, \"header\", true);\n    const translate = this.localeService.getLocaleTextFunc();\n    return `${displayName} ${translate(\"ariaFilterInput\", \"Filter Input\")}`;\n  }\n};\n__decorateClass([\n  Autowired(\"columnModel\")\n], SimpleFloatingFilter.prototype, \"columnModel\", 2);\n\n// community-modules/core/src/filter/provided/date/dateFloatingFilter.ts\nvar DateFloatingFilter = class extends SimpleFloatingFilter {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-floating-filter-input\" role=\"presentation\">\n                <ag-input-text-field ref=\"eReadOnlyText\"></ag-input-text-field>\n                <div ref=\"eDateWrapper\" style=\"display: flex;\"></div>\n            </div>`\n    );\n  }\n  getDefaultFilterOptions() {\n    return DateFilter.DEFAULT_FILTER_OPTIONS;\n  }\n  init(params) {\n    super.init(params);\n    this.params = params;\n    this.filterParams = params.filterParams;\n    this.createDateComponent();\n    this.filterModelFormatter = new DateFilterModelFormatter(this.filterParams, this.localeService, this.optionsFactory);\n    const translate = this.localeService.getLocaleTextFunc();\n    this.eReadOnlyText.setDisabled(true).setInputAriaLabel(translate(\"ariaDateFilterInput\", \"Date Filter Input\"));\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    super.refresh(params);\n    this.params = params;\n    this.filterParams = params.filterParams;\n    this.updateDateComponent();\n    this.filterModelFormatter.updateParams({ optionsFactory: this.optionsFactory, dateFilterParams: this.filterParams });\n    this.updateCompOnModelChange(params.currentParentModel());\n  }\n  updateCompOnModelChange(model) {\n    const allowEditing = !this.isReadOnly() && this.canWeEditAfterModelFromParentFilter(model);\n    this.setEditable(allowEditing);\n    if (allowEditing) {\n      if (model) {\n        const dateModel = model;\n        this.dateComp.setDate(parseDateTimeFromString(dateModel.dateFrom));\n      } else {\n        this.dateComp.setDate(null);\n      }\n      this.eReadOnlyText.setValue(\"\");\n    } else {\n      this.eReadOnlyText.setValue(this.filterModelFormatter.getModelAsString(model));\n      this.dateComp.setDate(null);\n    }\n  }\n  setEditable(editable) {\n    setDisplayed(this.eDateWrapper, editable);\n    setDisplayed(this.eReadOnlyText.getGui(), !editable);\n  }\n  onParentModelChanged(model, event) {\n    if (this.isEventFromFloatingFilter(event) || this.isEventFromDataChange(event)) {\n      return;\n    }\n    super.setLastTypeFromModel(model);\n    this.updateCompOnModelChange(model);\n  }\n  onDateChanged() {\n    const filterValueDate = this.dateComp.getDate();\n    const filterValueText = serialiseDate(filterValueDate);\n    this.params.parentFilterInstance((filterInstance) => {\n      if (filterInstance) {\n        const date = parseDateTimeFromString(filterValueText);\n        filterInstance.onFloatingFilterChanged(this.getLastType() || null, date);\n      }\n    });\n  }\n  getDateComponentParams() {\n    const debounceMs = ProvidedFilter.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs());\n    return {\n      onDateChanged: debounce(this.onDateChanged.bind(this), debounceMs),\n      filterParams: this.params.column.getColDef().filterParams\n    };\n  }\n  createDateComponent() {\n    this.dateComp = new DateCompWrapper(this.getContext(), this.userComponentFactory, this.getDateComponentParams(), this.eDateWrapper, (dateComp) => {\n      dateComp.setInputAriaLabel(this.getAriaLabel(this.params));\n    });\n    this.addDestroyFunc(() => this.dateComp.destroy());\n  }\n  updateDateComponent() {\n    const params = this.gos.addGridCommonParams(this.getDateComponentParams());\n    this.dateComp.updateParams(params);\n  }\n  getFilterModelFormatter() {\n    return this.filterModelFormatter;\n  }\n};\n__decorateClass([\n  Autowired(\"userComponentFactory\")\n], DateFloatingFilter.prototype, \"userComponentFactory\", 2);\n__decorateClass([\n  RefSelector(\"eReadOnlyText\")\n], DateFloatingFilter.prototype, \"eReadOnlyText\", 2);\n__decorateClass([\n  RefSelector(\"eDateWrapper\")\n], DateFloatingFilter.prototype, \"eDateWrapper\", 2);\n\n// community-modules/core/src/filter/provided/date/defaultDateComponent.ts\nvar DefaultDateComponent = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-filter-filter\">\n                <ag-input-text-field class=\"ag-date-filter\" ref=\"eDateInput\"></ag-input-text-field>\n            </div>`\n    );\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  init(params) {\n    this.params = params;\n    this.setParams(params);\n    const inputElement = this.eDateInput.getInputElement();\n    this.addManagedListener(inputElement, \"mousedown\", () => {\n      if (this.eDateInput.isDisabled() || this.usingSafariDatePicker) {\n        return;\n      }\n      inputElement.focus();\n    });\n    this.addManagedListener(inputElement, \"input\", (e) => {\n      if (e.target !== this.gos.getActiveDomElement()) {\n        return;\n      }\n      if (this.eDateInput.isDisabled()) {\n        return;\n      }\n      this.params.onDateChanged();\n    });\n  }\n  setParams(params) {\n    const inputElement = this.eDateInput.getInputElement();\n    const shouldUseBrowserDatePicker = this.shouldUseBrowserDatePicker(params);\n    this.usingSafariDatePicker = shouldUseBrowserDatePicker && isBrowserSafari();\n    inputElement.type = shouldUseBrowserDatePicker ? \"date\" : \"text\";\n    const {\n      minValidYear,\n      maxValidYear,\n      minValidDate,\n      maxValidDate\n    } = params.filterParams || {};\n    if (minValidDate && minValidYear) {\n      warnOnce(\"DateFilter should not have both minValidDate and minValidYear parameters set at the same time! minValidYear will be ignored.\");\n    }\n    if (maxValidDate && maxValidYear) {\n      warnOnce(\"DateFilter should not have both maxValidDate and maxValidYear parameters set at the same time! maxValidYear will be ignored.\");\n    }\n    if (minValidDate && maxValidDate) {\n      const [parsedMinValidDate, parsedMaxValidDate] = [minValidDate, maxValidDate].map((v) => v instanceof Date ? v : parseDateTimeFromString(v));\n      if (parsedMinValidDate && parsedMaxValidDate && parsedMinValidDate.getTime() > parsedMaxValidDate.getTime()) {\n        warnOnce(\"DateFilter parameter minValidDate should always be lower than or equal to parameter maxValidDate.\");\n      }\n    }\n    if (minValidDate) {\n      if (minValidDate instanceof Date) {\n        inputElement.min = dateToFormattedString(minValidDate);\n      } else {\n        inputElement.min = minValidDate;\n      }\n    } else {\n      if (minValidYear) {\n        inputElement.min = `${minValidYear}-01-01`;\n      }\n    }\n    if (maxValidDate) {\n      if (maxValidDate instanceof Date) {\n        inputElement.max = dateToFormattedString(maxValidDate);\n      } else {\n        inputElement.max = maxValidDate;\n      }\n    } else {\n      if (maxValidYear) {\n        inputElement.max = `${maxValidYear}-12-31`;\n      }\n    }\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    this.params = params;\n    this.setParams(params);\n  }\n  getDate() {\n    return parseDateTimeFromString(this.eDateInput.getValue());\n  }\n  setDate(date) {\n    this.eDateInput.setValue(serialiseDate(date, false));\n  }\n  setInputPlaceholder(placeholder) {\n    this.eDateInput.setInputPlaceholder(placeholder);\n  }\n  setInputAriaLabel(ariaLabel) {\n    this.eDateInput.setAriaLabel(ariaLabel);\n  }\n  setDisabled(disabled) {\n    this.eDateInput.setDisabled(disabled);\n  }\n  afterGuiAttached(params) {\n    if (!params || !params.suppressFocus) {\n      this.eDateInput.getInputElement().focus();\n    }\n  }\n  shouldUseBrowserDatePicker(params) {\n    if (params.filterParams && params.filterParams.browserDatePicker != null) {\n      return params.filterParams.browserDatePicker;\n    }\n    return isBrowserChrome() || isBrowserFirefox() || isBrowserSafari() && getSafariVersion() >= 14.1;\n  }\n};\n__decorateClass([\n  RefSelector(\"eDateInput\")\n], DefaultDateComponent.prototype, \"eDateInput\", 2);\n\n// community-modules/core/src/widgets/agInputTextField.ts\nvar AgInputTextField = class extends AgAbstractInputField {\n  constructor(config, className = \"ag-text-field\", inputType = \"text\") {\n    super(config, className, inputType);\n  }\n  postConstruct() {\n    super.postConstruct();\n    if (this.config.allowedCharPattern) {\n      this.preventDisallowedCharacters();\n    }\n  }\n  setValue(value, silent) {\n    if (this.eInput.value !== value) {\n      this.eInput.value = exists(value) ? value : \"\";\n    }\n    return super.setValue(value, silent);\n  }\n  /** Used to set an initial value into the input without necessarily setting `this.value` or triggering events (e.g. to set an invalid value) */\n  setStartValue(value) {\n    this.setValue(value, true);\n  }\n  preventDisallowedCharacters() {\n    const pattern = new RegExp(`[${this.config.allowedCharPattern}]`);\n    const preventCharacters = (event) => {\n      if (!isEventFromPrintableCharacter(event)) {\n        return;\n      }\n      if (event.key && !pattern.test(event.key)) {\n        event.preventDefault();\n      }\n    };\n    this.addManagedListener(this.eInput, \"keydown\", preventCharacters);\n    this.addManagedListener(this.eInput, \"paste\", (e) => {\n      var _a;\n      const text = (_a = e.clipboardData) == null ? void 0 : _a.getData(\"text\");\n      if (text && text.split(\"\").some((c) => !pattern.test(c))) {\n        e.preventDefault();\n      }\n    });\n  }\n};\n\n// community-modules/core/src/widgets/agInputNumberField.ts\nvar AgInputNumberField = class extends AgInputTextField {\n  constructor(config) {\n    super(config, \"ag-number-field\", \"number\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.addManagedListener(this.eInput, \"blur\", () => {\n      const floatedValue = parseFloat(this.eInput.value);\n      const value = isNaN(floatedValue) ? \"\" : this.normalizeValue(floatedValue.toString());\n      if (this.value !== value) {\n        this.setValue(value);\n      }\n    });\n    this.addManagedListener(this.eInput, \"wheel\", this.onWheel.bind(this));\n    this.eInput.step = \"any\";\n    const { precision, min, max, step } = this.config;\n    if (typeof precision === \"number\")\n      this.setPrecision(precision);\n    if (typeof min === \"number\")\n      this.setMin(min);\n    if (typeof max === \"number\")\n      this.setMax(max);\n    if (typeof step === \"number\")\n      this.setStep(step);\n  }\n  onWheel(e) {\n    if (this.gos.getActiveDomElement() === this.eInput) {\n      e.preventDefault();\n    }\n  }\n  normalizeValue(value) {\n    if (value === \"\") {\n      return \"\";\n    }\n    if (this.precision != null) {\n      value = this.adjustPrecision(value);\n    }\n    const val = parseFloat(value);\n    if (this.min != null && val < this.min) {\n      value = this.min.toString();\n    } else if (this.max != null && val > this.max) {\n      value = this.max.toString();\n    }\n    return value;\n  }\n  adjustPrecision(value, isScientificNotation) {\n    if (this.precision == null) {\n      return value;\n    }\n    if (isScientificNotation) {\n      const floatString = parseFloat(value).toFixed(this.precision);\n      return parseFloat(floatString).toString();\n    }\n    const parts = String(value).split(\".\");\n    if (parts.length > 1) {\n      if (parts[1].length <= this.precision) {\n        return value;\n      } else if (this.precision > 0) {\n        return `${parts[0]}.${parts[1].slice(0, this.precision)}`;\n      }\n    }\n    return parts[0];\n  }\n  setMin(min) {\n    if (this.min === min) {\n      return this;\n    }\n    this.min = min;\n    addOrRemoveAttribute(this.eInput, \"min\", min);\n    return this;\n  }\n  setMax(max) {\n    if (this.max === max) {\n      return this;\n    }\n    this.max = max;\n    addOrRemoveAttribute(this.eInput, \"max\", max);\n    return this;\n  }\n  setPrecision(precision) {\n    this.precision = precision;\n    return this;\n  }\n  setStep(step) {\n    if (this.step === step) {\n      return this;\n    }\n    this.step = step;\n    addOrRemoveAttribute(this.eInput, \"step\", step);\n    return this;\n  }\n  setValue(value, silent) {\n    return this.setValueOrInputValue((v) => super.setValue(v, silent), () => this, value);\n  }\n  setStartValue(value) {\n    return this.setValueOrInputValue(\n      (v) => super.setValue(v, true),\n      (v) => {\n        this.eInput.value = v;\n      },\n      value\n    );\n  }\n  setValueOrInputValue(setValueFunc, setInputValueOnlyFunc, value) {\n    if (exists(value)) {\n      let setInputValueOnly = this.isScientificNotation(value);\n      if (setInputValueOnly && this.eInput.validity.valid) {\n        return setValueFunc(value);\n      }\n      if (!setInputValueOnly) {\n        value = this.adjustPrecision(value);\n        const normalizedValue = this.normalizeValue(value);\n        setInputValueOnly = value != normalizedValue;\n      }\n      if (setInputValueOnly) {\n        return setInputValueOnlyFunc(value);\n      }\n    }\n    return setValueFunc(value);\n  }\n  getValue() {\n    if (!this.eInput.validity.valid) {\n      return void 0;\n    }\n    const inputValue = this.eInput.value;\n    if (this.isScientificNotation(inputValue)) {\n      return this.adjustPrecision(inputValue, true);\n    }\n    return super.getValue();\n  }\n  isScientificNotation(value) {\n    return typeof value === \"string\" && value.includes(\"e\");\n  }\n};\n\n// community-modules/core/src/filter/provided/number/numberFilter.ts\nvar NumberFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  conditionToString(condition, options) {\n    const { numberOfInputs } = options || {};\n    const isRange = condition.type == SimpleFilter.IN_RANGE || numberOfInputs === 2;\n    if (isRange) {\n      return `${this.formatValue(condition.filter)}-${this.formatValue(condition.filterTo)}`;\n    }\n    if (condition.filter != null) {\n      return this.formatValue(condition.filter);\n    }\n    return `${condition.type}`;\n  }\n};\nfunction getAllowedCharPattern(filterParams) {\n  const { allowedCharPattern } = filterParams != null ? filterParams : {};\n  return allowedCharPattern != null ? allowedCharPattern : null;\n}\nvar _NumberFilter = class _NumberFilter extends ScalarFilter {\n  constructor() {\n    super(\"numberFilter\");\n    this.eValuesFrom = [];\n    this.eValuesTo = [];\n  }\n  refresh(params) {\n    if (this.numberFilterParams.allowedCharPattern !== params.allowedCharPattern) {\n      return false;\n    }\n    return super.refresh(params);\n  }\n  mapValuesFromModel(filterModel) {\n    const { filter, filterTo, type } = filterModel || {};\n    return [\n      this.processValue(filter),\n      this.processValue(filterTo)\n    ].slice(0, this.getNumberOfInputs(type));\n  }\n  getDefaultDebounceMs() {\n    return 500;\n  }\n  comparator() {\n    return (left, right) => {\n      if (left === right) {\n        return 0;\n      }\n      return left < right ? 1 : -1;\n    };\n  }\n  setParams(params) {\n    this.numberFilterParams = params;\n    super.setParams(params);\n    this.filterModelFormatter = new NumberFilterModelFormatter(this.localeService, this.optionsFactory, this.numberFilterParams.numberFormatter);\n  }\n  getDefaultFilterOptions() {\n    return _NumberFilter.DEFAULT_FILTER_OPTIONS;\n  }\n  setElementValue(element, value, fromFloatingFilter) {\n    const valueToSet = !fromFloatingFilter && this.numberFilterParams.numberFormatter ? this.numberFilterParams.numberFormatter(value != null ? value : null) : value;\n    super.setElementValue(element, valueToSet);\n  }\n  createValueElement() {\n    const allowedCharPattern = getAllowedCharPattern(this.numberFilterParams);\n    const eCondition = document.createElement(\"div\");\n    eCondition.classList.add(\"ag-filter-body\");\n    setAriaRole(eCondition, \"presentation\");\n    this.createFromToElement(eCondition, this.eValuesFrom, \"from\", allowedCharPattern);\n    this.createFromToElement(eCondition, this.eValuesTo, \"to\", allowedCharPattern);\n    return eCondition;\n  }\n  createFromToElement(eCondition, eValues, fromTo, allowedCharPattern) {\n    const eValue = this.createManagedBean(allowedCharPattern ? new AgInputTextField({ allowedCharPattern }) : new AgInputNumberField());\n    eValue.addCssClass(`ag-filter-${fromTo}`);\n    eValue.addCssClass(\"ag-filter-filter\");\n    eValues.push(eValue);\n    eCondition.appendChild(eValue.getGui());\n  }\n  removeValueElements(startPosition, deleteCount) {\n    this.removeComponents(this.eValuesFrom, startPosition, deleteCount);\n    this.removeComponents(this.eValuesTo, startPosition, deleteCount);\n  }\n  getValues(position) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      if (index < numberOfInputs) {\n        result.push(this.processValue(this.stringToFloat(element.getValue())));\n      }\n    });\n    return result;\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.filter === bSimple.filter && aSimple.filterTo === bSimple.filterTo && aSimple.type === bSimple.type;\n  }\n  getFilterType() {\n    return \"number\";\n  }\n  processValue(value) {\n    if (value == null) {\n      return null;\n    }\n    return isNaN(value) ? null : value;\n  }\n  stringToFloat(value) {\n    if (typeof value === \"number\") {\n      return value;\n    }\n    let filterText = makeNull(value);\n    if (filterText != null && filterText.trim() === \"\") {\n      filterText = null;\n    }\n    if (this.numberFilterParams.numberParser) {\n      return this.numberFilterParams.numberParser(filterText);\n    }\n    return filterText == null || filterText.trim() === \"-\" ? null : parseFloat(filterText);\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {\n      filterType: this.getFilterType(),\n      type\n    };\n    const values2 = this.getValues(position);\n    if (values2.length > 0) {\n      model.filter = values2[0];\n    }\n    if (values2.length > 1) {\n      model.filterTo = values2[1];\n    }\n    return model;\n  }\n  getInputs(position) {\n    if (position >= this.eValuesFrom.length) {\n      return [null, null];\n    }\n    return [this.eValuesFrom[position], this.eValuesTo[position]];\n  }\n  getModelAsString(model) {\n    var _a;\n    return (_a = this.filterModelFormatter.getModelAsString(model)) != null ? _a : \"\";\n  }\n  hasInvalidInputs() {\n    let invalidInputs = false;\n    this.forEachInput((element) => {\n      if (!element.getInputElement().validity.valid) {\n        invalidInputs = true;\n        return;\n      }\n    });\n    return invalidInputs;\n  }\n};\n_NumberFilter.DEFAULT_FILTER_OPTIONS = [\n  ScalarFilter.EQUALS,\n  ScalarFilter.NOT_EQUAL,\n  ScalarFilter.GREATER_THAN,\n  ScalarFilter.GREATER_THAN_OR_EQUAL,\n  ScalarFilter.LESS_THAN,\n  ScalarFilter.LESS_THAN_OR_EQUAL,\n  ScalarFilter.IN_RANGE,\n  ScalarFilter.BLANK,\n  ScalarFilter.NOT_BLANK\n];\nvar NumberFilter = _NumberFilter;\n\n// community-modules/core/src/filter/provided/text/textFilter.ts\nvar TextFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  conditionToString(condition, options) {\n    const { numberOfInputs } = options || {};\n    const isRange = condition.type == SimpleFilter.IN_RANGE || numberOfInputs === 2;\n    if (isRange) {\n      return `${condition.filter}-${condition.filterTo}`;\n    }\n    if (condition.filter != null) {\n      return `${condition.filter}`;\n    }\n    return `${condition.type}`;\n  }\n};\nvar _TextFilter = class _TextFilter extends SimpleFilter {\n  constructor() {\n    super(\"textFilter\");\n    this.eValuesFrom = [];\n    this.eValuesTo = [];\n  }\n  static trimInput(value) {\n    const trimmedInput = value && value.trim();\n    return trimmedInput === \"\" ? value : trimmedInput;\n  }\n  getDefaultDebounceMs() {\n    return 500;\n  }\n  setParams(params) {\n    this.textFilterParams = params;\n    super.setParams(params);\n    this.matcher = this.getTextMatcher();\n    this.formatter = this.textFilterParams.textFormatter || (this.textFilterParams.caseSensitive ? _TextFilter.DEFAULT_FORMATTER : _TextFilter.DEFAULT_LOWERCASE_FORMATTER);\n    this.filterModelFormatter = new TextFilterModelFormatter(this.localeService, this.optionsFactory);\n  }\n  getTextMatcher() {\n    const legacyComparator = this.textFilterParams.textCustomComparator;\n    if (legacyComparator) {\n      _.warnOnce(\"textCustomComparator is deprecated, use textMatcher instead.\");\n      return ({ filterOption, value, filterText }) => legacyComparator(filterOption, value, filterText);\n    }\n    return this.textFilterParams.textMatcher || _TextFilter.DEFAULT_MATCHER;\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {\n      filterType: this.getFilterType(),\n      type\n    };\n    const values2 = this.getValuesWithSideEffects(position, true);\n    if (values2.length > 0) {\n      model.filter = values2[0];\n    }\n    if (values2.length > 1) {\n      model.filterTo = values2[1];\n    }\n    return model;\n  }\n  getFilterType() {\n    return \"text\";\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.filter === bSimple.filter && aSimple.filterTo === bSimple.filterTo && aSimple.type === bSimple.type;\n  }\n  getInputs(position) {\n    if (position >= this.eValuesFrom.length) {\n      return [null, null];\n    }\n    return [this.eValuesFrom[position], this.eValuesTo[position]];\n  }\n  getValues(position) {\n    return this.getValuesWithSideEffects(position, false);\n  }\n  getValuesWithSideEffects(position, applySideEffects) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      var _a;\n      if (index < numberOfInputs) {\n        let value = makeNull(element.getValue());\n        if (applySideEffects && this.textFilterParams.trimInput) {\n          value = (_a = _TextFilter.trimInput(value)) != null ? _a : null;\n          element.setValue(value, true);\n        }\n        result.push(value);\n      }\n    });\n    return result;\n  }\n  getDefaultFilterOptions() {\n    return _TextFilter.DEFAULT_FILTER_OPTIONS;\n  }\n  createValueElement() {\n    const eCondition = document.createElement(\"div\");\n    eCondition.classList.add(\"ag-filter-body\");\n    setAriaRole(eCondition, \"presentation\");\n    this.createFromToElement(eCondition, this.eValuesFrom, \"from\");\n    this.createFromToElement(eCondition, this.eValuesTo, \"to\");\n    return eCondition;\n  }\n  createFromToElement(eCondition, eValues, fromTo) {\n    const eValue = this.createManagedBean(new AgInputTextField());\n    eValue.addCssClass(`ag-filter-${fromTo}`);\n    eValue.addCssClass(\"ag-filter-filter\");\n    eValues.push(eValue);\n    eCondition.appendChild(eValue.getGui());\n  }\n  removeValueElements(startPosition, deleteCount) {\n    this.removeComponents(this.eValuesFrom, startPosition, deleteCount);\n    this.removeComponents(this.eValuesTo, startPosition, deleteCount);\n  }\n  mapValuesFromModel(filterModel) {\n    const { filter, filterTo, type } = filterModel || {};\n    return [\n      filter || null,\n      filterTo || null\n    ].slice(0, this.getNumberOfInputs(type));\n  }\n  evaluateNullValue(filterType) {\n    const filterTypesAllowNulls = [\n      SimpleFilter.NOT_EQUAL,\n      SimpleFilter.NOT_CONTAINS,\n      SimpleFilter.BLANK\n    ];\n    return filterType ? filterTypesAllowNulls.indexOf(filterType) >= 0 : false;\n  }\n  evaluateNonNullValue(values2, cellValue, filterModel, params) {\n    const formattedValues = values2.map((v) => this.formatter(v)) || [];\n    const cellValueFormatted = this.formatter(cellValue);\n    const { api, colDef, column, columnApi, context, textFormatter } = this.textFilterParams;\n    if (filterModel.type === SimpleFilter.BLANK) {\n      return this.isBlank(cellValue);\n    } else if (filterModel.type === SimpleFilter.NOT_BLANK) {\n      return !this.isBlank(cellValue);\n    }\n    const matcherParams = {\n      api,\n      colDef,\n      column,\n      columnApi,\n      context,\n      node: params.node,\n      data: params.data,\n      filterOption: filterModel.type,\n      value: cellValueFormatted,\n      textFormatter\n    };\n    return formattedValues.some((v) => this.matcher(__spreadProps(__spreadValues({}, matcherParams), { filterText: v })));\n  }\n  getModelAsString(model) {\n    var _a;\n    return (_a = this.filterModelFormatter.getModelAsString(model)) != null ? _a : \"\";\n  }\n};\n_TextFilter.DEFAULT_FILTER_OPTIONS = [\n  SimpleFilter.CONTAINS,\n  SimpleFilter.NOT_CONTAINS,\n  SimpleFilter.EQUALS,\n  SimpleFilter.NOT_EQUAL,\n  SimpleFilter.STARTS_WITH,\n  SimpleFilter.ENDS_WITH,\n  SimpleFilter.BLANK,\n  SimpleFilter.NOT_BLANK\n];\n_TextFilter.DEFAULT_FORMATTER = (from) => from;\n_TextFilter.DEFAULT_LOWERCASE_FORMATTER = (from) => from == null ? null : from.toString().toLowerCase();\n_TextFilter.DEFAULT_MATCHER = ({ filterOption, value, filterText }) => {\n  if (filterText == null) {\n    return false;\n  }\n  switch (filterOption) {\n    case _TextFilter.CONTAINS:\n      return value.indexOf(filterText) >= 0;\n    case _TextFilter.NOT_CONTAINS:\n      return value.indexOf(filterText) < 0;\n    case _TextFilter.EQUALS:\n      return value === filterText;\n    case _TextFilter.NOT_EQUAL:\n      return value != filterText;\n    case _TextFilter.STARTS_WITH:\n      return value.indexOf(filterText) === 0;\n    case _TextFilter.ENDS_WITH:\n      const index = value.lastIndexOf(filterText);\n      return index >= 0 && index === value.length - filterText.length;\n    default:\n      return false;\n  }\n};\nvar TextFilter = _TextFilter;\n\n// community-modules/core/src/filter/floating/provided/textInputFloatingFilter.ts\nvar FloatingFilterTextInputService = class extends BeanStub {\n  constructor(params) {\n    super();\n    this.params = params;\n    this.valueChangedListener = () => {\n    };\n  }\n  setupGui(parentElement) {\n    var _a;\n    this.eFloatingFilterTextInput = this.createManagedBean(new AgInputTextField((_a = this.params) == null ? void 0 : _a.config));\n    const eInput = this.eFloatingFilterTextInput.getGui();\n    parentElement.appendChild(eInput);\n    this.addManagedListener(eInput, \"input\", (e) => this.valueChangedListener(e));\n    this.addManagedListener(eInput, \"keydown\", (e) => this.valueChangedListener(e));\n  }\n  setEditable(editable) {\n    this.eFloatingFilterTextInput.setDisabled(!editable);\n  }\n  setAutoComplete(autoComplete) {\n    this.eFloatingFilterTextInput.setAutoComplete(autoComplete);\n  }\n  getValue() {\n    return this.eFloatingFilterTextInput.getValue();\n  }\n  setValue(value, silent) {\n    this.eFloatingFilterTextInput.setValue(value, silent);\n  }\n  setValueChangedListener(listener) {\n    this.valueChangedListener = listener;\n  }\n  setParams(params) {\n    this.setAriaLabel(params.ariaLabel);\n    if (params.autoComplete !== void 0) {\n      this.setAutoComplete(params.autoComplete);\n    }\n  }\n  setAriaLabel(ariaLabel) {\n    this.eFloatingFilterTextInput.setInputAriaLabel(ariaLabel);\n  }\n};\nvar TextInputFloatingFilter = class extends SimpleFloatingFilter {\n  postConstruct() {\n    this.setTemplate(\n      /* html */\n      `\n            <div class=\"ag-floating-filter-input\" role=\"presentation\" ref=\"eFloatingFilterInputContainer\"></div>\n        `\n    );\n  }\n  getDefaultDebounceMs() {\n    return 500;\n  }\n  onParentModelChanged(model, event) {\n    if (this.isEventFromFloatingFilter(event) || this.isEventFromDataChange(event)) {\n      return;\n    }\n    this.setLastTypeFromModel(model);\n    this.setEditable(this.canWeEditAfterModelFromParentFilter(model));\n    this.floatingFilterInputService.setValue(this.getFilterModelFormatter().getModelAsString(model));\n  }\n  init(params) {\n    this.setupFloatingFilterInputService(params);\n    super.init(params);\n    this.setTextInputParams(params);\n  }\n  setupFloatingFilterInputService(params) {\n    this.floatingFilterInputService = this.createFloatingFilterInputService(params);\n    this.floatingFilterInputService.setupGui(this.eFloatingFilterInputContainer);\n  }\n  setTextInputParams(params) {\n    var _a;\n    this.params = params;\n    const autoComplete = (_a = params.browserAutoComplete) != null ? _a : false;\n    this.floatingFilterInputService.setParams({\n      ariaLabel: this.getAriaLabel(params),\n      autoComplete\n    });\n    this.applyActive = ProvidedFilter.isUseApplyButton(this.params.filterParams);\n    if (!this.isReadOnly()) {\n      const debounceMs = ProvidedFilter.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs());\n      const toDebounce = debounce(this.syncUpWithParentFilter.bind(this), debounceMs);\n      this.floatingFilterInputService.setValueChangedListener(toDebounce);\n    }\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    super.refresh(params);\n    this.setTextInputParams(params);\n  }\n  recreateFloatingFilterInputService(params) {\n    const value = this.floatingFilterInputService.getValue();\n    clearElement(this.eFloatingFilterInputContainer);\n    this.destroyBean(this.floatingFilterInputService);\n    this.setupFloatingFilterInputService(params);\n    this.floatingFilterInputService.setValue(value, true);\n  }\n  syncUpWithParentFilter(e) {\n    const isEnterKey = e.key === KeyCode.ENTER;\n    if (this.applyActive && !isEnterKey) {\n      return;\n    }\n    let value = this.floatingFilterInputService.getValue();\n    if (this.params.filterParams.trimInput) {\n      value = TextFilter.trimInput(value);\n      this.floatingFilterInputService.setValue(value, true);\n    }\n    this.params.parentFilterInstance((filterInstance) => {\n      if (filterInstance) {\n        filterInstance.onFloatingFilterChanged(this.getLastType() || null, value || null);\n      }\n    });\n  }\n  setEditable(editable) {\n    this.floatingFilterInputService.setEditable(editable);\n  }\n};\n__decorateClass([\n  RefSelector(\"eFloatingFilterInputContainer\")\n], TextInputFloatingFilter.prototype, \"eFloatingFilterInputContainer\", 2);\n__decorateClass([\n  PostConstruct\n], TextInputFloatingFilter.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/filter/provided/number/numberFloatingFilter.ts\nvar FloatingFilterNumberInputService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.valueChangedListener = () => {\n    };\n    this.numberInputActive = true;\n  }\n  setupGui(parentElement) {\n    this.eFloatingFilterNumberInput = this.createManagedBean(new AgInputNumberField());\n    this.eFloatingFilterTextInput = this.createManagedBean(new AgInputTextField());\n    this.eFloatingFilterTextInput.setDisabled(true);\n    const eNumberInput = this.eFloatingFilterNumberInput.getGui();\n    const eTextInput = this.eFloatingFilterTextInput.getGui();\n    parentElement.appendChild(eNumberInput);\n    parentElement.appendChild(eTextInput);\n    this.setupListeners(eNumberInput, (e) => this.valueChangedListener(e));\n    this.setupListeners(eTextInput, (e) => this.valueChangedListener(e));\n  }\n  setEditable(editable) {\n    this.numberInputActive = editable;\n    this.eFloatingFilterNumberInput.setDisplayed(this.numberInputActive);\n    this.eFloatingFilterTextInput.setDisplayed(!this.numberInputActive);\n  }\n  setAutoComplete(autoComplete) {\n    this.eFloatingFilterNumberInput.setAutoComplete(autoComplete);\n    this.eFloatingFilterTextInput.setAutoComplete(autoComplete);\n  }\n  getValue() {\n    return this.getActiveInputElement().getValue();\n  }\n  setValue(value, silent) {\n    this.getActiveInputElement().setValue(value, silent);\n  }\n  getActiveInputElement() {\n    return this.numberInputActive ? this.eFloatingFilterNumberInput : this.eFloatingFilterTextInput;\n  }\n  setValueChangedListener(listener) {\n    this.valueChangedListener = listener;\n  }\n  setupListeners(element, listener) {\n    this.addManagedListener(element, \"input\", listener);\n    this.addManagedListener(element, \"keydown\", listener);\n  }\n  setParams(params) {\n    this.setAriaLabel(params.ariaLabel);\n    if (params.autoComplete !== void 0) {\n      this.setAutoComplete(params.autoComplete);\n    }\n  }\n  setAriaLabel(ariaLabel) {\n    this.eFloatingFilterNumberInput.setInputAriaLabel(ariaLabel);\n    this.eFloatingFilterTextInput.setInputAriaLabel(ariaLabel);\n  }\n};\nvar NumberFloatingFilter = class extends TextInputFloatingFilter {\n  init(params) {\n    var _a;\n    super.init(params);\n    this.filterModelFormatter = new NumberFilterModelFormatter(\n      this.localeService,\n      this.optionsFactory,\n      (_a = params.filterParams) == null ? void 0 : _a.numberFormatter\n    );\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    const allowedCharPattern = getAllowedCharPattern(params.filterParams);\n    if (allowedCharPattern !== this.allowedCharPattern) {\n      this.recreateFloatingFilterInputService(params);\n    }\n    super.refresh(params);\n    this.filterModelFormatter.updateParams({ optionsFactory: this.optionsFactory });\n  }\n  getDefaultFilterOptions() {\n    return NumberFilter.DEFAULT_FILTER_OPTIONS;\n  }\n  getFilterModelFormatter() {\n    return this.filterModelFormatter;\n  }\n  createFloatingFilterInputService(params) {\n    this.allowedCharPattern = getAllowedCharPattern(params.filterParams);\n    if (this.allowedCharPattern) {\n      return this.createManagedBean(new FloatingFilterTextInputService({\n        config: { allowedCharPattern: this.allowedCharPattern }\n      }));\n    }\n    return this.createManagedBean(new FloatingFilterNumberInputService());\n  }\n};\n\n// community-modules/core/src/filter/provided/text/textFloatingFilter.ts\nvar TextFloatingFilter = class extends TextInputFloatingFilter {\n  init(params) {\n    super.init(params);\n    this.filterModelFormatter = new TextFilterModelFormatter(this.localeService, this.optionsFactory);\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    super.refresh(params);\n    this.filterModelFormatter.updateParams({ optionsFactory: this.optionsFactory });\n  }\n  getDefaultFilterOptions() {\n    return TextFilter.DEFAULT_FILTER_OPTIONS;\n  }\n  getFilterModelFormatter() {\n    return this.filterModelFormatter;\n  }\n  createFloatingFilterInputService() {\n    return this.createManagedBean(new FloatingFilterTextInputService());\n  }\n};\n\n// community-modules/core/src/widgets/touchListener.ts\nvar _TouchListener = class _TouchListener {\n  constructor(eElement, preventMouseClick = false) {\n    this.destroyFuncs = [];\n    this.touching = false;\n    this.eventService = new EventService();\n    this.eElement = eElement;\n    this.preventMouseClick = preventMouseClick;\n    const startListener = this.onTouchStart.bind(this);\n    const moveListener = this.onTouchMove.bind(this);\n    const endListener = this.onTouchEnd.bind(this);\n    this.eElement.addEventListener(\"touchstart\", startListener, { passive: true });\n    this.eElement.addEventListener(\"touchmove\", moveListener, { passive: true });\n    this.eElement.addEventListener(\"touchend\", endListener, { passive: false });\n    this.destroyFuncs.push(() => {\n      this.eElement.removeEventListener(\"touchstart\", startListener, { passive: true });\n      this.eElement.removeEventListener(\"touchmove\", moveListener, { passive: true });\n      this.eElement.removeEventListener(\"touchend\", endListener, { passive: false });\n    });\n  }\n  getActiveTouch(touchList) {\n    for (let i = 0; i < touchList.length; i++) {\n      const matches = touchList[i].identifier === this.touchStart.identifier;\n      if (matches) {\n        return touchList[i];\n      }\n    }\n    return null;\n  }\n  addEventListener(eventType, listener) {\n    this.eventService.addEventListener(eventType, listener);\n  }\n  removeEventListener(eventType, listener) {\n    this.eventService.removeEventListener(eventType, listener);\n  }\n  onTouchStart(touchEvent) {\n    if (this.touching) {\n      return;\n    }\n    this.touchStart = touchEvent.touches[0];\n    this.touching = true;\n    this.moved = false;\n    const touchStartCopy = this.touchStart;\n    window.setTimeout(() => {\n      const touchesMatch = this.touchStart === touchStartCopy;\n      if (this.touching && touchesMatch && !this.moved) {\n        this.moved = true;\n        const event = {\n          type: _TouchListener.EVENT_LONG_TAP,\n          touchStart: this.touchStart,\n          touchEvent\n        };\n        this.eventService.dispatchEvent(event);\n      }\n    }, 500);\n  }\n  onTouchMove(touchEvent) {\n    if (!this.touching) {\n      return;\n    }\n    const touch = this.getActiveTouch(touchEvent.touches);\n    if (!touch) {\n      return;\n    }\n    const eventIsFarAway = !areEventsNear(touch, this.touchStart, 4);\n    if (eventIsFarAway) {\n      this.moved = true;\n    }\n  }\n  onTouchEnd(touchEvent) {\n    if (!this.touching) {\n      return;\n    }\n    if (!this.moved) {\n      const event = {\n        type: _TouchListener.EVENT_TAP,\n        touchStart: this.touchStart\n      };\n      this.eventService.dispatchEvent(event);\n      this.checkForDoubleTap();\n    }\n    if (this.preventMouseClick && touchEvent.cancelable) {\n      touchEvent.preventDefault();\n    }\n    this.touching = false;\n  }\n  checkForDoubleTap() {\n    const now = (/* @__PURE__ */ new Date()).getTime();\n    if (this.lastTapTime && this.lastTapTime > 0) {\n      const interval = now - this.lastTapTime;\n      if (interval > _TouchListener.DOUBLE_TAP_MILLIS) {\n        const event = {\n          type: _TouchListener.EVENT_DOUBLE_TAP,\n          touchStart: this.touchStart\n        };\n        this.eventService.dispatchEvent(event);\n        this.lastTapTime = null;\n      } else {\n        this.lastTapTime = now;\n      }\n    } else {\n      this.lastTapTime = now;\n    }\n  }\n  destroy() {\n    this.destroyFuncs.forEach((func) => func());\n  }\n};\n_TouchListener.EVENT_TAP = \"tap\";\n_TouchListener.EVENT_DOUBLE_TAP = \"doubleTap\";\n_TouchListener.EVENT_LONG_TAP = \"longTap\";\n_TouchListener.DOUBLE_TAP_MILLIS = 500;\nvar TouchListener = _TouchListener;\n\n// community-modules/core/src/headerRendering/cells/column/sortIndicatorComp.ts\nvar _SortIndicatorComp = class _SortIndicatorComp extends Component {\n  constructor(skipTemplate) {\n    super();\n    if (!skipTemplate) {\n      this.setTemplate(_SortIndicatorComp.TEMPLATE);\n    }\n  }\n  attachCustomElements(eSortOrder, eSortAsc, eSortDesc, eSortMixed, eSortNone) {\n    this.eSortOrder = eSortOrder;\n    this.eSortAsc = eSortAsc;\n    this.eSortDesc = eSortDesc;\n    this.eSortMixed = eSortMixed;\n    this.eSortNone = eSortNone;\n  }\n  setupSort(column, suppressOrder = false) {\n    this.column = column;\n    this.suppressOrder = suppressOrder;\n    this.setupMultiSortIndicator();\n    if (!this.column.isSortable() && !this.column.getColDef().showRowGroup) {\n      return;\n    }\n    this.addInIcon(\"sortAscending\", this.eSortAsc, column);\n    this.addInIcon(\"sortDescending\", this.eSortDesc, column);\n    this.addInIcon(\"sortUnSort\", this.eSortNone, column);\n    this.addManagedPropertyListener(\"unSortIcon\", () => this.updateIcons());\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, () => this.updateIcons());\n    this.addManagedListener(this.eventService, Events.EVENT_SORT_CHANGED, () => this.onSortChanged());\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, () => this.onSortChanged());\n    this.onSortChanged();\n  }\n  addInIcon(iconName, eParent, column) {\n    if (eParent == null) {\n      return;\n    }\n    const eIcon = createIconNoSpan(iconName, this.gos, column);\n    if (eIcon) {\n      eParent.appendChild(eIcon);\n    }\n  }\n  onSortChanged() {\n    this.updateIcons();\n    if (!this.suppressOrder) {\n      this.updateSortOrder();\n    }\n  }\n  updateIcons() {\n    const sortDirection = this.sortController.getDisplaySortForColumn(this.column);\n    if (this.eSortAsc) {\n      const isAscending = sortDirection === \"asc\";\n      setDisplayed(this.eSortAsc, isAscending, { skipAriaHidden: true });\n    }\n    if (this.eSortDesc) {\n      const isDescending = sortDirection === \"desc\";\n      setDisplayed(this.eSortDesc, isDescending, { skipAriaHidden: true });\n    }\n    if (this.eSortNone) {\n      const alwaysHideNoSort = !this.column.getColDef().unSortIcon && !this.gos.get(\"unSortIcon\");\n      const isNone = sortDirection === null || sortDirection === void 0;\n      setDisplayed(this.eSortNone, !alwaysHideNoSort && isNone, { skipAriaHidden: true });\n    }\n  }\n  setupMultiSortIndicator() {\n    this.addInIcon(\"sortUnSort\", this.eSortMixed, this.column);\n    const isColumnShowingRowGroup = this.column.getColDef().showRowGroup;\n    const areGroupsCoupled = this.gos.isColumnsSortingCoupledToGroup();\n    if (areGroupsCoupled && isColumnShowingRowGroup) {\n      this.addManagedListener(this.eventService, Events.EVENT_SORT_CHANGED, () => this.updateMultiSortIndicator());\n      this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, () => this.updateMultiSortIndicator());\n      this.updateMultiSortIndicator();\n    }\n  }\n  updateMultiSortIndicator() {\n    if (this.eSortMixed) {\n      const isMixedSort = this.sortController.getDisplaySortForColumn(this.column) === \"mixed\";\n      setDisplayed(this.eSortMixed, isMixedSort, { skipAriaHidden: true });\n    }\n  }\n  // we listen here for global sort events, NOT column sort events, as we want to do this\n  // when sorting has been set on all column (if we listened just for our col (where we\n  // set the asc / desc icons) then it's possible other cols are yet to get their sorting state.\n  updateSortOrder() {\n    var _a;\n    if (!this.eSortOrder) {\n      return;\n    }\n    const allColumnsWithSorting = this.sortController.getColumnsWithSortingOrdered();\n    const indexThisCol = (_a = this.sortController.getDisplaySortIndexForColumn(this.column)) != null ? _a : -1;\n    const moreThanOneColSorting = allColumnsWithSorting.some((col) => {\n      var _a2;\n      return (_a2 = this.sortController.getDisplaySortIndexForColumn(col)) != null ? _a2 : -1 >= 1;\n    });\n    const showIndex = indexThisCol >= 0 && moreThanOneColSorting;\n    setDisplayed(this.eSortOrder, showIndex, { skipAriaHidden: true });\n    if (indexThisCol >= 0) {\n      this.eSortOrder.textContent = (indexThisCol + 1).toString();\n    } else {\n      clearElement(this.eSortOrder);\n    }\n  }\n};\n_SortIndicatorComp.TEMPLATE = /* html */\n`<span class=\"ag-sort-indicator-container\">\n            <span ref=\"eSortOrder\" class=\"ag-sort-indicator-icon ag-sort-order ag-hidden\" aria-hidden=\"true\"></span>\n            <span ref=\"eSortAsc\" class=\"ag-sort-indicator-icon ag-sort-ascending-icon ag-hidden\" aria-hidden=\"true\"></span>\n            <span ref=\"eSortDesc\" class=\"ag-sort-indicator-icon ag-sort-descending-icon ag-hidden\" aria-hidden=\"true\"></span>\n            <span ref=\"eSortMixed\" class=\"ag-sort-indicator-icon ag-sort-mixed-icon ag-hidden\" aria-hidden=\"true\"></span>\n            <span ref=\"eSortNone\" class=\"ag-sort-indicator-icon ag-sort-none-icon ag-hidden\" aria-hidden=\"true\"></span>\n        </span>`;\n__decorateClass([\n  RefSelector(\"eSortOrder\")\n], _SortIndicatorComp.prototype, \"eSortOrder\", 2);\n__decorateClass([\n  RefSelector(\"eSortAsc\")\n], _SortIndicatorComp.prototype, \"eSortAsc\", 2);\n__decorateClass([\n  RefSelector(\"eSortDesc\")\n], _SortIndicatorComp.prototype, \"eSortDesc\", 2);\n__decorateClass([\n  RefSelector(\"eSortMixed\")\n], _SortIndicatorComp.prototype, \"eSortMixed\", 2);\n__decorateClass([\n  RefSelector(\"eSortNone\")\n], _SortIndicatorComp.prototype, \"eSortNone\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], _SortIndicatorComp.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"sortController\")\n], _SortIndicatorComp.prototype, \"sortController\", 2);\nvar SortIndicatorComp = _SortIndicatorComp;\n\n// community-modules/core/src/headerRendering/cells/column/headerComp.ts\nvar _HeaderComp = class _HeaderComp extends Component {\n  constructor() {\n    super(...arguments);\n    this.lastMovingChanged = 0;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  refresh(params) {\n    const oldParams = this.params;\n    this.params = params;\n    if (this.workOutTemplate() != this.currentTemplate || this.workOutShowMenu() != this.currentShowMenu || this.workOutSort() != this.currentSort || this.shouldSuppressMenuHide() != this.currentSuppressMenuHide || oldParams.enableFilterButton != params.enableFilterButton || oldParams.enableFilterIcon != params.enableFilterIcon) {\n      return false;\n    }\n    this.setDisplayName(params);\n    return true;\n  }\n  workOutTemplate() {\n    var _a;\n    let template = (_a = this.params.template) != null ? _a : _HeaderComp.TEMPLATE;\n    template = template && template.trim ? template.trim() : template;\n    return template;\n  }\n  init(params) {\n    this.params = params;\n    this.currentTemplate = this.workOutTemplate();\n    this.setTemplate(this.currentTemplate);\n    this.setupTap();\n    this.setMenu();\n    this.setupSort();\n    this.setupFilterIcon();\n    this.setupFilterButton();\n    this.setDisplayName(params);\n  }\n  setDisplayName(params) {\n    if (this.currentDisplayName != params.displayName) {\n      this.currentDisplayName = params.displayName;\n      const displayNameSanitised = escapeString(this.currentDisplayName, true);\n      if (this.eText) {\n        this.eText.textContent = displayNameSanitised;\n      }\n    }\n  }\n  addInIcon(iconName, eParent, column) {\n    if (eParent == null) {\n      return;\n    }\n    const eIcon = createIconNoSpan(iconName, this.gos, column);\n    if (eIcon) {\n      eParent.appendChild(eIcon);\n    }\n  }\n  setupTap() {\n    const { gos } = this;\n    if (gos.get(\"suppressTouch\")) {\n      return;\n    }\n    const touchListener = new TouchListener(this.getGui(), true);\n    const suppressMenuHide = this.shouldSuppressMenuHide();\n    const tapMenuButton = suppressMenuHide && exists(this.eMenu);\n    const menuTouchListener = tapMenuButton ? new TouchListener(this.eMenu, true) : touchListener;\n    if (this.params.enableMenu) {\n      const eventType = tapMenuButton ? \"EVENT_TAP\" : \"EVENT_LONG_TAP\";\n      const showMenuFn = (event) => this.params.showColumnMenuAfterMouseClick(event.touchStart);\n      this.addManagedListener(menuTouchListener, TouchListener[eventType], showMenuFn);\n    }\n    if (this.params.enableSorting) {\n      const tapListener = (event) => {\n        var _a, _b;\n        const target = event.touchStart.target;\n        if (suppressMenuHide && (((_a = this.eMenu) == null ? void 0 : _a.contains(target)) || ((_b = this.eFilterButton) == null ? void 0 : _b.contains(target)))) {\n          return;\n        }\n        this.sortController.progressSort(this.params.column, false, \"uiColumnSorted\");\n      };\n      this.addManagedListener(touchListener, TouchListener.EVENT_TAP, tapListener);\n    }\n    if (this.params.enableFilterButton) {\n      const filterButtonTouchListener = new TouchListener(this.eFilterButton, true);\n      this.addManagedListener(filterButtonTouchListener, \"tap\", () => this.params.showFilter(this.eFilterButton));\n      this.addDestroyFunc(() => filterButtonTouchListener.destroy());\n    }\n    this.addDestroyFunc(() => touchListener.destroy());\n    if (tapMenuButton) {\n      this.addDestroyFunc(() => menuTouchListener.destroy());\n    }\n  }\n  workOutShowMenu() {\n    return this.params.enableMenu && this.menuService.isHeaderMenuButtonEnabled();\n  }\n  shouldSuppressMenuHide() {\n    return this.menuService.isHeaderMenuButtonAlwaysShowEnabled();\n  }\n  setMenu() {\n    if (!this.eMenu) {\n      return;\n    }\n    this.currentShowMenu = this.workOutShowMenu();\n    if (!this.currentShowMenu) {\n      removeFromParent(this.eMenu);\n      this.eMenu = void 0;\n      return;\n    }\n    const isLegacyMenu = this.menuService.isLegacyMenuEnabled();\n    this.addInIcon(isLegacyMenu ? \"menu\" : \"menuAlt\", this.eMenu, this.params.column);\n    this.eMenu.classList.toggle(\"ag-header-menu-icon\", !isLegacyMenu);\n    this.currentSuppressMenuHide = this.shouldSuppressMenuHide();\n    this.addManagedListener(this.eMenu, \"click\", () => this.params.showColumnMenu(this.eMenu));\n    this.eMenu.classList.toggle(\"ag-header-menu-always-show\", this.currentSuppressMenuHide);\n  }\n  onMenuKeyboardShortcut(isFilterShortcut) {\n    var _a, _b, _c, _d;\n    const { column } = this.params;\n    const isLegacyMenuEnabled = this.menuService.isLegacyMenuEnabled();\n    if (isFilterShortcut && !isLegacyMenuEnabled) {\n      if (this.menuService.isFilterMenuInHeaderEnabled(column)) {\n        this.params.showFilter((_b = (_a = this.eFilterButton) != null ? _a : this.eMenu) != null ? _b : this.getGui());\n        return true;\n      }\n    } else if (this.params.enableMenu) {\n      this.params.showColumnMenu((_d = (_c = this.eMenu) != null ? _c : this.eFilterButton) != null ? _d : this.getGui());\n      return true;\n    }\n    return false;\n  }\n  workOutSort() {\n    return this.params.enableSorting;\n  }\n  setupSort() {\n    this.currentSort = this.params.enableSorting;\n    if (!this.eSortIndicator) {\n      this.eSortIndicator = this.context.createBean(new SortIndicatorComp(true));\n      this.eSortIndicator.attachCustomElements(\n        this.eSortOrder,\n        this.eSortAsc,\n        this.eSortDesc,\n        this.eSortMixed,\n        this.eSortNone\n      );\n    }\n    this.eSortIndicator.setupSort(this.params.column);\n    if (!this.currentSort) {\n      return;\n    }\n    this.addManagedListener(this.params.column, Column.EVENT_MOVING_CHANGED, () => {\n      this.lastMovingChanged = (/* @__PURE__ */ new Date()).getTime();\n    });\n    if (this.eLabel) {\n      this.addManagedListener(this.eLabel, \"click\", (event) => {\n        const moving = this.params.column.isMoving();\n        const nowTime = (/* @__PURE__ */ new Date()).getTime();\n        const movedRecently = nowTime - this.lastMovingChanged < 50;\n        const columnMoving = moving || movedRecently;\n        if (!columnMoving) {\n          const sortUsingCtrl = this.gos.get(\"multiSortKey\") === \"ctrl\";\n          const multiSort = sortUsingCtrl ? event.ctrlKey || event.metaKey : event.shiftKey;\n          this.params.progressSort(multiSort);\n        }\n      });\n    }\n    const onSortingChanged = () => {\n      this.addOrRemoveCssClass(\"ag-header-cell-sorted-asc\", this.params.column.isSortAscending());\n      this.addOrRemoveCssClass(\"ag-header-cell-sorted-desc\", this.params.column.isSortDescending());\n      this.addOrRemoveCssClass(\"ag-header-cell-sorted-none\", this.params.column.isSortNone());\n      if (this.params.column.getColDef().showRowGroup) {\n        const sourceColumns = this.columnModel.getSourceColumnsForGroupColumn(this.params.column);\n        const sortDirectionsMatch = sourceColumns == null ? void 0 : sourceColumns.every((sourceCol) => this.params.column.getSort() == sourceCol.getSort());\n        const isMultiSorting = !sortDirectionsMatch;\n        this.addOrRemoveCssClass(\"ag-header-cell-sorted-mixed\", isMultiSorting);\n      }\n    };\n    this.addManagedListener(this.eventService, Events.EVENT_SORT_CHANGED, onSortingChanged);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, onSortingChanged);\n  }\n  setupFilterIcon() {\n    if (!this.eFilter) {\n      return;\n    }\n    this.configureFilter(this.params.enableFilterIcon, this.eFilter, this.onFilterChangedIcon.bind(this));\n  }\n  setupFilterButton() {\n    if (!this.eFilterButton) {\n      return;\n    }\n    const configured = this.configureFilter(\n      this.params.enableFilterButton,\n      this.eFilterButton,\n      this.onFilterChangedButton.bind(this)\n    );\n    if (configured) {\n      this.addManagedListener(this.eFilterButton, \"click\", () => this.params.showFilter(this.eFilterButton));\n    } else {\n      this.eFilterButton = void 0;\n    }\n  }\n  configureFilter(enabled, element, filterChangedCallback) {\n    if (!enabled) {\n      removeFromParent(element);\n      return false;\n    }\n    const { column } = this.params;\n    this.addInIcon(\"filter\", element, column);\n    this.addManagedListener(column, Column.EVENT_FILTER_CHANGED, filterChangedCallback);\n    filterChangedCallback();\n    return true;\n  }\n  onFilterChangedIcon() {\n    const filterPresent = this.params.column.isFilterActive();\n    setDisplayed(this.eFilter, filterPresent, { skipAriaHidden: true });\n  }\n  onFilterChangedButton() {\n    const filterPresent = this.params.column.isFilterActive();\n    this.eFilterButton.classList.toggle(\"ag-filter-active\", filterPresent);\n  }\n  getAnchorElementForMenu(isFilter) {\n    var _a, _b, _c, _d;\n    if (isFilter) {\n      return (_b = (_a = this.eFilterButton) != null ? _a : this.eMenu) != null ? _b : this.getGui();\n    }\n    return (_d = (_c = this.eMenu) != null ? _c : this.eFilterButton) != null ? _d : this.getGui();\n  }\n};\n_HeaderComp.TEMPLATE = /* html */\n`<div class=\"ag-cell-label-container\" role=\"presentation\">\n            <span ref=\"eMenu\" class=\"ag-header-icon ag-header-cell-menu-button\" aria-hidden=\"true\"></span>\n            <span ref=\"eFilterButton\" class=\"ag-header-icon ag-header-cell-filter-button\" aria-hidden=\"true\"></span>\n            <div ref=\"eLabel\" class=\"ag-header-cell-label\" role=\"presentation\">\n                <span ref=\"eText\" class=\"ag-header-cell-text\"></span>\n                <span ref=\"eFilter\" class=\"ag-header-icon ag-header-label-icon ag-filter-icon\" aria-hidden=\"true\"></span>\n                <ag-sort-indicator ref=\"eSortIndicator\"></ag-sort-indicator>\n            </div>\n        </div>`;\n__decorateClass([\n  Autowired(\"sortController\")\n], _HeaderComp.prototype, \"sortController\", 2);\n__decorateClass([\n  Autowired(\"menuService\")\n], _HeaderComp.prototype, \"menuService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], _HeaderComp.prototype, \"columnModel\", 2);\n__decorateClass([\n  RefSelector(\"eFilter\")\n], _HeaderComp.prototype, \"eFilter\", 2);\n__decorateClass([\n  RefSelector(\"eFilterButton\")\n], _HeaderComp.prototype, \"eFilterButton\", 2);\n__decorateClass([\n  RefSelector(\"eSortIndicator\")\n], _HeaderComp.prototype, \"eSortIndicator\", 2);\n__decorateClass([\n  RefSelector(\"eMenu\")\n], _HeaderComp.prototype, \"eMenu\", 2);\n__decorateClass([\n  RefSelector(\"eLabel\")\n], _HeaderComp.prototype, \"eLabel\", 2);\n__decorateClass([\n  RefSelector(\"eText\")\n], _HeaderComp.prototype, \"eText\", 2);\n__decorateClass([\n  RefSelector(\"eSortOrder\")\n], _HeaderComp.prototype, \"eSortOrder\", 2);\n__decorateClass([\n  RefSelector(\"eSortAsc\")\n], _HeaderComp.prototype, \"eSortAsc\", 2);\n__decorateClass([\n  RefSelector(\"eSortDesc\")\n], _HeaderComp.prototype, \"eSortDesc\", 2);\n__decorateClass([\n  RefSelector(\"eSortMixed\")\n], _HeaderComp.prototype, \"eSortMixed\", 2);\n__decorateClass([\n  RefSelector(\"eSortNone\")\n], _HeaderComp.prototype, \"eSortNone\", 2);\nvar HeaderComp = _HeaderComp;\n\n// community-modules/core/src/headerRendering/cells/columnGroup/headerGroupComp.ts\nvar _HeaderGroupComp = class _HeaderGroupComp extends Component {\n  constructor() {\n    super(_HeaderGroupComp.TEMPLATE);\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  init(params) {\n    this.params = params;\n    this.checkWarnings();\n    this.setupLabel();\n    this.addGroupExpandIcon();\n    this.setupExpandIcons();\n  }\n  checkWarnings() {\n    const paramsAny = this.params;\n    if (paramsAny.template) {\n      warnOnce(`A template was provided for Header Group Comp - templates are only supported for Header Comps (not groups)`);\n    }\n  }\n  setupExpandIcons() {\n    this.addInIcon(\"columnGroupOpened\", \"agOpened\");\n    this.addInIcon(\"columnGroupClosed\", \"agClosed\");\n    const expandAction = (event) => {\n      if (isStopPropagationForAgGrid(event)) {\n        return;\n      }\n      const newExpandedValue = !this.params.columnGroup.isExpanded();\n      this.columnModel.setColumnGroupOpened(this.params.columnGroup.getProvidedColumnGroup(), newExpandedValue, \"uiColumnExpanded\");\n    };\n    this.addTouchAndClickListeners(this.eCloseIcon, expandAction);\n    this.addTouchAndClickListeners(this.eOpenIcon, expandAction);\n    const stopPropagationAction = (event) => {\n      stopPropagationForAgGrid(event);\n    };\n    this.addManagedListener(this.eCloseIcon, \"dblclick\", stopPropagationAction);\n    this.addManagedListener(this.eOpenIcon, \"dblclick\", stopPropagationAction);\n    this.addManagedListener(this.getGui(), \"dblclick\", expandAction);\n    this.updateIconVisibility();\n    const providedColumnGroup = this.params.columnGroup.getProvidedColumnGroup();\n    this.addManagedListener(providedColumnGroup, ProvidedColumnGroup.EVENT_EXPANDED_CHANGED, this.updateIconVisibility.bind(this));\n    this.addManagedListener(providedColumnGroup, ProvidedColumnGroup.EVENT_EXPANDABLE_CHANGED, this.updateIconVisibility.bind(this));\n  }\n  addTouchAndClickListeners(eElement, action) {\n    const touchListener = new TouchListener(eElement, true);\n    this.addManagedListener(touchListener, TouchListener.EVENT_TAP, action);\n    this.addDestroyFunc(() => touchListener.destroy());\n    this.addManagedListener(eElement, \"click\", action);\n  }\n  updateIconVisibility() {\n    const columnGroup = this.params.columnGroup;\n    if (columnGroup.isExpandable()) {\n      const expanded = this.params.columnGroup.isExpanded();\n      setDisplayed(this.eOpenIcon, expanded);\n      setDisplayed(this.eCloseIcon, !expanded);\n    } else {\n      setDisplayed(this.eOpenIcon, false);\n      setDisplayed(this.eCloseIcon, false);\n    }\n  }\n  addInIcon(iconName, refName) {\n    const eIcon = createIconNoSpan(iconName, this.gos, null);\n    if (eIcon) {\n      this.getRefElement(refName).appendChild(eIcon);\n    }\n  }\n  addGroupExpandIcon() {\n    if (!this.params.columnGroup.isExpandable()) {\n      setDisplayed(this.eOpenIcon, false);\n      setDisplayed(this.eCloseIcon, false);\n      return;\n    }\n  }\n  setupLabel() {\n    var _a;\n    const { displayName, columnGroup } = this.params;\n    if (exists(displayName)) {\n      const displayNameSanitised = escapeString(displayName, true);\n      this.getRefElement(\"agLabel\").textContent = displayNameSanitised;\n    }\n    this.addOrRemoveCssClass(\"ag-sticky-label\", !((_a = columnGroup.getColGroupDef()) == null ? void 0 : _a.suppressStickyLabel));\n  }\n};\n_HeaderGroupComp.TEMPLATE = /* html */\n`<div class=\"ag-header-group-cell-label\" ref=\"agContainer\" role=\"presentation\">\n            <span ref=\"agLabel\" class=\"ag-header-group-text\" role=\"presentation\"></span>\n            <span ref=\"agOpened\" class=\"ag-header-icon ag-header-expand-icon ag-header-expand-icon-expanded\"></span>\n            <span ref=\"agClosed\" class=\"ag-header-icon ag-header-expand-icon ag-header-expand-icon-collapsed\"></span>\n        </div>`;\n__decorateClass([\n  Autowired(\"columnModel\")\n], _HeaderGroupComp.prototype, \"columnModel\", 2);\n__decorateClass([\n  RefSelector(\"agOpened\")\n], _HeaderGroupComp.prototype, \"eOpenIcon\", 2);\n__decorateClass([\n  RefSelector(\"agClosed\")\n], _HeaderGroupComp.prototype, \"eCloseIcon\", 2);\nvar HeaderGroupComp = _HeaderGroupComp;\n\n// community-modules/core/src/widgets/popupComponent.ts\nvar PopupComponent = class extends Component {\n  isPopup() {\n    return true;\n  }\n  setParentComponent(container) {\n    container.addCssClass(\"ag-has-popup\");\n    super.setParentComponent(container);\n  }\n  destroy() {\n    const parentComp = this.parentComponent;\n    const hasParent = parentComp && parentComp.isAlive();\n    if (hasParent) {\n      parentComp.getGui().classList.remove(\"ag-has-popup\");\n    }\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/cellEditors/largeTextCellEditor.ts\nvar _LargeTextCellEditor = class _LargeTextCellEditor extends PopupComponent {\n  constructor() {\n    super(_LargeTextCellEditor.TEMPLATE);\n  }\n  init(params) {\n    this.params = params;\n    this.focusAfterAttached = params.cellStartedEdit;\n    this.eTextArea.setMaxLength(params.maxLength || 200).setCols(params.cols || 60).setRows(params.rows || 10);\n    if (exists(params.value, true)) {\n      this.eTextArea.setValue(params.value.toString(), true);\n    }\n    this.addGuiEventListener(\"keydown\", this.onKeyDown.bind(this));\n    this.activateTabIndex();\n  }\n  onKeyDown(event) {\n    const key = event.key;\n    if (key === KeyCode.LEFT || key === KeyCode.UP || key === KeyCode.RIGHT || key === KeyCode.DOWN || event.shiftKey && key === KeyCode.ENTER) {\n      event.stopPropagation();\n    }\n  }\n  afterGuiAttached() {\n    const translate = this.localeService.getLocaleTextFunc();\n    this.eTextArea.setInputAriaLabel(translate(\"ariaInputEditor\", \"Input Editor\"));\n    if (this.focusAfterAttached) {\n      this.eTextArea.getFocusableElement().focus();\n    }\n  }\n  getValue() {\n    const value = this.eTextArea.getValue();\n    if (!exists(value) && !exists(this.params.value)) {\n      return this.params.value;\n    }\n    return this.params.parseValue(value);\n  }\n};\n_LargeTextCellEditor.TEMPLATE = /* html */\n`<div class=\"ag-large-text\">\n            <ag-input-text-area ref=\"eTextArea\" class=\"ag-large-text-input\"></ag-input-text-area>\n        </div>`;\n__decorateClass([\n  RefSelector(\"eTextArea\")\n], _LargeTextCellEditor.prototype, \"eTextArea\", 2);\nvar LargeTextCellEditor = _LargeTextCellEditor;\n\n// community-modules/core/src/rendering/cellEditors/selectCellEditor.ts\nvar SelectCellEditor = class extends PopupComponent {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-cell-edit-wrapper\">\n                <ag-select class=\"ag-cell-editor\" ref=\"eSelect\"></ag-select>\n            </div>`\n    );\n    this.startedByEnter = false;\n  }\n  init(params) {\n    this.focusAfterAttached = params.cellStartedEdit;\n    const { eSelect, valueService, gos } = this;\n    const { values: values2, value, eventKey } = params;\n    if (missing(values2)) {\n      console.warn(\"AG Grid: no values found for select cellEditor\");\n      return;\n    }\n    this.startedByEnter = eventKey != null ? eventKey === KeyCode.ENTER : false;\n    let hasValue = false;\n    values2.forEach((currentValue) => {\n      const option = { value: currentValue };\n      const valueFormatted = valueService.formatValue(params.column, null, currentValue);\n      const valueFormattedExits = valueFormatted !== null && valueFormatted !== void 0;\n      option.text = valueFormattedExits ? valueFormatted : currentValue;\n      eSelect.addOption(option);\n      hasValue = hasValue || value === currentValue;\n    });\n    if (hasValue) {\n      eSelect.setValue(params.value, true);\n    } else if (params.values.length) {\n      eSelect.setValue(params.values[0], true);\n    }\n    const { valueListGap, valueListMaxWidth, valueListMaxHeight } = params;\n    if (valueListGap != null) {\n      eSelect.setPickerGap(valueListGap);\n    }\n    if (valueListMaxHeight != null) {\n      eSelect.setPickerMaxHeight(valueListMaxHeight);\n    }\n    if (valueListMaxWidth != null) {\n      eSelect.setPickerMaxWidth(valueListMaxWidth);\n    }\n    if (gos.get(\"editType\") !== \"fullRow\") {\n      this.addManagedListener(this.eSelect, AgSelect.EVENT_ITEM_SELECTED, () => params.stopEditing());\n    }\n  }\n  afterGuiAttached() {\n    if (this.focusAfterAttached) {\n      this.eSelect.getFocusableElement().focus();\n    }\n    if (this.startedByEnter) {\n      setTimeout(() => {\n        if (this.isAlive()) {\n          this.eSelect.showPicker();\n        }\n      });\n    }\n  }\n  focusIn() {\n    this.eSelect.getFocusableElement().focus();\n  }\n  getValue() {\n    return this.eSelect.getValue();\n  }\n  isPopup() {\n    return false;\n  }\n};\n__decorateClass([\n  Autowired(\"valueService\")\n], SelectCellEditor.prototype, \"valueService\", 2);\n__decorateClass([\n  RefSelector(\"eSelect\")\n], SelectCellEditor.prototype, \"eSelect\", 2);\n\n// community-modules/core/src/rendering/cellEditors/simpleCellEditor.ts\nvar SimpleCellEditor = class extends PopupComponent {\n  constructor(cellEditorInput) {\n    super(\n      /* html */\n      `\n            <div class=\"ag-cell-edit-wrapper\">\n                ${cellEditorInput.getTemplate()}\n            </div>`\n    );\n    this.cellEditorInput = cellEditorInput;\n  }\n  init(params) {\n    this.params = params;\n    const eInput = this.eInput;\n    this.cellEditorInput.init(eInput, params);\n    let startValue;\n    if (params.cellStartedEdit) {\n      this.focusAfterAttached = true;\n      const eventKey = params.eventKey;\n      if (eventKey === KeyCode.BACKSPACE || params.eventKey === KeyCode.DELETE) {\n        startValue = \"\";\n      } else if (eventKey && eventKey.length === 1) {\n        startValue = eventKey;\n      } else {\n        startValue = this.cellEditorInput.getStartValue();\n        if (eventKey !== KeyCode.F2) {\n          this.highlightAllOnFocus = true;\n        }\n      }\n    } else {\n      this.focusAfterAttached = false;\n      startValue = this.cellEditorInput.getStartValue();\n    }\n    if (startValue != null) {\n      eInput.setStartValue(startValue);\n    }\n    this.addManagedListener(eInput.getGui(), \"keydown\", (event) => {\n      const { key } = event;\n      if (key === KeyCode.PAGE_UP || key === KeyCode.PAGE_DOWN) {\n        event.preventDefault();\n      }\n    });\n  }\n  afterGuiAttached() {\n    var _a, _b;\n    const translate = this.localeService.getLocaleTextFunc();\n    const eInput = this.eInput;\n    eInput.setInputAriaLabel(translate(\"ariaInputEditor\", \"Input Editor\"));\n    if (!this.focusAfterAttached) {\n      return;\n    }\n    if (!isBrowserSafari()) {\n      eInput.getFocusableElement().focus();\n    }\n    const inputEl = eInput.getInputElement();\n    if (this.highlightAllOnFocus) {\n      inputEl.select();\n    } else {\n      (_b = (_a = this.cellEditorInput).setCaret) == null ? void 0 : _b.call(_a);\n    }\n  }\n  // gets called when tabbing through cells and in full row edit mode\n  focusIn() {\n    const eInput = this.eInput;\n    const focusEl = eInput.getFocusableElement();\n    const inputEl = eInput.getInputElement();\n    focusEl.focus();\n    inputEl.select();\n  }\n  getValue() {\n    return this.cellEditorInput.getValue();\n  }\n  isPopup() {\n    return false;\n  }\n};\n__decorateClass([\n  RefSelector(\"eInput\")\n], SimpleCellEditor.prototype, \"eInput\", 2);\n\n// community-modules/core/src/rendering/cellEditors/textCellEditor.ts\nvar TextCellEditorInput = class {\n  getTemplate() {\n    return (\n      /* html */\n      `<ag-input-text-field class=\"ag-cell-editor\" ref=\"eInput\"></ag-input-text-field>`\n    );\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    if (params.maxLength != null) {\n      eInput.setMaxLength(params.maxLength);\n    }\n  }\n  getValue() {\n    const value = this.eInput.getValue();\n    if (!exists(value) && !exists(this.params.value)) {\n      return this.params.value;\n    }\n    return this.params.parseValue(value);\n  }\n  getStartValue() {\n    const formatValue = this.params.useFormatter || this.params.column.getColDef().refData;\n    return formatValue ? this.params.formatValue(this.params.value) : this.params.value;\n  }\n  setCaret() {\n    const value = this.eInput.getValue();\n    const len = exists(value) && value.length || 0;\n    if (len) {\n      this.eInput.getInputElement().setSelectionRange(len, len);\n    }\n  }\n};\nvar TextCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new TextCellEditorInput());\n  }\n};\n\n// community-modules/core/src/rendering/cellRenderers/animateShowChangeCellRenderer.ts\nvar ARROW_UP = \"\\u2191\";\nvar ARROW_DOWN = \"\\u2193\";\nvar AnimateShowChangeCellRenderer = class extends Component {\n  constructor() {\n    super();\n    this.refreshCount = 0;\n    const template = document.createElement(\"span\");\n    const delta = document.createElement(\"span\");\n    delta.setAttribute(\"class\", \"ag-value-change-delta\");\n    const value = document.createElement(\"span\");\n    value.setAttribute(\"class\", \"ag-value-change-value\");\n    template.appendChild(delta);\n    template.appendChild(value);\n    this.setTemplateFromElement(template);\n  }\n  init(params) {\n    this.eValue = this.queryForHtmlElement(\".ag-value-change-value\");\n    this.eDelta = this.queryForHtmlElement(\".ag-value-change-delta\");\n    this.refresh(params, true);\n  }\n  showDelta(params, delta) {\n    const absDelta = Math.abs(delta);\n    const valueFormatted = params.formatValue(absDelta);\n    const valueToUse = exists(valueFormatted) ? valueFormatted : absDelta;\n    const deltaUp = delta >= 0;\n    if (deltaUp) {\n      this.eDelta.textContent = ARROW_UP + valueToUse;\n    } else {\n      this.eDelta.textContent = ARROW_DOWN + valueToUse;\n    }\n    this.eDelta.classList.toggle(\"ag-value-change-delta-up\", deltaUp);\n    this.eDelta.classList.toggle(\"ag-value-change-delta-down\", !deltaUp);\n  }\n  setTimerToRemoveDelta() {\n    this.refreshCount++;\n    const refreshCountCopy = this.refreshCount;\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      window.setTimeout(() => {\n        if (refreshCountCopy === this.refreshCount) {\n          this.hideDeltaValue();\n        }\n      }, 2e3);\n    });\n  }\n  hideDeltaValue() {\n    this.eValue.classList.remove(\"ag-value-change-value-highlight\");\n    clearElement(this.eDelta);\n  }\n  refresh(params, isInitialRender = false) {\n    const value = params.value;\n    if (value === this.lastValue) {\n      return false;\n    }\n    if (exists(params.valueFormatted)) {\n      this.eValue.textContent = params.valueFormatted;\n    } else if (exists(params.value)) {\n      this.eValue.textContent = value;\n    } else {\n      clearElement(this.eValue);\n    }\n    if (this.filterManager.isSuppressFlashingCellsBecauseFiltering()) {\n      return false;\n    }\n    if (typeof value === \"number\" && typeof this.lastValue === \"number\") {\n      const delta = value - this.lastValue;\n      this.showDelta(params, delta);\n    }\n    if (this.lastValue) {\n      this.eValue.classList.add(\"ag-value-change-value-highlight\");\n    }\n    if (!isInitialRender) {\n      this.setTimerToRemoveDelta();\n    }\n    this.lastValue = value;\n    return true;\n  }\n};\n__decorateClass([\n  Autowired(\"filterManager\")\n], AnimateShowChangeCellRenderer.prototype, \"filterManager\", 2);\n\n// community-modules/core/src/rendering/cellRenderers/animateSlideCellRenderer.ts\nvar AnimateSlideCellRenderer = class extends Component {\n  constructor() {\n    super();\n    this.refreshCount = 0;\n    const template = document.createElement(\"span\");\n    const slide = document.createElement(\"span\");\n    slide.setAttribute(\"class\", \"ag-value-slide-current\");\n    template.appendChild(slide);\n    this.setTemplateFromElement(template);\n    this.eCurrent = this.queryForHtmlElement(\".ag-value-slide-current\");\n  }\n  init(params) {\n    this.refresh(params, true);\n  }\n  addSlideAnimation() {\n    this.refreshCount++;\n    const refreshCountCopy = this.refreshCount;\n    if (this.ePrevious) {\n      this.getGui().removeChild(this.ePrevious);\n    }\n    const prevElement = document.createElement(\"span\");\n    prevElement.setAttribute(\"class\", \"ag-value-slide-previous ag-value-slide-out\");\n    this.ePrevious = prevElement;\n    this.ePrevious.textContent = this.eCurrent.textContent;\n    this.getGui().insertBefore(this.ePrevious, this.eCurrent);\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      window.setTimeout(() => {\n        if (refreshCountCopy !== this.refreshCount) {\n          return;\n        }\n        this.ePrevious.classList.add(\"ag-value-slide-out-end\");\n      }, 50);\n      window.setTimeout(() => {\n        if (refreshCountCopy !== this.refreshCount) {\n          return;\n        }\n        this.getGui().removeChild(this.ePrevious);\n        this.ePrevious = null;\n      }, 3e3);\n    });\n  }\n  refresh(params, isInitialRender = false) {\n    let value = params.value;\n    if (missing(value)) {\n      value = \"\";\n    }\n    if (value === this.lastValue) {\n      return false;\n    }\n    if (this.filterManager.isSuppressFlashingCellsBecauseFiltering()) {\n      return false;\n    }\n    if (!isInitialRender) {\n      this.addSlideAnimation();\n    }\n    this.lastValue = value;\n    if (exists(params.valueFormatted)) {\n      this.eCurrent.textContent = params.valueFormatted;\n    } else if (exists(params.value)) {\n      this.eCurrent.textContent = value;\n    } else {\n      clearElement(this.eCurrent);\n    }\n    return true;\n  }\n};\n__decorateClass([\n  Autowired(\"filterManager\")\n], AnimateSlideCellRenderer.prototype, \"filterManager\", 2);\n\n// community-modules/core/src/entities/rowNode.ts\nvar _RowNode = class _RowNode {\n  constructor(beans) {\n    /** The current row index. If the row is filtered out or in a collapsed group, this value will be `null`. */\n    this.rowIndex = null;\n    /** The key for the group eg Ireland, UK, USA */\n    this.key = null;\n    /** Children mapped by the pivot columns. */\n    this.childrenMapped = {};\n    /**\n     * This will be `true` if it has a rowIndex assigned, otherwise `false`.\n     */\n    this.displayed = false;\n    /** The row top position in pixels. */\n    this.rowTop = null;\n    /** The top pixel for this row last time, makes sense if data set was ordered or filtered,\n     * it is used so new rows can animate in from their old position. */\n    this.oldRowTop = null;\n    /** `true` by default - can be overridden via gridOptions.isRowSelectable(rowNode) */\n    this.selectable = true;\n    /** Used by sorting service - to give deterministic sort to groups. Previously we\n     * just id for this, however id is a string and had slower sorting compared to numbers. */\n    this.__objectId = _RowNode.OBJECT_ID_SEQUENCE++;\n    /** When one or more Columns are using autoHeight, this keeps track of height of each autoHeight Cell,\n     * indexed by the Column ID. */\n    this.__autoHeights = {};\n    /** `true` when nodes with the same id are being removed and added as part of the same batch transaction */\n    this.alreadyRendered = false;\n    this.highlighted = null;\n    this.hovered = false;\n    this.selected = false;\n    this.beans = beans;\n  }\n  /**\n   * Replaces the data on the `rowNode`. When this method is called, the grid will refresh the entire rendered row if it is displayed.\n   */\n  setData(data) {\n    this.setDataCommon(data, false);\n  }\n  // similar to setRowData, however it is expected that the data is the same data item. this\n  // is intended to be used with Redux type stores, where the whole data can be changed. we are\n  // guaranteed that the data is the same entity (so grid doesn't need to worry about the id of the\n  // underlying data changing, hence doesn't need to worry about selection). the grid, upon receiving\n  // dataChanged event, will refresh the cells rather than rip them all out (so user can show transitions).\n  /**\n   * Updates the data on the `rowNode`. When this method is called, the grid will refresh the entire rendered row if it is displayed.\n   */\n  updateData(data) {\n    this.setDataCommon(data, true);\n  }\n  setDataCommon(data, update) {\n    const oldData = this.data;\n    this.data = data;\n    this.beans.valueCache.onDataChanged();\n    this.updateDataOnDetailNode();\n    this.checkRowSelectable();\n    this.resetQuickFilterAggregateText();\n    const event = this.createDataChangedEvent(data, oldData, update);\n    this.dispatchLocalEvent(event);\n  }\n  // when we are doing master / detail, the detail node is lazy created, but then kept around.\n  // so if we show / hide the detail, the same detail rowNode is used. so we need to keep the data\n  // in sync, otherwise expand/collapse of the detail would still show the old values.\n  updateDataOnDetailNode() {\n    if (this.detailNode) {\n      this.detailNode.data = this.data;\n    }\n  }\n  createDataChangedEvent(newData, oldData, update) {\n    return {\n      type: _RowNode.EVENT_DATA_CHANGED,\n      node: this,\n      oldData,\n      newData,\n      update\n    };\n  }\n  createLocalRowEvent(type) {\n    return {\n      type,\n      node: this\n    };\n  }\n  getRowIndexString() {\n    if (this.rowPinned === \"top\") {\n      return \"t-\" + this.rowIndex;\n    }\n    if (this.rowPinned === \"bottom\") {\n      return \"b-\" + this.rowIndex;\n    }\n    return this.rowIndex.toString();\n  }\n  createDaemonNode() {\n    const oldNode = new _RowNode(this.beans);\n    oldNode.id = this.id;\n    oldNode.data = this.data;\n    oldNode.__daemon = true;\n    oldNode.selected = this.selected;\n    oldNode.level = this.level;\n    return oldNode;\n  }\n  setDataAndId(data, id) {\n    const oldNode = exists(this.id) ? this.createDaemonNode() : null;\n    const oldData = this.data;\n    this.data = data;\n    this.updateDataOnDetailNode();\n    this.setId(id);\n    this.checkRowSelectable();\n    this.beans.selectionService.syncInRowNode(this, oldNode);\n    const event = this.createDataChangedEvent(data, oldData, false);\n    this.dispatchLocalEvent(event);\n  }\n  checkRowSelectable() {\n    const isRowSelectableFunc = this.beans.gos.get(\"isRowSelectable\");\n    this.setRowSelectable(isRowSelectableFunc ? isRowSelectableFunc(this) : true);\n  }\n  setRowSelectable(newVal, suppressSelectionUpdate) {\n    if (this.selectable !== newVal) {\n      this.selectable = newVal;\n      if (this.eventService) {\n        this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_SELECTABLE_CHANGED));\n      }\n      if (suppressSelectionUpdate) {\n        return;\n      }\n      const isGroupSelectsChildren = this.beans.gos.get(\"groupSelectsChildren\");\n      if (isGroupSelectsChildren) {\n        const selected = this.calculateSelectedFromChildren();\n        this.setSelectedParams({\n          newValue: selected != null ? selected : false,\n          source: \"selectableChanged\"\n        });\n        return;\n      }\n      if (this.isSelected() && !this.selectable) {\n        this.setSelectedParams({\n          newValue: false,\n          source: \"selectableChanged\"\n        });\n      }\n    }\n  }\n  setId(id) {\n    const getRowIdFunc = this.beans.gos.getCallback(\"getRowId\");\n    if (getRowIdFunc) {\n      if (this.data) {\n        const parentKeys = this.getGroupKeys(true);\n        this.id = getRowIdFunc({\n          data: this.data,\n          parentKeys: parentKeys.length > 0 ? parentKeys : void 0,\n          level: this.level\n        });\n        if (this.id !== null && typeof this.id === \"string\" && this.id.startsWith(_RowNode.ID_PREFIX_ROW_GROUP)) {\n          console.error(`AG Grid: Row IDs cannot start with ${_RowNode.ID_PREFIX_ROW_GROUP}, this is a reserved prefix for AG Grid's row grouping feature.`);\n        }\n        if (this.id !== null && typeof this.id !== \"string\") {\n          this.id = \"\" + this.id;\n        }\n      } else {\n        this.id = void 0;\n      }\n    } else {\n      this.id = id;\n    }\n  }\n  getGroupKeys(excludeSelf = false) {\n    const keys2 = [];\n    let pointer = this;\n    if (excludeSelf) {\n      pointer = pointer.parent;\n    }\n    while (pointer && pointer.level >= 0) {\n      keys2.push(pointer.key);\n      pointer = pointer.parent;\n    }\n    keys2.reverse();\n    return keys2;\n  }\n  isPixelInRange(pixel) {\n    if (!exists(this.rowTop) || !exists(this.rowHeight)) {\n      return false;\n    }\n    return pixel >= this.rowTop && pixel < this.rowTop + this.rowHeight;\n  }\n  setFirstChild(firstChild) {\n    if (this.firstChild === firstChild) {\n      return;\n    }\n    this.firstChild = firstChild;\n    if (this.eventService) {\n      this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_FIRST_CHILD_CHANGED));\n    }\n  }\n  setLastChild(lastChild) {\n    if (this.lastChild === lastChild) {\n      return;\n    }\n    this.lastChild = lastChild;\n    if (this.eventService) {\n      this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_LAST_CHILD_CHANGED));\n    }\n  }\n  setChildIndex(childIndex) {\n    if (this.childIndex === childIndex) {\n      return;\n    }\n    this.childIndex = childIndex;\n    if (this.eventService) {\n      this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_CHILD_INDEX_CHANGED));\n    }\n  }\n  setRowTop(rowTop) {\n    this.oldRowTop = this.rowTop;\n    if (this.rowTop === rowTop) {\n      return;\n    }\n    this.rowTop = rowTop;\n    if (this.eventService) {\n      this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_TOP_CHANGED));\n    }\n    this.setDisplayed(rowTop !== null);\n  }\n  clearRowTopAndRowIndex() {\n    this.oldRowTop = null;\n    this.setRowTop(null);\n    this.setRowIndex(null);\n  }\n  setDisplayed(displayed) {\n    if (this.displayed === displayed) {\n      return;\n    }\n    this.displayed = displayed;\n    if (this.eventService) {\n      this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_DISPLAYED_CHANGED));\n    }\n  }\n  setDragging(dragging) {\n    if (this.dragging === dragging) {\n      return;\n    }\n    this.dragging = dragging;\n    if (this.eventService) {\n      this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_DRAGGING_CHANGED));\n    }\n  }\n  setHighlighted(highlighted) {\n    if (highlighted === this.highlighted) {\n      return;\n    }\n    this.highlighted = highlighted;\n    if (this.eventService) {\n      this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_HIGHLIGHT_CHANGED));\n    }\n  }\n  setHovered(hovered) {\n    if (this.hovered === hovered) {\n      return;\n    }\n    this.hovered = hovered;\n  }\n  isHovered() {\n    return this.hovered;\n  }\n  setAllChildrenCount(allChildrenCount) {\n    if (this.allChildrenCount === allChildrenCount) {\n      return;\n    }\n    this.allChildrenCount = allChildrenCount;\n    if (this.eventService) {\n      this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED));\n    }\n  }\n  setMaster(master) {\n    if (this.master === master) {\n      return;\n    }\n    if (this.master && !master) {\n      this.expanded = false;\n    }\n    this.master = master;\n    if (this.eventService) {\n      this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_MASTER_CHANGED));\n    }\n  }\n  setGroup(group) {\n    if (this.group === group) {\n      return;\n    }\n    if (this.group && !group) {\n      this.expanded = false;\n    }\n    this.group = group;\n    this.updateHasChildren();\n    if (this.eventService) {\n      this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_GROUP_CHANGED));\n    }\n  }\n  /**\n   * Sets the row height.\n   * Call if you want to change the height initially assigned to the row.\n   * After calling, you must call `api.onRowHeightChanged()` so the grid knows it needs to work out the placement of the rows. */\n  setRowHeight(rowHeight, estimated = false) {\n    this.rowHeight = rowHeight;\n    this.rowHeightEstimated = estimated;\n    if (this.eventService) {\n      this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_HEIGHT_CHANGED));\n    }\n  }\n  setRowAutoHeight(cellHeight, column) {\n    if (!this.__autoHeights) {\n      this.__autoHeights = {};\n    }\n    this.__autoHeights[column.getId()] = cellHeight;\n    if (cellHeight != null) {\n      if (this.checkAutoHeightsDebounced == null) {\n        this.checkAutoHeightsDebounced = debounce(this.checkAutoHeights.bind(this), 1);\n      }\n      this.checkAutoHeightsDebounced();\n    }\n  }\n  checkAutoHeights() {\n    let notAllPresent = false;\n    let nonePresent = true;\n    let newRowHeight = 0;\n    const autoHeights = this.__autoHeights;\n    if (autoHeights == null) {\n      return;\n    }\n    const displayedAutoHeightCols = this.beans.columnModel.getAllDisplayedAutoHeightCols();\n    displayedAutoHeightCols.forEach((col) => {\n      let cellHeight = autoHeights[col.getId()];\n      if (cellHeight == null) {\n        if (this.beans.columnModel.isColSpanActive()) {\n          let activeColsForRow = [];\n          switch (col.getPinned()) {\n            case \"left\":\n              activeColsForRow = this.beans.columnModel.getDisplayedLeftColumnsForRow(this);\n              break;\n            case \"right\":\n              activeColsForRow = this.beans.columnModel.getDisplayedRightColumnsForRow(this);\n              break;\n            case null:\n              activeColsForRow = this.beans.columnModel.getViewportCenterColumnsForRow(this);\n              break;\n          }\n          if (activeColsForRow.includes(col)) {\n            notAllPresent = true;\n            return;\n          }\n          cellHeight = -1;\n        } else {\n          notAllPresent = true;\n          return;\n        }\n      } else {\n        nonePresent = false;\n      }\n      if (cellHeight > newRowHeight) {\n        newRowHeight = cellHeight;\n      }\n    });\n    if (notAllPresent) {\n      return;\n    }\n    if (nonePresent || newRowHeight < 10) {\n      newRowHeight = this.beans.gos.getRowHeightForNode(this).height;\n    }\n    if (newRowHeight == this.rowHeight) {\n      return;\n    }\n    this.setRowHeight(newRowHeight);\n    const rowModel = this.beans.rowModel;\n    if (rowModel.onRowHeightChangedDebounced) {\n      rowModel.onRowHeightChangedDebounced();\n    }\n  }\n  setRowIndex(rowIndex) {\n    if (this.rowIndex === rowIndex) {\n      return;\n    }\n    this.rowIndex = rowIndex;\n    if (this.eventService) {\n      this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_ROW_INDEX_CHANGED));\n    }\n  }\n  setUiLevel(uiLevel) {\n    if (this.uiLevel === uiLevel) {\n      return;\n    }\n    this.uiLevel = uiLevel;\n    if (this.eventService) {\n      this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_UI_LEVEL_CHANGED));\n    }\n  }\n  /**\n   * Set the expanded state of this rowNode. Pass `true` to expand and `false` to collapse.\n   */\n  setExpanded(expanded, e, forceSync) {\n    if (this.expanded === expanded) {\n      return;\n    }\n    this.expanded = expanded;\n    if (this.eventService) {\n      this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_EXPANDED_CHANGED));\n    }\n    const event = Object.assign({}, this.createGlobalRowEvent(Events.EVENT_ROW_GROUP_OPENED), {\n      expanded,\n      event: e || null\n    });\n    this.beans.rowNodeEventThrottle.dispatchExpanded(event, forceSync);\n    this.beans.rowRenderer.refreshCells({ rowNodes: [this] });\n  }\n  createGlobalRowEvent(type) {\n    return this.beans.gos.addGridCommonParams({\n      type,\n      node: this,\n      data: this.data,\n      rowIndex: this.rowIndex,\n      rowPinned: this.rowPinned\n    });\n  }\n  dispatchLocalEvent(event) {\n    if (this.eventService) {\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  /**\n   * Replaces the value on the `rowNode` for the specified column. When complete,\n   * the grid will refresh the rendered cell on the required row only.\n   * **Note**: This method only fires `onCellEditRequest` when the Grid is in **Read Only** mode.\n   *\n   * @param colKey The column where the value should be updated\n   * @param newValue The new value\n   * @param eventSource The source of the event\n   * @returns `true` if the value was changed, otherwise `false`.\n   */\n  setDataValue(colKey, newValue, eventSource) {\n    const getColumnFromKey = () => {\n      var _a;\n      if (typeof colKey !== \"string\") {\n        return colKey;\n      }\n      return (_a = this.beans.columnModel.getGridColumn(colKey)) != null ? _a : this.beans.columnModel.getPrimaryColumn(colKey);\n    };\n    const column = getColumnFromKey();\n    const oldValue = this.getValueFromValueService(column);\n    if (this.beans.gos.get(\"readOnlyEdit\")) {\n      this.dispatchEventForSaveValueReadOnly(column, oldValue, newValue, eventSource);\n      return false;\n    }\n    const valueChanged = this.beans.valueService.setValue(this, column, newValue, eventSource);\n    this.dispatchCellChangedEvent(column, newValue, oldValue);\n    this.checkRowSelectable();\n    return valueChanged;\n  }\n  getValueFromValueService(column) {\n    var _a, _b;\n    const lockedClosedGroup = this.leafGroup && this.beans.columnModel.isPivotMode();\n    const isOpenGroup = this.group && this.expanded && !this.footer && !lockedClosedGroup;\n    let includeFooter = false;\n    const groupIncludeFooterOpt = (_a = this.beans.gos.get(\"groupTotalRow\")) != null ? _a : this.beans.gos.get(\"groupIncludeFooter\");\n    if (typeof groupIncludeFooterOpt !== \"function\") {\n      includeFooter = !!groupIncludeFooterOpt;\n    } else {\n      const groupIncludeFooterCb = (_b = this.beans.gos.getCallback(\"groupTotalRow\")) != null ? _b : this.beans.gos.getCallback(\"groupIncludeFooter\");\n      includeFooter = !!groupIncludeFooterCb({ node: this });\n    }\n    const groupAlwaysShowAggData = this.beans.gos.get(\"groupSuppressBlankHeader\");\n    const ignoreAggData = isOpenGroup && includeFooter && !groupAlwaysShowAggData;\n    const value = this.beans.valueService.getValue(column, this, false, ignoreAggData);\n    return value;\n  }\n  dispatchEventForSaveValueReadOnly(column, oldValue, newValue, eventSource) {\n    const event = this.beans.gos.addGridCommonParams({\n      type: Events.EVENT_CELL_EDIT_REQUEST,\n      event: null,\n      rowIndex: this.rowIndex,\n      rowPinned: this.rowPinned,\n      column,\n      colDef: column.getColDef(),\n      data: this.data,\n      node: this,\n      oldValue,\n      newValue,\n      value: newValue,\n      source: eventSource\n    });\n    this.beans.eventService.dispatchEvent(event);\n  }\n  setGroupValue(colKey, newValue) {\n    const column = this.beans.columnModel.getGridColumn(colKey);\n    if (missing(this.groupData)) {\n      this.groupData = {};\n    }\n    const columnId = column.getColId();\n    const oldValue = this.groupData[columnId];\n    if (oldValue === newValue) {\n      return;\n    }\n    this.groupData[columnId] = newValue;\n    this.dispatchCellChangedEvent(column, newValue, oldValue);\n  }\n  // sets the data for an aggregation\n  setAggData(newAggData) {\n    const oldAggData = this.aggData;\n    this.aggData = newAggData;\n    if (this.eventService) {\n      const eventFunc = (colId) => {\n        const value = this.aggData ? this.aggData[colId] : void 0;\n        const oldValue = oldAggData ? oldAggData[colId] : void 0;\n        if (value === oldValue) {\n          return;\n        }\n        const column = this.beans.columnModel.lookupGridColumn(colId);\n        if (!column) {\n          return;\n        }\n        this.dispatchCellChangedEvent(column, value, oldValue);\n      };\n      for (const key in this.aggData) {\n        eventFunc(key);\n      }\n      for (const key in newAggData) {\n        if (key in this.aggData) {\n          continue;\n        }\n        eventFunc(key);\n      }\n    }\n  }\n  updateHasChildren() {\n    let newValue = this.group && !this.footer || this.childrenAfterGroup && this.childrenAfterGroup.length > 0;\n    const isSsrm = this.beans.gos.isRowModelType(\"serverSide\");\n    if (isSsrm) {\n      const isTreeData = this.beans.gos.get(\"treeData\");\n      const isGroupFunc = this.beans.gos.get(\"isServerSideGroup\");\n      newValue = !this.stub && !this.footer && (isTreeData ? !!isGroupFunc && isGroupFunc(this.data) : !!this.group);\n    }\n    if (newValue !== this.__hasChildren) {\n      this.__hasChildren = !!newValue;\n      if (this.eventService) {\n        this.eventService.dispatchEvent(this.createLocalRowEvent(_RowNode.EVENT_HAS_CHILDREN_CHANGED));\n      }\n    }\n  }\n  hasChildren() {\n    if (this.__hasChildren == null) {\n      this.updateHasChildren();\n    }\n    return this.__hasChildren;\n  }\n  isEmptyRowGroupNode() {\n    return this.group && missingOrEmpty(this.childrenAfterGroup);\n  }\n  dispatchCellChangedEvent(column, newValue, oldValue) {\n    const cellChangedEvent = {\n      type: _RowNode.EVENT_CELL_CHANGED,\n      node: this,\n      column,\n      newValue,\n      oldValue\n    };\n    this.dispatchLocalEvent(cellChangedEvent);\n  }\n  /**\n   * The first time `quickFilter` runs, the grid creates a one-off string representation of the row.\n   * This string is then used for the quick filter instead of hitting each column separately.\n   * When you edit, using grid editing, this string gets cleared down.\n   * However if you edit without using grid editing, you will need to clear this string down for the row to be updated with the new values.\n   * Otherwise new values will not work with the `quickFilter`. */\n  resetQuickFilterAggregateText() {\n    this.quickFilterAggregateText = null;\n  }\n  /** Returns:\n  * - `true` if the node can be expanded, i.e it is a group or master row.\n  * - `false` if the node cannot be expanded\n  */\n  isExpandable() {\n    if (this.footer) {\n      return false;\n    }\n    if (this.beans.columnModel.isPivotMode()) {\n      return this.hasChildren() && !this.leafGroup;\n    }\n    return this.hasChildren() || !!this.master;\n  }\n  /** Returns:\n   * - `true` if node is selected,\n   * - `false` if the node isn't selected\n   * - `undefined` if it's partially selected (group where not all children are selected). */\n  isSelected() {\n    if (this.footer) {\n      return this.sibling.isSelected();\n    }\n    return this.selected;\n  }\n  /** Perform a depth-first search of this node and its children. */\n  depthFirstSearch(callback) {\n    if (this.childrenAfterGroup) {\n      this.childrenAfterGroup.forEach((child) => child.depthFirstSearch(callback));\n    }\n    callback(this);\n  }\n  // + selectionController.calculatedSelectedForAllGroupNodes()\n  calculateSelectedFromChildren() {\n    var _a;\n    let atLeastOneSelected = false;\n    let atLeastOneDeSelected = false;\n    let atLeastOneMixed = false;\n    if (!((_a = this.childrenAfterGroup) == null ? void 0 : _a.length)) {\n      return this.selectable ? this.selected : null;\n    }\n    for (let i = 0; i < this.childrenAfterGroup.length; i++) {\n      const child = this.childrenAfterGroup[i];\n      let childState = child.isSelected();\n      if (!child.selectable) {\n        const selectable = child.calculateSelectedFromChildren();\n        if (selectable === null) {\n          continue;\n        }\n        childState = selectable;\n      }\n      switch (childState) {\n        case true:\n          atLeastOneSelected = true;\n          break;\n        case false:\n          atLeastOneDeSelected = true;\n          break;\n        default:\n          atLeastOneMixed = true;\n          break;\n      }\n    }\n    if (atLeastOneMixed || atLeastOneSelected && atLeastOneDeSelected) {\n      return void 0;\n    }\n    if (atLeastOneSelected) {\n      return true;\n    }\n    if (atLeastOneDeSelected) {\n      return false;\n    }\n    if (!this.selectable) {\n      return null;\n    }\n    return this.selected;\n  }\n  setSelectedInitialValue(selected) {\n    this.selected = selected;\n  }\n  selectThisNode(newValue, e, source = \"api\") {\n    const selectionNotAllowed = !this.selectable && newValue;\n    const selectionNotChanged = this.selected === newValue;\n    if (selectionNotAllowed || selectionNotChanged) {\n      return false;\n    }\n    this.selected = newValue;\n    if (this.eventService) {\n      this.dispatchLocalEvent(this.createLocalRowEvent(_RowNode.EVENT_ROW_SELECTED));\n    }\n    const sibling = this.sibling;\n    if (sibling && sibling.footer && sibling.eventService) {\n      sibling.dispatchLocalEvent(sibling.createLocalRowEvent(_RowNode.EVENT_ROW_SELECTED));\n    }\n    const event = __spreadProps(__spreadValues({}, this.createGlobalRowEvent(Events.EVENT_ROW_SELECTED)), {\n      event: e || null,\n      source\n    });\n    this.beans.eventService.dispatchEvent(event);\n    return true;\n  }\n  /**\n   * Select (or deselect) the node.\n   * @param newValue -`true` for selection, `false` for deselection.\n   * @param clearSelection - If selecting, then passing `true` will select the node exclusively (i.e. NOT do multi select). If doing deselection, `clearSelection` has no impact.\n   * @param source - Source property that will appear in the `selectionChanged` event.\n   */\n  setSelected(newValue, clearSelection = false, source = \"api\") {\n    if (typeof source === \"boolean\") {\n      console.warn(\"AG Grid: since version v30, rowNode.setSelected() property `suppressFinishActions` has been removed, please use `gridApi.setNodesSelected()` for bulk actions, and the event `source` property for ignoring events instead.\");\n      return;\n    }\n    this.setSelectedParams({\n      newValue,\n      clearSelection,\n      rangeSelect: false,\n      source\n    });\n  }\n  // this is for internal use only. To make calling code more readable, this is the same method as setSelected except it takes names parameters\n  setSelectedParams(params) {\n    if (this.rowPinned) {\n      console.warn(\"AG Grid: cannot select pinned rows\");\n      return 0;\n    }\n    if (this.id === void 0) {\n      console.warn(\"AG Grid: cannot select node until id for node is known\");\n      return 0;\n    }\n    return this.beans.selectionService.setNodesSelected(__spreadProps(__spreadValues({}, params), { nodes: [this.footer ? this.sibling : this] }));\n  }\n  /**\n   * Returns:\n   * - `true` if node is either pinned to the `top` or `bottom`\n   * - `false` if the node isn't pinned\n   */\n  isRowPinned() {\n    return this.rowPinned === \"top\" || this.rowPinned === \"bottom\";\n  }\n  isParentOfNode(potentialParent) {\n    let parentNode = this.parent;\n    while (parentNode) {\n      if (parentNode === potentialParent) {\n        return true;\n      }\n      parentNode = parentNode.parent;\n    }\n    return false;\n  }\n  /** Add an event listener. */\n  addEventListener(eventType, userListener) {\n    var _a, _b;\n    if (!this.eventService) {\n      this.eventService = new EventService();\n    }\n    if (this.beans.frameworkOverrides.shouldWrapOutgoing && !this.frameworkEventListenerService) {\n      this.eventService.setFrameworkOverrides(this.beans.frameworkOverrides);\n      this.frameworkEventListenerService = new FrameworkEventListenerService(this.beans.frameworkOverrides);\n    }\n    const listener = (_b = (_a = this.frameworkEventListenerService) == null ? void 0 : _a.wrap(userListener)) != null ? _b : userListener;\n    this.eventService.addEventListener(eventType, listener);\n  }\n  /** Remove event listener. */\n  removeEventListener(eventType, userListener) {\n    var _a, _b;\n    if (!this.eventService) {\n      return;\n    }\n    const listener = (_b = (_a = this.frameworkEventListenerService) == null ? void 0 : _a.unwrap(userListener)) != null ? _b : userListener;\n    this.eventService.removeEventListener(eventType, listener);\n    if (this.eventService.noRegisteredListenersExist()) {\n      this.eventService = null;\n    }\n  }\n  onMouseEnter() {\n    this.dispatchLocalEvent(this.createLocalRowEvent(_RowNode.EVENT_MOUSE_ENTER));\n  }\n  onMouseLeave() {\n    this.dispatchLocalEvent(this.createLocalRowEvent(_RowNode.EVENT_MOUSE_LEAVE));\n  }\n  getFirstChildOfFirstChild(rowGroupColumn) {\n    let currentRowNode = this;\n    let isCandidate = true;\n    let foundFirstChildPath = false;\n    let nodeToSwapIn = null;\n    while (isCandidate && !foundFirstChildPath) {\n      const parentRowNode = currentRowNode.parent;\n      const firstChild = exists(parentRowNode) && currentRowNode.firstChild;\n      if (firstChild) {\n        if (parentRowNode.rowGroupColumn === rowGroupColumn) {\n          foundFirstChildPath = true;\n          nodeToSwapIn = parentRowNode;\n        }\n      } else {\n        isCandidate = false;\n      }\n      currentRowNode = parentRowNode;\n    }\n    return foundFirstChildPath ? nodeToSwapIn : null;\n  }\n  /**\n   * Returns:\n   * - `true` if the node is a full width cell\n   * - `false` if the node is not a full width cell\n   */\n  isFullWidthCell() {\n    if (this.detail) {\n      return true;\n    }\n    const isFullWidthCellFunc = this.beans.gos.getCallback(\"isFullWidthRow\");\n    return isFullWidthCellFunc ? isFullWidthCellFunc({ rowNode: this }) : false;\n  }\n  /**\n   * Returns the route of the row node. If the Row Node is a group, it returns the route to that Row Node.\n   * If the Row Node is not a group, it returns `undefined`.\n   */\n  getRoute() {\n    if (this.key == null) {\n      return;\n    }\n    const res = [];\n    let pointer = this;\n    while (pointer.key != null) {\n      res.push(pointer.key);\n      pointer = pointer.parent;\n    }\n    return res.reverse();\n  }\n  createFooter() {\n    if (this.sibling) {\n      return;\n    }\n    const ignoredProperties = /* @__PURE__ */ new Set([\n      \"eventService\",\n      \"__objectId\",\n      \"sticky\"\n    ]);\n    const footerNode = new _RowNode(this.beans);\n    Object.keys(this).forEach((key) => {\n      if (ignoredProperties.has(key)) {\n        return;\n      }\n      footerNode[key] = this[key];\n    });\n    footerNode.footer = true;\n    footerNode.setRowTop(null);\n    footerNode.setRowIndex(null);\n    footerNode.oldRowTop = null;\n    footerNode.id = \"rowGroupFooter_\" + this.id;\n    footerNode.sibling = this;\n    this.sibling = footerNode;\n  }\n  // Only used by SSRM. In CSRM this is never used as footers should always be present for\n  // the purpose of exporting collapsed groups. In SSRM it is not possible to export collapsed\n  // groups anyway, so can destroy footers.\n  destroyFooter() {\n    if (!this.sibling) {\n      return;\n    }\n    this.sibling.setRowTop(null);\n    this.sibling.setRowIndex(null);\n    this.sibling = void 0;\n  }\n};\n_RowNode.ID_PREFIX_ROW_GROUP = \"row-group-\";\n_RowNode.ID_PREFIX_TOP_PINNED = \"t-\";\n_RowNode.ID_PREFIX_BOTTOM_PINNED = \"b-\";\n_RowNode.OBJECT_ID_SEQUENCE = 0;\n_RowNode.EVENT_ROW_SELECTED = \"rowSelected\";\n_RowNode.EVENT_DATA_CHANGED = \"dataChanged\";\n_RowNode.EVENT_CELL_CHANGED = \"cellChanged\";\n_RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED = \"allChildrenCountChanged\";\n_RowNode.EVENT_MASTER_CHANGED = \"masterChanged\";\n_RowNode.EVENT_GROUP_CHANGED = \"groupChanged\";\n_RowNode.EVENT_MOUSE_ENTER = \"mouseEnter\";\n_RowNode.EVENT_MOUSE_LEAVE = \"mouseLeave\";\n_RowNode.EVENT_HEIGHT_CHANGED = \"heightChanged\";\n_RowNode.EVENT_TOP_CHANGED = \"topChanged\";\n_RowNode.EVENT_DISPLAYED_CHANGED = \"displayedChanged\";\n_RowNode.EVENT_FIRST_CHILD_CHANGED = \"firstChildChanged\";\n_RowNode.EVENT_LAST_CHILD_CHANGED = \"lastChildChanged\";\n_RowNode.EVENT_CHILD_INDEX_CHANGED = \"childIndexChanged\";\n_RowNode.EVENT_ROW_INDEX_CHANGED = \"rowIndexChanged\";\n_RowNode.EVENT_EXPANDED_CHANGED = \"expandedChanged\";\n_RowNode.EVENT_HAS_CHILDREN_CHANGED = \"hasChildrenChanged\";\n_RowNode.EVENT_SELECTABLE_CHANGED = \"selectableChanged\";\n_RowNode.EVENT_UI_LEVEL_CHANGED = \"uiLevelChanged\";\n_RowNode.EVENT_HIGHLIGHT_CHANGED = \"rowHighlightChanged\";\n_RowNode.EVENT_DRAGGING_CHANGED = \"draggingChanged\";\nvar RowNode = _RowNode;\n\n// community-modules/core/src/rendering/checkboxSelectionComponent.ts\nvar CheckboxSelectionComponent = class extends Component {\n  constructor() {\n    super(\n      /* html*/\n      `\n            <div class=\"ag-selection-checkbox\" role=\"presentation\">\n                <ag-checkbox role=\"presentation\" ref=\"eCheckbox\"></ag-checkbox>\n            </div>`\n    );\n  }\n  postConstruct() {\n    this.eCheckbox.setPassive(true);\n  }\n  getCheckboxId() {\n    return this.eCheckbox.getInputElement().id;\n  }\n  onDataChanged() {\n    this.onSelectionChanged();\n  }\n  onSelectableChanged() {\n    this.showOrHideSelect();\n  }\n  onSelectionChanged() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const state = this.rowNode.isSelected();\n    const stateName = getAriaCheckboxStateName(translate, state);\n    const [ariaKey, ariaLabel] = this.rowNode.selectable ? [\"ariaRowToggleSelection\", \"Press Space to toggle row selection\"] : [\"ariaRowSelectionDisabled\", \"Row Selection is disabled for this row\"];\n    const translatedLabel = translate(ariaKey, ariaLabel);\n    this.eCheckbox.setValue(state, true);\n    this.eCheckbox.setInputAriaLabel(`${translatedLabel} (${stateName})`);\n  }\n  onClicked(newValue, groupSelectsFiltered, event) {\n    return this.rowNode.setSelectedParams({ newValue, rangeSelect: event.shiftKey, groupSelectsFiltered, event, source: \"checkboxSelected\" });\n  }\n  init(params) {\n    this.rowNode = params.rowNode;\n    this.column = params.column;\n    this.overrides = params.overrides;\n    this.onSelectionChanged();\n    this.addManagedListener(this.eCheckbox.getInputElement(), \"dblclick\", (event) => {\n      stopPropagationForAgGrid(event);\n    });\n    this.addManagedListener(this.eCheckbox.getInputElement(), \"click\", (event) => {\n      stopPropagationForAgGrid(event);\n      const groupSelectsFiltered = this.gos.get(\"groupSelectsFiltered\");\n      const isSelected = this.eCheckbox.getValue();\n      if (this.shouldHandleIndeterminateState(isSelected, groupSelectsFiltered)) {\n        const result = this.onClicked(true, groupSelectsFiltered, event || {});\n        if (result === 0) {\n          this.onClicked(false, groupSelectsFiltered, event);\n        }\n      } else if (isSelected) {\n        this.onClicked(false, groupSelectsFiltered, event);\n      } else {\n        this.onClicked(true, groupSelectsFiltered, event || {});\n      }\n    });\n    this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_SELECTED, this.onSelectionChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.onDataChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_SELECTABLE_CHANGED, this.onSelectableChanged.bind(this));\n    const isRowSelectableFunc = this.gos.get(\"isRowSelectable\");\n    const checkboxVisibleIsDynamic = isRowSelectableFunc || typeof this.getIsVisible() === \"function\";\n    if (checkboxVisibleIsDynamic) {\n      const showOrHideSelectListener = this.showOrHideSelect.bind(this);\n      this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, showOrHideSelectListener);\n      this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, showOrHideSelectListener);\n      this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, showOrHideSelectListener);\n      this.showOrHideSelect();\n    }\n    this.eCheckbox.getInputElement().setAttribute(\"tabindex\", \"-1\");\n  }\n  shouldHandleIndeterminateState(isSelected, groupSelectsFiltered) {\n    return groupSelectsFiltered && (this.eCheckbox.getPreviousValue() === void 0 || isSelected === void 0) && this.gos.isRowModelType(\"clientSide\");\n  }\n  showOrHideSelect() {\n    var _a, _b, _c;\n    let selectable = this.rowNode.selectable;\n    const isVisible2 = this.getIsVisible();\n    if (selectable) {\n      if (typeof isVisible2 === \"function\") {\n        const extraParams = (_a = this.overrides) == null ? void 0 : _a.callbackParams;\n        if (!this.column) {\n          selectable = isVisible2(__spreadProps(__spreadValues({}, extraParams), { node: this.rowNode, data: this.rowNode.data }));\n        } else {\n          const params = this.column.createColumnFunctionCallbackParams(this.rowNode);\n          selectable = isVisible2(__spreadValues(__spreadValues({}, extraParams), params));\n        }\n      } else {\n        selectable = isVisible2 != null ? isVisible2 : false;\n      }\n    }\n    const disableInsteadOfHide = (_b = this.column) == null ? void 0 : _b.getColDef().showDisabledCheckboxes;\n    if (disableInsteadOfHide) {\n      this.eCheckbox.setDisabled(!selectable);\n      this.setVisible(true);\n      this.setDisplayed(true);\n      return;\n    }\n    if ((_c = this.overrides) == null ? void 0 : _c.removeHidden) {\n      this.setDisplayed(selectable);\n      return;\n    }\n    this.setVisible(selectable);\n  }\n  getIsVisible() {\n    var _a, _b;\n    if (this.overrides) {\n      return this.overrides.isVisible;\n    }\n    return (_b = (_a = this.column) == null ? void 0 : _a.getColDef()) == null ? void 0 : _b.checkboxSelection;\n  }\n};\n__decorateClass([\n  RefSelector(\"eCheckbox\")\n], CheckboxSelectionComponent.prototype, \"eCheckbox\", 2);\n__decorateClass([\n  PostConstruct\n], CheckboxSelectionComponent.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/constants/direction.ts\nvar VerticalDirection = /* @__PURE__ */ ((VerticalDirection2) => {\n  VerticalDirection2[VerticalDirection2[\"Up\"] = 0] = \"Up\";\n  VerticalDirection2[VerticalDirection2[\"Down\"] = 1] = \"Down\";\n  return VerticalDirection2;\n})(VerticalDirection || {});\nvar HorizontalDirection = /* @__PURE__ */ ((HorizontalDirection2) => {\n  HorizontalDirection2[HorizontalDirection2[\"Left\"] = 0] = \"Left\";\n  HorizontalDirection2[HorizontalDirection2[\"Right\"] = 1] = \"Right\";\n  return HorizontalDirection2;\n})(HorizontalDirection || {});\n\n// community-modules/core/src/dragAndDrop/dragAndDropService.ts\nvar DragSourceType = /* @__PURE__ */ ((DragSourceType4) => {\n  DragSourceType4[DragSourceType4[\"ToolPanel\"] = 0] = \"ToolPanel\";\n  DragSourceType4[DragSourceType4[\"HeaderCell\"] = 1] = \"HeaderCell\";\n  DragSourceType4[DragSourceType4[\"RowDrag\"] = 2] = \"RowDrag\";\n  DragSourceType4[DragSourceType4[\"ChartPanel\"] = 3] = \"ChartPanel\";\n  DragSourceType4[DragSourceType4[\"AdvancedFilterBuilder\"] = 4] = \"AdvancedFilterBuilder\";\n  return DragSourceType4;\n})(DragSourceType || {});\nvar DragAndDropService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.dragSourceAndParamsList = [];\n    this.dropTargets = [];\n  }\n  init() {\n    this.ePinnedIcon = createIcon(\"columnMovePin\", this.gos, null);\n    this.eHideIcon = createIcon(\"columnMoveHide\", this.gos, null);\n    this.eMoveIcon = createIcon(\"columnMoveMove\", this.gos, null);\n    this.eLeftIcon = createIcon(\"columnMoveLeft\", this.gos, null);\n    this.eRightIcon = createIcon(\"columnMoveRight\", this.gos, null);\n    this.eGroupIcon = createIcon(\"columnMoveGroup\", this.gos, null);\n    this.eAggregateIcon = createIcon(\"columnMoveValue\", this.gos, null);\n    this.ePivotIcon = createIcon(\"columnMovePivot\", this.gos, null);\n    this.eDropNotAllowedIcon = createIcon(\"dropNotAllowed\", this.gos, null);\n  }\n  addDragSource(dragSource, allowTouch = false) {\n    const params = {\n      eElement: dragSource.eElement,\n      dragStartPixels: dragSource.dragStartPixels,\n      onDragStart: this.onDragStart.bind(this, dragSource),\n      onDragStop: this.onDragStop.bind(this),\n      onDragging: this.onDragging.bind(this),\n      includeTouch: allowTouch\n    };\n    this.dragSourceAndParamsList.push({ params, dragSource });\n    this.dragService.addDragSource(params);\n  }\n  removeDragSource(dragSource) {\n    const sourceAndParams = this.dragSourceAndParamsList.find((item) => item.dragSource === dragSource);\n    if (sourceAndParams) {\n      this.dragService.removeDragSource(sourceAndParams.params);\n      removeFromArray(this.dragSourceAndParamsList, sourceAndParams);\n    }\n  }\n  clearDragSourceParamsList() {\n    this.dragSourceAndParamsList.forEach((sourceAndParams) => this.dragService.removeDragSource(sourceAndParams.params));\n    this.dragSourceAndParamsList.length = 0;\n    this.dropTargets.length = 0;\n  }\n  nudge() {\n    if (this.dragging) {\n      this.onDragging(this.eventLastTime, true);\n    }\n  }\n  onDragStart(dragSource, mouseEvent) {\n    this.dragging = true;\n    this.dragSource = dragSource;\n    this.eventLastTime = mouseEvent;\n    this.dragItem = this.dragSource.getDragItem();\n    this.lastDropTarget = void 0;\n    if (this.dragSource.onDragStarted) {\n      this.dragSource.onDragStarted();\n    }\n    this.createGhost();\n  }\n  onDragStop(mouseEvent) {\n    this.eventLastTime = null;\n    this.dragging = false;\n    if (this.dragSource.onDragStopped) {\n      this.dragSource.onDragStopped();\n    }\n    if (this.lastDropTarget && this.lastDropTarget.onDragStop) {\n      const draggingEvent = this.createDropTargetEvent(this.lastDropTarget, mouseEvent, null, null, false);\n      this.lastDropTarget.onDragStop(draggingEvent);\n    }\n    this.lastDropTarget = null;\n    this.dragItem = null;\n    this.removeGhost();\n  }\n  onDragging(mouseEvent, fromNudge) {\n    var _a, _b, _c, _d;\n    const hDirection = this.getHorizontalDirection(mouseEvent);\n    const vDirection = this.getVerticalDirection(mouseEvent);\n    this.eventLastTime = mouseEvent;\n    this.positionGhost(mouseEvent);\n    const validDropTargets = this.dropTargets.filter((target) => this.isMouseOnDropTarget(mouseEvent, target));\n    const dropTarget = this.findCurrentDropTarget(mouseEvent, validDropTargets);\n    if (dropTarget !== this.lastDropTarget) {\n      this.leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge);\n      if (this.lastDropTarget !== null && dropTarget === null) {\n        (_b = (_a = this.dragSource).onGridExit) == null ? void 0 : _b.call(_a, this.dragItem);\n      }\n      if (this.lastDropTarget === null && dropTarget !== null) {\n        (_d = (_c = this.dragSource).onGridEnter) == null ? void 0 : _d.call(_c, this.dragItem);\n      }\n      this.enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      this.lastDropTarget = dropTarget;\n    } else if (dropTarget && dropTarget.onDragging) {\n      const draggingEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      dropTarget.onDragging(draggingEvent);\n    }\n  }\n  getAllContainersFromDropTarget(dropTarget) {\n    const secondaryContainers = dropTarget.getSecondaryContainers ? dropTarget.getSecondaryContainers() : null;\n    const containers = [[dropTarget.getContainer()]];\n    return secondaryContainers ? containers.concat(secondaryContainers) : containers;\n  }\n  allContainersIntersect(mouseEvent, containers) {\n    for (const container of containers) {\n      const rect = container.getBoundingClientRect();\n      if (rect.width === 0 || rect.height === 0) {\n        return false;\n      }\n      const horizontalFit = mouseEvent.clientX >= rect.left && mouseEvent.clientX < rect.right;\n      const verticalFit = mouseEvent.clientY >= rect.top && mouseEvent.clientY < rect.bottom;\n      if (!horizontalFit || !verticalFit) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // checks if the mouse is on the drop target. it checks eContainer and eSecondaryContainers\n  isMouseOnDropTarget(mouseEvent, dropTarget) {\n    const allContainersFromDropTarget = this.getAllContainersFromDropTarget(dropTarget);\n    let mouseOverTarget = false;\n    for (const currentContainers of allContainersFromDropTarget) {\n      if (this.allContainersIntersect(mouseEvent, currentContainers)) {\n        mouseOverTarget = true;\n        break;\n      }\n    }\n    if (dropTarget.targetContainsSource && !dropTarget.getContainer().contains(this.dragSource.eElement)) {\n      return false;\n    }\n    return mouseOverTarget && dropTarget.isInterestedIn(this.dragSource.type, this.dragSource.eElement);\n  }\n  findCurrentDropTarget(mouseEvent, validDropTargets) {\n    const len = validDropTargets.length;\n    if (len === 0) {\n      return null;\n    }\n    if (len === 1) {\n      return validDropTargets[0];\n    }\n    const rootNode = this.gos.getRootNode();\n    const elementStack = rootNode.elementsFromPoint(mouseEvent.clientX, mouseEvent.clientY);\n    for (const el of elementStack) {\n      for (const dropTarget of validDropTargets) {\n        const containers = flatten(this.getAllContainersFromDropTarget(dropTarget));\n        if (containers.indexOf(el) !== -1) {\n          return dropTarget;\n        }\n      }\n    }\n    return null;\n  }\n  enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge) {\n    if (!dropTarget) {\n      return;\n    }\n    if (dropTarget.onDragEnter) {\n      const dragEnterEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      dropTarget.onDragEnter(dragEnterEvent);\n    }\n    this.setGhostIcon(dropTarget.getIconName ? dropTarget.getIconName() : null);\n  }\n  leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge) {\n    if (!this.lastDropTarget) {\n      return;\n    }\n    if (this.lastDropTarget.onDragLeave) {\n      const dragLeaveEvent = this.createDropTargetEvent(this.lastDropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      this.lastDropTarget.onDragLeave(dragLeaveEvent);\n    }\n    this.setGhostIcon(null);\n  }\n  addDropTarget(dropTarget) {\n    this.dropTargets.push(dropTarget);\n  }\n  removeDropTarget(dropTarget) {\n    this.dropTargets = this.dropTargets.filter((target) => target.getContainer() !== dropTarget.getContainer());\n  }\n  hasExternalDropZones() {\n    return this.dropTargets.some((zones) => zones.external);\n  }\n  findExternalZone(params) {\n    const externalTargets = this.dropTargets.filter((target) => target.external);\n    return externalTargets.find((zone) => zone.getContainer() === params.getContainer()) || null;\n  }\n  getHorizontalDirection(event) {\n    const clientX = this.eventLastTime && this.eventLastTime.clientX;\n    const eClientX = event.clientX;\n    if (clientX === eClientX) {\n      return null;\n    }\n    return clientX > eClientX ? 0 /* Left */ : 1 /* Right */;\n  }\n  getVerticalDirection(event) {\n    const clientY = this.eventLastTime && this.eventLastTime.clientY;\n    const eClientY = event.clientY;\n    if (clientY === eClientY) {\n      return null;\n    }\n    return clientY > eClientY ? 0 /* Up */ : 1 /* Down */;\n  }\n  createDropTargetEvent(dropTarget, event, hDirection, vDirection, fromNudge) {\n    const dropZoneTarget = dropTarget.getContainer();\n    const rect = dropZoneTarget.getBoundingClientRect();\n    const { gridApi: api, columnApi, dragItem, dragSource } = this;\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    return { event, x, y, vDirection, hDirection, dragSource, fromNudge, dragItem, api, columnApi, dropZoneTarget };\n  }\n  positionGhost(event) {\n    const ghost = this.eGhost;\n    if (!ghost) {\n      return;\n    }\n    const ghostRect = ghost.getBoundingClientRect();\n    const ghostHeight = ghostRect.height;\n    const browserWidth = getBodyWidth() - 2;\n    const browserHeight = getBodyHeight() - 2;\n    const offsetParentSize = getElementRectWithOffset(ghost.offsetParent);\n    const { clientY, clientX } = event;\n    let top = clientY - offsetParentSize.top - ghostHeight / 2;\n    let left = clientX - offsetParentSize.left - 10;\n    const eDocument = this.gos.getDocument();\n    const win = eDocument.defaultView || window;\n    const windowScrollY = win.pageYOffset || eDocument.documentElement.scrollTop;\n    const windowScrollX = win.pageXOffset || eDocument.documentElement.scrollLeft;\n    if (browserWidth > 0 && left + ghost.clientWidth > browserWidth + windowScrollX) {\n      left = browserWidth + windowScrollX - ghost.clientWidth;\n    }\n    if (left < 0) {\n      left = 0;\n    }\n    if (browserHeight > 0 && top + ghost.clientHeight > browserHeight + windowScrollY) {\n      top = browserHeight + windowScrollY - ghost.clientHeight;\n    }\n    if (top < 0) {\n      top = 0;\n    }\n    ghost.style.left = `${left}px`;\n    ghost.style.top = `${top}px`;\n  }\n  removeGhost() {\n    if (this.eGhost && this.eGhostParent) {\n      this.eGhostParent.removeChild(this.eGhost);\n    }\n    this.eGhost = null;\n  }\n  createGhost() {\n    this.eGhost = loadTemplate(DragAndDropService.GHOST_TEMPLATE);\n    this.mouseEventService.stampTopLevelGridCompWithGridInstance(this.eGhost);\n    const { theme } = this.environment.getTheme();\n    if (theme) {\n      this.eGhost.classList.add(theme);\n    }\n    this.eGhostIcon = this.eGhost.querySelector(\".ag-dnd-ghost-icon\");\n    this.setGhostIcon(null);\n    const eText = this.eGhost.querySelector(\".ag-dnd-ghost-label\");\n    let dragItemName = this.dragSource.dragItemName;\n    if (isFunction(dragItemName)) {\n      dragItemName = dragItemName();\n    }\n    eText.innerHTML = escapeString(dragItemName) || \"\";\n    this.eGhost.style.height = \"25px\";\n    this.eGhost.style.top = \"20px\";\n    this.eGhost.style.left = \"20px\";\n    const eDocument = this.gos.getDocument();\n    let rootNode = null;\n    let targetEl = null;\n    try {\n      rootNode = eDocument.fullscreenElement;\n    } catch (e) {\n    } finally {\n      if (!rootNode) {\n        rootNode = this.gos.getRootNode();\n      }\n      const body = rootNode.querySelector(\"body\");\n      if (body) {\n        targetEl = body;\n      } else if (rootNode instanceof ShadowRoot) {\n        targetEl = rootNode;\n      } else if (rootNode instanceof Document) {\n        targetEl = rootNode == null ? void 0 : rootNode.documentElement;\n      } else {\n        targetEl = rootNode;\n      }\n    }\n    this.eGhostParent = targetEl;\n    if (!this.eGhostParent) {\n      console.warn(\"AG Grid: could not find document body, it is needed for dragging columns\");\n    } else {\n      this.eGhostParent.appendChild(this.eGhost);\n    }\n  }\n  setGhostIcon(iconName, shake = false) {\n    clearElement(this.eGhostIcon);\n    let eIcon = null;\n    if (!iconName) {\n      iconName = this.dragSource.getDefaultIconName ? this.dragSource.getDefaultIconName() : DragAndDropService.ICON_NOT_ALLOWED;\n    }\n    switch (iconName) {\n      case DragAndDropService.ICON_PINNED:\n        eIcon = this.ePinnedIcon;\n        break;\n      case DragAndDropService.ICON_MOVE:\n        eIcon = this.eMoveIcon;\n        break;\n      case DragAndDropService.ICON_LEFT:\n        eIcon = this.eLeftIcon;\n        break;\n      case DragAndDropService.ICON_RIGHT:\n        eIcon = this.eRightIcon;\n        break;\n      case DragAndDropService.ICON_GROUP:\n        eIcon = this.eGroupIcon;\n        break;\n      case DragAndDropService.ICON_AGGREGATE:\n        eIcon = this.eAggregateIcon;\n        break;\n      case DragAndDropService.ICON_PIVOT:\n        eIcon = this.ePivotIcon;\n        break;\n      case DragAndDropService.ICON_NOT_ALLOWED:\n        eIcon = this.eDropNotAllowedIcon;\n        break;\n      case DragAndDropService.ICON_HIDE:\n        eIcon = this.eHideIcon;\n        break;\n    }\n    this.eGhostIcon.classList.toggle(\"ag-shake-left-to-right\", shake);\n    if (eIcon === this.eHideIcon && this.gos.get(\"suppressDragLeaveHidesColumns\")) {\n      return;\n    }\n    if (eIcon) {\n      this.eGhostIcon.appendChild(eIcon);\n    }\n  }\n};\nDragAndDropService.ICON_PINNED = \"pinned\";\nDragAndDropService.ICON_MOVE = \"move\";\nDragAndDropService.ICON_LEFT = \"left\";\nDragAndDropService.ICON_RIGHT = \"right\";\nDragAndDropService.ICON_GROUP = \"group\";\nDragAndDropService.ICON_AGGREGATE = \"aggregate\";\nDragAndDropService.ICON_PIVOT = \"pivot\";\nDragAndDropService.ICON_NOT_ALLOWED = \"notAllowed\";\nDragAndDropService.ICON_HIDE = \"hide\";\nDragAndDropService.GHOST_TEMPLATE = /* html */\n`<div class=\"ag-dnd-ghost ag-unselectable\">\n            <span class=\"ag-dnd-ghost-icon ag-shake-left-to-right\"></span>\n            <div class=\"ag-dnd-ghost-label\"></div>\n        </div>`;\n__decorateClass([\n  Autowired(\"dragService\")\n], DragAndDropService.prototype, \"dragService\", 2);\n__decorateClass([\n  Autowired(\"mouseEventService\")\n], DragAndDropService.prototype, \"mouseEventService\", 2);\n__decorateClass([\n  Autowired(\"columnApi\")\n], DragAndDropService.prototype, \"columnApi\", 2);\n__decorateClass([\n  Autowired(\"gridApi\")\n], DragAndDropService.prototype, \"gridApi\", 2);\n__decorateClass([\n  PostConstruct\n], DragAndDropService.prototype, \"init\", 1);\n__decorateClass([\n  PreDestroy\n], DragAndDropService.prototype, \"clearDragSourceParamsList\", 1);\nDragAndDropService = __decorateClass([\n  Bean(\"dragAndDropService\")\n], DragAndDropService);\n\n// community-modules/core/src/rendering/row/rowDragComp.ts\nvar RowDragComp = class extends Component {\n  constructor(cellValueFn, rowNode, column, customGui, dragStartPixels, suppressVisibilityChange) {\n    super();\n    this.cellValueFn = cellValueFn;\n    this.rowNode = rowNode;\n    this.column = column;\n    this.customGui = customGui;\n    this.dragStartPixels = dragStartPixels;\n    this.suppressVisibilityChange = suppressVisibilityChange;\n    this.dragSource = null;\n  }\n  isCustomGui() {\n    return this.customGui != null;\n  }\n  postConstruct() {\n    if (!this.customGui) {\n      this.setTemplate(\n        /* html */\n        `<div class=\"ag-drag-handle ag-row-drag\" aria-hidden=\"true\"></div>`\n      );\n      this.getGui().appendChild(createIconNoSpan(\"rowDrag\", this.gos, null));\n      this.addDragSource();\n    } else {\n      this.setDragElement(this.customGui, this.dragStartPixels);\n    }\n    this.checkCompatibility();\n    if (!this.suppressVisibilityChange) {\n      const strategy = this.gos.get(\"rowDragManaged\") ? new ManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column) : new NonManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column);\n      this.createManagedBean(strategy, this.beans.context);\n    }\n  }\n  setDragElement(dragElement, dragStartPixels) {\n    this.setTemplateFromElement(dragElement);\n    this.addDragSource(dragStartPixels);\n  }\n  getSelectedNodes() {\n    const isRowDragMultiRow = this.gos.get(\"rowDragMultiRow\");\n    if (!isRowDragMultiRow) {\n      return [this.rowNode];\n    }\n    const selection = this.beans.selectionService.getSelectedNodes();\n    return selection.indexOf(this.rowNode) !== -1 ? selection : [this.rowNode];\n  }\n  // returns true if all compatibility items work out\n  checkCompatibility() {\n    const managed = this.gos.get(\"rowDragManaged\");\n    const treeData = this.gos.get(\"treeData\");\n    if (treeData && managed) {\n      warnOnce(\"If using row drag with tree data, you cannot have rowDragManaged=true\");\n    }\n  }\n  getDragItem() {\n    return {\n      rowNode: this.rowNode,\n      rowNodes: this.getSelectedNodes(),\n      columns: this.column ? [this.column] : void 0,\n      defaultTextValue: this.cellValueFn()\n    };\n  }\n  getRowDragText(column) {\n    if (column) {\n      const colDef = column.getColDef();\n      if (colDef.rowDragText) {\n        return colDef.rowDragText;\n      }\n    }\n    return this.gos.get(\"rowDragText\");\n  }\n  addDragSource(dragStartPixels = 4) {\n    if (this.dragSource) {\n      this.removeDragSource();\n    }\n    const translate = this.localeService.getLocaleTextFunc();\n    this.dragSource = {\n      type: 2 /* RowDrag */,\n      eElement: this.getGui(),\n      dragItemName: () => {\n        var _a;\n        const dragItem = this.getDragItem();\n        const dragItemCount = ((_a = dragItem.rowNodes) == null ? void 0 : _a.length) || 1;\n        const rowDragText = this.getRowDragText(this.column);\n        if (rowDragText) {\n          return rowDragText(dragItem, dragItemCount);\n        }\n        return dragItemCount === 1 ? this.cellValueFn() : `${dragItemCount} ${translate(\"rowDragRows\", \"rows\")}`;\n      },\n      getDragItem: () => this.getDragItem(),\n      dragStartPixels,\n      dragSourceDomDataKey: this.gos.getDomDataKey()\n    };\n    this.beans.dragAndDropService.addDragSource(this.dragSource, true);\n  }\n  removeDragSource() {\n    if (this.dragSource) {\n      this.beans.dragAndDropService.removeDragSource(this.dragSource);\n    }\n    this.dragSource = null;\n  }\n};\n__decorateClass([\n  Autowired(\"beans\")\n], RowDragComp.prototype, \"beans\", 2);\n__decorateClass([\n  PostConstruct\n], RowDragComp.prototype, \"postConstruct\", 1);\n__decorateClass([\n  PreDestroy\n], RowDragComp.prototype, \"removeDragSource\", 1);\nvar VisibilityStrategy = class extends BeanStub {\n  constructor(parent, rowNode, column) {\n    super();\n    this.parent = parent;\n    this.rowNode = rowNode;\n    this.column = column;\n  }\n  setDisplayedOrVisible(neverDisplayed) {\n    const displayedOptions = { skipAriaHidden: true };\n    if (neverDisplayed) {\n      this.parent.setDisplayed(false, displayedOptions);\n    } else {\n      let shown = true;\n      let isShownSometimes = false;\n      if (this.column) {\n        shown = this.column.isRowDrag(this.rowNode) || this.parent.isCustomGui();\n        isShownSometimes = isFunction(this.column.getColDef().rowDrag);\n      }\n      if (isShownSometimes) {\n        this.parent.setDisplayed(true, displayedOptions);\n        this.parent.setVisible(shown, displayedOptions);\n      } else {\n        this.parent.setDisplayed(shown, displayedOptions);\n        this.parent.setVisible(true, displayedOptions);\n      }\n    }\n  }\n};\nvar NonManagedVisibilityStrategy = class extends VisibilityStrategy {\n  constructor(parent, beans, rowNode, column) {\n    super(parent, rowNode, column);\n    this.beans = beans;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"suppressRowDrag\", this.onSuppressRowDrag.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this));\n    this.addManagedListener(this.beans.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.workOutVisibility.bind(this));\n    this.workOutVisibility();\n  }\n  onSuppressRowDrag() {\n    this.workOutVisibility();\n  }\n  workOutVisibility() {\n    const neverDisplayed = this.gos.get(\"suppressRowDrag\");\n    this.setDisplayedOrVisible(neverDisplayed);\n  }\n};\n__decorateClass([\n  PostConstruct\n], NonManagedVisibilityStrategy.prototype, \"postConstruct\", 1);\nvar ManagedVisibilityStrategy = class extends VisibilityStrategy {\n  constructor(parent, beans, rowNode, column) {\n    super(parent, rowNode, column);\n    this.beans = beans;\n  }\n  postConstruct() {\n    this.addManagedListener(this.beans.eventService, Events.EVENT_SORT_CHANGED, this.workOutVisibility.bind(this));\n    this.addManagedListener(this.beans.eventService, Events.EVENT_FILTER_CHANGED, this.workOutVisibility.bind(this));\n    this.addManagedListener(this.beans.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.workOutVisibility.bind(this));\n    this.addManagedListener(this.beans.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.workOutVisibility.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this));\n    this.addManagedPropertyListener(\"suppressRowDrag\", this.onSuppressRowDrag.bind(this));\n    this.workOutVisibility();\n  }\n  onSuppressRowDrag() {\n    this.workOutVisibility();\n  }\n  workOutVisibility() {\n    const gridBodyCon = this.beans.ctrlsService.getGridBodyCtrl();\n    const rowDragFeature = gridBodyCon.getRowDragFeature();\n    const shouldPreventRowMove = rowDragFeature && rowDragFeature.shouldPreventRowMove();\n    const suppressRowDrag = this.gos.get(\"suppressRowDrag\");\n    const hasExternalDropZones = this.beans.dragAndDropService.hasExternalDropZones();\n    const neverDisplayed = shouldPreventRowMove && !hasExternalDropZones || suppressRowDrag;\n    this.setDisplayedOrVisible(neverDisplayed);\n  }\n};\n__decorateClass([\n  PostConstruct\n], ManagedVisibilityStrategy.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/rendering/cellRenderers/groupCellRendererCtrl.ts\nvar GroupCellRendererCtrl = class extends BeanStub {\n  init(comp, eGui, eCheckbox, eExpanded, eContracted, compClass, params) {\n    var _a, _b, _c, _d;\n    this.params = params;\n    this.eGui = eGui;\n    this.eCheckbox = eCheckbox;\n    this.eExpanded = eExpanded;\n    this.eContracted = eContracted;\n    this.comp = comp;\n    this.compClass = compClass;\n    const { node, value, colDef } = params;\n    const topLevelFooter = this.isTopLevelFooter();\n    if (!topLevelFooter) {\n      const embeddedRowMismatch = this.isEmbeddedRowMismatch();\n      if (embeddedRowMismatch) {\n        return;\n      }\n      if (node.footer && this.gos.get(\"groupHideOpenParents\")) {\n        const showRowGroup = colDef && colDef.showRowGroup;\n        const rowGroupColumnId = node.rowGroupColumn && node.rowGroupColumn.getColId();\n        if (showRowGroup !== rowGroupColumnId) {\n          return;\n        }\n      }\n    }\n    this.setupShowingValueForOpenedParent();\n    this.findDisplayedGroupNode();\n    if (!topLevelFooter) {\n      const showingFooterTotal = params.node.footer && params.node.rowGroupIndex === this.columnModel.getRowGroupColumns().findIndex((c) => {\n        var _a2;\n        return c.getColId() === ((_a2 = params.colDef) == null ? void 0 : _a2.showRowGroup);\n      });\n      const isAlwaysShowing = this.gos.get(\"groupDisplayType\") != \"multipleColumns\" || this.gos.get(\"treeData\");\n      const showOpenGroupValue = isAlwaysShowing || this.gos.get(\"showOpenedGroup\") && !params.node.footer && (!params.node.group || params.node.rowGroupIndex != null && params.node.rowGroupIndex > this.columnModel.getRowGroupColumns().findIndex((c) => {\n        var _a2;\n        return c.getColId() === ((_a2 = params.colDef) == null ? void 0 : _a2.showRowGroup);\n      }));\n      const leafWithValues = !node.group && (((_a = this.params.colDef) == null ? void 0 : _a.field) || ((_b = this.params.colDef) == null ? void 0 : _b.valueGetter));\n      const isExpandable = this.isExpandable();\n      const showPivotModeLeafValue = this.columnModel.isPivotMode() && node.leafGroup && ((_c = node.rowGroupColumn) == null ? void 0 : _c.getColId()) === ((_d = params.column) == null ? void 0 : _d.getColDef().showRowGroup);\n      const canSkipRenderingCell = !this.showingValueForOpenedParent && !isExpandable && !leafWithValues && !showOpenGroupValue && !showingFooterTotal && !showPivotModeLeafValue;\n      if (canSkipRenderingCell) {\n        return;\n      }\n    }\n    this.addExpandAndContract();\n    this.addFullWidthRowDraggerIfNeeded();\n    this.addCheckboxIfNeeded();\n    this.addValueElement();\n    this.setupIndent();\n    this.refreshAriaExpanded();\n  }\n  getCellAriaRole() {\n    var _a, _b;\n    const colDefAriaRole = (_a = this.params.colDef) == null ? void 0 : _a.cellAriaRole;\n    const columnColDefAriaRole = (_b = this.params.column) == null ? void 0 : _b.getColDef().cellAriaRole;\n    return colDefAriaRole || columnColDefAriaRole || \"gridcell\";\n  }\n  destroy() {\n    super.destroy();\n    this.expandListener = null;\n  }\n  refreshAriaExpanded() {\n    const { node, eGridCell } = this.params;\n    if (this.expandListener) {\n      this.expandListener = this.expandListener();\n    }\n    if (!this.isExpandable()) {\n      removeAriaExpanded(eGridCell);\n      return;\n    }\n    const listener = () => {\n      setAriaExpanded(eGridCell, !!node.expanded);\n    };\n    this.expandListener = this.addManagedListener(node, RowNode.EVENT_EXPANDED_CHANGED, listener) || null;\n    listener();\n  }\n  isTopLevelFooter() {\n    const totalRow = this.gos.getGrandTotalRow();\n    if (!totalRow) {\n      return false;\n    }\n    if (this.params.value != null || this.params.node.level != -1) {\n      return false;\n    }\n    const colDef = this.params.colDef;\n    const doingFullWidth = colDef == null;\n    if (doingFullWidth) {\n      return true;\n    }\n    if (colDef.showRowGroup === true) {\n      return true;\n    }\n    const rowGroupCols = this.columnModel.getRowGroupColumns();\n    if (!rowGroupCols || rowGroupCols.length === 0) {\n      return true;\n    }\n    const firstRowGroupCol = rowGroupCols[0];\n    return firstRowGroupCol.getId() === colDef.showRowGroup;\n  }\n  // if we are doing embedded full width rows, we only show the renderer when\n  // in the body, or if pinning in the pinned section, or if pinning and RTL,\n  // in the right section. otherwise we would have the cell repeated in each section.\n  isEmbeddedRowMismatch() {\n    if (!this.params.fullWidth || !this.gos.get(\"embedFullWidthRows\")) {\n      return false;\n    }\n    const pinnedLeftCell = this.params.pinned === \"left\";\n    const pinnedRightCell = this.params.pinned === \"right\";\n    const bodyCell = !pinnedLeftCell && !pinnedRightCell;\n    if (this.gos.get(\"enableRtl\")) {\n      if (this.columnModel.isPinningLeft()) {\n        return !pinnedRightCell;\n      }\n      return !bodyCell;\n    }\n    if (this.columnModel.isPinningLeft()) {\n      return !pinnedLeftCell;\n    }\n    return !bodyCell;\n  }\n  findDisplayedGroupNode() {\n    const column = this.params.column;\n    const rowNode = this.params.node;\n    if (this.showingValueForOpenedParent) {\n      let pointer = rowNode.parent;\n      while (pointer != null) {\n        if (pointer.rowGroupColumn && column.isRowGroupDisplayed(pointer.rowGroupColumn.getId())) {\n          this.displayedGroupNode = pointer;\n          break;\n        }\n        pointer = pointer.parent;\n      }\n    }\n    if (missing(this.displayedGroupNode)) {\n      this.displayedGroupNode = rowNode;\n    }\n  }\n  setupShowingValueForOpenedParent() {\n    const rowNode = this.params.node;\n    const column = this.params.column;\n    if (!this.gos.get(\"groupHideOpenParents\")) {\n      this.showingValueForOpenedParent = false;\n      return;\n    }\n    if (!rowNode.groupData) {\n      this.showingValueForOpenedParent = false;\n      return;\n    }\n    const showingGroupNode = rowNode.rowGroupColumn != null;\n    if (showingGroupNode) {\n      const keyOfGroupingColumn = rowNode.rowGroupColumn.getId();\n      const configuredToShowThisGroupLevel = column.isRowGroupDisplayed(keyOfGroupingColumn);\n      if (configuredToShowThisGroupLevel) {\n        this.showingValueForOpenedParent = false;\n        return;\n      }\n    }\n    const valPresent = rowNode.groupData[column.getId()] != null;\n    this.showingValueForOpenedParent = valPresent;\n  }\n  addValueElement() {\n    if (this.displayedGroupNode.footer) {\n      this.addFooterValue();\n    } else {\n      this.addGroupValue();\n      this.addChildCount();\n    }\n  }\n  addGroupValue() {\n    var _a;\n    const paramsAdjusted = this.adjustParamsWithDetailsFromRelatedColumn();\n    const innerCompDetails = this.getInnerCompDetails(paramsAdjusted);\n    const { valueFormatted, value } = paramsAdjusted;\n    let valueWhenNoRenderer = valueFormatted;\n    if (valueWhenNoRenderer == null) {\n      const isGroupColForNode = this.displayedGroupNode.rowGroupColumn && ((_a = this.params.column) == null ? void 0 : _a.isRowGroupDisplayed(this.displayedGroupNode.rowGroupColumn.getId()));\n      if (this.displayedGroupNode.key === \"\" && this.displayedGroupNode.group && isGroupColForNode) {\n        const localeTextFunc = this.localeService.getLocaleTextFunc();\n        valueWhenNoRenderer = localeTextFunc(\"blanks\", \"(Blanks)\");\n      } else {\n        valueWhenNoRenderer = value != null ? value : null;\n      }\n    }\n    this.comp.setInnerRenderer(innerCompDetails, valueWhenNoRenderer);\n  }\n  adjustParamsWithDetailsFromRelatedColumn() {\n    const relatedColumn = this.displayedGroupNode.rowGroupColumn;\n    const column = this.params.column;\n    if (!relatedColumn) {\n      return this.params;\n    }\n    const notFullWidth = column != null;\n    if (notFullWidth) {\n      const showingThisRowGroup = column.isRowGroupDisplayed(relatedColumn.getId());\n      if (!showingThisRowGroup) {\n        return this.params;\n      }\n    }\n    const params = this.params;\n    const { value, node } = this.params;\n    const valueFormatted = this.valueService.formatValue(relatedColumn, node, value);\n    const paramsAdjusted = __spreadProps(__spreadValues({}, params), {\n      valueFormatted\n    });\n    return paramsAdjusted;\n  }\n  addFooterValue() {\n    let footerValueGetter = this.params.totalValueGetter;\n    if (!footerValueGetter) {\n      const legacyGetter = this.params.footerValueGetter;\n      if (legacyGetter) {\n        footerValueGetter = legacyGetter;\n        warnOnce(\"As of v31.3, footerValueGetter is deprecated. Use `totalValueGetter` instead.\");\n      }\n    }\n    let footerValue = \"\";\n    if (footerValueGetter) {\n      const paramsClone = cloneObject(this.params);\n      paramsClone.value = this.params.value;\n      if (typeof footerValueGetter === \"function\") {\n        footerValue = footerValueGetter(paramsClone);\n      } else if (typeof footerValueGetter === \"string\") {\n        footerValue = this.expressionService.evaluate(footerValueGetter, paramsClone);\n      } else {\n        console.warn(\"AG Grid: footerValueGetter should be either a function or a string (expression)\");\n      }\n    } else {\n      const localeTextFunc = this.localeService.getLocaleTextFunc();\n      const footerTotalPrefix = localeTextFunc(\"footerTotal\", \"Total\");\n      footerValue = footerTotalPrefix + \" \" + (this.params.value != null ? this.params.value : \"\");\n    }\n    const innerCompDetails = this.getInnerCompDetails(this.params);\n    this.comp.setInnerRenderer(innerCompDetails, footerValue);\n  }\n  getInnerCompDetails(params) {\n    if (params.fullWidth) {\n      return this.userComponentFactory.getFullWidthGroupRowInnerCellRenderer(\n        this.gos.get(\"groupRowRendererParams\"),\n        params\n      );\n    }\n    const innerCompDetails = this.userComponentFactory.getInnerRendererDetails(params, params);\n    const isGroupRowRenderer = (details) => details && details.componentClass == this.compClass;\n    if (innerCompDetails && !isGroupRowRenderer(innerCompDetails)) {\n      return innerCompDetails;\n    }\n    const relatedColumn = this.displayedGroupNode.rowGroupColumn;\n    const relatedColDef = relatedColumn ? relatedColumn.getColDef() : void 0;\n    if (!relatedColDef) {\n      return;\n    }\n    const relatedCompDetails = this.userComponentFactory.getCellRendererDetails(relatedColDef, params);\n    if (relatedCompDetails && !isGroupRowRenderer(relatedCompDetails)) {\n      return relatedCompDetails;\n    }\n    if (isGroupRowRenderer(relatedCompDetails) && relatedColDef.cellRendererParams && relatedColDef.cellRendererParams.innerRenderer) {\n      const res = this.userComponentFactory.getInnerRendererDetails(relatedColDef.cellRendererParams, params);\n      return res;\n    }\n  }\n  addChildCount() {\n    if (this.params.suppressCount) {\n      return;\n    }\n    this.addManagedListener(this.displayedGroupNode, RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED, this.updateChildCount.bind(this));\n    this.updateChildCount();\n  }\n  updateChildCount() {\n    const allChildrenCount = this.displayedGroupNode.allChildrenCount;\n    const showingGroupForThisNode = this.isShowRowGroupForThisRow();\n    const showCount = showingGroupForThisNode && allChildrenCount != null && allChildrenCount >= 0;\n    const countString = showCount ? `(${allChildrenCount})` : ``;\n    this.comp.setChildCount(countString);\n  }\n  isShowRowGroupForThisRow() {\n    if (this.gos.get(\"treeData\")) {\n      return true;\n    }\n    const rowGroupColumn = this.displayedGroupNode.rowGroupColumn;\n    if (!rowGroupColumn) {\n      return false;\n    }\n    const column = this.params.column;\n    const thisColumnIsInterested = column == null || column.isRowGroupDisplayed(rowGroupColumn.getId());\n    return thisColumnIsInterested;\n  }\n  addExpandAndContract() {\n    var _a;\n    const params = this.params;\n    const eExpandedIcon = createIconNoSpan(\"groupExpanded\", this.gos, null);\n    const eContractedIcon = createIconNoSpan(\"groupContracted\", this.gos, null);\n    if (eExpandedIcon) {\n      this.eExpanded.appendChild(eExpandedIcon);\n    }\n    if (eContractedIcon) {\n      this.eContracted.appendChild(eContractedIcon);\n    }\n    const eGroupCell = params.eGridCell;\n    const isDoubleClickEdit = ((_a = this.params.column) == null ? void 0 : _a.isCellEditable(params.node)) && this.gos.get(\"enableGroupEdit\");\n    if (!isDoubleClickEdit && this.isExpandable() && !params.suppressDoubleClickExpand) {\n      this.addManagedListener(eGroupCell, \"dblclick\", this.onCellDblClicked.bind(this));\n    }\n    this.addManagedListener(this.eExpanded, \"click\", this.onExpandClicked.bind(this));\n    this.addManagedListener(this.eContracted, \"click\", this.onExpandClicked.bind(this));\n    this.addManagedListener(eGroupCell, \"keydown\", this.onKeyDown.bind(this));\n    this.addManagedListener(params.node, RowNode.EVENT_EXPANDED_CHANGED, this.showExpandAndContractIcons.bind(this));\n    this.showExpandAndContractIcons();\n    const expandableChangedListener = this.onRowNodeIsExpandableChanged.bind(this);\n    this.addManagedListener(this.displayedGroupNode, RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED, expandableChangedListener);\n    this.addManagedListener(this.displayedGroupNode, RowNode.EVENT_MASTER_CHANGED, expandableChangedListener);\n    this.addManagedListener(this.displayedGroupNode, RowNode.EVENT_GROUP_CHANGED, expandableChangedListener);\n    this.addManagedListener(this.displayedGroupNode, RowNode.EVENT_HAS_CHILDREN_CHANGED, expandableChangedListener);\n  }\n  onExpandClicked(mouseEvent) {\n    if (isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    stopPropagationForAgGrid(mouseEvent);\n    this.onExpandOrContract(mouseEvent);\n  }\n  onExpandOrContract(e) {\n    const rowNode = this.displayedGroupNode;\n    const nextExpandState = !rowNode.expanded;\n    if (!nextExpandState && rowNode.sticky) {\n      this.scrollToStickyNode(rowNode);\n    }\n    rowNode.setExpanded(nextExpandState, e);\n  }\n  scrollToStickyNode(rowNode) {\n    const gridBodyCtrl = this.ctrlsService.getGridBodyCtrl();\n    const scrollFeature = gridBodyCtrl.getScrollFeature();\n    scrollFeature.setVerticalScrollPosition(rowNode.rowTop - rowNode.stickyRowTop);\n  }\n  isExpandable() {\n    if (this.showingValueForOpenedParent) {\n      return true;\n    }\n    const rowNode = this.displayedGroupNode;\n    const reducedLeafNode = this.columnModel.isPivotMode() && rowNode.leafGroup;\n    const expandableGroup = rowNode.isExpandable() && !rowNode.footer && !reducedLeafNode;\n    if (!expandableGroup) {\n      return false;\n    }\n    const column = this.params.column;\n    const displayingForOneColumnOnly = column != null && typeof column.getColDef().showRowGroup === \"string\";\n    if (displayingForOneColumnOnly) {\n      const showing = this.isShowRowGroupForThisRow();\n      return showing;\n    }\n    return true;\n  }\n  showExpandAndContractIcons() {\n    const { params, displayedGroupNode: displayedGroup, columnModel } = this;\n    const { node } = params;\n    const isExpandable = this.isExpandable();\n    if (isExpandable) {\n      const expanded = this.showingValueForOpenedParent ? true : node.expanded;\n      this.comp.setExpandedDisplayed(expanded);\n      this.comp.setContractedDisplayed(!expanded);\n    } else {\n      this.comp.setExpandedDisplayed(false);\n      this.comp.setContractedDisplayed(false);\n    }\n    const pivotMode = columnModel.isPivotMode();\n    const pivotModeAndLeafGroup = pivotMode && displayedGroup.leafGroup;\n    const addExpandableCss = isExpandable && !pivotModeAndLeafGroup;\n    const isTotalFooterNode = node.footer && node.level === -1;\n    this.comp.addOrRemoveCssClass(\"ag-cell-expandable\", addExpandableCss);\n    this.comp.addOrRemoveCssClass(\"ag-row-group\", addExpandableCss);\n    if (pivotMode) {\n      this.comp.addOrRemoveCssClass(\"ag-pivot-leaf-group\", pivotModeAndLeafGroup);\n    } else if (!isTotalFooterNode) {\n      this.comp.addOrRemoveCssClass(\"ag-row-group-leaf-indent\", !addExpandableCss);\n    }\n  }\n  onRowNodeIsExpandableChanged() {\n    this.showExpandAndContractIcons();\n    this.setIndent();\n    this.refreshAriaExpanded();\n  }\n  setupIndent() {\n    const node = this.params.node;\n    const suppressPadding = this.params.suppressPadding;\n    if (!suppressPadding) {\n      this.addManagedListener(node, RowNode.EVENT_UI_LEVEL_CHANGED, this.setIndent.bind(this));\n      this.setIndent();\n    }\n  }\n  setIndent() {\n    if (this.gos.get(\"groupHideOpenParents\")) {\n      return;\n    }\n    const params = this.params;\n    const rowNode = params.node;\n    const fullWithRow = !!params.colDef;\n    const treeData = this.gos.get(\"treeData\");\n    const manyDimensionThisColumn = !fullWithRow || treeData || params.colDef.showRowGroup === true;\n    const paddingCount = manyDimensionThisColumn ? rowNode.uiLevel : 0;\n    if (this.indentClass) {\n      this.comp.addOrRemoveCssClass(this.indentClass, false);\n    }\n    this.indentClass = \"ag-row-group-indent-\" + paddingCount;\n    this.comp.addOrRemoveCssClass(this.indentClass, true);\n  }\n  addFullWidthRowDraggerIfNeeded() {\n    if (!this.params.fullWidth || !this.params.rowDrag) {\n      return;\n    }\n    const rowDragComp = new RowDragComp(() => this.params.value, this.params.node);\n    this.createManagedBean(rowDragComp, this.context);\n    this.eGui.insertAdjacentElement(\"afterbegin\", rowDragComp.getGui());\n  }\n  isUserWantsSelected() {\n    const paramsCheckbox = this.params.checkbox;\n    return typeof paramsCheckbox === \"function\" || paramsCheckbox === true;\n  }\n  addCheckboxIfNeeded() {\n    const rowNode = this.displayedGroupNode;\n    const checkboxNeeded = this.isUserWantsSelected() && // footers cannot be selected\n    !rowNode.footer && // pinned rows cannot be selected\n    !rowNode.rowPinned && // details cannot be selected\n    !rowNode.detail;\n    if (checkboxNeeded) {\n      const cbSelectionComponent = new CheckboxSelectionComponent();\n      this.getContext().createBean(cbSelectionComponent);\n      cbSelectionComponent.init({\n        rowNode: this.params.node,\n        // when groupHideOpenParents = true and group expanded, we want the checkbox to refer to leaf node state (not group node state)\n        column: this.params.column,\n        overrides: {\n          isVisible: this.params.checkbox,\n          callbackParams: this.params,\n          removeHidden: true\n        }\n      });\n      this.eCheckbox.appendChild(cbSelectionComponent.getGui());\n      this.addDestroyFunc(() => this.getContext().destroyBean(cbSelectionComponent));\n    }\n    this.comp.setCheckboxVisible(checkboxNeeded);\n  }\n  onKeyDown(event) {\n    const isEnterKey = event.key === KeyCode.ENTER;\n    if (!isEnterKey || this.params.suppressEnterExpand) {\n      return;\n    }\n    const cellEditable = this.params.column && this.params.column.isCellEditable(this.params.node);\n    if (cellEditable) {\n      return;\n    }\n    this.onExpandOrContract(event);\n  }\n  onCellDblClicked(mouseEvent) {\n    if (isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    const targetIsExpandIcon = isElementInEventPath(this.eExpanded, mouseEvent) || isElementInEventPath(this.eContracted, mouseEvent);\n    if (!targetIsExpandIcon) {\n      this.onExpandOrContract(mouseEvent);\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"expressionService\")\n], GroupCellRendererCtrl.prototype, \"expressionService\", 2);\n__decorateClass([\n  Autowired(\"valueService\")\n], GroupCellRendererCtrl.prototype, \"valueService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], GroupCellRendererCtrl.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"userComponentFactory\")\n], GroupCellRendererCtrl.prototype, \"userComponentFactory\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], GroupCellRendererCtrl.prototype, \"ctrlsService\", 2);\n\n// community-modules/core/src/rendering/cellRenderers/groupCellRenderer.ts\nvar _GroupCellRenderer = class _GroupCellRenderer extends Component {\n  constructor() {\n    super(_GroupCellRenderer.TEMPLATE);\n  }\n  init(params) {\n    const compProxy = {\n      setInnerRenderer: (compDetails, valueToDisplay) => this.setRenderDetails(compDetails, valueToDisplay),\n      setChildCount: (count) => this.eChildCount.textContent = count,\n      addOrRemoveCssClass: (cssClass, value) => this.addOrRemoveCssClass(cssClass, value),\n      setContractedDisplayed: (expanded) => setDisplayed(this.eContracted, expanded),\n      setExpandedDisplayed: (expanded) => setDisplayed(this.eExpanded, expanded),\n      setCheckboxVisible: (visible) => this.eCheckbox.classList.toggle(\"ag-invisible\", !visible)\n    };\n    const ctrl = this.createManagedBean(new GroupCellRendererCtrl());\n    const fullWidth = !params.colDef;\n    const eGui = this.getGui();\n    ctrl.init(compProxy, eGui, this.eCheckbox, this.eExpanded, this.eContracted, this.constructor, params);\n    if (fullWidth) {\n      setAriaRole(eGui, ctrl.getCellAriaRole());\n    }\n  }\n  setRenderDetails(compDetails, valueToDisplay) {\n    if (compDetails) {\n      const componentPromise = compDetails.newAgStackInstance();\n      if (!componentPromise) {\n        return;\n      }\n      componentPromise.then((comp) => {\n        if (!comp) {\n          return;\n        }\n        const destroyComp = () => this.context.destroyBean(comp);\n        if (this.isAlive()) {\n          this.eValue.appendChild(comp.getGui());\n          this.addDestroyFunc(destroyComp);\n        } else {\n          destroyComp();\n        }\n      });\n    } else {\n      this.eValue.innerText = valueToDisplay;\n    }\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to have public here instead of private or protected\n  destroy() {\n    this.getContext().destroyBean(this.innerCellRenderer);\n    super.destroy();\n  }\n  refresh() {\n    return false;\n  }\n};\n_GroupCellRenderer.TEMPLATE = /* html */\n`<span class=\"ag-cell-wrapper\">\n            <span class=\"ag-group-expanded\" ref=\"eExpanded\"></span>\n            <span class=\"ag-group-contracted\" ref=\"eContracted\"></span>\n            <span class=\"ag-group-checkbox ag-invisible\" ref=\"eCheckbox\"></span>\n            <span class=\"ag-group-value\" ref=\"eValue\"></span>\n            <span class=\"ag-group-child-count\" ref=\"eChildCount\"></span>\n        </span>`;\n__decorateClass([\n  RefSelector(\"eExpanded\")\n], _GroupCellRenderer.prototype, \"eExpanded\", 2);\n__decorateClass([\n  RefSelector(\"eContracted\")\n], _GroupCellRenderer.prototype, \"eContracted\", 2);\n__decorateClass([\n  RefSelector(\"eCheckbox\")\n], _GroupCellRenderer.prototype, \"eCheckbox\", 2);\n__decorateClass([\n  RefSelector(\"eValue\")\n], _GroupCellRenderer.prototype, \"eValue\", 2);\n__decorateClass([\n  RefSelector(\"eChildCount\")\n], _GroupCellRenderer.prototype, \"eChildCount\", 2);\nvar GroupCellRenderer = _GroupCellRenderer;\n\n// community-modules/core/src/rendering/cellRenderers/loadingCellRenderer.ts\nvar _LoadingCellRenderer = class _LoadingCellRenderer extends Component {\n  constructor() {\n    super(_LoadingCellRenderer.TEMPLATE);\n  }\n  init(params) {\n    params.node.failedLoad ? this.setupFailed() : this.setupLoading();\n  }\n  setupFailed() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    this.eLoadingText.innerText = localeTextFunc(\"loadingError\", \"ERR\");\n  }\n  setupLoading() {\n    const eLoadingIcon = createIconNoSpan(\"groupLoading\", this.gos, null);\n    if (eLoadingIcon) {\n      this.eLoadingIcon.appendChild(eLoadingIcon);\n    }\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    this.eLoadingText.innerText = localeTextFunc(\"loadingOoo\", \"Loading\");\n  }\n  refresh(params) {\n    return false;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n};\n_LoadingCellRenderer.TEMPLATE = `<div class=\"ag-loading\">\n            <span class=\"ag-loading-icon\" ref=\"eLoadingIcon\"></span>\n            <span class=\"ag-loading-text\" ref=\"eLoadingText\"></span>\n        </div>`;\n__decorateClass([\n  RefSelector(\"eLoadingIcon\")\n], _LoadingCellRenderer.prototype, \"eLoadingIcon\", 2);\n__decorateClass([\n  RefSelector(\"eLoadingText\")\n], _LoadingCellRenderer.prototype, \"eLoadingText\", 2);\nvar LoadingCellRenderer = _LoadingCellRenderer;\n\n// community-modules/core/src/rendering/cellRenderers/skeletonCellRenderer.ts\nvar _SkeletonCellRenderer = class _SkeletonCellRenderer extends Component {\n  constructor() {\n    super(_SkeletonCellRenderer.TEMPLATE);\n  }\n  init(params) {\n    const id = `ag-cell-skeleton-renderer-${this.getCompId()}`;\n    this.getGui().setAttribute(\"id\", id);\n    this.addDestroyFunc(() => setAriaLabelledBy(params.eParentOfValue));\n    setAriaLabelledBy(params.eParentOfValue, id);\n    params.node.failedLoad ? this.setupFailed() : this.setupLoading();\n  }\n  setupFailed() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    this.getGui().innerText = localeTextFunc(\"loadingError\", \"ERR\");\n    const ariaFailed = localeTextFunc(\"ariaSkeletonCellLoadingFailed\", \"Row failed to load\");\n    setAriaLabel(this.getGui(), ariaFailed);\n  }\n  setupLoading() {\n    const eDocument = this.gos.getDocument();\n    const skeletonEffect = eDocument.createElement(\"div\");\n    skeletonEffect.classList.add(\"ag-skeleton-effect\");\n    this.getGui().appendChild(skeletonEffect);\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const ariaLoading = localeTextFunc(\"ariaSkeletonCellLoading\", \"Row data is loading\");\n    setAriaLabel(this.getGui(), ariaLoading);\n  }\n  refresh(params) {\n    return false;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n};\n_SkeletonCellRenderer.TEMPLATE = `<div class=\"ag-skeleton-container\"></div>`;\nvar SkeletonCellRenderer = _SkeletonCellRenderer;\n\n// community-modules/core/src/rendering/overlays/loadingOverlayComponent.ts\nvar _LoadingOverlayComponent = class _LoadingOverlayComponent extends Component {\n  constructor() {\n    super();\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  init(params) {\n    const customTemplate = this.gos.get(\"overlayLoadingTemplate\");\n    this.setTemplate(customTemplate != null ? customTemplate : _LoadingOverlayComponent.DEFAULT_LOADING_OVERLAY_TEMPLATE);\n    if (!customTemplate) {\n      const localeTextFunc = this.localeService.getLocaleTextFunc();\n      setTimeout(() => {\n        this.getGui().textContent = localeTextFunc(\"loadingOoo\", \"Loading...\");\n      });\n    }\n  }\n};\n_LoadingOverlayComponent.DEFAULT_LOADING_OVERLAY_TEMPLATE = /* html */\n`<span aria-live=\"polite\" aria-atomic=\"true\" class=\"ag-overlay-loading-center\"></span>`;\nvar LoadingOverlayComponent = _LoadingOverlayComponent;\n\n// community-modules/core/src/rendering/overlays/noRowsOverlayComponent.ts\nvar _NoRowsOverlayComponent = class _NoRowsOverlayComponent extends Component {\n  constructor() {\n    super();\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  init(params) {\n    const customTemplate = this.gos.get(\"overlayNoRowsTemplate\");\n    this.setTemplate(customTemplate != null ? customTemplate : _NoRowsOverlayComponent.DEFAULT_NO_ROWS_TEMPLATE);\n    if (!customTemplate) {\n      const localeTextFunc = this.localeService.getLocaleTextFunc();\n      setTimeout(() => {\n        this.getGui().textContent = localeTextFunc(\"noRowsToShow\", \"No Rows To Show\");\n      });\n    }\n  }\n};\n_NoRowsOverlayComponent.DEFAULT_NO_ROWS_TEMPLATE = /* html */\n`<span class=\"ag-overlay-no-rows-center\"></span>`;\nvar NoRowsOverlayComponent = _NoRowsOverlayComponent;\n\n// community-modules/core/src/rendering/tooltipComponent.ts\nvar TooltipComponent = class extends PopupComponent {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-tooltip\"></div>`\n    );\n  }\n  // will need to type params\n  init(params) {\n    const { value } = params;\n    this.getGui().textContent = escapeString(value, true);\n  }\n};\n\n// community-modules/core/src/rendering/cellEditors/numberCellEditor.ts\nvar NumberCellEditorInput = class {\n  getTemplate() {\n    return (\n      /* html */\n      `<ag-input-number-field class=\"ag-cell-editor\" ref=\"eInput\"></ag-input-number-field>`\n    );\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    if (params.max != null) {\n      eInput.setMax(params.max);\n    }\n    if (params.min != null) {\n      eInput.setMin(params.min);\n    }\n    if (params.precision != null) {\n      eInput.setPrecision(params.precision);\n    }\n    if (params.step != null) {\n      eInput.setStep(params.step);\n    }\n    const inputEl = eInput.getInputElement();\n    if (params.preventStepping) {\n      eInput.addManagedListener(inputEl, \"keydown\", this.preventStepping);\n    } else if (params.showStepperButtons) {\n      inputEl.classList.add(\"ag-number-field-input-stepper\");\n    }\n  }\n  preventStepping(e) {\n    if (e.key === KeyCode.UP || e.key === KeyCode.DOWN) {\n      e.preventDefault();\n    }\n  }\n  getValue() {\n    const value = this.eInput.getValue();\n    if (!exists(value) && !exists(this.params.value)) {\n      return this.params.value;\n    }\n    let parsedValue = this.params.parseValue(value);\n    if (parsedValue == null) {\n      return parsedValue;\n    }\n    if (typeof parsedValue === \"string\") {\n      if (parsedValue === \"\") {\n        return null;\n      }\n      parsedValue = Number(parsedValue);\n    }\n    return isNaN(parsedValue) ? null : parsedValue;\n  }\n  getStartValue() {\n    return this.params.value;\n  }\n};\nvar NumberCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new NumberCellEditorInput());\n  }\n};\n\n// community-modules/core/src/rendering/cellEditors/dateCellEditor.ts\nvar DateCellEditorInput = class {\n  getTemplate() {\n    return (\n      /* html */\n      `<ag-input-date-field class=\"ag-cell-editor\" ref=\"eInput\"></ag-input-date-field>`\n    );\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    if (params.min != null) {\n      eInput.setMin(params.min);\n    }\n    if (params.max != null) {\n      eInput.setMax(params.max);\n    }\n    if (params.step != null) {\n      eInput.setStep(params.step);\n    }\n  }\n  getValue() {\n    const value = this.eInput.getDate();\n    if (!exists(value) && !exists(this.params.value)) {\n      return this.params.value;\n    }\n    return value != null ? value : null;\n  }\n  getStartValue() {\n    const { value } = this.params;\n    if (!(value instanceof Date)) {\n      return void 0;\n    }\n    return serialiseDate(value, false);\n  }\n};\nvar DateCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new DateCellEditorInput());\n  }\n};\n\n// community-modules/core/src/rendering/cellEditors/dateStringCellEditor.ts\nvar DateStringCellEditorInput = class {\n  constructor(getDataTypeService) {\n    this.getDataTypeService = getDataTypeService;\n  }\n  getTemplate() {\n    return (\n      /* html */\n      `<ag-input-date-field class=\"ag-cell-editor\" ref=\"eInput\"></ag-input-date-field>`\n    );\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    if (params.min != null) {\n      eInput.setMin(params.min);\n    }\n    if (params.max != null) {\n      eInput.setMax(params.max);\n    }\n    if (params.step != null) {\n      eInput.setStep(params.step);\n    }\n  }\n  getValue() {\n    const value = this.formatDate(this.eInput.getDate());\n    if (!exists(value) && !exists(this.params.value)) {\n      return this.params.value;\n    }\n    return this.params.parseValue(value != null ? value : \"\");\n  }\n  getStartValue() {\n    var _a, _b;\n    return serialiseDate((_b = this.parseDate((_a = this.params.value) != null ? _a : void 0)) != null ? _b : null, false);\n  }\n  parseDate(value) {\n    return this.getDataTypeService().getDateParserFunction(this.params.column)(value);\n  }\n  formatDate(value) {\n    return this.getDataTypeService().getDateFormatterFunction(this.params.column)(value);\n  }\n};\nvar DateStringCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new DateStringCellEditorInput(() => this.dataTypeService));\n  }\n};\n__decorateClass([\n  Autowired(\"dataTypeService\")\n], DateStringCellEditor.prototype, \"dataTypeService\", 2);\n\n// community-modules/core/src/rendering/cellRenderers/checkboxCellRenderer.ts\nvar _CheckboxCellRenderer = class _CheckboxCellRenderer extends Component {\n  constructor() {\n    super(_CheckboxCellRenderer.TEMPLATE);\n  }\n  init(params) {\n    this.params = params;\n    this.updateCheckbox(params);\n    const inputEl = this.eCheckbox.getInputElement();\n    inputEl.setAttribute(\"tabindex\", \"-1\");\n    setAriaLive(inputEl, \"polite\");\n    this.addManagedListener(inputEl, \"click\", (event) => {\n      stopPropagationForAgGrid(event);\n      if (this.eCheckbox.isDisabled()) {\n        return;\n      }\n      const isSelected = this.eCheckbox.getValue();\n      this.onCheckboxChanged(isSelected);\n    });\n    this.addManagedListener(inputEl, \"dblclick\", (event) => {\n      stopPropagationForAgGrid(event);\n    });\n    this.addManagedListener(this.params.eGridCell, \"keydown\", (event) => {\n      if (event.key === KeyCode.SPACE && !this.eCheckbox.isDisabled()) {\n        if (this.params.eGridCell === this.gos.getActiveDomElement()) {\n          this.eCheckbox.toggle();\n        }\n        const isSelected = this.eCheckbox.getValue();\n        this.onCheckboxChanged(isSelected);\n        event.preventDefault();\n      }\n    });\n  }\n  refresh(params) {\n    this.params = params;\n    this.updateCheckbox(params);\n    return true;\n  }\n  updateCheckbox(params) {\n    var _a, _b, _c;\n    let isSelected;\n    let displayed = true;\n    if (params.node.group && params.column) {\n      const colId = params.column.getColId();\n      if (colId.startsWith(GROUP_AUTO_COLUMN_ID)) {\n        isSelected = params.value == null || params.value === \"\" ? void 0 : params.value === \"true\";\n      } else if (params.node.aggData && params.node.aggData[colId] !== void 0) {\n        isSelected = (_a = params.value) != null ? _a : void 0;\n      } else {\n        displayed = false;\n      }\n    } else {\n      isSelected = (_b = params.value) != null ? _b : void 0;\n    }\n    if (!displayed) {\n      this.eCheckbox.setDisplayed(false);\n      return;\n    }\n    this.eCheckbox.setValue(isSelected);\n    const disabled = params.disabled != null ? params.disabled : !((_c = params.column) == null ? void 0 : _c.isCellEditable(params.node));\n    this.eCheckbox.setDisabled(disabled);\n    const translate = this.localeService.getLocaleTextFunc();\n    const stateName = getAriaCheckboxStateName(translate, isSelected);\n    const ariaLabel = disabled ? stateName : `${translate(\"ariaToggleCellValue\", \"Press SPACE to toggle cell value\")} (${stateName})`;\n    this.eCheckbox.setInputAriaLabel(ariaLabel);\n  }\n  onCheckboxChanged(isSelected) {\n    const { column, node, rowIndex, value } = this.params;\n    const eventStarted = {\n      type: Events.EVENT_CELL_EDITING_STARTED,\n      column,\n      colDef: column == null ? void 0 : column.getColDef(),\n      data: node.data,\n      node,\n      rowIndex,\n      rowPinned: node.rowPinned,\n      value\n    };\n    this.eventService.dispatchEvent(eventStarted);\n    const valueChanged = this.params.node.setDataValue(this.params.column, isSelected, \"edit\");\n    const eventStopped = {\n      type: Events.EVENT_CELL_EDITING_STOPPED,\n      column,\n      colDef: column == null ? void 0 : column.getColDef(),\n      data: node.data,\n      node,\n      rowIndex,\n      rowPinned: node.rowPinned,\n      value,\n      oldValue: value,\n      newValue: isSelected,\n      valueChanged\n    };\n    this.eventService.dispatchEvent(eventStopped);\n  }\n};\n_CheckboxCellRenderer.TEMPLATE = /* html*/\n`\n        <div class=\"ag-cell-wrapper ag-checkbox-cell\" role=\"presentation\">\n            <ag-checkbox role=\"presentation\" ref=\"eCheckbox\"></ag-checkbox>\n        </div>`;\n__decorateClass([\n  RefSelector(\"eCheckbox\")\n], _CheckboxCellRenderer.prototype, \"eCheckbox\", 2);\nvar CheckboxCellRenderer = _CheckboxCellRenderer;\n\n// community-modules/core/src/rendering/cellEditors/checkboxCellEditor.ts\nvar CheckboxCellEditor = class extends PopupComponent {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-cell-wrapper ag-cell-edit-wrapper ag-checkbox-edit\">\n                <ag-checkbox role=\"presentation\" ref=\"eCheckbox\"></ag-checkbox>\n            </div>`\n    );\n  }\n  init(params) {\n    var _a;\n    this.params = params;\n    const isSelected = (_a = params.value) != null ? _a : void 0;\n    this.eCheckbox.setValue(isSelected);\n    const inputEl = this.eCheckbox.getInputElement();\n    inputEl.setAttribute(\"tabindex\", \"-1\");\n    this.setAriaLabel(isSelected);\n    this.addManagedListener(\n      this.eCheckbox,\n      Events.EVENT_FIELD_VALUE_CHANGED,\n      (event) => this.setAriaLabel(event.selected)\n    );\n  }\n  getValue() {\n    return this.eCheckbox.getValue();\n  }\n  focusIn() {\n    this.eCheckbox.getFocusableElement().focus();\n  }\n  afterGuiAttached() {\n    if (this.params.cellStartedEdit) {\n      this.focusIn();\n    }\n  }\n  isPopup() {\n    return false;\n  }\n  setAriaLabel(isSelected) {\n    const translate = this.localeService.getLocaleTextFunc();\n    const stateName = getAriaCheckboxStateName(translate, isSelected);\n    const ariaLabel = translate(\"ariaToggleCellValue\", \"Press SPACE to toggle cell value\");\n    this.eCheckbox.setInputAriaLabel(`${ariaLabel} (${stateName})`);\n  }\n};\n__decorateClass([\n  RefSelector(\"eCheckbox\")\n], CheckboxCellEditor.prototype, \"eCheckbox\", 2);\n\n// community-modules/core/src/widgets/agMenuItemRenderer.ts\nvar AgMenuItemRenderer = class extends Component {\n  constructor() {\n    super();\n    this.setTemplate(\n      /* html */\n      `<div></div>`\n    );\n  }\n  init(params) {\n    var _a;\n    this.params = params;\n    this.cssClassPrefix = (_a = this.params.cssClassPrefix) != null ? _a : \"ag-menu-option\";\n    this.addIcon();\n    this.addName();\n    this.addShortcut();\n    this.addSubMenu();\n  }\n  configureDefaults() {\n    return true;\n  }\n  addIcon() {\n    if (this.params.isCompact) {\n      return;\n    }\n    const icon = loadTemplate(\n      /* html */\n      `<span ref=\"eIcon\" class=\"${this.getClassName(\"part\")} ${this.getClassName(\"icon\")}\" role=\"presentation\"></span>`\n    );\n    if (this.params.checked) {\n      icon.appendChild(createIconNoSpan(\"check\", this.gos));\n    } else if (this.params.icon) {\n      if (isNodeOrElement(this.params.icon)) {\n        icon.appendChild(this.params.icon);\n      } else if (typeof this.params.icon === \"string\") {\n        icon.innerHTML = this.params.icon;\n      } else {\n        console.warn(\"AG Grid: menu item icon must be DOM node or string\");\n      }\n    }\n    this.getGui().appendChild(icon);\n  }\n  addName() {\n    const name = loadTemplate(\n      /* html */\n      `<span ref=\"eName\" class=\"${this.getClassName(\"part\")} ${this.getClassName(\"text\")}\">${this.params.name || \"\"}</span>`\n    );\n    this.getGui().appendChild(name);\n  }\n  addShortcut() {\n    if (this.params.isCompact) {\n      return;\n    }\n    const shortcut = loadTemplate(\n      /* html */\n      `<span ref=\"eShortcut\" class=\"${this.getClassName(\"part\")} ${this.getClassName(\"shortcut\")}\">${this.params.shortcut || \"\"}</span>`\n    );\n    this.getGui().appendChild(shortcut);\n  }\n  addSubMenu() {\n    const pointer = loadTemplate(\n      /* html */\n      `<span ref=\"ePopupPointer\" class=\"${this.getClassName(\"part\")} ${this.getClassName(\"popup-pointer\")}\"></span>`\n    );\n    const eGui = this.getGui();\n    if (this.params.subMenu) {\n      const iconName = this.gos.get(\"enableRtl\") ? \"smallLeft\" : \"smallRight\";\n      setAriaExpanded(eGui, false);\n      pointer.appendChild(createIconNoSpan(iconName, this.gos));\n    }\n    eGui.appendChild(pointer);\n  }\n  getClassName(suffix) {\n    return `${this.cssClassPrefix}-${suffix}`;\n  }\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/components/framework/userComponentRegistry.ts\nvar UserComponentRegistry = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.agGridDefaults = {\n      //date\n      agDateInput: DefaultDateComponent,\n      //header\n      agColumnHeader: HeaderComp,\n      agColumnGroupHeader: HeaderGroupComp,\n      agSortIndicator: SortIndicatorComp,\n      //floating filters\n      agTextColumnFloatingFilter: TextFloatingFilter,\n      agNumberColumnFloatingFilter: NumberFloatingFilter,\n      agDateColumnFloatingFilter: DateFloatingFilter,\n      agReadOnlyFloatingFilter: ReadOnlyFloatingFilter,\n      // renderers\n      agAnimateShowChangeCellRenderer: AnimateShowChangeCellRenderer,\n      agAnimateSlideCellRenderer: AnimateSlideCellRenderer,\n      agGroupCellRenderer: GroupCellRenderer,\n      agGroupRowRenderer: GroupCellRenderer,\n      agLoadingCellRenderer: LoadingCellRenderer,\n      agSkeletonCellRenderer: SkeletonCellRenderer,\n      agCheckboxCellRenderer: CheckboxCellRenderer,\n      //editors\n      agCellEditor: TextCellEditor,\n      agTextCellEditor: TextCellEditor,\n      agNumberCellEditor: NumberCellEditor,\n      agDateCellEditor: DateCellEditor,\n      agDateStringCellEditor: DateStringCellEditor,\n      agSelectCellEditor: SelectCellEditor,\n      agLargeTextCellEditor: LargeTextCellEditor,\n      agCheckboxCellEditor: CheckboxCellEditor,\n      //filter\n      agTextColumnFilter: TextFilter,\n      agNumberColumnFilter: NumberFilter,\n      agDateColumnFilter: DateFilter,\n      //overlays\n      agLoadingOverlay: LoadingOverlayComponent,\n      agNoRowsOverlay: NoRowsOverlayComponent,\n      // tooltips\n      agTooltipComponent: TooltipComponent,\n      // menu item\n      agMenuItem: AgMenuItemRenderer\n    };\n    /** Used to provide useful error messages if a user is trying to use an enterprise component without loading the module. */\n    this.enterpriseAgDefaultCompsModule = {\n      agSetColumnFilter: \"@ag-grid-enterprise/set-filter\" /* SetFilterModule */,\n      agSetColumnFloatingFilter: \"@ag-grid-enterprise/set-filter\" /* SetFilterModule */,\n      agMultiColumnFilter: \"@ag-grid-enterprise/multi-filter\" /* MultiFilterModule */,\n      agMultiColumnFloatingFilter: \"@ag-grid-enterprise/multi-filter\" /* MultiFilterModule */,\n      agGroupColumnFilter: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */,\n      agGroupColumnFloatingFilter: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */,\n      agRichSelect: \"@ag-grid-enterprise/rich-select\" /* RichSelectModule */,\n      agRichSelectCellEditor: \"@ag-grid-enterprise/rich-select\" /* RichSelectModule */,\n      agDetailCellRenderer: \"@ag-grid-enterprise/master-detail\" /* MasterDetailModule */,\n      agSparklineCellRenderer: \"@ag-grid-enterprise/sparklines\" /* SparklinesModule */\n    };\n    this.jsComps = {};\n  }\n  init() {\n    const comps = this.gos.get(\"components\");\n    if (comps != null) {\n      iterateObject(comps, (key, component) => this.registerJsComponent(key, component));\n    }\n  }\n  registerDefaultComponent(name, component) {\n    if (this.agGridDefaults[name]) {\n      console.error(`Trying to overwrite a default component. You should call registerComponent`);\n      return;\n    }\n    this.agGridDefaults[name] = component;\n  }\n  registerJsComponent(name, component) {\n    this.jsComps[name] = component;\n  }\n  retrieve(propertyName, name) {\n    const createResult = (component, componentFromFramework) => ({ componentFromFramework, component });\n    const registeredViaFrameworkComp = this.getFrameworkOverrides().frameworkComponent(name, this.gos.get(\"components\"));\n    if (registeredViaFrameworkComp != null) {\n      return createResult(registeredViaFrameworkComp, true);\n    }\n    const jsComponent = this.jsComps[name];\n    if (jsComponent) {\n      const isFwkComp = this.getFrameworkOverrides().isFrameworkComponent(jsComponent);\n      return createResult(jsComponent, isFwkComp);\n    }\n    const defaultComponent = this.agGridDefaults[name];\n    if (defaultComponent) {\n      return createResult(defaultComponent, false);\n    }\n    const moduleForComponent = this.enterpriseAgDefaultCompsModule[name];\n    if (moduleForComponent) {\n      ModuleRegistry.__assertRegistered(moduleForComponent, `AG Grid '${propertyName}' component: ${name}`, this.context.getGridId());\n    } else {\n      doOnce(() => {\n        this.warnAboutMissingComponent(propertyName, name);\n      }, \"MissingComp\" + name);\n    }\n    return null;\n  }\n  warnAboutMissingComponent(propertyName, componentName) {\n    const validComponents = [\n      // Don't include the old names / internals in potential suggestions\n      ...Object.keys(this.agGridDefaults).filter((k) => ![\"agCellEditor\", \"agGroupRowRenderer\", \"agSortIndicator\"].includes(k)),\n      ...Object.keys(this.jsComps)\n    ];\n    const suggestions = fuzzySuggestions(componentName, validComponents, true, 0.8).values;\n    console.warn(`AG Grid: Could not find '${componentName}' component. It was configured as \"${propertyName}: '${componentName}'\" but it wasn't found in the list of registered components.`);\n    if (suggestions.length > 0) {\n      console.warn(`         Did you mean: [${suggestions.slice(0, 3)}]?`);\n    }\n    console.warn(`If using a custom component check it has been registered as described in: ${this.getFrameworkOverrides().getDocLink(\"components/\")}`);\n  }\n};\n__decorateClass([\n  PostConstruct\n], UserComponentRegistry.prototype, \"init\", 1);\nUserComponentRegistry = __decorateClass([\n  Bean(\"userComponentRegistry\")\n], UserComponentRegistry);\n\n// community-modules/core/src/components/framework/componentTypes.ts\nvar DateComponent = {\n  propertyName: \"dateComponent\",\n  cellRenderer: false\n};\nvar HeaderComponent = {\n  propertyName: \"headerComponent\",\n  cellRenderer: false\n};\nvar HeaderGroupComponent = {\n  propertyName: \"headerGroupComponent\",\n  cellRenderer: false\n};\nvar CellRendererComponent = {\n  propertyName: \"cellRenderer\",\n  cellRenderer: true\n};\nvar LoadingCellRendererComponent = {\n  propertyName: \"loadingCellRenderer\",\n  cellRenderer: true\n};\nvar CellEditorComponent = {\n  propertyName: \"cellEditor\",\n  cellRenderer: false\n};\nvar InnerRendererComponent = {\n  propertyName: \"innerRenderer\",\n  cellRenderer: true\n};\nvar LoadingOverlayComponent2 = {\n  propertyName: \"loadingOverlayComponent\",\n  cellRenderer: false\n};\nvar NoRowsOverlayComponent2 = {\n  propertyName: \"noRowsOverlayComponent\",\n  cellRenderer: false\n};\nvar TooltipComponent2 = {\n  propertyName: \"tooltipComponent\",\n  cellRenderer: false\n};\nvar FilterComponent = {\n  propertyName: \"filter\",\n  cellRenderer: false\n};\nvar FloatingFilterComponent = {\n  propertyName: \"floatingFilterComponent\",\n  cellRenderer: false\n};\nvar ToolPanelComponent = {\n  propertyName: \"toolPanel\",\n  cellRenderer: false\n};\nvar StatusPanelComponent = {\n  propertyName: \"statusPanel\",\n  cellRenderer: false\n};\nvar FullWidth = {\n  propertyName: \"fullWidthCellRenderer\",\n  cellRenderer: true\n};\nvar FullWidthLoading = {\n  propertyName: \"loadingCellRenderer\",\n  cellRenderer: true\n};\nvar FullWidthGroup = {\n  propertyName: \"groupRowRenderer\",\n  cellRenderer: true\n};\nvar FullWidthDetail = {\n  propertyName: \"detailCellRenderer\",\n  cellRenderer: true\n};\nvar MenuItemComponent = {\n  propertyName: \"menuItem\",\n  cellRenderer: false\n};\n\n// community-modules/core/src/filter/floating/floatingFilterMapper.ts\nvar FloatingFilterMapper = class {\n  static getFloatingFilterType(filterType) {\n    return this.filterToFloatingFilterMapping[filterType];\n  }\n};\nFloatingFilterMapper.filterToFloatingFilterMapping = {\n  set: \"agSetColumnFloatingFilter\",\n  agSetColumnFilter: \"agSetColumnFloatingFilter\",\n  multi: \"agMultiColumnFloatingFilter\",\n  agMultiColumnFilter: \"agMultiColumnFloatingFilter\",\n  group: \"agGroupColumnFloatingFilter\",\n  agGroupColumnFilter: \"agGroupColumnFloatingFilter\",\n  number: \"agNumberColumnFloatingFilter\",\n  agNumberColumnFilter: \"agNumberColumnFloatingFilter\",\n  date: \"agDateColumnFloatingFilter\",\n  agDateColumnFilter: \"agDateColumnFloatingFilter\",\n  text: \"agTextColumnFloatingFilter\",\n  agTextColumnFilter: \"agTextColumnFloatingFilter\"\n};\n\n// community-modules/core/src/components/framework/userComponentFactory.ts\nvar UserComponentFactory = class extends BeanStub {\n  getHeaderCompDetails(colDef, params) {\n    return this.getCompDetails(colDef, HeaderComponent, \"agColumnHeader\", params);\n  }\n  getHeaderGroupCompDetails(params) {\n    const colGroupDef = params.columnGroup.getColGroupDef();\n    return this.getCompDetails(colGroupDef, HeaderGroupComponent, \"agColumnGroupHeader\", params);\n  }\n  // this one is unusual, as it can be LoadingCellRenderer, DetailCellRenderer, FullWidthCellRenderer or GroupRowRenderer.\n  // so we have to pass the type in.\n  getFullWidthCellRendererDetails(params) {\n    return this.getCompDetails(this.gridOptions, FullWidth, null, params, true);\n  }\n  getFullWidthLoadingCellRendererDetails(params) {\n    return this.getCompDetails(this.gridOptions, FullWidthLoading, \"agLoadingCellRenderer\", params, true);\n  }\n  getFullWidthGroupCellRendererDetails(params) {\n    return this.getCompDetails(this.gridOptions, FullWidthGroup, \"agGroupRowRenderer\", params, true);\n  }\n  getFullWidthDetailCellRendererDetails(params) {\n    return this.getCompDetails(this.gridOptions, FullWidthDetail, \"agDetailCellRenderer\", params, true);\n  }\n  // CELL RENDERER\n  getInnerRendererDetails(def, params) {\n    return this.getCompDetails(def, InnerRendererComponent, null, params);\n  }\n  getFullWidthGroupRowInnerCellRenderer(def, params) {\n    return this.getCompDetails(def, InnerRendererComponent, null, params);\n  }\n  getCellRendererDetails(def, params) {\n    return this.getCompDetails(def, CellRendererComponent, null, params);\n  }\n  getLoadingCellRendererDetails(def, params) {\n    return this.getCompDetails(def, LoadingCellRendererComponent, \"agSkeletonCellRenderer\", params, true);\n  }\n  // CELL EDITOR\n  getCellEditorDetails(def, params) {\n    return this.getCompDetails(def, CellEditorComponent, \"agCellEditor\", params, true);\n  }\n  // FILTER\n  getFilterDetails(def, params, defaultFilter) {\n    return this.getCompDetails(def, FilterComponent, defaultFilter, params, true);\n  }\n  getDateCompDetails(params) {\n    return this.getCompDetails(this.gridOptions, DateComponent, \"agDateInput\", params, true);\n  }\n  getLoadingOverlayCompDetails(params) {\n    return this.getCompDetails(this.gridOptions, LoadingOverlayComponent2, \"agLoadingOverlay\", params, true);\n  }\n  getNoRowsOverlayCompDetails(params) {\n    return this.getCompDetails(this.gridOptions, NoRowsOverlayComponent2, \"agNoRowsOverlay\", params, true);\n  }\n  getTooltipCompDetails(params) {\n    return this.getCompDetails(params.colDef, TooltipComponent2, \"agTooltipComponent\", params, true);\n  }\n  getSetFilterCellRendererDetails(def, params) {\n    return this.getCompDetails(def, CellRendererComponent, null, params);\n  }\n  getFloatingFilterCompDetails(def, params, defaultFloatingFilter) {\n    return this.getCompDetails(def, FloatingFilterComponent, defaultFloatingFilter, params);\n  }\n  getToolPanelCompDetails(toolPanelDef, params) {\n    return this.getCompDetails(toolPanelDef, ToolPanelComponent, null, params, true);\n  }\n  getStatusPanelCompDetails(def, params) {\n    return this.getCompDetails(def, StatusPanelComponent, null, params, true);\n  }\n  getMenuItemCompDetails(def, params) {\n    return this.getCompDetails(def, MenuItemComponent, \"agMenuItem\", params, true);\n  }\n  getCompDetails(defObject, type, defaultName, params, mandatory = false) {\n    const { propertyName, cellRenderer } = type;\n    let { compName, jsComp, fwComp, paramsFromSelector, popupFromSelector, popupPositionFromSelector } = this.getCompKeys(defObject, type, params);\n    const lookupFromRegistry = (key) => {\n      const item = this.userComponentRegistry.retrieve(propertyName, key);\n      if (item) {\n        jsComp = !item.componentFromFramework ? item.component : void 0;\n        fwComp = item.componentFromFramework ? item.component : void 0;\n      }\n    };\n    if (compName != null) {\n      lookupFromRegistry(compName);\n    }\n    if (jsComp == null && fwComp == null && defaultName != null) {\n      lookupFromRegistry(defaultName);\n    }\n    if (jsComp && cellRenderer && !this.agComponentUtils.doesImplementIComponent(jsComp)) {\n      jsComp = this.agComponentUtils.adaptFunction(propertyName, jsComp);\n    }\n    if (!jsComp && !fwComp) {\n      if (mandatory) {\n        console.error(`AG Grid: Could not find component ${compName}, did you forget to configure this component?`);\n      }\n      return;\n    }\n    const paramsMerged = this.mergeParamsWithApplicationProvidedParams(defObject, type, params, paramsFromSelector);\n    const componentFromFramework = jsComp == null;\n    const componentClass = jsComp ? jsComp : fwComp;\n    return {\n      componentFromFramework,\n      componentClass,\n      params: paramsMerged,\n      type,\n      popupFromSelector,\n      popupPositionFromSelector,\n      newAgStackInstance: () => this.newAgStackInstance(componentClass, componentFromFramework, paramsMerged, type)\n    };\n  }\n  getCompKeys(defObject, type, params) {\n    const { propertyName } = type;\n    let compName;\n    let jsComp;\n    let fwComp;\n    let paramsFromSelector;\n    let popupFromSelector;\n    let popupPositionFromSelector;\n    if (defObject) {\n      const defObjectAny = defObject;\n      const selectorFunc = defObjectAny[propertyName + \"Selector\"];\n      const selectorRes = selectorFunc ? selectorFunc(params) : null;\n      const assignComp = (providedJsComp) => {\n        if (typeof providedJsComp === \"string\") {\n          compName = providedJsComp;\n        } else if (providedJsComp != null && providedJsComp !== true) {\n          const isFwkComp = this.getFrameworkOverrides().isFrameworkComponent(providedJsComp);\n          if (isFwkComp) {\n            fwComp = providedJsComp;\n          } else {\n            jsComp = providedJsComp;\n          }\n        }\n      };\n      if (selectorRes) {\n        assignComp(selectorRes.component);\n        paramsFromSelector = selectorRes.params;\n        popupFromSelector = selectorRes.popup;\n        popupPositionFromSelector = selectorRes.popupPosition;\n      } else {\n        assignComp(defObjectAny[propertyName]);\n      }\n    }\n    return { compName, jsComp, fwComp, paramsFromSelector, popupFromSelector, popupPositionFromSelector };\n  }\n  newAgStackInstance(ComponentClass, componentFromFramework, params, type) {\n    const propertyName = type.propertyName;\n    const jsComponent = !componentFromFramework;\n    let instance;\n    if (jsComponent) {\n      instance = new ComponentClass();\n    } else {\n      const thisComponentConfig = this.componentMetadataProvider.retrieve(propertyName);\n      instance = this.frameworkComponentWrapper.wrap(\n        ComponentClass,\n        thisComponentConfig.mandatoryMethodList,\n        thisComponentConfig.optionalMethodList,\n        type\n      );\n    }\n    const deferredInit = this.initComponent(instance, params);\n    if (deferredInit == null) {\n      return AgPromise.resolve(instance);\n    }\n    return deferredInit.then(() => instance);\n  }\n  // used by Floating Filter\n  mergeParamsWithApplicationProvidedParams(defObject, type, paramsFromGrid, paramsFromSelector = null) {\n    const params = this.gos.getGridCommonParams();\n    mergeDeep(params, paramsFromGrid);\n    const defObjectAny = defObject;\n    const userParams = defObjectAny && defObjectAny[type.propertyName + \"Params\"];\n    if (typeof userParams === \"function\") {\n      const userParamsFromFunc = userParams(paramsFromGrid);\n      mergeDeep(params, userParamsFromFunc);\n    } else if (typeof userParams === \"object\") {\n      mergeDeep(params, userParams);\n    }\n    mergeDeep(params, paramsFromSelector);\n    return params;\n  }\n  initComponent(component, params) {\n    this.context.createBean(component);\n    if (component.init == null) {\n      return;\n    }\n    return component.init(params);\n  }\n  getDefaultFloatingFilterType(def, getFromDefault) {\n    if (def == null) {\n      return null;\n    }\n    let defaultFloatingFilterType = null;\n    let { compName, jsComp, fwComp } = this.getCompKeys(def, FilterComponent);\n    if (compName) {\n      defaultFloatingFilterType = FloatingFilterMapper.getFloatingFilterType(compName);\n    } else {\n      const usingDefaultFilter = jsComp == null && fwComp == null && def.filter === true;\n      if (usingDefaultFilter) {\n        defaultFloatingFilterType = getFromDefault();\n      }\n    }\n    return defaultFloatingFilterType;\n  }\n};\n__decorateClass([\n  Autowired(\"gridOptions\")\n], UserComponentFactory.prototype, \"gridOptions\", 2);\n__decorateClass([\n  Autowired(\"agComponentUtils\")\n], UserComponentFactory.prototype, \"agComponentUtils\", 2);\n__decorateClass([\n  Autowired(\"componentMetadataProvider\")\n], UserComponentFactory.prototype, \"componentMetadataProvider\", 2);\n__decorateClass([\n  Autowired(\"userComponentRegistry\")\n], UserComponentFactory.prototype, \"userComponentRegistry\", 2);\n__decorateClass([\n  Optional(\"frameworkComponentWrapper\")\n], UserComponentFactory.prototype, \"frameworkComponentWrapper\", 2);\nUserComponentFactory = __decorateClass([\n  Bean(\"userComponentFactory\")\n], UserComponentFactory);\n\n// community-modules/core/src/interfaces/iExcelCreator.ts\nvar ExcelFactoryMode = /* @__PURE__ */ ((ExcelFactoryMode2) => {\n  ExcelFactoryMode2[ExcelFactoryMode2[\"SINGLE_SHEET\"] = 0] = \"SINGLE_SHEET\";\n  ExcelFactoryMode2[ExcelFactoryMode2[\"MULTI_SHEET\"] = 1] = \"MULTI_SHEET\";\n  return ExcelFactoryMode2;\n})(ExcelFactoryMode || {});\n\n// community-modules/core/src/interfaces/iRowNode.ts\nvar RowHighlightPosition = /* @__PURE__ */ ((RowHighlightPosition2) => {\n  RowHighlightPosition2[RowHighlightPosition2[\"Above\"] = 0] = \"Above\";\n  RowHighlightPosition2[RowHighlightPosition2[\"Below\"] = 1] = \"Below\";\n  return RowHighlightPosition2;\n})(RowHighlightPosition || {});\n\n// community-modules/core/src/autoScrollService.ts\nvar AutoScrollService = class {\n  constructor(params) {\n    this.tickingInterval = null;\n    this.onScrollCallback = null;\n    this.scrollContainer = params.scrollContainer;\n    this.scrollHorizontally = params.scrollAxis.indexOf(\"x\") !== -1;\n    this.scrollVertically = params.scrollAxis.indexOf(\"y\") !== -1;\n    this.scrollByTick = params.scrollByTick != null ? params.scrollByTick : 20;\n    if (params.onScrollCallback) {\n      this.onScrollCallback = params.onScrollCallback;\n    }\n    if (this.scrollVertically) {\n      this.getVerticalPosition = params.getVerticalPosition;\n      this.setVerticalPosition = params.setVerticalPosition;\n    }\n    if (this.scrollHorizontally) {\n      this.getHorizontalPosition = params.getHorizontalPosition;\n      this.setHorizontalPosition = params.setHorizontalPosition;\n    }\n    this.shouldSkipVerticalScroll = params.shouldSkipVerticalScroll || (() => false);\n    this.shouldSkipHorizontalScroll = params.shouldSkipHorizontalScroll || (() => false);\n  }\n  check(mouseEvent, forceSkipVerticalScroll = false) {\n    const skipVerticalScroll = forceSkipVerticalScroll || this.shouldSkipVerticalScroll();\n    if (skipVerticalScroll && this.shouldSkipHorizontalScroll()) {\n      return;\n    }\n    const rect = this.scrollContainer.getBoundingClientRect();\n    const scrollTick = this.scrollByTick;\n    this.tickLeft = mouseEvent.clientX < rect.left + scrollTick;\n    this.tickRight = mouseEvent.clientX > rect.right - scrollTick;\n    this.tickUp = mouseEvent.clientY < rect.top + scrollTick && !skipVerticalScroll;\n    this.tickDown = mouseEvent.clientY > rect.bottom - scrollTick && !skipVerticalScroll;\n    if (this.tickLeft || this.tickRight || this.tickUp || this.tickDown) {\n      this.ensureTickingStarted();\n    } else {\n      this.ensureCleared();\n    }\n  }\n  ensureTickingStarted() {\n    if (this.tickingInterval === null) {\n      this.tickingInterval = window.setInterval(this.doTick.bind(this), 100);\n      this.tickCount = 0;\n    }\n  }\n  doTick() {\n    this.tickCount++;\n    let tickAmount;\n    tickAmount = this.tickCount > 20 ? 200 : this.tickCount > 10 ? 80 : 40;\n    if (this.scrollVertically) {\n      const vScrollPosition = this.getVerticalPosition();\n      if (this.tickUp) {\n        this.setVerticalPosition(vScrollPosition - tickAmount);\n      }\n      if (this.tickDown) {\n        this.setVerticalPosition(vScrollPosition + tickAmount);\n      }\n    }\n    if (this.scrollHorizontally) {\n      const hScrollPosition = this.getHorizontalPosition();\n      if (this.tickLeft) {\n        this.setHorizontalPosition(hScrollPosition - tickAmount);\n      }\n      if (this.tickRight) {\n        this.setHorizontalPosition(hScrollPosition + tickAmount);\n      }\n    }\n    if (this.onScrollCallback) {\n      this.onScrollCallback();\n    }\n  }\n  ensureCleared() {\n    if (this.tickingInterval) {\n      window.clearInterval(this.tickingInterval);\n      this.tickingInterval = null;\n    }\n  }\n};\n\n// community-modules/core/src/gridBodyComp/rowDragFeature.ts\nvar RowDragFeature = class extends BeanStub {\n  constructor(eContainer) {\n    super();\n    this.eContainer = eContainer;\n  }\n  postConstruct() {\n    if (this.gos.isRowModelType(\"clientSide\")) {\n      this.clientSideRowModel = this.rowModel;\n    }\n    this.ctrlsService.whenReady((p) => {\n      const gridBodyCon = p.gridBodyCtrl;\n      this.autoScrollService = new AutoScrollService({\n        scrollContainer: gridBodyCon.getBodyViewportElement(),\n        scrollAxis: \"y\",\n        getVerticalPosition: () => gridBodyCon.getScrollFeature().getVScrollPosition().top,\n        setVerticalPosition: (position) => gridBodyCon.getScrollFeature().setVerticalScrollPosition(position),\n        onScrollCallback: () => {\n          this.onDragging(this.lastDraggingEvent);\n        }\n      });\n    });\n  }\n  getContainer() {\n    return this.eContainer;\n  }\n  isInterestedIn(type) {\n    return type === 2 /* RowDrag */;\n  }\n  getIconName() {\n    const managedDrag = this.gos.get(\"rowDragManaged\");\n    if (managedDrag && this.shouldPreventRowMove()) {\n      return DragAndDropService.ICON_NOT_ALLOWED;\n    }\n    return DragAndDropService.ICON_MOVE;\n  }\n  shouldPreventRowMove() {\n    const rowGroupCols = this.columnModel.getRowGroupColumns();\n    if (rowGroupCols.length) {\n      return true;\n    }\n    const isFilterPresent = this.filterManager.isAnyFilterPresent();\n    if (isFilterPresent) {\n      return true;\n    }\n    const isSortActive = this.sortController.isSortActive();\n    if (isSortActive) {\n      return true;\n    }\n    return false;\n  }\n  getRowNodes(draggingEvent) {\n    if (!this.isFromThisGrid(draggingEvent)) {\n      return draggingEvent.dragItem.rowNodes || [];\n    }\n    const currentNode = draggingEvent.dragItem.rowNode;\n    const isRowDragMultiRow = this.gos.get(\"rowDragMultiRow\");\n    if (isRowDragMultiRow) {\n      const selectedNodes = [...this.selectionService.getSelectedNodes()].sort(\n        (a, b) => {\n          if (a.rowIndex == null || b.rowIndex == null) {\n            return 0;\n          }\n          return this.getRowIndexNumber(a) - this.getRowIndexNumber(b);\n        }\n      );\n      if (selectedNodes.indexOf(currentNode) !== -1) {\n        return selectedNodes;\n      }\n    }\n    return [currentNode];\n  }\n  onDragEnter(draggingEvent) {\n    draggingEvent.dragItem.rowNodes = this.getRowNodes(draggingEvent);\n    this.dispatchGridEvent(Events.EVENT_ROW_DRAG_ENTER, draggingEvent);\n    this.getRowNodes(draggingEvent).forEach((rowNode) => {\n      rowNode.setDragging(true);\n    });\n    this.onEnterOrDragging(draggingEvent);\n  }\n  onDragging(draggingEvent) {\n    this.onEnterOrDragging(draggingEvent);\n  }\n  isFromThisGrid(draggingEvent) {\n    const { dragSourceDomDataKey } = draggingEvent.dragSource;\n    return dragSourceDomDataKey === this.gos.getDomDataKey();\n  }\n  isDropZoneWithinThisGrid(draggingEvent) {\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const gridGui = gridBodyCon.getGui();\n    const { dropZoneTarget } = draggingEvent;\n    return !gridGui.contains(dropZoneTarget);\n  }\n  onEnterOrDragging(draggingEvent) {\n    this.dispatchGridEvent(Events.EVENT_ROW_DRAG_MOVE, draggingEvent);\n    this.lastDraggingEvent = draggingEvent;\n    const pixel = this.mouseEventService.getNormalisedPosition(draggingEvent).y;\n    const managedDrag = this.gos.get(\"rowDragManaged\");\n    if (managedDrag) {\n      this.doManagedDrag(draggingEvent, pixel);\n    }\n    this.autoScrollService.check(draggingEvent.event);\n  }\n  doManagedDrag(draggingEvent, pixel) {\n    const isFromThisGrid = this.isFromThisGrid(draggingEvent);\n    const managedDrag = this.gos.get(\"rowDragManaged\");\n    const rowNodes = draggingEvent.dragItem.rowNodes;\n    if (managedDrag && this.shouldPreventRowMove()) {\n      return;\n    }\n    if (this.gos.get(\"suppressMoveWhenRowDragging\") || !isFromThisGrid) {\n      if (!this.isDropZoneWithinThisGrid(draggingEvent)) {\n        this.clientSideRowModel.highlightRowAtPixel(rowNodes[0], pixel);\n      }\n    } else {\n      this.moveRows(rowNodes, pixel);\n    }\n  }\n  getRowIndexNumber(rowNode) {\n    return parseInt(last(rowNode.getRowIndexString().split(\"-\")), 10);\n  }\n  moveRowAndClearHighlight(draggingEvent) {\n    const lastHighlightedRowNode = this.clientSideRowModel.getLastHighlightedRowNode();\n    const isBelow = lastHighlightedRowNode && lastHighlightedRowNode.highlighted === 1 /* Below */;\n    const pixel = this.mouseEventService.getNormalisedPosition(draggingEvent).y;\n    const rowNodes = draggingEvent.dragItem.rowNodes;\n    let increment = isBelow ? 1 : 0;\n    if (this.isFromThisGrid(draggingEvent)) {\n      rowNodes.forEach((rowNode) => {\n        if (rowNode.rowTop < pixel) {\n          increment -= 1;\n        }\n      });\n      this.moveRows(rowNodes, pixel, increment);\n    } else {\n      const getRowIdFunc = this.gos.getCallback(\"getRowId\");\n      let addIndex = this.clientSideRowModel.getRowIndexAtPixel(pixel) + 1;\n      if (this.clientSideRowModel.getHighlightPosition(pixel) === 0 /* Above */) {\n        addIndex--;\n      }\n      this.clientSideRowModel.updateRowData({\n        add: rowNodes.map((node) => node.data).filter(\n          (data) => !this.clientSideRowModel.getRowNode(\n            getRowIdFunc ? getRowIdFunc({ data, level: 0 }) : data.id\n          )\n        ),\n        addIndex\n      });\n    }\n    this.clearRowHighlight();\n  }\n  clearRowHighlight() {\n    this.clientSideRowModel.highlightRowAtPixel(null);\n  }\n  moveRows(rowNodes, pixel, increment = 0) {\n    var _a;\n    const rowWasMoved = this.clientSideRowModel.ensureRowsAtPixel(rowNodes, pixel, increment);\n    if (rowWasMoved) {\n      this.focusService.clearFocusedCell();\n      (_a = this.rangeService) == null ? void 0 : _a.removeAllCellRanges();\n    }\n  }\n  addRowDropZone(params) {\n    if (!params.getContainer()) {\n      warnOnce(\"addRowDropZone - A container target needs to be provided\");\n      return;\n    }\n    if (this.dragAndDropService.findExternalZone(params)) {\n      console.warn(\"AG Grid: addRowDropZone - target already exists in the list of DropZones. Use `removeRowDropZone` before adding it again.\");\n      return;\n    }\n    let processedParams = {\n      getContainer: params.getContainer\n    };\n    if (params.fromGrid) {\n      processedParams = params;\n    } else {\n      if (params.onDragEnter) {\n        processedParams.onDragEnter = (e) => {\n          params.onDragEnter(this.draggingToRowDragEvent(Events.EVENT_ROW_DRAG_ENTER, e));\n        };\n      }\n      if (params.onDragLeave) {\n        processedParams.onDragLeave = (e) => {\n          params.onDragLeave(this.draggingToRowDragEvent(Events.EVENT_ROW_DRAG_LEAVE, e));\n        };\n      }\n      if (params.onDragging) {\n        processedParams.onDragging = (e) => {\n          params.onDragging(this.draggingToRowDragEvent(Events.EVENT_ROW_DRAG_MOVE, e));\n        };\n      }\n      if (params.onDragStop) {\n        processedParams.onDragStop = (e) => {\n          params.onDragStop(this.draggingToRowDragEvent(Events.EVENT_ROW_DRAG_END, e));\n        };\n      }\n    }\n    this.dragAndDropService.addDropTarget(__spreadValues({\n      isInterestedIn: (type) => type === 2 /* RowDrag */,\n      getIconName: () => DragAndDropService.ICON_MOVE,\n      external: true\n    }, processedParams));\n  }\n  getRowDropZone(events) {\n    const getContainer = this.getContainer.bind(this);\n    const onDragEnter = this.onDragEnter.bind(this);\n    const onDragLeave = this.onDragLeave.bind(this);\n    const onDragging = this.onDragging.bind(this);\n    const onDragStop = this.onDragStop.bind(this);\n    if (!events) {\n      return {\n        getContainer,\n        onDragEnter,\n        onDragLeave,\n        onDragging,\n        onDragStop,\n        /* @private */\n        fromGrid: true\n      };\n    }\n    return {\n      getContainer,\n      onDragEnter: events.onDragEnter ? (e) => {\n        onDragEnter(e);\n        events.onDragEnter(this.draggingToRowDragEvent(Events.EVENT_ROW_DRAG_ENTER, e));\n      } : onDragEnter,\n      onDragLeave: events.onDragLeave ? (e) => {\n        onDragLeave(e);\n        events.onDragLeave(this.draggingToRowDragEvent(Events.EVENT_ROW_DRAG_LEAVE, e));\n      } : onDragLeave,\n      onDragging: events.onDragging ? (e) => {\n        onDragging(e);\n        events.onDragging(this.draggingToRowDragEvent(Events.EVENT_ROW_DRAG_MOVE, e));\n      } : onDragging,\n      onDragStop: events.onDragStop ? (e) => {\n        onDragStop(e);\n        events.onDragStop(this.draggingToRowDragEvent(Events.EVENT_ROW_DRAG_END, e));\n      } : onDragStop,\n      fromGrid: true\n      /* @private */\n    };\n  }\n  draggingToRowDragEvent(type, draggingEvent) {\n    const yNormalised = this.mouseEventService.getNormalisedPosition(draggingEvent).y;\n    const mouseIsPastLastRow = yNormalised > this.paginationProxy.getCurrentPageHeight();\n    let overIndex = -1;\n    let overNode;\n    if (!mouseIsPastLastRow) {\n      overIndex = this.rowModel.getRowIndexAtPixel(yNormalised);\n      overNode = this.rowModel.getRow(overIndex);\n    }\n    let vDirectionString;\n    switch (draggingEvent.vDirection) {\n      case 1 /* Down */:\n        vDirectionString = \"down\";\n        break;\n      case 0 /* Up */:\n        vDirectionString = \"up\";\n        break;\n      default:\n        vDirectionString = null;\n        break;\n    }\n    const event = this.gos.addGridCommonParams({\n      type,\n      event: draggingEvent.event,\n      node: draggingEvent.dragItem.rowNode,\n      nodes: draggingEvent.dragItem.rowNodes,\n      overIndex,\n      overNode,\n      y: yNormalised,\n      vDirection: vDirectionString\n    });\n    return event;\n  }\n  dispatchGridEvent(type, draggingEvent) {\n    const event = this.draggingToRowDragEvent(type, draggingEvent);\n    this.eventService.dispatchEvent(event);\n  }\n  onDragLeave(draggingEvent) {\n    this.dispatchGridEvent(Events.EVENT_ROW_DRAG_LEAVE, draggingEvent);\n    this.stopDragging(draggingEvent);\n    if (this.gos.get(\"rowDragManaged\")) {\n      this.clearRowHighlight();\n    }\n  }\n  onDragStop(draggingEvent) {\n    this.dispatchGridEvent(Events.EVENT_ROW_DRAG_END, draggingEvent);\n    this.stopDragging(draggingEvent);\n    if (this.gos.get(\"rowDragManaged\") && (this.gos.get(\"suppressMoveWhenRowDragging\") || !this.isFromThisGrid(draggingEvent)) && !this.isDropZoneWithinThisGrid(draggingEvent)) {\n      this.moveRowAndClearHighlight(draggingEvent);\n    }\n  }\n  stopDragging(draggingEvent) {\n    this.autoScrollService.ensureCleared();\n    this.getRowNodes(draggingEvent).forEach((rowNode) => {\n      rowNode.setDragging(false);\n    });\n  }\n};\n__decorateClass([\n  Autowired(\"dragAndDropService\")\n], RowDragFeature.prototype, \"dragAndDropService\", 2);\n__decorateClass([\n  Autowired(\"rowModel\")\n], RowDragFeature.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], RowDragFeature.prototype, \"paginationProxy\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], RowDragFeature.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"focusService\")\n], RowDragFeature.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"sortController\")\n], RowDragFeature.prototype, \"sortController\", 2);\n__decorateClass([\n  Autowired(\"filterManager\")\n], RowDragFeature.prototype, \"filterManager\", 2);\n__decorateClass([\n  Autowired(\"selectionService\")\n], RowDragFeature.prototype, \"selectionService\", 2);\n__decorateClass([\n  Autowired(\"mouseEventService\")\n], RowDragFeature.prototype, \"mouseEventService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], RowDragFeature.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Optional(\"rangeService\")\n], RowDragFeature.prototype, \"rangeService\", 2);\n__decorateClass([\n  PostConstruct\n], RowDragFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/dragAndDrop/dragService.ts\nvar DragService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.dragEndFunctions = [];\n    this.dragSources = [];\n  }\n  removeAllListeners() {\n    this.dragSources.forEach(this.removeListener.bind(this));\n    this.dragSources.length = 0;\n  }\n  removeListener(dragSourceAndListener) {\n    const element = dragSourceAndListener.dragSource.eElement;\n    const mouseDownListener = dragSourceAndListener.mouseDownListener;\n    element.removeEventListener(\"mousedown\", mouseDownListener);\n    if (dragSourceAndListener.touchEnabled) {\n      const touchStartListener = dragSourceAndListener.touchStartListener;\n      element.removeEventListener(\"touchstart\", touchStartListener, { passive: true });\n    }\n  }\n  removeDragSource(params) {\n    const dragSourceAndListener = this.dragSources.find((item) => item.dragSource === params);\n    if (!dragSourceAndListener) {\n      return;\n    }\n    this.removeListener(dragSourceAndListener);\n    removeFromArray(this.dragSources, dragSourceAndListener);\n  }\n  isDragging() {\n    return this.dragging;\n  }\n  addDragSource(params) {\n    const mouseListener = this.onMouseDown.bind(this, params);\n    const { eElement, includeTouch, stopPropagationForTouch } = params;\n    eElement.addEventListener(\"mousedown\", mouseListener);\n    let touchListener = null;\n    const suppressTouch = this.gos.get(\"suppressTouch\");\n    if (includeTouch && !suppressTouch) {\n      touchListener = (touchEvent) => {\n        if (isFocusableFormField(touchEvent.target)) {\n          return;\n        }\n        if (touchEvent.cancelable) {\n          touchEvent.preventDefault();\n          if (stopPropagationForTouch) {\n            touchEvent.stopPropagation();\n          }\n        }\n        this.onTouchStart(params, touchEvent);\n      };\n      eElement.addEventListener(\"touchstart\", touchListener, { passive: false });\n    }\n    this.dragSources.push({\n      dragSource: params,\n      mouseDownListener: mouseListener,\n      touchStartListener: touchListener,\n      touchEnabled: !!includeTouch\n    });\n  }\n  getStartTarget() {\n    return this.startTarget;\n  }\n  // gets called whenever mouse down on any drag source\n  onTouchStart(params, touchEvent) {\n    this.currentDragParams = params;\n    this.dragging = false;\n    const touch = touchEvent.touches[0];\n    this.touchLastTime = touch;\n    this.touchStart = touch;\n    const touchMoveEvent = (e) => this.onTouchMove(e, params.eElement);\n    const touchEndEvent = (e) => this.onTouchUp(e, params.eElement);\n    const documentTouchMove = (e) => {\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n    };\n    const target = touchEvent.target;\n    const events = [\n      // Prevents the page document from moving while we are dragging items around.\n      // preventDefault needs to be called in the touchmove listener and never inside the\n      // touchstart, because using touchstart causes the click event to be cancelled on touch devices.\n      { target: this.gos.getRootNode(), type: \"touchmove\", listener: documentTouchMove, options: { passive: false } },\n      { target, type: \"touchmove\", listener: touchMoveEvent, options: { passive: true } },\n      { target, type: \"touchend\", listener: touchEndEvent, options: { passive: true } },\n      { target, type: \"touchcancel\", listener: touchEndEvent, options: { passive: true } }\n    ];\n    this.addTemporaryEvents(events);\n    if (params.dragStartPixels === 0) {\n      this.onCommonMove(touch, this.touchStart, params.eElement);\n    }\n  }\n  // gets called whenever mouse down on any drag source\n  onMouseDown(params, mouseEvent) {\n    const e = mouseEvent;\n    if (params.skipMouseEvent && params.skipMouseEvent(mouseEvent)) {\n      return;\n    }\n    if (e._alreadyProcessedByDragService) {\n      return;\n    }\n    e._alreadyProcessedByDragService = true;\n    if (mouseEvent.button !== 0) {\n      return;\n    }\n    if (this.shouldPreventMouseEvent(mouseEvent)) {\n      mouseEvent.preventDefault();\n    }\n    this.currentDragParams = params;\n    this.dragging = false;\n    this.mouseStartEvent = mouseEvent;\n    this.startTarget = mouseEvent.target;\n    const mouseMoveEvent = (event) => this.onMouseMove(event, params.eElement);\n    const mouseUpEvent = (event) => this.onMouseUp(event, params.eElement);\n    const contextEvent = (event) => event.preventDefault();\n    const target = this.gos.getRootNode();\n    const events = [\n      { target, type: \"mousemove\", listener: mouseMoveEvent },\n      { target, type: \"mouseup\", listener: mouseUpEvent },\n      { target, type: \"contextmenu\", listener: contextEvent }\n    ];\n    this.addTemporaryEvents(events);\n    if (params.dragStartPixels === 0) {\n      this.onMouseMove(mouseEvent, params.eElement);\n    }\n  }\n  addTemporaryEvents(events) {\n    events.forEach((currentEvent) => {\n      const { target, type, listener, options } = currentEvent;\n      target.addEventListener(type, listener, options);\n    });\n    this.dragEndFunctions.push(() => {\n      events.forEach((currentEvent) => {\n        const { target, type, listener, options } = currentEvent;\n        target.removeEventListener(type, listener, options);\n      });\n    });\n  }\n  // returns true if the event is close to the original event by X pixels either vertically or horizontally.\n  // we only start dragging after X pixels so this allows us to know if we should start dragging yet.\n  isEventNearStartEvent(currentEvent, startEvent) {\n    const { dragStartPixels } = this.currentDragParams;\n    const requiredPixelDiff = exists(dragStartPixels) ? dragStartPixels : 4;\n    return areEventsNear(currentEvent, startEvent, requiredPixelDiff);\n  }\n  getFirstActiveTouch(touchList) {\n    for (let i = 0; i < touchList.length; i++) {\n      if (touchList[i].identifier === this.touchStart.identifier) {\n        return touchList[i];\n      }\n    }\n    return null;\n  }\n  onCommonMove(currentEvent, startEvent, el) {\n    if (!this.dragging) {\n      if (!this.dragging && this.isEventNearStartEvent(currentEvent, startEvent)) {\n        return;\n      }\n      this.dragging = true;\n      const event = {\n        type: Events.EVENT_DRAG_STARTED,\n        target: el\n      };\n      this.eventService.dispatchEvent(event);\n      this.currentDragParams.onDragStart(startEvent);\n      this.currentDragParams.onDragging(startEvent);\n    }\n    this.currentDragParams.onDragging(currentEvent);\n  }\n  onTouchMove(touchEvent, el) {\n    const touch = this.getFirstActiveTouch(touchEvent.touches);\n    if (!touch) {\n      return;\n    }\n    this.onCommonMove(touch, this.touchStart, el);\n  }\n  // only gets called after a mouse down - as this is only added after mouseDown\n  // and is removed when mouseUp happens\n  onMouseMove(mouseEvent, el) {\n    var _a;\n    if (isBrowserSafari()) {\n      const eDocument = this.gos.getDocument();\n      (_a = eDocument.getSelection()) == null ? void 0 : _a.removeAllRanges();\n    }\n    if (this.shouldPreventMouseEvent(mouseEvent)) {\n      mouseEvent.preventDefault();\n    }\n    this.onCommonMove(mouseEvent, this.mouseStartEvent, el);\n  }\n  shouldPreventMouseEvent(mouseEvent) {\n    const isEnableCellTextSelect = this.gos.get(\"enableCellTextSelection\");\n    const isMouseMove = mouseEvent.type === \"mousemove\";\n    return (\n      // when `isEnableCellTextSelect` is `true`, we need to preventDefault on mouseMove\n      // to avoid the grid text being selected while dragging components.\n      isEnableCellTextSelect && isMouseMove && mouseEvent.cancelable && this.mouseEventService.isEventFromThisGrid(mouseEvent) && !this.isOverFormFieldElement(mouseEvent)\n    );\n  }\n  isOverFormFieldElement(mouseEvent) {\n    const el = mouseEvent.target;\n    const tagName = el == null ? void 0 : el.tagName.toLocaleLowerCase();\n    return !!(tagName == null ? void 0 : tagName.match(\"^a$|textarea|input|select|button\"));\n  }\n  onTouchUp(touchEvent, el) {\n    let touch = this.getFirstActiveTouch(touchEvent.changedTouches);\n    if (!touch) {\n      touch = this.touchLastTime;\n    }\n    this.onUpCommon(touch, el);\n  }\n  onMouseUp(mouseEvent, el) {\n    this.onUpCommon(mouseEvent, el);\n  }\n  onUpCommon(eventOrTouch, el) {\n    if (this.dragging) {\n      this.dragging = false;\n      this.currentDragParams.onDragStop(eventOrTouch);\n      const event = {\n        type: Events.EVENT_DRAG_STOPPED,\n        target: el\n      };\n      this.eventService.dispatchEvent(event);\n    }\n    this.mouseStartEvent = null;\n    this.startTarget = null;\n    this.touchStart = null;\n    this.touchLastTime = null;\n    this.currentDragParams = null;\n    this.dragEndFunctions.forEach((func) => func());\n    this.dragEndFunctions.length = 0;\n  }\n};\n__decorateClass([\n  Autowired(\"mouseEventService\")\n], DragService.prototype, \"mouseEventService\", 2);\n__decorateClass([\n  PreDestroy\n], DragService.prototype, \"removeAllListeners\", 1);\nDragService = __decorateClass([\n  Bean(\"dragService\")\n], DragService);\n\n// community-modules/core/src/dragAndDrop/virtualListDragFeature.ts\nvar LIST_ITEM_HOVERED = \"ag-list-item-hovered\";\nvar VirtualListDragFeature = class extends BeanStub {\n  constructor(comp, virtualList, params) {\n    super();\n    this.comp = comp;\n    this.virtualList = virtualList;\n    this.params = params;\n    this.currentDragValue = null;\n    this.lastHoveredListItem = null;\n  }\n  postConstruct() {\n    this.addManagedListener(this.params.eventSource, this.params.listItemDragStartEvent, this.listItemDragStart.bind(this));\n    this.addManagedListener(this.params.eventSource, this.params.listItemDragEndEvent, this.listItemDragEnd.bind(this));\n    this.createDropTarget();\n    this.createAutoScrollService();\n  }\n  listItemDragStart(event) {\n    this.currentDragValue = this.params.getCurrentDragValue(event);\n    this.moveBlocked = this.params.isMoveBlocked(this.currentDragValue);\n  }\n  listItemDragEnd() {\n    window.setTimeout(() => {\n      this.currentDragValue = null;\n      this.moveBlocked = false;\n    }, 10);\n  }\n  createDropTarget() {\n    const dropTarget = {\n      isInterestedIn: (type) => type === this.params.dragSourceType,\n      getIconName: () => this.moveBlocked ? DragAndDropService.ICON_PINNED : DragAndDropService.ICON_MOVE,\n      getContainer: () => this.comp.getGui(),\n      onDragging: (e) => this.onDragging(e),\n      onDragStop: () => this.onDragStop(),\n      onDragLeave: () => this.onDragLeave()\n    };\n    this.dragAndDropService.addDropTarget(dropTarget);\n  }\n  createAutoScrollService() {\n    const virtualListGui = this.virtualList.getGui();\n    this.autoScrollService = new AutoScrollService({\n      scrollContainer: virtualListGui,\n      scrollAxis: \"y\",\n      getVerticalPosition: () => virtualListGui.scrollTop,\n      setVerticalPosition: (position) => virtualListGui.scrollTop = position\n    });\n  }\n  onDragging(e) {\n    if (!this.currentDragValue || this.moveBlocked) {\n      return;\n    }\n    const hoveredListItem = this.getListDragItem(e);\n    const comp = this.virtualList.getComponentAt(hoveredListItem.rowIndex);\n    if (!comp) {\n      return;\n    }\n    const el = comp.getGui().parentElement;\n    if (this.lastHoveredListItem && this.lastHoveredListItem.rowIndex === hoveredListItem.rowIndex && this.lastHoveredListItem.position === hoveredListItem.position) {\n      return;\n    }\n    this.autoScrollService.check(e.event);\n    this.clearHoveredItems();\n    this.lastHoveredListItem = hoveredListItem;\n    radioCssClass(el, LIST_ITEM_HOVERED);\n    radioCssClass(el, `ag-item-highlight-${hoveredListItem.position}`);\n  }\n  getListDragItem(e) {\n    const virtualListGui = this.virtualList.getGui();\n    const paddingTop = parseFloat(window.getComputedStyle(virtualListGui).paddingTop);\n    const rowHeight = this.virtualList.getRowHeight();\n    const scrollTop = this.virtualList.getScrollTop();\n    const rowIndex = Math.max(0, (e.y - paddingTop + scrollTop) / rowHeight);\n    const maxLen = this.params.getNumRows(this.comp) - 1;\n    const normalizedRowIndex = Math.min(maxLen, rowIndex) | 0;\n    return {\n      rowIndex: normalizedRowIndex,\n      position: Math.round(rowIndex) > rowIndex || rowIndex > maxLen ? \"bottom\" : \"top\",\n      component: this.virtualList.getComponentAt(normalizedRowIndex)\n    };\n  }\n  onDragStop() {\n    if (this.moveBlocked) {\n      return;\n    }\n    this.params.moveItem(this.currentDragValue, this.lastHoveredListItem);\n    this.clearHoveredItems();\n    this.autoScrollService.ensureCleared();\n  }\n  onDragLeave() {\n    this.clearHoveredItems();\n    this.autoScrollService.ensureCleared();\n  }\n  clearHoveredItems() {\n    const virtualListGui = this.virtualList.getGui();\n    virtualListGui.querySelectorAll(`.${LIST_ITEM_HOVERED}`).forEach((el) => {\n      [\n        LIST_ITEM_HOVERED,\n        \"ag-item-highlight-top\",\n        \"ag-item-highlight-bottom\"\n      ].forEach((cls) => {\n        el.classList.remove(cls);\n      });\n    });\n    this.lastHoveredListItem = null;\n  }\n};\n__decorateClass([\n  Autowired(\"dragAndDropService\")\n], VirtualListDragFeature.prototype, \"dragAndDropService\", 2);\n__decorateClass([\n  PostConstruct\n], VirtualListDragFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/gridApi.ts\nfunction unwrapUserComp(comp) {\n  const compAsAny = comp;\n  const isProxy = compAsAny != null && compAsAny.getFrameworkComponentInstance != null;\n  return isProxy ? compAsAny.getFrameworkComponentInstance() : comp;\n}\nvar GridApi = class {\n  constructor() {\n    this.detailGridInfoMap = {};\n    this.destroyCalled = false;\n  }\n  init() {\n    switch (this.rowModel.getType()) {\n      case \"clientSide\":\n        this.clientSideRowModel = this.rowModel;\n        break;\n      case \"infinite\":\n        this.infiniteRowModel = this.rowModel;\n        break;\n      case \"serverSide\":\n        this.serverSideRowModel = this.rowModel;\n        break;\n    }\n    this.ctrlsService.whenReady((p) => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n    });\n  }\n  /** Used internally by grid. Not intended to be used by the client. Interface may change between releases. */\n  __getAlignedGridService() {\n    return this.alignedGridsService;\n  }\n  /** Returns the `gridId` for the current grid as specified via the gridOptions property `gridId` or the auto assigned grid id if none was provided. */\n  getGridId() {\n    return this.context.getGridId();\n  }\n  /** Register a detail grid with the master grid when it is created. */\n  addDetailGridInfo(id, gridInfo) {\n    this.detailGridInfoMap[id] = gridInfo;\n  }\n  /** Unregister a detail grid from the master grid when it is destroyed. */\n  removeDetailGridInfo(id) {\n    delete this.detailGridInfoMap[id];\n  }\n  /** Returns the `DetailGridInfo` corresponding to the supplied `detailGridId`. */\n  getDetailGridInfo(id) {\n    return this.detailGridInfoMap[id];\n  }\n  /** Iterates through each `DetailGridInfo` in the grid and calls the supplied callback on each. */\n  forEachDetailGridInfo(callback) {\n    let index = 0;\n    iterateObject(this.detailGridInfoMap, (id, gridInfo) => {\n      if (exists(gridInfo)) {\n        callback(gridInfo, index);\n        index++;\n      }\n    });\n  }\n  /** Similar to `exportDataAsCsv`, except returns the result as a string rather than download it. */\n  getDataAsCsv(params) {\n    if (ModuleRegistry.__assertRegistered(\"@ag-grid-community/csv-export\" /* CsvExportModule */, \"api.getDataAsCsv\", this.context.getGridId())) {\n      return this.csvCreator.getDataAsCsv(params);\n    }\n  }\n  /** Downloads a CSV export of the grid's data. */\n  exportDataAsCsv(params) {\n    if (ModuleRegistry.__assertRegistered(\"@ag-grid-community/csv-export\" /* CsvExportModule */, \"api.exportDataAsCsv\", this.context.getGridId())) {\n      this.csvCreator.exportDataAsCsv(params);\n    }\n  }\n  assertNotExcelMultiSheet(method, params) {\n    if (!ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/excel-export\" /* ExcelExportModule */, \"api.\" + method, this.context.getGridId())) {\n      return false;\n    }\n    if (this.excelCreator.getFactoryMode() === 1 /* MULTI_SHEET */) {\n      console.warn(\"AG Grid: The Excel Exporter is currently on Multi Sheet mode. End that operation by calling 'api.getMultipleSheetAsExcel()' or 'api.exportMultipleSheetsAsExcel()'\");\n      return false;\n    }\n    return true;\n  }\n  /** Similar to `exportDataAsExcel`, except instead of downloading a file, it will return a [Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob) to be processed by the user. */\n  getDataAsExcel(params) {\n    if (this.assertNotExcelMultiSheet(\"getDataAsExcel\", params)) {\n      return this.excelCreator.getDataAsExcel(params);\n    }\n  }\n  /** Downloads an Excel export of the grid's data. */\n  exportDataAsExcel(params) {\n    if (this.assertNotExcelMultiSheet(\"exportDataAsExcel\", params)) {\n      this.excelCreator.exportDataAsExcel(params);\n    }\n  }\n  /** This is method to be used to get the grid's data as a sheet, that will later be exported either by `getMultipleSheetsAsExcel()` or `exportMultipleSheetsAsExcel()`. */\n  getSheetDataForExcel(params) {\n    if (!ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/excel-export\" /* ExcelExportModule */, \"api.getSheetDataForExcel\", this.context.getGridId())) {\n      return;\n    }\n    this.excelCreator.setFactoryMode(1 /* MULTI_SHEET */);\n    return this.excelCreator.getSheetDataForExcel(params);\n  }\n  /** Similar to `exportMultipleSheetsAsExcel`, except instead of downloading a file, it will return a [Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob) to be processed by the user. */\n  getMultipleSheetsAsExcel(params) {\n    if (ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/excel-export\" /* ExcelExportModule */, \"api.getMultipleSheetsAsExcel\", this.context.getGridId())) {\n      return this.excelCreator.getMultipleSheetsAsExcel(params);\n    }\n  }\n  /** Downloads an Excel export of multiple sheets in one file. */\n  exportMultipleSheetsAsExcel(params) {\n    if (ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/excel-export\" /* ExcelExportModule */, \"api.exportMultipleSheetsAsExcel\", this.context.getGridId())) {\n      this.excelCreator.exportMultipleSheetsAsExcel(params);\n    }\n  }\n  /**\n   * Sets an ARIA property in the grid panel (element with `role=\\\"grid\\\"`), and removes an ARIA property when the value is null.\n   *\n   * Example: `api.setGridAriaProperty('label', 'my grid')` will set `aria-label=\\\"my grid\\\"`.\n   *\n   * `api.setGridAriaProperty('label', null)` will remove the `aria-label` attribute from the grid element.\n   */\n  setGridAriaProperty(property, value) {\n    if (!property) {\n      return;\n    }\n    const eGrid = this.ctrlsService.getGridBodyCtrl().getGui();\n    const ariaProperty = `aria-${property}`;\n    if (value === null) {\n      eGrid.removeAttribute(ariaProperty);\n    } else {\n      eGrid.setAttribute(ariaProperty, value);\n    }\n  }\n  logMissingRowModel(apiMethod, ...requiredRowModels) {\n    console.error(`AG Grid: api.${apiMethod} can only be called when gridOptions.rowModelType is ${requiredRowModels.join(\" or \")}`);\n  }\n  logDeprecation(version, apiMethod, replacement, message) {\n    warnOnce(`Since ${version} api.${apiMethod} is deprecated. Please use ${replacement} instead. ${message != null ? message : \"\"}`);\n  }\n  /** Gets the number of top pinned rows. */\n  getPinnedTopRowCount() {\n    return this.pinnedRowModel.getPinnedTopRowCount();\n  }\n  /** Gets the number of bottom pinned rows. */\n  getPinnedBottomRowCount() {\n    return this.pinnedRowModel.getPinnedBottomRowCount();\n  }\n  /** Gets the top pinned row with the specified index. */\n  getPinnedTopRow(index) {\n    return this.pinnedRowModel.getPinnedTopRow(index);\n  }\n  /** Gets the bottom pinned row with the specified index. */\n  getPinnedBottomRow(index) {\n    return this.pinnedRowModel.getPinnedBottomRow(index);\n  }\n  expireValueCache() {\n    this.valueCache.expire();\n  }\n  /**\n   * Returns an object with two properties:\n   *  - `top`: The top pixel position of the current scroll in the grid\n   *  - `bottom`: The bottom pixel position of the current scroll in the grid\n   */\n  getVerticalPixelRange() {\n    return this.gridBodyCtrl.getScrollFeature().getVScrollPosition();\n  }\n  /**\n   * Returns an object with two properties:\n   * - `left`: The left pixel position of the current scroll in the grid\n   * - `right`: The right pixel position of the current scroll in the grid\n   */\n  getHorizontalPixelRange() {\n    return this.gridBodyCtrl.getScrollFeature().getHScrollPosition();\n  }\n  /** Performs change detection on all cells, refreshing cells where required. */\n  refreshCells(params = {}) {\n    this.frameworkOverrides.wrapIncoming(() => this.rowRenderer.refreshCells(params));\n  }\n  /** Flash rows, columns or individual cells. */\n  flashCells(params = {}) {\n    const warning = (prop) => warnOnce(`Since v31.1 api.flashCells parameter '${prop}Delay' is deprecated. Please use '${prop}Duration' instead.`);\n    if (exists(params.fadeDelay)) {\n      warning(\"fade\");\n    }\n    if (exists(params.flashDelay)) {\n      warning(\"flash\");\n    }\n    this.frameworkOverrides.wrapIncoming(() => this.rowRenderer.flashCells(params));\n  }\n  /** Remove row(s) from the DOM and recreate them again from scratch. */\n  redrawRows(params = {}) {\n    const rowNodes = params ? params.rowNodes : void 0;\n    this.frameworkOverrides.wrapIncoming(() => this.rowRenderer.redrawRows(rowNodes));\n  }\n  /** Redraws the header. Useful if a column name changes, or something else that changes how the column header is displayed. */\n  refreshHeader() {\n    this.frameworkOverrides.wrapIncoming(() => this.ctrlsService.getHeaderRowContainerCtrls().forEach((c) => c.refresh()));\n  }\n  /** Returns `true` if any filter is set. This includes quick filter, column filter, external filter or advanced filter. */\n  isAnyFilterPresent() {\n    return this.filterManager.isAnyFilterPresent();\n  }\n  /** Returns `true` if any column filter is set, otherwise `false`. */\n  isColumnFilterPresent() {\n    return this.filterManager.isColumnFilterPresent() || this.filterManager.isAggregateFilterPresent();\n  }\n  /** Returns `true` if the Quick Filter is set, otherwise `false`. */\n  isQuickFilterPresent() {\n    return this.filterManager.isQuickFilterPresent();\n  }\n  /**\n   * Returns the row model inside the table.\n   * From here you can see the original rows, rows after filter has been applied,\n   * rows after aggregation has been applied, and the final set of 'to be displayed' rows.\n   *\n   * @deprecated As of v31.1, getModel() is deprecated and will not be available in future versions.\n   * Please use the appropriate grid API methods instead\n   */\n  getModel() {\n    warnOnce(\"Since v31.1 getModel() is deprecated. Please use the appropriate grid API methods instead.\");\n    return this.rowModel;\n  }\n  /** \n   * Expand or collapse a specific row node, optionally expanding/collapsing all of its parent nodes.\n   * By default rows are expanded asynchronously for best performance. Set forceSync: `true` if you need to interact with the expanded row immediately after this function.\n   */\n  setRowNodeExpanded(rowNode, expanded, expandParents, forceSync) {\n    this.expansionService.setRowNodeExpanded(rowNode, expanded, expandParents, forceSync);\n  }\n  /**\n   * Informs the grid that row group expanded state has changed and it needs to rerender the group nodes.\n   * Typically called after updating the row node expanded state explicitly, i.e `rowNode.expanded = false`,\n   * across multiple groups and you want to update the grid view in a single rerender instead of on every group change.\n   */\n  onGroupExpandedOrCollapsed() {\n    if (missing(this.clientSideRowModel)) {\n      this.logMissingRowModel(\"onGroupExpandedOrCollapsed\", \"clientSide\");\n      return;\n    }\n    this.expansionService.onGroupExpandedOrCollapsed();\n  }\n  /**\n   * Refresh the Client-Side Row Model, executing the grouping, filtering and sorting again.\n   * Optionally provide the step you wish the refresh to apply from. Defaults to `everything`.\n   */\n  refreshClientSideRowModel(step) {\n    if (missing(this.clientSideRowModel)) {\n      this.logMissingRowModel(\"refreshClientSideRowModel\", \"clientSide\");\n      return;\n    }\n    this.clientSideRowModel.refreshModel(step);\n  }\n  /** Returns `true` when there are no more animation frames left to process. */\n  isAnimationFrameQueueEmpty() {\n    return this.animationFrameService.isQueueEmpty();\n  }\n  flushAllAnimationFrames() {\n    this.animationFrameService.flushAllFrames();\n  }\n  /**\n   * Returns the row node with the given ID.\n   * The row node ID is the one you provide from the callback `getRowId(params)`,\n   * otherwise the ID is a number (cast as string) auto-generated by the grid when\n   * the row data is set.\n   */\n  getRowNode(id) {\n    return this.rowModel.getRowNode(id);\n  }\n  /**\n   * Gets the sizes that various UI elements will be rendered at with the current theme.\n   * If you override the row or header height using `gridOptions`, the override value you provided will be returned.\n   */\n  getSizesForCurrentTheme() {\n    return {\n      rowHeight: this.gos.getRowHeightAsNumber(),\n      headerHeight: this.columnModel.getHeaderHeight()\n    };\n  }\n  /** Expand all groups. */\n  expandAll() {\n    if (this.clientSideRowModel || this.serverSideRowModel) {\n      this.expansionService.expandAll(true);\n    } else {\n      this.logMissingRowModel(\"expandAll\", \"clientSide\", \"serverSide\");\n    }\n  }\n  /** Collapse all groups. */\n  collapseAll() {\n    if (this.clientSideRowModel || this.serverSideRowModel) {\n      this.expansionService.expandAll(false);\n    } else {\n      this.logMissingRowModel(\"collapseAll\", \"clientSide\", \"serverSide\");\n    }\n  }\n  /**\n   * Registers a callback to a virtual row.\n   * A virtual row is a row that is visually rendered on the screen (rows that are not visible because of the scroll position are not rendered).\n   * Unlike normal events, you do not need to unregister rendered row listeners.\n   * When the rendered row is removed from the grid, all associated rendered row listeners will also be removed.\n   * listen for this event if your `cellRenderer` needs to do cleanup when the row no longer exists.\n   */\n  addRenderedRowListener(eventName, rowIndex, callback) {\n    this.rowRenderer.addRenderedRowListener(eventName, rowIndex, callback);\n  }\n  /** Get the current Quick Filter text from the grid, or `undefined` if none is set. */\n  getQuickFilter() {\n    return this.gos.get(\"quickFilterText\");\n  }\n  /** Get the state of the Advanced Filter. Used for saving Advanced Filter state */\n  getAdvancedFilterModel() {\n    if (ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/advanced-filter\" /* AdvancedFilterModule */, \"api.getAdvancedFilterModel\", this.context.getGridId())) {\n      return this.filterManager.getAdvancedFilterModel();\n    }\n    return null;\n  }\n  /** Set the state of the Advanced Filter. Used for restoring Advanced Filter state */\n  setAdvancedFilterModel(advancedFilterModel) {\n    this.filterManager.setAdvancedFilterModel(advancedFilterModel);\n  }\n  /** Open the Advanced Filter Builder dialog (if enabled). */\n  showAdvancedFilterBuilder() {\n    if (ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/advanced-filter\" /* AdvancedFilterModule */, \"api.setAdvancedFilterModel\", this.context.getGridId())) {\n      this.filterManager.showAdvancedFilterBuilder(\"api\");\n    }\n  }\n  /**\n   * Set all of the provided nodes selection state to the provided value.\n   */\n  setNodesSelected(params) {\n    const allNodesValid = params.nodes.every((node) => {\n      if (node.rowPinned) {\n        console.warn(\"AG Grid: cannot select pinned rows\");\n        return false;\n      }\n      if (node.id === void 0) {\n        console.warn(\"AG Grid: cannot select node until id for node is known\");\n        return false;\n      }\n      return true;\n    });\n    if (!allNodesValid) {\n      return;\n    }\n    const { nodes, source, newValue } = params;\n    const nodesAsRowNode = nodes;\n    this.selectionService.setNodesSelected({ nodes: nodesAsRowNode, source: source != null ? source : \"api\", newValue });\n  }\n  /**\n   * Select all rows, regardless of filtering and rows that are not visible due to grouping being enabled and their groups not expanded.\n   * @param source Source property that will appear in the `selectionChanged` event, defaults to `'apiSelectAll'`\n   */\n  selectAll(source = \"apiSelectAll\") {\n    this.selectionService.selectAllRowNodes({ source });\n  }\n  /**\n   * Clear all row selections, regardless of filtering.\n   * @param source Source property that will appear in the `selectionChanged` event, defaults to `'apiSelectAll'`\n   */\n  deselectAll(source = \"apiSelectAll\") {\n    this.selectionService.deselectAllRowNodes({ source });\n  }\n  /**\n   * Select all filtered rows.\n   * @param source Source property that will appear in the `selectionChanged` event, defaults to `'apiSelectAllFiltered'`\n   */\n  selectAllFiltered(source = \"apiSelectAllFiltered\") {\n    this.selectionService.selectAllRowNodes({ source, justFiltered: true });\n  }\n  /**\n   * Clear all filtered selections.\n   * @param source Source property that will appear in the `selectionChanged` event, defaults to `'apiSelectAllFiltered'`\n   */\n  deselectAllFiltered(source = \"apiSelectAllFiltered\") {\n    this.selectionService.deselectAllRowNodes({ source, justFiltered: true });\n  }\n  /**\n   * Returns an object containing rules matching the selected rows in the SSRM.\n   * \n   * If `groupSelectsChildren=false` the returned object will be flat, and will conform to IServerSideSelectionState.\n   * If `groupSelectsChildren=true` the returned object will be hierarchical, and will conform to IServerSideGroupSelectionState.\n   */\n  getServerSideSelectionState() {\n    if (missing(this.serverSideRowModel)) {\n      this.logMissingRowModel(\"getServerSideSelectionState\", \"serverSide\");\n      return null;\n    }\n    return this.selectionService.getSelectionState();\n  }\n  /**\n   * Set the rules matching the selected rows in the SSRM.\n   * \n   * If `groupSelectsChildren=false` the param will be flat, and should conform to IServerSideSelectionState.\n   * If `groupSelectsChildren=true` the param will be hierarchical, and should conform to IServerSideGroupSelectionState.\n   */\n  setServerSideSelectionState(state) {\n    if (missing(this.serverSideRowModel)) {\n      this.logMissingRowModel(\"setServerSideSelectionState\", \"serverSide\");\n      return;\n    }\n    this.selectionService.setSelectionState(state, \"api\");\n  }\n  /**\n   * Select all rows on the current page.\n   * @param source Source property that will appear in the `selectionChanged` event, defaults to `'apiSelectAllCurrentPage'`\n   */\n  selectAllOnCurrentPage(source = \"apiSelectAllCurrentPage\") {\n    this.selectionService.selectAllRowNodes({ source, justCurrentPage: true });\n  }\n  /**\n   * Clear all filtered on the current page.\n   * @param source Source property that will appear in the `selectionChanged` event, defaults to `'apiSelectAllCurrentPage'`\n   */\n  deselectAllOnCurrentPage(source = \"apiSelectAllCurrentPage\") {\n    this.selectionService.deselectAllRowNodes({ source, justCurrentPage: true });\n  }\n  /** Show the 'loading' overlay. */\n  showLoadingOverlay() {\n    this.overlayService.showLoadingOverlay();\n  }\n  /** Show the 'no rows' overlay. */\n  showNoRowsOverlay() {\n    this.overlayService.showNoRowsOverlay();\n  }\n  /** Hides the overlay if showing. */\n  hideOverlay() {\n    this.overlayService.hideOverlay();\n  }\n  /**\n   * Returns an unsorted list of selected nodes.\n   * Getting the underlying node (rather than the data) is useful when working with tree / aggregated data,\n   * as the node can be traversed.\n   */\n  getSelectedNodes() {\n    return this.selectionService.getSelectedNodes();\n  }\n  /** Returns an unsorted list of selected rows (i.e. row data that you provided). */\n  getSelectedRows() {\n    return this.selectionService.getSelectedRows();\n  }\n  /**\n   * Returns a list of all selected nodes at 'best cost', a feature to be used with groups / trees.\n   * If a group has all its children selected, then the group appears in the result, but not the children.\n   * Designed for use with `'children'` as the group selection type, where groups don't actually appear in the selection normally.\n   */\n  getBestCostNodeSelection() {\n    if (missing(this.clientSideRowModel)) {\n      this.logMissingRowModel(\"getBestCostNodeSelection\", \"clientSide\");\n      return;\n    }\n    return this.selectionService.getBestCostNodeSelection();\n  }\n  /** Retrieve rendered nodes. Due to virtualisation this will contain only the current visible rows and those in the buffer. */\n  getRenderedNodes() {\n    return this.rowRenderer.getRenderedNodes();\n  }\n  /**\n   *  Ensures the column is visible by scrolling the table if needed.\n   *\n   * This will have no effect before the firstDataRendered event has fired.\n   *\n   * @param key - The column to ensure visible\n   * @param position - Where the column will be positioned.\n   * - `auto` - Scrolls the minimum amount to make sure the column is visible.\n   * - `start` - Scrolls the column to the start of the viewport.\n   * - `middle` - Scrolls the column to the middle of the viewport.\n   * - `end` - Scrolls the column to the end of the viewport.\n  */\n  ensureColumnVisible(key, position = \"auto\") {\n    this.frameworkOverrides.wrapIncoming(() => this.gridBodyCtrl.getScrollFeature().ensureColumnVisible(key, position), \"ensureVisible\");\n  }\n  /**\n   * Vertically scrolls the grid until the provided row index is inside the visible viewport.\n   * If a position is provided, the grid will attempt to scroll until the row is at the given position within the viewport.\n   * This will have no effect before the firstDataRendered event has fired.\n   */\n  ensureIndexVisible(index, position) {\n    this.frameworkOverrides.wrapIncoming(() => this.gridBodyCtrl.getScrollFeature().ensureIndexVisible(index, position), \"ensureVisible\");\n  }\n  /**\n   * Vertically scrolls the grid until the provided row (or a row matching the provided comparator) is inside the visible viewport.\n   * If a position is provided, the grid will attempt to scroll until the row is at the given position within the viewport.\n   * This will have no effect before the firstDataRendered event has fired.\n   */\n  ensureNodeVisible(nodeSelector, position = null) {\n    this.frameworkOverrides.wrapIncoming(() => this.gridBodyCtrl.getScrollFeature().ensureNodeVisible(nodeSelector, position), \"ensureVisible\");\n  }\n  /**\n   * Similar to `forEachNode`, except lists all the leaf nodes.\n   * This effectively goes through all the data that you provided to the grid before the grid performed any grouping.\n   * If using tree data, goes through all the nodes for the data you provided, including nodes that have children,\n   * but excluding groups the grid created where gaps were missing in the hierarchy.\n   */\n  forEachLeafNode(callback) {\n    if (missing(this.clientSideRowModel)) {\n      this.logMissingRowModel(\"forEachLeafNode\", \"clientSide\");\n      return;\n    }\n    this.clientSideRowModel.forEachLeafNode(callback);\n  }\n  /**\n   * Iterates through each node (row) in the grid and calls the callback for each node.\n   * This works similar to the `forEach` method on a JavaScript array.\n   * This is called for every node, ignoring any filtering or sorting applied within the grid.\n   * If using the Infinite Row Model, then this gets called for each page loaded in the page cache.\n   */\n  forEachNode(callback, includeFooterNodes) {\n    this.rowModel.forEachNode(callback, includeFooterNodes);\n  }\n  /** Similar to `forEachNode`, except skips any filtered out data. */\n  forEachNodeAfterFilter(callback) {\n    if (missing(this.clientSideRowModel)) {\n      this.logMissingRowModel(\"forEachNodeAfterFilter\", \"clientSide\");\n      return;\n    }\n    this.clientSideRowModel.forEachNodeAfterFilter(callback);\n  }\n  /** Similar to `forEachNodeAfterFilter`, except the callbacks are called in the order the rows are displayed in the grid. */\n  forEachNodeAfterFilterAndSort(callback) {\n    if (missing(this.clientSideRowModel)) {\n      this.logMissingRowModel(\"forEachNodeAfterFilterAndSort\", \"clientSide\");\n      return;\n    }\n    this.clientSideRowModel.forEachNodeAfterFilterAndSort(callback);\n  }\n  /**\n   * @deprecated v31.1 To get/set individual filter models, use `getColumnFilterModel` or `setColumnFilterModel` instead.\n   * To get hold of the filter instance, use `getColumnFilterInstance` which returns the instance asynchronously.\n   */\n  getFilterInstance(key, callback) {\n    warnOnce(`'getFilterInstance' is deprecated. To get/set individual filter models, use 'getColumnFilterModel' or 'setColumnFilterModel' instead. To get hold of the filter instance, use 'getColumnFilterInstance' which returns the instance asynchronously.`);\n    return this.filterManager.getFilterInstance(key, callback);\n  }\n  /**\n   * Returns the filter component instance for a column.\n   * For getting/setting models for individual column filters, use `getColumnFilterModel` and `setColumnFilterModel` instead of this.\n   * `key` can be a column ID or a `Column` object.\n   */\n  getColumnFilterInstance(key) {\n    return this.filterManager.getColumnFilterInstance(key);\n  }\n  /** Destroys a filter. Useful to force a particular filter to be created from scratch again. */\n  destroyFilter(key) {\n    const column = this.columnModel.getPrimaryColumn(key);\n    if (column) {\n      return this.filterManager.destroyFilter(column, \"api\");\n    }\n  }\n  /** Gets the status panel instance corresponding to the supplied `id`. */\n  getStatusPanel(key) {\n    if (!ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/status-bar\" /* StatusBarModule */, \"api.getStatusPanel\", this.context.getGridId())) {\n      return;\n    }\n    const comp = this.statusBarService.getStatusPanel(key);\n    return unwrapUserComp(comp);\n  }\n  getColumnDef(key) {\n    const column = this.columnModel.getPrimaryColumn(key);\n    if (column) {\n      return column.getColDef();\n    }\n    return null;\n  }\n  /**\n   * Returns the current column definitions.\n  */\n  getColumnDefs() {\n    return this.columnModel.getColumnDefs();\n  }\n  /**\n   * Informs the grid that a filter has changed. This is typically called after a filter change through one of the filter APIs.\n   * @param source The source of the filter change event. If not specified defaults to `'api'`.\n   */\n  onFilterChanged(source = \"api\") {\n    this.filterManager.onFilterChanged({ source });\n  }\n  /**\n   * Gets the grid to act as if the sort was changed.\n   * Useful if you update some values and want to get the grid to reorder them according to the new values.\n   */\n  onSortChanged() {\n    this.sortController.onSortChanged(\"api\");\n  }\n  /**\n   * Sets the state of all the column filters. Provide it with what you get from `getFilterModel()` to restore filter state.\n   * If inferring cell data types, and row data is provided asynchronously and is yet to be set,\n   * the filter model will be applied asynchronously after row data is added.\n   * To always perform this synchronously, set `cellDataType = false` on the default column definition,\n   * or provide cell data types for every column.\n   */\n  setFilterModel(model) {\n    this.frameworkOverrides.wrapIncoming(() => this.filterManager.setFilterModel(model));\n  }\n  /** Gets the current state of all the column filters. Used for saving filter state. */\n  getFilterModel() {\n    return this.filterManager.getFilterModel();\n  }\n  /**\n   * Gets the current filter model for the specified column.\n   * Will return `null` if no active filter.\n   */\n  getColumnFilterModel(column) {\n    return this.filterManager.getColumnFilterModel(column);\n  }\n  /**\n   * Sets the filter model for the specified column.\n   * Setting a `model` of `null` will reset the filter (make inactive).\n   * Must wait on the response before calling `api.onFilterChanged()`.\n   */\n  setColumnFilterModel(column, model) {\n    return this.filterManager.setColumnFilterModel(column, model);\n  }\n  /** Returns the focused cell (or the last focused cell if the grid lost focus). */\n  getFocusedCell() {\n    return this.focusService.getFocusedCell();\n  }\n  /** Clears the focused cell. */\n  clearFocusedCell() {\n    return this.focusService.clearFocusedCell();\n  }\n  /** Sets the focus to the specified cell. `rowPinned` can be either 'top', 'bottom' or null (for not pinned). */\n  setFocusedCell(rowIndex, colKey, rowPinned) {\n    this.focusService.setFocusedCell({ rowIndex, column: colKey, rowPinned, forceBrowserFocus: true });\n  }\n  /** Adds a drop zone outside of the grid where rows can be dropped. */\n  addRowDropZone(params) {\n    this.gridBodyCtrl.getRowDragFeature().addRowDropZone(params);\n  }\n  /** Removes an external drop zone added by `addRowDropZone`. */\n  removeRowDropZone(params) {\n    const activeDropTarget = this.dragAndDropService.findExternalZone(params);\n    if (activeDropTarget) {\n      this.dragAndDropService.removeDropTarget(activeDropTarget);\n    }\n  }\n  /** Returns the `RowDropZoneParams` to be used by another grid's `addRowDropZone` method. */\n  getRowDropZoneParams(events) {\n    return this.gridBodyCtrl.getRowDragFeature().getRowDropZone(events);\n  }\n  assertSideBarLoaded(apiMethod) {\n    return ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/side-bar\" /* SideBarModule */, \"api.\" + apiMethod, this.context.getGridId());\n  }\n  /** Returns `true` if the side bar is visible. */\n  isSideBarVisible() {\n    return this.assertSideBarLoaded(\"isSideBarVisible\") && this.sideBarService.getSideBarComp().isDisplayed();\n  }\n  /** Show/hide the entire side bar, including any visible panel and the tab buttons. */\n  setSideBarVisible(show) {\n    if (this.assertSideBarLoaded(\"setSideBarVisible\")) {\n      this.sideBarService.getSideBarComp().setDisplayed(show);\n    }\n  }\n  /** Sets the side bar position relative to the grid. Possible values are `'left'` or `'right'`. */\n  setSideBarPosition(position) {\n    if (this.assertSideBarLoaded(\"setSideBarPosition\")) {\n      this.sideBarService.getSideBarComp().setSideBarPosition(position);\n    }\n  }\n  /** Opens a particular tool panel. Provide the ID of the tool panel to open. */\n  openToolPanel(key) {\n    if (this.assertSideBarLoaded(\"openToolPanel\")) {\n      this.sideBarService.getSideBarComp().openToolPanel(key, \"api\");\n    }\n  }\n  /** Closes the currently open tool panel (if any). */\n  closeToolPanel() {\n    if (this.assertSideBarLoaded(\"closeToolPanel\")) {\n      this.sideBarService.getSideBarComp().close(\"api\");\n    }\n  }\n  /** Returns the ID of the currently shown tool panel if any, otherwise `null`. */\n  getOpenedToolPanel() {\n    if (this.assertSideBarLoaded(\"getOpenedToolPanel\")) {\n      return this.sideBarService.getSideBarComp().openedItem();\n    }\n    return null;\n  }\n  /** Force refresh all tool panels by calling their `refresh` method. */\n  refreshToolPanel() {\n    if (this.assertSideBarLoaded(\"refreshToolPanel\")) {\n      this.sideBarService.getSideBarComp().refresh();\n    }\n  }\n  /** Returns `true` if the tool panel is showing, otherwise `false`. */\n  isToolPanelShowing() {\n    return this.assertSideBarLoaded(\"isToolPanelShowing\") && this.sideBarService.getSideBarComp().isToolPanelShowing();\n  }\n  /** Gets the tool panel instance corresponding to the supplied `id`. */\n  getToolPanelInstance(id) {\n    if (this.assertSideBarLoaded(\"getToolPanelInstance\")) {\n      const comp = this.sideBarService.getSideBarComp().getToolPanelInstance(id);\n      return unwrapUserComp(comp);\n    }\n  }\n  /** Returns the current side bar configuration. If a shortcut was used, returns the detailed long form. */\n  getSideBar() {\n    if (this.assertSideBarLoaded(\"getSideBar\")) {\n      return this.sideBarService.getSideBarComp().getDef();\n    }\n    return void 0;\n  }\n  /** Tells the grid to recalculate the row heights. */\n  resetRowHeights() {\n    if (exists(this.clientSideRowModel)) {\n      if (this.columnModel.isAutoRowHeightActive()) {\n        console.warn(\"AG Grid: calling gridApi.resetRowHeights() makes no sense when using Auto Row Height.\");\n        return;\n      }\n      this.clientSideRowModel.resetRowHeights();\n    }\n  }\n  /**\n   * Sets the `rowCount` and `maxRowFound` properties.\n   * The second parameter, `maxRowFound`, is optional and if left out, only `rowCount` is set.\n   * Set `rowCount` to adjust the height of the vertical scroll.\n   * Set `maxRowFound` to enable / disable searching for more rows.\n   * Use this method if you add or remove rows into the dataset and need to reset the number of rows or instruct the grid that the entire row count is no longer known.\n   */\n  setRowCount(rowCount, maxRowFound) {\n    if (this.serverSideRowModel) {\n      if (this.columnModel.isRowGroupEmpty()) {\n        this.serverSideRowModel.setRowCount(rowCount, maxRowFound);\n        return;\n      }\n      console.error(\"AG Grid: setRowCount cannot be used while using row grouping.\");\n      return;\n    }\n    if (this.infiniteRowModel) {\n      this.infiniteRowModel.setRowCount(rowCount, maxRowFound);\n      return;\n    }\n    this.logMissingRowModel(\"setRowCount\", \"infinite\", \"serverSide\");\n  }\n  /** Tells the grid a row height has changed. To be used after calling `rowNode.setRowHeight(newHeight)`. */\n  onRowHeightChanged() {\n    if (this.clientSideRowModel) {\n      this.clientSideRowModel.onRowHeightChanged();\n    } else if (this.serverSideRowModel) {\n      this.serverSideRowModel.onRowHeightChanged();\n    }\n  }\n  /**\n   * @deprecated v31.3 Use `getCellValue` instead.\n   */\n  getValue(colKey, rowNode) {\n    this.logDeprecation(\"31.3\", \"getValue\", \"getCellValue\");\n    return this.getCellValue({ colKey, rowNode });\n  }\n  getCellValue(params) {\n    var _a;\n    const { colKey, rowNode, useFormatter } = params;\n    let column = (_a = this.columnModel.getPrimaryColumn(colKey)) != null ? _a : this.columnModel.getGridColumn(colKey);\n    if (missing(column)) {\n      return null;\n    }\n    const value = this.valueService.getValue(column, rowNode);\n    if (useFormatter) {\n      const formattedValue = this.valueService.formatValue(column, rowNode, value);\n      return formattedValue != null ? formattedValue : escapeString(value, true);\n    }\n    return value;\n  }\n  /**\n   * Add an event listener for the specified `eventType`.\n   * Works similar to `addEventListener` for a browser DOM element.\n   * Listeners will be automatically removed when the grid is destroyed.\n   */\n  addEventListener(eventType, listener) {\n    this.apiEventService.addEventListener(eventType, listener);\n  }\n  /**\n   * Add an event listener for all event types coming from the grid.\n   * Listeners will be automatically removed when the grid is destroyed.\n   */\n  addGlobalListener(listener) {\n    this.apiEventService.addGlobalListener(listener);\n  }\n  /** Remove an event listener. */\n  removeEventListener(eventType, listener) {\n    this.apiEventService.removeEventListener(eventType, listener);\n  }\n  /** Remove a global event listener. */\n  removeGlobalListener(listener) {\n    this.apiEventService.removeGlobalListener(listener);\n  }\n  dispatchEvent(event) {\n    this.eventService.dispatchEvent(event);\n  }\n  /** Will destroy the grid and release resources. If you are using a framework you do not need to call this, as the grid links in with the framework lifecycle. However if you are using Web Components or native JavaScript, you do need to call this, to avoid a memory leak in your application. */\n  destroy() {\n    var _a;\n    const preDestroyLink = `See ${this.frameworkOverrides.getDocLink(\"grid-lifecycle/#grid-pre-destroyed\")}`;\n    if (this.destroyCalled) {\n      return;\n    }\n    const event = {\n      type: Events.EVENT_GRID_PRE_DESTROYED,\n      state: this.getState()\n    };\n    this.dispatchEvent(event);\n    this.destroyCalled = true;\n    (_a = this.ctrlsService.get(\"gridCtrl\")) == null ? void 0 : _a.destroyGridUi();\n    this.context.destroy();\n    this.detailGridInfoMap = {};\n    removeAllReferences(this, [\"isDestroyed\"], preDestroyLink);\n  }\n  /** Returns `true` if the grid has been destroyed. */\n  isDestroyed() {\n    return this.destroyCalled;\n  }\n  /** Reset the Quick Filter cache text on every rowNode. */\n  resetQuickFilter() {\n    this.filterManager.resetQuickFilterCache();\n  }\n  /** Returns the list of selected cell ranges. */\n  getCellRanges() {\n    if (this.rangeService) {\n      return this.rangeService.getCellRanges();\n    }\n    ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/range-selection\" /* RangeSelectionModule */, \"api.getCellRanges\", this.context.getGridId());\n    return null;\n  }\n  /** Adds the provided cell range to the selected ranges. */\n  addCellRange(params) {\n    if (this.rangeService) {\n      this.rangeService.addCellRange(params);\n      return;\n    }\n    ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/range-selection\" /* RangeSelectionModule */, \"api.addCellRange\", this.context.getGridId());\n  }\n  /** Clears the selected ranges. */\n  clearRangeSelection() {\n    if (this.rangeService) {\n      this.rangeService.removeAllCellRanges();\n    }\n    ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/range-selection\" /* RangeSelectionModule */, \"gridApi.clearRangeSelection\", this.context.getGridId());\n  }\n  /** Reverts the last cell edit. */\n  undoCellEditing() {\n    this.undoRedoService.undo(\"api\");\n  }\n  /** Re-applies the most recently undone cell edit. */\n  redoCellEditing() {\n    this.undoRedoService.redo(\"api\");\n  }\n  /** Returns current number of available cell edit undo operations. */\n  getCurrentUndoSize() {\n    return this.undoRedoService.getCurrentUndoStackSize();\n  }\n  /** Returns current number of available cell edit redo operations. */\n  getCurrentRedoSize() {\n    return this.undoRedoService.getCurrentRedoStackSize();\n  }\n  assertChart(methodName, func) {\n    if (ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/charts\" /* GridChartsModule */, \"api.\" + methodName, this.context.getGridId())) {\n      return this.frameworkOverrides.wrapIncoming(() => func());\n    }\n  }\n  /** Returns a list of models with information about the charts that are currently rendered from the grid. */\n  getChartModels() {\n    return this.assertChart(\"getChartModels\", () => this.chartService.getChartModels());\n  }\n  /** Returns the `ChartRef` using the supplied `chartId`. */\n  getChartRef(chartId) {\n    return this.assertChart(\"getChartRef\", () => this.chartService.getChartRef(chartId));\n  }\n  /** Returns a base64-encoded image data URL for the referenced chartId. */\n  getChartImageDataURL(params) {\n    return this.assertChart(\"getChartImageDataURL\", () => this.chartService.getChartImageDataURL(params));\n  }\n  /** Starts a browser-based image download for the referenced chartId. */\n  downloadChart(params) {\n    return this.assertChart(\"downloadChart\", () => this.chartService.downloadChart(params));\n  }\n  /** Open the Chart Tool Panel. */\n  openChartToolPanel(params) {\n    return this.assertChart(\"openChartToolPanel\", () => this.chartService.openChartToolPanel(params));\n  }\n  /** Close the Chart Tool Panel. */\n  closeChartToolPanel(params) {\n    return this.assertChart(\"closeChartToolPanel\", () => this.chartService.closeChartToolPanel(params.chartId));\n  }\n  /** Used to programmatically create charts from a range. */\n  createRangeChart(params) {\n    return this.assertChart(\"createRangeChart\", () => this.chartService.createRangeChart(params));\n  }\n  /** Used to programmatically create pivot charts from a grid. */\n  createPivotChart(params) {\n    return this.assertChart(\"createPivotChart\", () => this.chartService.createPivotChart(params));\n  }\n  /** Used to programmatically create cross filter charts from a range. */\n  createCrossFilterChart(params) {\n    return this.assertChart(\"createCrossFilterChart\", () => this.chartService.createCrossFilterChart(params));\n  }\n  /** Used to programmatically update a chart. */\n  updateChart(params) {\n    return this.assertChart(\"updateChart\", () => this.chartService.updateChart(params));\n  }\n  /** Restores a chart using the `ChartModel` that was previously obtained from `getChartModels()`. */\n  restoreChart(chartModel, chartContainer) {\n    return this.assertChart(\"restoreChart\", () => this.chartService.restoreChart(chartModel, chartContainer));\n  }\n  assertClipboard(methodName, func) {\n    if (ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/clipboard\" /* ClipboardModule */, \"api\" + methodName, this.context.getGridId())) {\n      func();\n    }\n  }\n  /** Copies data to clipboard by following the same rules as pressing Ctrl+C. */\n  copyToClipboard(params) {\n    this.assertClipboard(\"copyToClipboard\", () => this.clipboardService.copyToClipboard(params));\n  }\n  /** Cuts data to clipboard by following the same rules as pressing Ctrl+X. */\n  cutToClipboard(params) {\n    this.assertClipboard(\"cutToClipboard\", () => this.clipboardService.cutToClipboard(params));\n  }\n  /** Copies the selected rows to the clipboard. */\n  copySelectedRowsToClipboard(params) {\n    this.assertClipboard(\"copySelectedRowsToClipboard\", () => this.clipboardService.copySelectedRowsToClipboard(params));\n  }\n  /** Copies the selected ranges to the clipboard. */\n  copySelectedRangeToClipboard(params) {\n    this.assertClipboard(\"copySelectedRangeToClipboard\", () => this.clipboardService.copySelectedRangeToClipboard(params));\n  }\n  /** Copies the selected range down, similar to `Ctrl + D` in Excel. */\n  copySelectedRangeDown() {\n    this.assertClipboard(\"copySelectedRangeDown\", () => this.clipboardService.copyRangeDown());\n  }\n  /** Pastes the data from the Clipboard into the focused cell of the grid. If no grid cell is focused, calling this method has no effect. */\n  pasteFromClipboard() {\n    this.assertClipboard(\"pasteFromClipboard\", () => this.clipboardService.pasteFromClipboard());\n  }\n  /** @deprecated v31.1 Use `IHeaderParams.showColumnMenu` within a header component, or `api.showColumnMenu` elsewhere. */\n  showColumnMenuAfterButtonClick(colKey, buttonElement) {\n    warnOnce(`'showColumnMenuAfterButtonClick' is deprecated. Use 'IHeaderParams.showColumnMenu' within a header component, or 'api.showColumnMenu' elsewhere.`);\n    const column = this.columnModel.getGridColumn(colKey);\n    this.menuService.showColumnMenu({\n      column,\n      buttonElement,\n      positionBy: \"button\"\n    });\n  }\n  /** @deprecated v31.1 Use `IHeaderParams.showColumnMenuAfterMouseClick` within a header component, or `api.showColumnMenu` elsewhere. */\n  showColumnMenuAfterMouseClick(colKey, mouseEvent) {\n    warnOnce(`'showColumnMenuAfterMouseClick' is deprecated. Use 'IHeaderParams.showColumnMenuAfterMouseClick' within a header component, or 'api.showColumnMenu' elsewhere.`);\n    let column = this.columnModel.getGridColumn(colKey);\n    if (!column) {\n      column = this.columnModel.getPrimaryColumn(colKey);\n    }\n    if (!column) {\n      console.error(`AG Grid: column '${colKey}' not found`);\n      return;\n    }\n    this.menuService.showColumnMenu({\n      column,\n      mouseEvent,\n      positionBy: \"mouse\"\n    });\n  }\n  /**\n   * Displays the AG Grid context menu\n   */\n  showContextMenu(params) {\n    const { rowNode, column, value, x, y } = params || {};\n    let { x: clientX, y: clientY } = this.menuService.getContextMenuPosition(rowNode, column);\n    if (x != null) {\n      clientX = x;\n    }\n    if (y != null) {\n      clientY = y;\n    }\n    this.menuService.showContextMenu({\n      mouseEvent: new MouseEvent(\"mousedown\", { clientX, clientY }),\n      rowNode,\n      column,\n      value\n    });\n  }\n  /** Show the column chooser. */\n  showColumnChooser(params) {\n    this.menuService.showColumnChooser({ chooserParams: params });\n  }\n  /** Show the filter for the provided column. */\n  showColumnFilter(colKey) {\n    const column = this.columnModel.getGridColumn(colKey);\n    if (!column) {\n      console.error(`AG Grid: column '${colKey}' not found`);\n      return;\n    }\n    this.menuService.showFilterMenu({\n      column,\n      containerType: \"columnFilter\",\n      positionBy: \"auto\"\n    });\n  }\n  /** Show the column menu for the provided column. */\n  showColumnMenu(colKey) {\n    const column = this.columnModel.getGridColumn(colKey);\n    if (!column) {\n      console.error(`AG Grid: column '${colKey}' not found`);\n      return;\n    }\n    this.menuService.showColumnMenu({\n      column,\n      positionBy: \"auto\"\n    });\n  }\n  /** Hides any visible context menu or column menu. */\n  hidePopupMenu() {\n    this.menuService.hidePopupMenu();\n  }\n  /** Hide the column chooser if visible. */\n  hideColumnChooser() {\n    this.menuService.hideColumnChooser();\n  }\n  /** Navigates the grid focus to the next cell, as if tabbing. */\n  tabToNextCell(event) {\n    return this.navigationService.tabToNextCell(false, event);\n  }\n  /** Navigates the grid focus to the previous cell, as if shift-tabbing. */\n  tabToPreviousCell(event) {\n    return this.navigationService.tabToNextCell(true, event);\n  }\n  /** Returns the list of active cell renderer instances. */\n  getCellRendererInstances(params = {}) {\n    const res = this.rowRenderer.getCellRendererInstances(params);\n    const unwrapped = res.map(unwrapUserComp);\n    return unwrapped;\n  }\n  /** Returns the list of active cell editor instances. Optionally provide parameters to restrict to certain columns / row nodes. */\n  getCellEditorInstances(params = {}) {\n    const res = this.rowRenderer.getCellEditorInstances(params);\n    const unwrapped = res.map(unwrapUserComp);\n    return unwrapped;\n  }\n  /** If the grid is editing, returns back details of the editing cell(s). */\n  getEditingCells() {\n    return this.rowRenderer.getEditingCells();\n  }\n  /** If a cell is editing, it stops the editing. Pass `true` if you want to cancel the editing (i.e. don't accept changes). */\n  stopEditing(cancel = false) {\n    this.rowRenderer.stopEditing(cancel);\n  }\n  /** Start editing the provided cell. If another cell is editing, the editing will be stopped in that other cell. */\n  startEditingCell(params) {\n    const column = this.columnModel.getGridColumn(params.colKey);\n    if (!column) {\n      console.warn(`AG Grid: no column found for ${params.colKey}`);\n      return;\n    }\n    const cellPosition = {\n      rowIndex: params.rowIndex,\n      rowPinned: params.rowPinned || null,\n      column\n    };\n    const notPinned = params.rowPinned == null;\n    if (notPinned) {\n      this.ensureIndexVisible(params.rowIndex);\n    }\n    this.ensureColumnVisible(params.colKey);\n    const cell = this.navigationService.getCellByPosition(cellPosition);\n    if (!cell) {\n      return;\n    }\n    if (!this.focusService.isCellFocused(cellPosition)) {\n      this.focusService.setFocusedCell(cellPosition);\n    }\n    cell.startRowOrCellEdit(params.key);\n  }\n  /** @deprecated v31.1 addAggFunc(key, func) is  deprecated, please use addAggFuncs({ key: func }) instead. */\n  addAggFunc(key, aggFunc) {\n    this.logDeprecation(\"v31.1\", \"addAggFunc(key, func)\", \"addAggFuncs({ key: func })\");\n    if (this.aggFuncService) {\n      this.aggFuncService.addAggFuncs({ key: aggFunc });\n    }\n  }\n  /** Add aggregations function with the specified keys. */\n  addAggFuncs(aggFuncs) {\n    if (this.aggFuncService) {\n      this.aggFuncService.addAggFuncs(aggFuncs);\n    }\n  }\n  /** Clears all aggregation functions (including those provided by the grid). */\n  clearAggFuncs() {\n    if (this.aggFuncService) {\n      this.aggFuncService.clear();\n    }\n  }\n  /** Apply transactions to the server side row model. */\n  applyServerSideTransaction(transaction) {\n    if (!this.serverSideTransactionManager) {\n      this.logMissingRowModel(\"applyServerSideTransaction\", \"serverSide\");\n      return;\n    }\n    return this.serverSideTransactionManager.applyTransaction(transaction);\n  }\n  /** Batch apply transactions to the server side row model. */\n  applyServerSideTransactionAsync(transaction, callback) {\n    if (!this.serverSideTransactionManager) {\n      this.logMissingRowModel(\"applyServerSideTransactionAsync\", \"serverSide\");\n      return;\n    }\n    return this.serverSideTransactionManager.applyTransactionAsync(transaction, callback);\n  }\n  /**\n   * Applies row data to a server side store.\n   * New rows will overwrite rows at the same index in the same way as if provided by a datasource success callback.\n  */\n  applyServerSideRowData(params) {\n    var _a, _b;\n    const startRow = (_a = params.startRow) != null ? _a : 0;\n    const route = (_b = params.route) != null ? _b : [];\n    if (startRow < 0) {\n      console.warn(`AG Grid: invalid value ${params.startRow} for startRow, the value should be >= 0`);\n      return;\n    }\n    if (this.serverSideRowModel) {\n      this.serverSideRowModel.applyRowData(params.successParams, startRow, route);\n    } else {\n      this.logMissingRowModel(\"setServerSideDatasource\", \"serverSide\");\n    }\n  }\n  /** Gets all failed server side loads to retry. */\n  retryServerSideLoads() {\n    if (!this.serverSideRowModel) {\n      this.logMissingRowModel(\"retryServerSideLoads\", \"serverSide\");\n      return;\n    }\n    this.serverSideRowModel.retryLoads();\n  }\n  flushServerSideAsyncTransactions() {\n    if (!this.serverSideTransactionManager) {\n      this.logMissingRowModel(\"flushServerSideAsyncTransactions\", \"serverSide\");\n      return;\n    }\n    return this.serverSideTransactionManager.flushAsyncTransactions();\n  }\n  /** Update row data. Pass a transaction object with lists for `add`, `remove` and `update`. */\n  applyTransaction(rowDataTransaction) {\n    if (!this.clientSideRowModel) {\n      this.logMissingRowModel(\"applyTransaction\", \"clientSide\");\n      return;\n    }\n    return this.frameworkOverrides.wrapIncoming(() => this.clientSideRowModel.updateRowData(rowDataTransaction));\n  }\n  /** Same as `applyTransaction` except executes asynchronously for efficiency. */\n  applyTransactionAsync(rowDataTransaction, callback) {\n    if (!this.clientSideRowModel) {\n      this.logMissingRowModel(\"applyTransactionAsync\", \"clientSide\");\n      return;\n    }\n    this.frameworkOverrides.wrapIncoming(() => this.clientSideRowModel.batchUpdateRowData(rowDataTransaction, callback));\n  }\n  /** Executes any remaining asynchronous grid transactions, if any are waiting to be executed. */\n  flushAsyncTransactions() {\n    if (!this.clientSideRowModel) {\n      this.logMissingRowModel(\"flushAsyncTransactions\", \"clientSide\");\n      return;\n    }\n    this.frameworkOverrides.wrapIncoming(() => this.clientSideRowModel.flushAsyncTransactions());\n  }\n  /**\n   * Marks all the currently loaded blocks in the cache for reload.\n   * If you have 10 blocks in the cache, all 10 will be marked for reload.\n   * The old data will continue to be displayed until the new data is loaded.\n   */\n  refreshInfiniteCache() {\n    if (this.infiniteRowModel) {\n      this.infiniteRowModel.refreshCache();\n    } else {\n      this.logMissingRowModel(\"refreshInfiniteCache\", \"infinite\");\n    }\n  }\n  /**\n   * Purges the cache.\n   * The grid is then told to refresh. Only the blocks required to display the current data on screen are fetched (typically no more than 2).\n   * The grid will display nothing while the new blocks are loaded.\n   * Use this to immediately remove the old data from the user.\n   */\n  purgeInfiniteCache() {\n    if (this.infiniteRowModel) {\n      this.infiniteRowModel.purgeCache();\n    } else {\n      this.logMissingRowModel(\"purgeInfiniteCache\", \"infinite\");\n    }\n  }\n  /**\n   * Refresh a server-side store level.\n   * If you pass no parameters, then the top level store is refreshed.\n   * To refresh a child level, pass in the string of keys to get to the desired level.\n   * Once the store refresh is complete, the storeRefreshed event is fired.\n   */\n  refreshServerSide(params) {\n    if (!this.serverSideRowModel) {\n      this.logMissingRowModel(\"refreshServerSide\", \"serverSide\");\n      return;\n    }\n    this.serverSideRowModel.refreshStore(params);\n  }\n  /** Returns info on all server side group levels. */\n  getServerSideGroupLevelState() {\n    if (!this.serverSideRowModel) {\n      this.logMissingRowModel(\"getServerSideGroupLevelState\", \"serverSide\");\n      return [];\n    }\n    return this.serverSideRowModel.getStoreState();\n  }\n  /** The row count defines how many rows the grid allows scrolling to. */\n  getInfiniteRowCount() {\n    if (this.infiniteRowModel) {\n      return this.infiniteRowModel.getRowCount();\n    } else {\n      this.logMissingRowModel(\"getInfiniteRowCount\", \"infinite\");\n    }\n  }\n  /** Returns `true` if grid allows for scrolling past the last row to load more rows, thus providing infinite scroll. */\n  isLastRowIndexKnown() {\n    if (this.infiniteRowModel) {\n      return this.infiniteRowModel.isLastRowIndexKnown();\n    } else {\n      this.logMissingRowModel(\"isLastRowIndexKnown\", \"infinite\");\n    }\n  }\n  /**\n   * Returns an object representing the state of the cache. This is useful for debugging and understanding how the cache is working.\n   */\n  getCacheBlockState() {\n    return this.rowNodeBlockLoader.getBlockState();\n  }\n  /** @deprecated v31.1 `getFirstDisplayedRow` is deprecated. Please use `getFirstDisplayedRowIndex` instead. */\n  getFirstDisplayedRow() {\n    this.logDeprecation(\"v31.1\", \"getFirstDisplayedRow\", \"getFirstDisplayedRowIndex\");\n    return this.getFirstDisplayedRowIndex();\n  }\n  /** Get the index of the first displayed row due to scrolling (includes invisible rendered rows in the buffer). */\n  getFirstDisplayedRowIndex() {\n    return this.rowRenderer.getFirstVirtualRenderedRow();\n  }\n  /** @deprecated v31.1 `getLastDisplayedRow` is deprecated. Please use `getLastDisplayedRowIndex` instead. */\n  getLastDisplayedRow() {\n    this.logDeprecation(\"v31.1\", \"getLastDisplayedRow\", \"getLastDisplayedRowIndex\");\n    return this.getLastDisplayedRowIndex();\n  }\n  /** Get the index of the last displayed row due to scrolling (includes invisible rendered rows in the buffer). */\n  getLastDisplayedRowIndex() {\n    return this.rowRenderer.getLastVirtualRenderedRow();\n  }\n  /** Returns the displayed `RowNode` at the given `index`. */\n  getDisplayedRowAtIndex(index) {\n    return this.rowModel.getRow(index);\n  }\n  /** Returns the total number of displayed rows. */\n  getDisplayedRowCount() {\n    return this.rowModel.getRowCount();\n  }\n  /**\n   * Returns `true` when the last page is known.\n   * This will always be `true` if you are using the Client-Side Row Model for pagination.\n   * Returns `false` when the last page is not known; this only happens when using Infinite Row Model.\n   */\n  paginationIsLastPageFound() {\n    return this.paginationProxy.isLastPageFound();\n  }\n  /** Returns how many rows are being shown per page. */\n  paginationGetPageSize() {\n    return this.paginationProxy.getPageSize();\n  }\n  /** Returns the 0-based index of the page which is showing. */\n  paginationGetCurrentPage() {\n    return this.paginationProxy.getCurrentPage();\n  }\n  /** Returns the total number of pages. Returns `null` if `paginationIsLastPageFound() === false`. */\n  paginationGetTotalPages() {\n    return this.paginationProxy.getTotalPages();\n  }\n  /** The total number of rows. Returns `null` if `paginationIsLastPageFound() === false`. */\n  paginationGetRowCount() {\n    return this.paginationProxy.getMasterRowCount();\n  }\n  /** Navigates to the next page. */\n  paginationGoToNextPage() {\n    this.paginationProxy.goToNextPage();\n  }\n  /** Navigates to the previous page. */\n  paginationGoToPreviousPage() {\n    this.paginationProxy.goToPreviousPage();\n  }\n  /** Navigates to the first page. */\n  paginationGoToFirstPage() {\n    this.paginationProxy.goToFirstPage();\n  }\n  /** Navigates to the last page. */\n  paginationGoToLastPage() {\n    this.paginationProxy.goToLastPage();\n  }\n  /** Goes to the specified page. If the page requested doesn't exist, it will go to the last page. */\n  paginationGoToPage(page) {\n    this.paginationProxy.goToPage(page);\n  }\n  // Methods migrated from old ColumnApi\n  /**\n   * Adjusts the size of columns to fit the available horizontal space.\n   *\n   * Note: it is not recommended to call this method rapidly e.g. in response\n   * to window resize events or as the container size is animated. This can\n   * cause the scrollbar to flicker. Use column flex for smoother results.\n   * \n   * If inferring cell data types with custom column types\n   * and row data is provided asynchronously, the column sizing will happen asynchronously when row data is added.\n   * To always perform this synchronously, set `cellDataType = false` on the default column definition.\n   **/\n  sizeColumnsToFit(paramsOrGridWidth) {\n    if (typeof paramsOrGridWidth === \"number\") {\n      this.columnModel.sizeColumnsToFit(paramsOrGridWidth, \"api\");\n    } else {\n      this.gridBodyCtrl.sizeColumnsToFit(paramsOrGridWidth);\n    }\n  }\n  /** Call this if you want to open or close a column group. */\n  setColumnGroupOpened(group, newValue) {\n    this.columnModel.setColumnGroupOpened(group, newValue, \"api\");\n  }\n  /** Returns the column group with the given name. */\n  getColumnGroup(name, instanceId) {\n    return this.columnModel.getColumnGroup(name, instanceId);\n  }\n  /** Returns the provided column group with the given name. */\n  getProvidedColumnGroup(name) {\n    return this.columnModel.getProvidedColumnGroup(name);\n  }\n  /** Returns the display name for a column. Useful if you are doing your own header rendering and want the grid to work out if `headerValueGetter` is used, or if you are doing your own column management GUI, to know what to show as the column name. */\n  getDisplayNameForColumn(column, location) {\n    return this.columnModel.getDisplayNameForColumn(column, location) || \"\";\n  }\n  /** Returns the display name for a column group (when grouping columns). */\n  getDisplayNameForColumnGroup(columnGroup, location) {\n    return this.columnModel.getDisplayNameForColumnGroup(columnGroup, location) || \"\";\n  }\n  /** Returns the column with the given `colKey`, which can either be the `colId` (a string) or the `colDef` (an object). */\n  getColumn(key) {\n    return this.columnModel.getPrimaryColumn(key);\n  }\n  /** Returns all the columns, regardless of visible or not. */\n  getColumns() {\n    return this.columnModel.getAllPrimaryColumns();\n  }\n  /** Applies the state of the columns from a previous state. Returns `false` if one or more columns could not be found. */\n  applyColumnState(params) {\n    return this.columnModel.applyColumnState(params, \"api\");\n  }\n  /** Gets the state of the columns. Typically used when saving column state. */\n  getColumnState() {\n    return this.columnModel.getColumnState();\n  }\n  /** Sets the state back to match the originally provided column definitions. */\n  resetColumnState() {\n    this.columnModel.resetColumnState(\"api\");\n  }\n  /** Gets the state of the column groups. Typically used when saving column group state. */\n  getColumnGroupState() {\n    return this.columnModel.getColumnGroupState();\n  }\n  /** Sets the state of the column group state from a previous state. */\n  setColumnGroupState(stateItems) {\n    this.columnModel.setColumnGroupState(stateItems, \"api\");\n  }\n  /** Sets the state back to match the originally provided column definitions. */\n  resetColumnGroupState() {\n    this.columnModel.resetColumnGroupState(\"api\");\n  }\n  /** Returns `true` if pinning left or right, otherwise `false`. */\n  isPinning() {\n    return this.columnModel.isPinningLeft() || this.columnModel.isPinningRight();\n  }\n  /** Returns `true` if pinning left, otherwise `false`. */\n  isPinningLeft() {\n    return this.columnModel.isPinningLeft();\n  }\n  /** Returns `true` if pinning right, otherwise `false`. */\n  isPinningRight() {\n    return this.columnModel.isPinningRight();\n  }\n  /** Returns the column to the right of the provided column, taking into consideration open / closed column groups and visible columns. This is useful if you need to know what column is beside yours e.g. if implementing your own cell navigation. */\n  getDisplayedColAfter(col) {\n    return this.columnModel.getDisplayedColAfter(col);\n  }\n  /** Same as `getVisibleColAfter` except gives column to the left. */\n  getDisplayedColBefore(col) {\n    return this.columnModel.getDisplayedColBefore(col);\n  }\n  /** @deprecated v31.1 setColumnVisible(key, visible) deprecated, please use setColumnsVisible([key], visible) instead. */\n  setColumnVisible(key, visible) {\n    this.logDeprecation(\"v31.1\", \"setColumnVisible(key,visible)\", \"setColumnsVisible([key],visible)\");\n    this.columnModel.setColumnsVisible([key], visible, \"api\");\n  }\n  /** Sets the visibility of columns. Key can be the column ID or `Column` object. */\n  setColumnsVisible(keys2, visible) {\n    this.columnModel.setColumnsVisible(keys2, visible, \"api\");\n  }\n  /** @deprecated v31.1 setColumnPinned(key, pinned) deprecated, please use setColumnsPinned([key], pinned) instead. */\n  setColumnPinned(key, pinned) {\n    this.logDeprecation(\"v31.1\", \"setColumnPinned(key,pinned)\", \"setColumnsPinned([key],pinned)\");\n    this.columnModel.setColumnsPinned([key], pinned, \"api\");\n  }\n  /** Set a column's pinned / unpinned state. Key can be the column ID, field, `ColDef` object or `Column` object. */\n  setColumnsPinned(keys2, pinned) {\n    this.columnModel.setColumnsPinned(keys2, pinned, \"api\");\n  }\n  /**\n   * Returns all the grid columns, same as `getColumns()`, except\n   *\n   *  a) it has the order of the columns that are presented in the grid\n   *\n   *  b) it's after the 'pivot' step, so if pivoting, has the value columns for the pivot.\n   */\n  getAllGridColumns() {\n    return this.columnModel.getAllGridColumns();\n  }\n  /** Same as `getAllDisplayedColumns` but just for the pinned left portion of the grid. */\n  getDisplayedLeftColumns() {\n    return this.columnModel.getDisplayedLeftColumns();\n  }\n  /** Same as `getAllDisplayedColumns` but just for the center portion of the grid. */\n  getDisplayedCenterColumns() {\n    return this.columnModel.getDisplayedCenterColumns();\n  }\n  /** Same as `getAllDisplayedColumns` but just for the pinned right portion of the grid. */\n  getDisplayedRightColumns() {\n    return this.columnModel.getDisplayedRightColumns();\n  }\n  /** Returns all columns currently displayed (e.g. are visible and if in a group, the group is showing the columns) for the pinned left, centre and pinned right portions of the grid. */\n  getAllDisplayedColumns() {\n    return this.columnModel.getAllDisplayedColumns();\n  }\n  /** Same as `getAllGridColumns()`, except only returns rendered columns, i.e. columns that are not within the viewport and therefore not rendered, due to column virtualisation, are not displayed. */\n  getAllDisplayedVirtualColumns() {\n    return this.columnModel.getViewportColumns();\n  }\n  /** @deprecated v31.1 moveColumn(key, toIndex) deprecated, please use moveColumns([key], toIndex) instead. */\n  moveColumn(key, toIndex) {\n    this.logDeprecation(\"v31.1\", \"moveColumn(key, toIndex)\", \"moveColumns([key], toIndex)\");\n    this.columnModel.moveColumns([key], toIndex, \"api\");\n  }\n  /** Moves the column at `fromIdex` to `toIndex`. The column is first removed, then added at the `toIndex` location, thus index locations will change to the right of the column after the removal. */\n  moveColumnByIndex(fromIndex, toIndex) {\n    this.columnModel.moveColumnByIndex(fromIndex, toIndex, \"api\");\n  }\n  /** Moves columns to `toIndex`. The columns are first removed, then added at the `toIndex` location, thus index locations will change to the right of the column after the removal. */\n  moveColumns(columnsToMoveKeys, toIndex) {\n    this.columnModel.moveColumns(columnsToMoveKeys, toIndex, \"api\");\n  }\n  /** Move the column to a new position in the row grouping order. */\n  moveRowGroupColumn(fromIndex, toIndex) {\n    this.columnModel.moveRowGroupColumn(fromIndex, toIndex, \"api\");\n  }\n  /** Sets the agg function for a column. `aggFunc` can be one of the built-in aggregations or a custom aggregation by name or direct function. */\n  setColumnAggFunc(key, aggFunc) {\n    this.columnModel.setColumnAggFunc(key, aggFunc, \"api\");\n  }\n  /** @deprecated v31.1 setColumnWidths(key, newWidth) deprecated, please use setColumnWidths( [{key: newWidth}] ) instead. */\n  setColumnWidth(key, newWidth, finished = true, source = \"api\") {\n    this.logDeprecation(\"v31.1\", \"setColumnWidth(col, width)\", \"setColumnWidths([{key: col, newWidth: width}])\");\n    this.columnModel.setColumnWidths([{ key, newWidth }], false, finished, source);\n  }\n  /** Sets the column widths of the columns provided. The finished flag gets included in the resulting event and not used internally by the grid. The finished flag is intended for dragging, where a dragging action will produce many `columnWidth` events, so the consumer of events knows when it receives the last event in a stream. The finished parameter is optional, and defaults to `true`. */\n  setColumnWidths(columnWidths, finished = true, source = \"api\") {\n    this.columnModel.setColumnWidths(columnWidths, false, finished, source);\n  }\n  /** Get the pivot mode. */\n  isPivotMode() {\n    return this.columnModel.isPivotMode();\n  }\n  /** Returns the pivot result column for the given `pivotKeys` and `valueColId`. Useful to then call operations on the pivot column. */\n  getPivotResultColumn(pivotKeys, valueColKey) {\n    return this.columnModel.getSecondaryPivotColumn(pivotKeys, valueColKey);\n  }\n  /** Set the value columns to the provided list of columns. */\n  setValueColumns(colKeys) {\n    this.columnModel.setValueColumns(colKeys, \"api\");\n  }\n  /** Get a list of the existing value columns. */\n  getValueColumns() {\n    return this.columnModel.getValueColumns();\n  }\n  /** @deprecated v31.1 removeValueColumn(colKey) deprecated, please use removeValueColumns([colKey]) instead. */\n  removeValueColumn(colKey) {\n    this.logDeprecation(\"v31.1\", \"removeValueColumn(colKey)\", \"removeValueColumns([colKey])\");\n    this.columnModel.removeValueColumns([colKey], \"api\");\n  }\n  /** Remove the given list of columns from the existing set of value columns. */\n  removeValueColumns(colKeys) {\n    this.columnModel.removeValueColumns(colKeys, \"api\");\n  }\n  /** @deprecated v31.1 addValueColumn(colKey) deprecated, please use addValueColumns([colKey]) instead. */\n  addValueColumn(colKey) {\n    this.logDeprecation(\"v31.1\", \"addValueColumn(colKey)\", \"addValueColumns([colKey])\");\n    this.columnModel.addValueColumns([colKey], \"api\");\n  }\n  /** Add the given list of columns to the existing set of value columns. */\n  addValueColumns(colKeys) {\n    this.columnModel.addValueColumns(colKeys, \"api\");\n  }\n  /** Set the row group columns. */\n  setRowGroupColumns(colKeys) {\n    this.columnModel.setRowGroupColumns(colKeys, \"api\");\n  }\n  /** @deprecated v31.1 removeRowGroupColumn(colKey) deprecated, please use removeRowGroupColumns([colKey]) instead. */\n  removeRowGroupColumn(colKey) {\n    this.logDeprecation(\"v31.1\", \"removeRowGroupColumn(colKey)\", \"removeRowGroupColumns([colKey])\");\n    this.columnModel.removeRowGroupColumns([colKey], \"api\");\n  }\n  /** Remove columns from the row groups. */\n  removeRowGroupColumns(colKeys) {\n    this.columnModel.removeRowGroupColumns(colKeys, \"api\");\n  }\n  /** @deprecated v31.1 addRowGroupColumn(colKey) deprecated, please use addRowGroupColumns([colKey]) instead. */\n  addRowGroupColumn(colKey) {\n    this.logDeprecation(\"v31.1\", \"addRowGroupColumn(colKey)\", \"addRowGroupColumns([colKey])\");\n    this.columnModel.addRowGroupColumns([colKey], \"api\");\n  }\n  /** Add columns to the row groups. */\n  addRowGroupColumns(colKeys) {\n    this.columnModel.addRowGroupColumns(colKeys, \"api\");\n  }\n  /** Get row group columns. */\n  getRowGroupColumns() {\n    return this.columnModel.getRowGroupColumns();\n  }\n  /** Set the pivot columns. */\n  setPivotColumns(colKeys) {\n    this.columnModel.setPivotColumns(colKeys, \"api\");\n  }\n  /** @deprecated v31.1 removePivotColumn(colKey) deprecated, please use removePivotColumns([colKey]) instead. */\n  removePivotColumn(colKey) {\n    this.logDeprecation(\"v31.1\", \"removePivotColumn(colKey)\", \"removePivotColumns([colKey])\");\n    this.columnModel.removePivotColumns([colKey], \"api\");\n  }\n  /** Remove pivot columns. */\n  removePivotColumns(colKeys) {\n    this.columnModel.removePivotColumns(colKeys, \"api\");\n  }\n  /** @deprecated v31.1 addPivotColumn(colKey) deprecated, please use addPivotColumns([colKey]) instead. */\n  addPivotColumn(colKey) {\n    this.logDeprecation(\"v31.1\", \"addPivotColumn(colKey)\", \"addPivotColumns([colKey])\");\n    this.columnModel.addPivotColumns([colKey], \"api\");\n  }\n  /** Add pivot columns. */\n  addPivotColumns(colKeys) {\n    this.columnModel.addPivotColumns(colKeys, \"api\");\n  }\n  /** Get the pivot columns. */\n  getPivotColumns() {\n    return this.columnModel.getPivotColumns();\n  }\n  /** Same as `getAllDisplayedColumnGroups` but just for the pinned left portion of the grid. */\n  getLeftDisplayedColumnGroups() {\n    return this.columnModel.getDisplayedTreeLeft();\n  }\n  /** Same as `getAllDisplayedColumnGroups` but just for the center portion of the grid. */\n  getCenterDisplayedColumnGroups() {\n    return this.columnModel.getDisplayedTreeCentre();\n  }\n  /** Same as `getAllDisplayedColumnGroups` but just for the pinned right portion of the grid. */\n  getRightDisplayedColumnGroups() {\n    return this.columnModel.getDisplayedTreeRight();\n  }\n  /** Returns all 'root' column headers. If you are not grouping columns, these return the columns. If you are grouping, these return the top level groups - you can navigate down through each one to get the other lower level headers and finally the columns at the bottom. */\n  getAllDisplayedColumnGroups() {\n    return this.columnModel.getAllDisplayedTrees();\n  }\n  /** @deprecated v31.1 autoSizeColumn(key) deprecated, please use autoSizeColumns([colKey]) instead. */\n  autoSizeColumn(key, skipHeader) {\n    this.logDeprecation(\"v31.1\", \"autoSizeColumn(key, skipHeader)\", \"autoSizeColumns([key], skipHeader)\");\n    return this.columnModel.autoSizeColumns({ columns: [key], skipHeader, source: \"api\" });\n  }\n  /**\n   * Auto-sizes columns based on their contents. If inferring cell data types with custom column types\n   * and row data is provided asynchronously, the column sizing will happen asynchronously when row data is added.\n   * To always perform this synchronously, set `cellDataType = false` on the default column definition.\n   */\n  autoSizeColumns(keys2, skipHeader) {\n    this.columnModel.autoSizeColumns({ columns: keys2, skipHeader, source: \"api\" });\n  }\n  /**\n   * Calls `autoSizeColumns` on all displayed columns. If inferring cell data types with custom column types\n   * and row data is provided asynchronously, the column sizing will happen asynchronously when row data is added.\n   * To always perform this synchronously, set `cellDataType = false` on the default column definition.\n   */\n  autoSizeAllColumns(skipHeader) {\n    this.columnModel.autoSizeAllColumns(\"api\", skipHeader);\n  }\n  /** Set the pivot result columns. */\n  setPivotResultColumns(colDefs) {\n    this.columnModel.setSecondaryColumns(colDefs, \"api\");\n  }\n  /** Returns the grid's pivot result columns. */\n  getPivotResultColumns() {\n    return this.columnModel.getSecondaryColumns();\n  }\n  /** Get the current state of the grid. Can be used in conjunction with the `initialState` grid option to save and restore grid state. */\n  getState() {\n    return this.stateService.getState();\n  }\n  /**\n   * Returns the grid option value for a provided key.\n   */\n  getGridOption(key) {\n    return this.gos.get(key);\n  }\n  /**\n   * Updates a single gridOption to the new value provided. (Cannot be used on `Initial` properties.)\n   * If updating multiple options, it is recommended to instead use `api.updateGridOptions()` which batches update logic.\n   */\n  setGridOption(key, value) {\n    this.updateGridOptions({ [key]: value });\n  }\n  /**\n   * Updates the provided subset of gridOptions with the provided values. (Cannot be used on `Initial` properties.)\n   */\n  updateGridOptions(options) {\n    this.gos.updateGridOptions({ options });\n  }\n  /** Used internally by grid. Not intended to be used by the client. Interface may change between releases. */\n  __internalUpdateGridOptions(options, force) {\n    this.gos.updateGridOptions({ options, force, source: \"gridOptionsUpdated\" });\n  }\n  deprecatedUpdateGridOption(key, value) {\n    warnOnce(`set${key.charAt(0).toUpperCase()}${key.slice(1, key.length)} is deprecated. Please use 'api.setGridOption('${key}', newValue)' or 'api.updateGridOptions({ ${key}: newValue })' instead.`);\n    this.setGridOption(key, value);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Set the top pinned rows. Call with no rows / undefined to clear top pinned rows. \n   **/\n  setPivotMode(pivotMode) {\n    this.deprecatedUpdateGridOption(\"pivotMode\", pivotMode);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Set the top pinned rows. Call with no rows / undefined to clear top pinned rows. \n   **/\n  setPinnedTopRowData(rows) {\n    this.deprecatedUpdateGridOption(\"pinnedTopRowData\", rows);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Set the bottom pinned rows. Call with no rows / undefined to clear bottom pinned rows.\n   * */\n  setPinnedBottomRowData(rows) {\n    this.deprecatedUpdateGridOption(\"pinnedBottomRowData\", rows);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * DOM element to use as the popup parent for grid popups (context menu, column menu etc).\n   * */\n  setPopupParent(ePopupParent) {\n    this.deprecatedUpdateGridOption(\"popupParent\", ePopupParent);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   */\n  setSuppressModelUpdateAfterUpdateTransaction(value) {\n    this.deprecatedUpdateGridOption(\"suppressModelUpdateAfterUpdateTransaction\", value);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Resets the data type definitions. This will update the columns in the grid.\n   * */\n  setDataTypeDefinitions(dataTypeDefinitions) {\n    this.deprecatedUpdateGridOption(\"dataTypeDefinitions\", dataTypeDefinitions);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Set whether the grid paginates the data or not.\n   *  - `true` to enable pagination\n   *  - `false` to disable pagination\n   */\n  setPagination(value) {\n    this.deprecatedUpdateGridOption(\"pagination\", value);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the `paginationPageSize`, then re-paginates the grid so the changes are applied immediately.\n   * */\n  paginationSetPageSize(size) {\n    this.deprecatedUpdateGridOption(\"paginationPageSize\", size);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Resets the side bar to the provided configuration. The parameter is the same as the sideBar grid property. The side bar is re-created from scratch with the new config.\n   * */\n  setSideBar(def) {\n    this.deprecatedUpdateGridOption(\"sideBar\", def);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   */\n  setSuppressClipboardPaste(value) {\n    this.deprecatedUpdateGridOption(\"suppressClipboardPaste\", value);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   */\n  setGroupRemoveSingleChildren(value) {\n    this.deprecatedUpdateGridOption(\"groupRemoveSingleChildren\", value);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   */\n  setGroupRemoveLowestSingleChildren(value) {\n    this.deprecatedUpdateGridOption(\"groupRemoveLowestSingleChildren\", value);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   */\n  setGroupDisplayType(value) {\n    this.deprecatedUpdateGridOption(\"groupDisplayType\", value);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the `groupIncludeFooter` property\n   */\n  setGroupIncludeFooter(value) {\n    this.deprecatedUpdateGridOption(\"groupIncludeFooter\", value);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the `groupIncludeTotalFooter` property\n   */\n  setGroupIncludeTotalFooter(value) {\n    this.deprecatedUpdateGridOption(\"groupIncludeTotalFooter\", value);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   */\n  setRowClass(className) {\n    this.deprecatedUpdateGridOption(\"rowClass\", className);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the `deltaSort` property\n   * */\n  setDeltaSort(enable) {\n    this.deprecatedUpdateGridOption(\"deltaSort\", enable);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the `suppressRowDrag` property.\n   * */\n  setSuppressRowDrag(value) {\n    this.deprecatedUpdateGridOption(\"suppressRowDrag\", value);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the `suppressMoveWhenRowDragging` property.\n   * */\n  setSuppressMoveWhenRowDragging(value) {\n    this.deprecatedUpdateGridOption(\"suppressMoveWhenRowDragging\", value);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the `suppressRowClickSelection` property.\n   * */\n  setSuppressRowClickSelection(value) {\n    this.deprecatedUpdateGridOption(\"suppressRowClickSelection\", value);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Enable/disable the Advanced Filter\n   * */\n  setEnableAdvancedFilter(enabled) {\n    this.deprecatedUpdateGridOption(\"enableAdvancedFilter\", enabled);\n  }\n  /** \n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Updates the `includeHiddenColumnsInAdvancedFilter` grid option.\n   * By default hidden columns are excluded from the Advanced Filter.\n   * Set to `true` to include them.\n   */\n  setIncludeHiddenColumnsInAdvancedFilter(value) {\n    this.deprecatedUpdateGridOption(\"includeHiddenColumnsInAdvancedFilter\", value);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * DOM element to use as the parent for the Advanced Filter, to allow it to appear outside of the grid.\n   * Set to `null` to appear inside the grid.\n   */\n  setAdvancedFilterParent(advancedFilterParent) {\n    this.deprecatedUpdateGridOption(\"advancedFilterParent\", advancedFilterParent);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Updates the Advanced Filter Builder parameters.\n   * */\n  setAdvancedFilterBuilderParams(params) {\n    this.deprecatedUpdateGridOption(\"advancedFilterBuilderParams\", params);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Pass a Quick Filter text into the grid for filtering.\n   * */\n  setQuickFilter(newFilter) {\n    warnOnce(`setQuickFilter is deprecated. Please use 'api.setGridOption('quickFilterText', newValue)' or 'api.updateGridOptions({ quickFilterText: newValue })' instead.`);\n    this.gos.updateGridOptions({ options: { quickFilterText: newFilter } });\n  }\n  /** \n   * @deprecated As of v30, hidden columns are excluded from the Quick Filter by default. To include hidden columns, use `setIncludeHiddenColumnsInQuickFilter` instead.\n   */\n  setExcludeHiddenColumnsFromQuickFilter(value) {\n    this.deprecatedUpdateGridOption(\"includeHiddenColumnsInQuickFilter\", !value);\n  }\n  /** \n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Updates the `includeHiddenColumnsInQuickFilter` grid option.\n   * By default hidden columns are excluded from the Quick Filter.\n   * Set to `true` to include them.\n   */\n  setIncludeHiddenColumnsInQuickFilter(value) {\n    this.deprecatedUpdateGridOption(\"includeHiddenColumnsInQuickFilter\", value);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Updates the `quickFilterParser` grid option,\n   * which changes how the Quick Filter splits the Quick Filter text into search terms.\n   */\n  setQuickFilterParser(quickFilterParser) {\n    this.deprecatedUpdateGridOption(\"quickFilterParser\", quickFilterParser);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Updates the `quickFilterMatcher` grid option,\n   * which changes the matching logic for whether a row passes the Quick Filter.\n   */\n  setQuickFilterMatcher(quickFilterMatcher) {\n    this.deprecatedUpdateGridOption(\"quickFilterMatcher\", quickFilterMatcher);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * If `true`, the horizontal scrollbar will always be present, even if not required. Otherwise, it will only be displayed when necessary.\n   * */\n  setAlwaysShowHorizontalScroll(show) {\n    this.deprecatedUpdateGridOption(\"alwaysShowHorizontalScroll\", show);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * If `true`, the vertical scrollbar will always be present, even if not required. Otherwise it will only be displayed when necessary.\n   * */\n  setAlwaysShowVerticalScroll(show) {\n    this.deprecatedUpdateGridOption(\"alwaysShowVerticalScroll\", show);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   */\n  setFunctionsReadOnly(readOnly) {\n    this.deprecatedUpdateGridOption(\"functionsReadOnly\", readOnly);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Call to set new column definitions. The grid will redraw all the column headers, and then redraw all of the rows.\n   */\n  setColumnDefs(colDefs, source = \"api\") {\n    warnOnce(`setColumnDefs is deprecated. Please use 'api.setGridOption('columnDefs', newValue)' or 'api.updateGridOptions({ columnDefs: newValue })' instead.`);\n    this.gos.updateGridOptions({\n      options: { columnDefs: colDefs },\n      source\n    });\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Call to set new auto group column definition. The grid will recreate any auto-group columns if present.\n   * */\n  setAutoGroupColumnDef(colDef, source = \"api\") {\n    warnOnce(`setAutoGroupColumnDef is deprecated. Please use 'api.setGridOption('autoGroupColumnDef', newValue)' or 'api.updateGridOptions({ autoGroupColumnDef: newValue })' instead.`);\n    this.gos.updateGridOptions({\n      options: { autoGroupColumnDef: colDef },\n      source\n    });\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Call to set new Default Column Definition.\n   * */\n  setDefaultColDef(colDef, source = \"api\") {\n    warnOnce(`setDefaultColDef is deprecated. Please use 'api.setGridOption('defaultColDef', newValue)' or 'api.updateGridOptions({ defaultColDef: newValue })' instead.`);\n    this.gos.updateGridOptions({\n      options: { defaultColDef: colDef },\n      source\n    });\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Call to set new Column Types.\n   * */\n  setColumnTypes(columnTypes, source = \"api\") {\n    warnOnce(`setColumnTypes is deprecated. Please use 'api.setGridOption('columnTypes', newValue)' or 'api.updateGridOptions({ columnTypes: newValue })' instead.`);\n    this.gos.updateGridOptions({\n      options: { columnTypes },\n      source\n    });\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the `treeData` property.\n   * */\n  setTreeData(newTreeData) {\n    this.deprecatedUpdateGridOption(\"treeData\", newTreeData);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Set new datasource for Server-Side Row Model.\n   * */\n  setServerSideDatasource(datasource) {\n    this.deprecatedUpdateGridOption(\"serverSideDatasource\", datasource);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * \n   * Note this purges all the cached data and reloads all the rows of the grid.\n   * */\n  setCacheBlockSize(blockSize) {\n    this.deprecatedUpdateGridOption(\"cacheBlockSize\", blockSize);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Set new datasource for Infinite Row Model.\n   * */\n  setDatasource(datasource) {\n    this.deprecatedUpdateGridOption(\"datasource\", datasource);\n  }\n  /** \n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Set new datasource for Viewport Row Model.\n   * */\n  setViewportDatasource(viewportDatasource) {\n    this.deprecatedUpdateGridOption(\"viewportDatasource\", viewportDatasource);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Set the row data.\n   * */\n  setRowData(rowData) {\n    this.deprecatedUpdateGridOption(\"rowData\", rowData);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the `enableCellTextSelection` property.\n   * */\n  setEnableCellTextSelection(selectable) {\n    this.deprecatedUpdateGridOption(\"enableCellTextSelection\", selectable);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the height in pixels for the row containing the column label header.\n   * */\n  setHeaderHeight(headerHeight) {\n    this.deprecatedUpdateGridOption(\"headerHeight\", headerHeight);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Switch between layout options: `normal`, `autoHeight`, `print`.\n   * Defaults to `normal` if no domLayout provided.\n   */\n  setDomLayout(domLayout) {\n    this.deprecatedUpdateGridOption(\"domLayout\", domLayout);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the preferred direction for the selection fill handle.\n   * */\n  setFillHandleDirection(direction) {\n    this.deprecatedUpdateGridOption(\"fillHandleDirection\", direction);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the height in pixels for the rows containing header column groups.\n   * */\n  setGroupHeaderHeight(headerHeight) {\n    this.deprecatedUpdateGridOption(\"groupHeaderHeight\", headerHeight);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the height in pixels for the row containing the floating filters.\n   * */\n  setFloatingFiltersHeight(headerHeight) {\n    this.deprecatedUpdateGridOption(\"floatingFiltersHeight\", headerHeight);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the height in pixels for the row containing the columns when in pivot mode.\n   * */\n  setPivotHeaderHeight(headerHeight) {\n    this.deprecatedUpdateGridOption(\"pivotHeaderHeight\", headerHeight);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   * Sets the height in pixels for the row containing header column groups when in pivot mode.\n   * */\n  setPivotGroupHeaderHeight(headerHeight) {\n    this.deprecatedUpdateGridOption(\"pivotGroupHeaderHeight\", headerHeight);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setAnimateRows(animateRows) {\n    this.deprecatedUpdateGridOption(\"animateRows\", animateRows);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setIsExternalFilterPresent(isExternalFilterPresentFunc) {\n    this.deprecatedUpdateGridOption(\"isExternalFilterPresent\", isExternalFilterPresentFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setDoesExternalFilterPass(doesExternalFilterPassFunc) {\n    this.deprecatedUpdateGridOption(\"doesExternalFilterPass\", doesExternalFilterPassFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setNavigateToNextCell(navigateToNextCellFunc) {\n    this.deprecatedUpdateGridOption(\"navigateToNextCell\", navigateToNextCellFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setTabToNextCell(tabToNextCellFunc) {\n    this.deprecatedUpdateGridOption(\"tabToNextCell\", tabToNextCellFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setTabToNextHeader(tabToNextHeaderFunc) {\n    this.deprecatedUpdateGridOption(\"tabToNextHeader\", tabToNextHeaderFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setNavigateToNextHeader(navigateToNextHeaderFunc) {\n    this.deprecatedUpdateGridOption(\"navigateToNextHeader\", navigateToNextHeaderFunc);\n  }\n  setRowGroupPanelShow(rowGroupPanelShow) {\n    this.deprecatedUpdateGridOption(\"rowGroupPanelShow\", rowGroupPanelShow);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setGetGroupRowAgg(getGroupRowAggFunc) {\n    this.deprecatedUpdateGridOption(\"getGroupRowAgg\", getGroupRowAggFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setGetBusinessKeyForNode(getBusinessKeyForNodeFunc) {\n    this.deprecatedUpdateGridOption(\"getBusinessKeyForNode\", getBusinessKeyForNodeFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setGetChildCount(getChildCountFunc) {\n    this.deprecatedUpdateGridOption(\"getChildCount\", getChildCountFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setProcessRowPostCreate(processRowPostCreateFunc) {\n    this.deprecatedUpdateGridOption(\"processRowPostCreate\", processRowPostCreateFunc);\n  }\n  /**\n   * @deprecated v31 `getRowId` is a static property and cannot be updated.\n   *  */\n  setGetRowId(getRowIdFunc) {\n    warnOnce(`getRowId is a static property and can no longer be updated.`);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setGetRowClass(rowClassFunc) {\n    this.deprecatedUpdateGridOption(\"getRowClass\", rowClassFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setIsFullWidthRow(isFullWidthRowFunc) {\n    this.deprecatedUpdateGridOption(\"isFullWidthRow\", isFullWidthRowFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setIsRowSelectable(isRowSelectableFunc) {\n    this.deprecatedUpdateGridOption(\"isRowSelectable\", isRowSelectableFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setIsRowMaster(isRowMasterFunc) {\n    this.deprecatedUpdateGridOption(\"isRowMaster\", isRowMasterFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setPostSortRows(postSortRowsFunc) {\n    this.deprecatedUpdateGridOption(\"postSortRows\", postSortRowsFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setGetDocument(getDocumentFunc) {\n    this.deprecatedUpdateGridOption(\"getDocument\", getDocumentFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setGetContextMenuItems(getContextMenuItemsFunc) {\n    this.deprecatedUpdateGridOption(\"getContextMenuItems\", getContextMenuItemsFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setGetMainMenuItems(getMainMenuItemsFunc) {\n    this.deprecatedUpdateGridOption(\"getMainMenuItems\", getMainMenuItemsFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setProcessCellForClipboard(processCellForClipboardFunc) {\n    this.deprecatedUpdateGridOption(\"processCellForClipboard\", processCellForClipboardFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setSendToClipboard(sendToClipboardFunc) {\n    this.deprecatedUpdateGridOption(\"sendToClipboard\", sendToClipboardFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setProcessCellFromClipboard(processCellFromClipboardFunc) {\n    this.deprecatedUpdateGridOption(\"processCellFromClipboard\", processCellFromClipboardFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setProcessPivotResultColDef(processPivotResultColDefFunc) {\n    this.deprecatedUpdateGridOption(\"processPivotResultColDef\", processPivotResultColDefFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setProcessPivotResultColGroupDef(processPivotResultColGroupDefFunc) {\n    this.deprecatedUpdateGridOption(\"processPivotResultColGroupDef\", processPivotResultColGroupDefFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setPostProcessPopup(postProcessPopupFunc) {\n    this.deprecatedUpdateGridOption(\"postProcessPopup\", postProcessPopupFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setInitialGroupOrderComparator(initialGroupOrderComparatorFunc) {\n    this.deprecatedUpdateGridOption(\"initialGroupOrderComparator\", initialGroupOrderComparatorFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setGetChartToolbarItems(getChartToolbarItemsFunc) {\n    this.deprecatedUpdateGridOption(\"getChartToolbarItems\", getChartToolbarItemsFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setPaginationNumberFormatter(paginationNumberFormatterFunc) {\n    this.deprecatedUpdateGridOption(\"paginationNumberFormatter\", paginationNumberFormatterFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setGetServerSideGroupLevelParams(getServerSideGroupLevelParamsFunc) {\n    this.deprecatedUpdateGridOption(\"getServerSideGroupLevelParams\", getServerSideGroupLevelParamsFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setIsServerSideGroupOpenByDefault(isServerSideGroupOpenByDefaultFunc) {\n    this.deprecatedUpdateGridOption(\"isServerSideGroupOpenByDefault\", isServerSideGroupOpenByDefaultFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setIsApplyServerSideTransaction(isApplyServerSideTransactionFunc) {\n    this.deprecatedUpdateGridOption(\"isApplyServerSideTransaction\", isApplyServerSideTransactionFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setIsServerSideGroup(isServerSideGroupFunc) {\n    this.deprecatedUpdateGridOption(\"isServerSideGroup\", isServerSideGroupFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setGetServerSideGroupKey(getServerSideGroupKeyFunc) {\n    this.deprecatedUpdateGridOption(\"getServerSideGroupKey\", getServerSideGroupKeyFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setGetRowStyle(rowStyleFunc) {\n    this.deprecatedUpdateGridOption(\"getRowStyle\", rowStyleFunc);\n  }\n  /**\n   * @deprecated v31 Use `api.setGridOption` or `api.updateGridOptions` instead.\n   *  */\n  setGetRowHeight(rowHeightFunc) {\n    this.deprecatedUpdateGridOption(\"getRowHeight\", rowHeightFunc);\n  }\n};\n__decorateClass([\n  Autowired(\"rowRenderer\")\n], GridApi.prototype, \"rowRenderer\", 2);\n__decorateClass([\n  Autowired(\"navigationService\")\n], GridApi.prototype, \"navigationService\", 2);\n__decorateClass([\n  Autowired(\"filterManager\")\n], GridApi.prototype, \"filterManager\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], GridApi.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"selectionService\")\n], GridApi.prototype, \"selectionService\", 2);\n__decorateClass([\n  Autowired(\"gridOptionsService\")\n], GridApi.prototype, \"gos\", 2);\n__decorateClass([\n  Autowired(\"valueService\")\n], GridApi.prototype, \"valueService\", 2);\n__decorateClass([\n  Autowired(\"alignedGridsService\")\n], GridApi.prototype, \"alignedGridsService\", 2);\n__decorateClass([\n  Autowired(\"eventService\")\n], GridApi.prototype, \"eventService\", 2);\n__decorateClass([\n  Autowired(\"pinnedRowModel\")\n], GridApi.prototype, \"pinnedRowModel\", 2);\n__decorateClass([\n  Autowired(\"context\")\n], GridApi.prototype, \"context\", 2);\n__decorateClass([\n  Autowired(\"rowModel\")\n], GridApi.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"sortController\")\n], GridApi.prototype, \"sortController\", 2);\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], GridApi.prototype, \"paginationProxy\", 2);\n__decorateClass([\n  Autowired(\"focusService\")\n], GridApi.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"dragAndDropService\")\n], GridApi.prototype, \"dragAndDropService\", 2);\n__decorateClass([\n  Autowired(\"menuService\")\n], GridApi.prototype, \"menuService\", 2);\n__decorateClass([\n  Autowired(\"valueCache\")\n], GridApi.prototype, \"valueCache\", 2);\n__decorateClass([\n  Autowired(\"animationFrameService\")\n], GridApi.prototype, \"animationFrameService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], GridApi.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"overlayService\")\n], GridApi.prototype, \"overlayService\", 2);\n__decorateClass([\n  Autowired(\"stateService\")\n], GridApi.prototype, \"stateService\", 2);\n__decorateClass([\n  Autowired(\"expansionService\")\n], GridApi.prototype, \"expansionService\", 2);\n__decorateClass([\n  Autowired(\"apiEventService\")\n], GridApi.prototype, \"apiEventService\", 2);\n__decorateClass([\n  Autowired(\"frameworkOverrides\")\n], GridApi.prototype, \"frameworkOverrides\", 2);\n__decorateClass([\n  Autowired(\"undoRedoService\")\n], GridApi.prototype, \"undoRedoService\", 2);\n__decorateClass([\n  Autowired(\"rowNodeBlockLoader\")\n], GridApi.prototype, \"rowNodeBlockLoader\", 2);\n__decorateClass([\n  Optional(\"csvCreator\")\n], GridApi.prototype, \"csvCreator\", 2);\n__decorateClass([\n  Optional(\"excelCreator\")\n], GridApi.prototype, \"excelCreator\", 2);\n__decorateClass([\n  Optional(\"rangeService\")\n], GridApi.prototype, \"rangeService\", 2);\n__decorateClass([\n  Optional(\"clipboardService\")\n], GridApi.prototype, \"clipboardService\", 2);\n__decorateClass([\n  Optional(\"aggFuncService\")\n], GridApi.prototype, \"aggFuncService\", 2);\n__decorateClass([\n  Optional(\"statusBarService\")\n], GridApi.prototype, \"statusBarService\", 2);\n__decorateClass([\n  Optional(\"chartService\")\n], GridApi.prototype, \"chartService\", 2);\n__decorateClass([\n  Optional(\"ssrmTransactionManager\")\n], GridApi.prototype, \"serverSideTransactionManager\", 2);\n__decorateClass([\n  Optional(\"sideBarService\")\n], GridApi.prototype, \"sideBarService\", 2);\n__decorateClass([\n  PostConstruct\n], GridApi.prototype, \"init\", 1);\nGridApi = __decorateClass([\n  Bean(\"gridApi\")\n], GridApi);\n\n// community-modules/core/src/filter/quickFilterService.ts\nvar QuickFilterService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.quickFilter = null;\n    this.quickFilterParts = null;\n  }\n  postConstruct() {\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, () => this.resetQuickFilterCache());\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, () => this.resetQuickFilterCache());\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, () => this.resetQuickFilterCache());\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VISIBLE, () => {\n      if (!this.gos.get(\"includeHiddenColumnsInQuickFilter\")) {\n        this.resetQuickFilterCache();\n      }\n    });\n    this.addManagedPropertyListener(\"quickFilterText\", (e) => this.setQuickFilter(e.currentValue));\n    this.addManagedPropertyListeners([\n      \"includeHiddenColumnsInQuickFilter\",\n      \"applyQuickFilterBeforePivotOrAgg\"\n    ], () => this.onQuickFilterColumnConfigChanged());\n    this.quickFilter = this.parseQuickFilter(this.gos.get(\"quickFilterText\"));\n    this.parser = this.gos.get(\"quickFilterParser\");\n    this.matcher = this.gos.get(\"quickFilterMatcher\");\n    this.setQuickFilterParts();\n    this.addManagedPropertyListeners([\"quickFilterMatcher\", \"quickFilterParser\"], () => this.setQuickFilterParserAndMatcher());\n  }\n  isQuickFilterPresent() {\n    return this.quickFilter !== null;\n  }\n  doesRowPassQuickFilter(node) {\n    const usingCache = this.gos.get(\"cacheQuickFilter\");\n    if (this.matcher) {\n      return this.doesRowPassQuickFilterMatcher(usingCache, node);\n    }\n    return this.quickFilterParts.every(\n      (part) => usingCache ? this.doesRowPassQuickFilterCache(node, part) : this.doesRowPassQuickFilterNoCache(node, part)\n    );\n  }\n  resetQuickFilterCache() {\n    this.rowModel.forEachNode((node) => node.quickFilterAggregateText = null);\n  }\n  setQuickFilterParts() {\n    const { quickFilter, parser } = this;\n    if (quickFilter) {\n      this.quickFilterParts = parser ? parser(quickFilter) : quickFilter.split(\" \");\n    } else {\n      this.quickFilterParts = null;\n    }\n  }\n  parseQuickFilter(newFilter) {\n    if (!exists(newFilter)) {\n      return null;\n    }\n    if (!this.gos.isRowModelType(\"clientSide\")) {\n      console.warn(\"AG Grid - Quick filtering only works with the Client-Side Row Model\");\n      return null;\n    }\n    return newFilter.toUpperCase();\n  }\n  setQuickFilter(newFilter) {\n    if (newFilter != null && typeof newFilter !== \"string\") {\n      console.warn(`AG Grid - Grid option quickFilterText only supports string inputs, received: ${typeof newFilter}`);\n      return;\n    }\n    const parsedFilter = this.parseQuickFilter(newFilter);\n    if (this.quickFilter !== parsedFilter) {\n      this.quickFilter = parsedFilter;\n      this.setQuickFilterParts();\n      this.dispatchEvent({ type: QuickFilterService.EVENT_QUICK_FILTER_CHANGED });\n    }\n  }\n  setQuickFilterParserAndMatcher() {\n    const parser = this.gos.get(\"quickFilterParser\");\n    const matcher = this.gos.get(\"quickFilterMatcher\");\n    const hasChanged = parser !== this.parser || matcher !== this.matcher;\n    this.parser = parser;\n    this.matcher = matcher;\n    if (hasChanged) {\n      this.setQuickFilterParts();\n      this.dispatchEvent({ type: QuickFilterService.EVENT_QUICK_FILTER_CHANGED });\n    }\n  }\n  onQuickFilterColumnConfigChanged() {\n    this.columnModel.refreshQuickFilterColumns();\n    this.resetQuickFilterCache();\n    if (this.isQuickFilterPresent()) {\n      this.dispatchEvent({ type: QuickFilterService.EVENT_QUICK_FILTER_CHANGED });\n    }\n  }\n  doesRowPassQuickFilterNoCache(node, filterPart) {\n    const columns = this.columnModel.getAllColumnsForQuickFilter();\n    return columns.some((column) => {\n      const part = this.getQuickFilterTextForColumn(column, node);\n      return exists(part) && part.indexOf(filterPart) >= 0;\n    });\n  }\n  doesRowPassQuickFilterCache(node, filterPart) {\n    this.checkGenerateQuickFilterAggregateText(node);\n    return node.quickFilterAggregateText.indexOf(filterPart) >= 0;\n  }\n  doesRowPassQuickFilterMatcher(usingCache, node) {\n    let quickFilterAggregateText;\n    if (usingCache) {\n      this.checkGenerateQuickFilterAggregateText(node);\n      quickFilterAggregateText = node.quickFilterAggregateText;\n    } else {\n      quickFilterAggregateText = this.getQuickFilterAggregateText(node);\n    }\n    const { quickFilterParts, matcher } = this;\n    return matcher(quickFilterParts, quickFilterAggregateText);\n  }\n  checkGenerateQuickFilterAggregateText(node) {\n    if (!node.quickFilterAggregateText) {\n      node.quickFilterAggregateText = this.getQuickFilterAggregateText(node);\n    }\n  }\n  getQuickFilterTextForColumn(column, node) {\n    let value = this.valueService.getValue(column, node, true);\n    const colDef = column.getColDef();\n    if (colDef.getQuickFilterText) {\n      const params = this.gos.addGridCommonParams({\n        value,\n        node,\n        data: node.data,\n        column,\n        colDef\n      });\n      value = colDef.getQuickFilterText(params);\n    }\n    return exists(value) ? value.toString().toUpperCase() : null;\n  }\n  getQuickFilterAggregateText(node) {\n    const stringParts = [];\n    const columns = this.columnModel.getAllColumnsForQuickFilter();\n    columns.forEach((column) => {\n      const part = this.getQuickFilterTextForColumn(column, node);\n      if (exists(part)) {\n        stringParts.push(part);\n      }\n    });\n    return stringParts.join(QuickFilterService.QUICK_FILTER_SEPARATOR);\n  }\n};\nQuickFilterService.EVENT_QUICK_FILTER_CHANGED = \"quickFilterChanged\";\nQuickFilterService.QUICK_FILTER_SEPARATOR = \"\\n\";\n__decorateClass([\n  Autowired(\"valueService\")\n], QuickFilterService.prototype, \"valueService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], QuickFilterService.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"rowModel\")\n], QuickFilterService.prototype, \"rowModel\", 2);\n__decorateClass([\n  PostConstruct\n], QuickFilterService.prototype, \"postConstruct\", 1);\nQuickFilterService = __decorateClass([\n  Bean(\"quickFilterService\")\n], QuickFilterService);\n\n// community-modules/core/src/filter/filterManager.ts\nvar FilterManager = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.allColumnFilters = /* @__PURE__ */ new Map();\n    this.allColumnListeners = /* @__PURE__ */ new Map();\n    this.activeAggregateFilters = [];\n    this.activeColumnFilters = [];\n    // this is true when the grid is processing the filter change. this is used by the cell comps, so that they\n    // don't flash when data changes due to filter changes. there is no need to flash when filter changes as the\n    // user is in control, so doesn't make sense to show flashing changes. for example, go to main demo where\n    // this feature is turned off (hack code to always return false for isSuppressFlashingCellsBecauseFiltering(), put in)\n    // 100,000 rows and group by country. then do some filtering. all the cells flash, which is silly.\n    this.processingFilterChange = false;\n    // when we're waiting for cell data types to be inferred, we need to defer filter model updates\n    this.filterModelUpdateQueue = [];\n    this.columnFilterModelUpdateQueue = [];\n    this.advancedFilterModelUpdateQueue = [];\n  }\n  init() {\n    var _a, _b, _c;\n    this.addManagedListener(this.eventService, Events.EVENT_GRID_COLUMNS_CHANGED, () => this.onColumnsChanged());\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VALUE_CHANGED, () => this.refreshFiltersForAggregations());\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_CHANGED, () => this.refreshFiltersForAggregations());\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, () => this.refreshFiltersForAggregations());\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, () => this.updateAdvancedFilterColumns());\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VISIBLE, () => this.updateAdvancedFilterColumns());\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_DATA_UPDATED, () => this.onNewRowsLoaded(\"rowDataUpdated\"));\n    this.externalFilterPresent = this.isExternalFilterPresentCallback();\n    this.addManagedPropertyListeners([\"isExternalFilterPresent\", \"doesExternalFilterPass\"], () => {\n      this.onFilterChanged({ source: \"api\" });\n    });\n    this.updateAggFiltering();\n    this.addManagedPropertyListener(\"groupAggFiltering\", () => {\n      this.updateAggFiltering();\n      this.onFilterChanged();\n    });\n    this.addManagedPropertyListener(\"advancedFilterModel\", (event) => this.setAdvancedFilterModel(event.currentValue));\n    this.addManagedListener(\n      this.eventService,\n      Events.EVENT_ADVANCED_FILTER_ENABLED_CHANGED,\n      ({ enabled }) => this.onAdvancedFilterEnabledChanged(enabled)\n    );\n    this.addManagedListener(this.eventService, Events.EVENT_DATA_TYPES_INFERRED, () => this.processFilterModelUpdateQueue());\n    this.addManagedListener(this.quickFilterService, QuickFilterService.EVENT_QUICK_FILTER_CHANGED, () => this.onFilterChanged({ source: \"quickFilter\" }));\n    this.initialFilterModel = __spreadValues({}, (_c = (_b = (_a = this.gos.get(\"initialState\")) == null ? void 0 : _a.filter) == null ? void 0 : _b.filterModel) != null ? _c : {});\n  }\n  isExternalFilterPresentCallback() {\n    const isFilterPresent = this.gos.getCallback(\"isExternalFilterPresent\");\n    if (typeof isFilterPresent === \"function\") {\n      return isFilterPresent({});\n    }\n    return false;\n  }\n  doesExternalFilterPass(node) {\n    const doesFilterPass = this.gos.get(\"doesExternalFilterPass\");\n    if (typeof doesFilterPass === \"function\") {\n      return doesFilterPass(node);\n    }\n    return false;\n  }\n  setFilterModel(model, source = \"api\") {\n    if (this.isAdvancedFilterEnabled()) {\n      this.warnAdvancedFilters();\n      return;\n    }\n    if (this.dataTypeService.isPendingInference()) {\n      this.filterModelUpdateQueue.push({ model, source });\n      return;\n    }\n    const allPromises = [];\n    const previousModel = this.getFilterModel();\n    if (model) {\n      const modelKeys = convertToSet(Object.keys(model));\n      this.allColumnFilters.forEach((filterWrapper, colId) => {\n        const newModel = model[colId];\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper.filterPromise, newModel));\n        modelKeys.delete(colId);\n      });\n      modelKeys.forEach((colId) => {\n        const column = this.columnModel.getPrimaryColumn(colId) || this.columnModel.getGridColumn(colId);\n        if (!column) {\n          console.warn(\"AG Grid: setFilterModel() - no column found for colId: \" + colId);\n          return;\n        }\n        if (!column.isFilterAllowed()) {\n          console.warn(\"AG Grid: setFilterModel() - unable to fully apply model, filtering disabled for colId: \" + colId);\n          return;\n        }\n        const filterWrapper = this.getOrCreateFilterWrapper(column, \"NO_UI\");\n        if (!filterWrapper) {\n          console.warn(\"AG-Grid: setFilterModel() - unable to fully apply model, unable to create filter for colId: \" + colId);\n          return;\n        }\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper.filterPromise, model[colId]));\n      });\n    } else {\n      this.allColumnFilters.forEach((filterWrapper) => {\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper.filterPromise, null));\n      });\n    }\n    AgPromise.all(allPromises).then(() => {\n      const currentModel = this.getFilterModel();\n      const columns = [];\n      this.allColumnFilters.forEach((filterWrapper, colId) => {\n        const before = previousModel ? previousModel[colId] : null;\n        const after = currentModel ? currentModel[colId] : null;\n        if (!_.jsonEquals(before, after)) {\n          columns.push(filterWrapper.column);\n        }\n      });\n      if (columns.length > 0) {\n        this.onFilterChanged({ columns, source });\n      }\n    });\n  }\n  setModelOnFilterWrapper(filterPromise, newModel) {\n    return new AgPromise((resolve) => {\n      filterPromise.then((filter) => {\n        if (typeof filter.setModel !== \"function\") {\n          console.warn(\"AG Grid: filter missing setModel method, which is needed for setFilterModel\");\n          resolve();\n        }\n        (filter.setModel(newModel) || AgPromise.resolve()).then(() => resolve());\n      });\n    });\n  }\n  getFilterModel() {\n    const result = {};\n    this.allColumnFilters.forEach((filterWrapper, key) => {\n      const model = this.getModelFromFilterWrapper(filterWrapper);\n      if (exists(model)) {\n        result[key] = model;\n      }\n    });\n    return result;\n  }\n  getModelFromFilterWrapper(filterWrapper) {\n    var _a;\n    const filterPromise = filterWrapper.filterPromise;\n    const filter = filterPromise.resolveNow(null, (promiseFilter) => promiseFilter);\n    if (filter == null) {\n      return (_a = this.initialFilterModel[filterWrapper.column.getColId()]) != null ? _a : null;\n    }\n    if (typeof filter.getModel !== \"function\") {\n      console.warn(\"AG Grid: filter API missing getModel method, which is needed for getFilterModel\");\n      return null;\n    }\n    return filter.getModel();\n  }\n  isColumnFilterPresent() {\n    return this.activeColumnFilters.length > 0;\n  }\n  isAggregateFilterPresent() {\n    return !!this.activeAggregateFilters.length;\n  }\n  isExternalFilterPresent() {\n    return this.externalFilterPresent;\n  }\n  isChildFilterPresent() {\n    return this.isColumnFilterPresent() || this.isQuickFilterPresent() || this.isExternalFilterPresent() || this.isAdvancedFilterPresent();\n  }\n  isAdvancedFilterPresent() {\n    return this.isAdvancedFilterEnabled() && this.advancedFilterService.isFilterPresent();\n  }\n  onAdvancedFilterEnabledChanged(enabled) {\n    var _a;\n    if (enabled) {\n      if (this.allColumnFilters.size) {\n        this.allColumnFilters.forEach((filterWrapper) => this.disposeFilterWrapper(filterWrapper, \"advancedFilterEnabled\"));\n        this.onFilterChanged({ source: \"advancedFilter\" });\n      }\n    } else {\n      if ((_a = this.advancedFilterService) == null ? void 0 : _a.isFilterPresent()) {\n        this.advancedFilterService.setModel(null);\n        this.onFilterChanged({ source: \"advancedFilter\" });\n      }\n    }\n  }\n  isAdvancedFilterEnabled() {\n    var _a;\n    return !!((_a = this.advancedFilterService) == null ? void 0 : _a.isEnabled());\n  }\n  isAdvancedFilterHeaderActive() {\n    return this.isAdvancedFilterEnabled() && this.advancedFilterService.isHeaderActive();\n  }\n  doAggregateFiltersPass(node, filterToSkip) {\n    return this.doColumnFiltersPass(node, filterToSkip, true);\n  }\n  // called by:\n  // 1) onFilterChanged()\n  // 2) onNewRowsLoaded()\n  updateActiveFilters() {\n    this.activeColumnFilters.length = 0;\n    this.activeAggregateFilters.length = 0;\n    const isFilterActive = (filter) => {\n      if (!filter) {\n        return false;\n      }\n      if (!filter.isFilterActive) {\n        console.warn(\"AG Grid: Filter is missing isFilterActive() method\");\n        return false;\n      }\n      return filter.isFilterActive();\n    };\n    const groupFilterEnabled = !!this.gos.getGroupAggFiltering();\n    const isAggFilter = (column) => {\n      const isSecondary = !column.isPrimary();\n      if (isSecondary) {\n        return true;\n      }\n      const isShowingPrimaryColumns = !this.columnModel.isPivotActive();\n      const isValueActive = column.isValueActive();\n      if (!isValueActive || !isShowingPrimaryColumns) {\n        return false;\n      }\n      if (this.columnModel.isPivotMode()) {\n        return true;\n      }\n      return groupFilterEnabled;\n    };\n    this.allColumnFilters.forEach((filterWrapper) => {\n      if (filterWrapper.filterPromise.resolveNow(false, isFilterActive)) {\n        const filterComp = filterWrapper.filterPromise.resolveNow(null, (filter) => filter);\n        if (isAggFilter(filterWrapper.column)) {\n          this.activeAggregateFilters.push(filterComp);\n        } else {\n          this.activeColumnFilters.push(filterComp);\n        }\n      }\n    });\n  }\n  updateFilterFlagInColumns(source, additionalEventAttributes) {\n    this.allColumnFilters.forEach((filterWrapper) => {\n      const isFilterActive = filterWrapper.filterPromise.resolveNow(false, (filter) => filter.isFilterActive());\n      filterWrapper.column.setFilterActive(isFilterActive, source, additionalEventAttributes);\n    });\n  }\n  isAnyFilterPresent() {\n    return this.isQuickFilterPresent() || this.isColumnFilterPresent() || this.isAggregateFilterPresent() || this.isExternalFilterPresent() || this.isAdvancedFilterPresent();\n  }\n  doColumnFiltersPass(node, filterToSkip, targetAggregates) {\n    const { data, aggData } = node;\n    const targetedFilters = targetAggregates ? this.activeAggregateFilters : this.activeColumnFilters;\n    const targetedData = targetAggregates ? aggData : data;\n    for (let i = 0; i < targetedFilters.length; i++) {\n      const filter = targetedFilters[i];\n      if (filter == null || filter === filterToSkip) {\n        continue;\n      }\n      if (typeof filter.doesFilterPass !== \"function\") {\n        throw new Error(\"Filter is missing method doesFilterPass\");\n      }\n      if (!filter.doesFilterPass({ node, data: targetedData })) {\n        return false;\n      }\n    }\n    return true;\n  }\n  resetQuickFilterCache() {\n    this.quickFilterService.resetQuickFilterCache();\n  }\n  refreshFiltersForAggregations() {\n    const isAggFiltering = this.gos.getGroupAggFiltering();\n    if (isAggFiltering) {\n      this.onFilterChanged();\n    }\n  }\n  // sometimes (especially in React) the filter can call onFilterChanged when we are in the middle\n  // of a render cycle. this would be bad, so we wait for render cycle to complete when this happens.\n  // this happens in react when we change React State in the grid (eg setting RowCtrl's in RowContainer)\n  // which results in React State getting applied in the main application, triggering a useEffect() to\n  // be kicked off adn then the application calling the grid's API. in AG-6554, the custom filter was\n  // getting it's useEffect() triggered in this way.\n  callOnFilterChangedOutsideRenderCycle(params) {\n    const action = () => this.onFilterChanged(params);\n    if (this.rowRenderer.isRefreshInProgress()) {\n      setTimeout(action, 0);\n    } else {\n      action();\n    }\n  }\n  onFilterChanged(params = {}) {\n    const { source, filterInstance, additionalEventAttributes, columns } = params;\n    this.updateDependantFilters();\n    this.updateActiveFilters();\n    this.updateFilterFlagInColumns(\"filterChanged\", additionalEventAttributes);\n    this.externalFilterPresent = this.isExternalFilterPresentCallback();\n    this.allColumnFilters.forEach((filterWrapper) => {\n      if (!filterWrapper.filterPromise) {\n        return;\n      }\n      filterWrapper.filterPromise.then((filter) => {\n        if (filter && filter !== filterInstance && filter.onAnyFilterChanged) {\n          filter.onAnyFilterChanged();\n        }\n      });\n    });\n    const filterChangedEvent = {\n      source,\n      type: Events.EVENT_FILTER_CHANGED,\n      columns: columns || []\n    };\n    if (additionalEventAttributes) {\n      mergeDeep(filterChangedEvent, additionalEventAttributes);\n    }\n    this.processingFilterChange = true;\n    this.eventService.dispatchEvent(filterChangedEvent);\n    this.processingFilterChange = false;\n  }\n  isSuppressFlashingCellsBecauseFiltering() {\n    var _a;\n    const allowShowChangeAfterFilter = (_a = this.gos.get(\"allowShowChangeAfterFilter\")) != null ? _a : false;\n    return !allowShowChangeAfterFilter && this.processingFilterChange;\n  }\n  isQuickFilterPresent() {\n    return this.quickFilterService.isQuickFilterPresent();\n  }\n  updateAggFiltering() {\n    this.aggFiltering = !!this.gos.getGroupAggFiltering();\n  }\n  isAggregateQuickFilterPresent() {\n    return this.isQuickFilterPresent() && this.shouldApplyQuickFilterAfterAgg();\n  }\n  isNonAggregateQuickFilterPresent() {\n    return this.isQuickFilterPresent() && !this.shouldApplyQuickFilterAfterAgg();\n  }\n  shouldApplyQuickFilterAfterAgg() {\n    return (this.aggFiltering || this.columnModel.isPivotMode()) && !this.gos.get(\"applyQuickFilterBeforePivotOrAgg\");\n  }\n  doesRowPassOtherFilters(filterToSkip, node) {\n    return this.doesRowPassFilter({ rowNode: node, filterInstanceToSkip: filterToSkip });\n  }\n  doesRowPassAggregateFilters(params) {\n    if (this.isAggregateQuickFilterPresent() && !this.quickFilterService.doesRowPassQuickFilter(params.rowNode)) {\n      return false;\n    }\n    if (this.isAggregateFilterPresent() && !this.doAggregateFiltersPass(params.rowNode, params.filterInstanceToSkip)) {\n      return false;\n    }\n    return true;\n  }\n  doesRowPassFilter(params) {\n    if (this.isNonAggregateQuickFilterPresent() && !this.quickFilterService.doesRowPassQuickFilter(params.rowNode)) {\n      return false;\n    }\n    if (this.isExternalFilterPresent() && !this.doesExternalFilterPass(params.rowNode)) {\n      return false;\n    }\n    if (this.isColumnFilterPresent() && !this.doColumnFiltersPass(params.rowNode, params.filterInstanceToSkip)) {\n      return false;\n    }\n    if (this.isAdvancedFilterPresent() && !this.advancedFilterService.doesFilterPass(params.rowNode)) {\n      return false;\n    }\n    return true;\n  }\n  onNewRowsLoaded(source) {\n    this.allColumnFilters.forEach((filterWrapper) => {\n      filterWrapper.filterPromise.then((filter) => {\n        if (filter.onNewRowsLoaded) {\n          filter.onNewRowsLoaded();\n        }\n      });\n    });\n    this.updateFilterFlagInColumns(source, { afterDataChange: true });\n    this.updateActiveFilters();\n  }\n  createValueGetter(column) {\n    return ({ node }) => this.valueService.getValue(column, node, true);\n  }\n  createGetValue(filterColumn) {\n    return (rowNode, column) => {\n      const columnToUse = column ? this.columnModel.getGridColumn(column) : filterColumn;\n      return columnToUse ? this.valueService.getValue(columnToUse, rowNode, true) : void 0;\n    };\n  }\n  getFilterComponent(column, source, createIfDoesNotExist = true) {\n    var _a;\n    if (createIfDoesNotExist) {\n      return ((_a = this.getOrCreateFilterWrapper(column, source)) == null ? void 0 : _a.filterPromise) || null;\n    }\n    const filterWrapper = this.cachedFilter(column);\n    return filterWrapper ? filterWrapper.filterPromise : null;\n  }\n  isFilterActive(column) {\n    const filterWrapper = this.cachedFilter(column);\n    return !!filterWrapper && filterWrapper.filterPromise.resolveNow(false, (filter) => filter.isFilterActive());\n  }\n  getOrCreateFilterWrapper(column, source) {\n    if (!column.isFilterAllowed()) {\n      return null;\n    }\n    let filterWrapper = this.cachedFilter(column);\n    if (!filterWrapper) {\n      filterWrapper = this.createFilterWrapper(column, source);\n      this.setColumnFilterWrapper(column, filterWrapper);\n    }\n    return filterWrapper;\n  }\n  cachedFilter(column) {\n    return this.allColumnFilters.get(column.getColId());\n  }\n  getDefaultFilter(column) {\n    let defaultFilter;\n    if (ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/set-filter\" /* SetFilterModule */, this.context.getGridId())) {\n      defaultFilter = \"agSetColumnFilter\";\n    } else {\n      const cellDataType = this.dataTypeService.getBaseDataType(column);\n      if (cellDataType === \"number\") {\n        defaultFilter = \"agNumberColumnFilter\";\n      } else if (cellDataType === \"date\" || cellDataType === \"dateString\") {\n        defaultFilter = \"agDateColumnFilter\";\n      } else {\n        defaultFilter = \"agTextColumnFilter\";\n      }\n    }\n    return defaultFilter;\n  }\n  getDefaultFloatingFilter(column) {\n    let defaultFloatingFilterType;\n    if (ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/set-filter\" /* SetFilterModule */, this.context.getGridId())) {\n      defaultFloatingFilterType = \"agSetColumnFloatingFilter\";\n    } else {\n      const cellDataType = this.dataTypeService.getBaseDataType(column);\n      if (cellDataType === \"number\") {\n        defaultFloatingFilterType = \"agNumberColumnFloatingFilter\";\n      } else if (cellDataType === \"date\" || cellDataType === \"dateString\") {\n        defaultFloatingFilterType = \"agDateColumnFloatingFilter\";\n      } else {\n        defaultFloatingFilterType = \"agTextColumnFloatingFilter\";\n      }\n    }\n    return defaultFloatingFilterType;\n  }\n  createFilterInstance(column) {\n    const defaultFilter = this.getDefaultFilter(column);\n    const colDef = column.getColDef();\n    let filterInstance;\n    const params = __spreadProps(__spreadValues({}, this.createFilterParams(column, colDef)), {\n      filterModifiedCallback: () => this.filterModifiedCallbackFactory(filterInstance, column)(),\n      filterChangedCallback: (additionalEventAttributes) => this.filterChangedCallbackFactory(filterInstance, column)(additionalEventAttributes),\n      doesRowPassOtherFilter: (node) => this.doesRowPassOtherFilters(filterInstance, node)\n    });\n    const compDetails = this.userComponentFactory.getFilterDetails(colDef, params, defaultFilter);\n    if (!compDetails) {\n      return { filterPromise: null, compDetails: null };\n    }\n    return {\n      filterPromise: () => {\n        const filterPromise = compDetails.newAgStackInstance();\n        if (filterPromise) {\n          filterPromise.then((r) => filterInstance = r);\n        }\n        return filterPromise;\n      },\n      compDetails\n    };\n  }\n  createFilterParams(column, colDef) {\n    const params = this.gos.addGridCommonParams({\n      column,\n      colDef: cloneObject(colDef),\n      rowModel: this.rowModel,\n      filterChangedCallback: () => {\n      },\n      filterModifiedCallback: () => {\n      },\n      valueGetter: this.createValueGetter(column),\n      getValue: this.createGetValue(column),\n      doesRowPassOtherFilter: () => true\n    });\n    return params;\n  }\n  createFilterWrapper(column, source) {\n    var _a;\n    const filterWrapper = {\n      column,\n      filterPromise: null,\n      compiledElement: null,\n      compDetails: null\n    };\n    const { filterPromise, compDetails } = this.createFilterInstance(column);\n    filterWrapper.filterPromise = (_a = filterPromise == null ? void 0 : filterPromise()) != null ? _a : null;\n    filterWrapper.compDetails = compDetails;\n    return filterWrapper;\n  }\n  onColumnsChanged() {\n    const columns = [];\n    this.allColumnFilters.forEach((wrapper, colId) => {\n      let currentColumn;\n      if (wrapper.column.isPrimary()) {\n        currentColumn = this.columnModel.getPrimaryColumn(colId);\n      } else {\n        currentColumn = this.columnModel.getGridColumn(colId);\n      }\n      if (currentColumn && currentColumn === wrapper.column) {\n        return;\n      }\n      columns.push(wrapper.column);\n      this.disposeFilterWrapper(wrapper, \"columnChanged\");\n      this.disposeColumnListener(colId);\n    });\n    if (columns.length > 0) {\n      this.onFilterChanged({ columns, source: \"api\" });\n    } else {\n      this.updateDependantFilters();\n    }\n  }\n  updateDependantFilters() {\n    const groupColumns = this.columnModel.getGroupAutoColumns();\n    groupColumns == null ? void 0 : groupColumns.forEach((groupColumn) => {\n      if (groupColumn.getColDef().filter === \"agGroupColumnFilter\") {\n        this.getOrCreateFilterWrapper(groupColumn, \"NO_UI\");\n      }\n    });\n  }\n  // for group filters, can change dynamically whether they are allowed or not\n  isFilterAllowed(column) {\n    var _a, _b;\n    if (this.isAdvancedFilterEnabled()) {\n      return false;\n    }\n    const isFilterAllowed = column.isFilterAllowed();\n    if (!isFilterAllowed) {\n      return false;\n    }\n    const filterWrapper = this.allColumnFilters.get(column.getColId());\n    return (_b = (_a = filterWrapper == null ? void 0 : filterWrapper.filterPromise) == null ? void 0 : _a.resolveNow(\n      true,\n      // defer to filter component isFilterAllowed if it exists\n      (filter) => typeof (filter == null ? void 0 : filter.isFilterAllowed) === \"function\" ? filter == null ? void 0 : filter.isFilterAllowed() : true\n    )) != null ? _b : true;\n  }\n  getFloatingFilterCompDetails(column, showParentFilter) {\n    const parentFilterInstance = (callback) => {\n      const filterComponent = this.getFilterComponent(column, \"NO_UI\");\n      if (filterComponent == null) {\n        return;\n      }\n      filterComponent.then((instance) => {\n        callback(unwrapUserComp(instance));\n      });\n    };\n    const colDef = column.getColDef();\n    const filterParams = __spreadProps(__spreadValues({}, this.createFilterParams(column, colDef)), {\n      filterChangedCallback: () => parentFilterInstance((filterInstance) => this.filterChangedCallbackFactory(filterInstance, column)())\n    });\n    const finalFilterParams = this.userComponentFactory.mergeParamsWithApplicationProvidedParams(colDef, FilterComponent, filterParams);\n    let defaultFloatingFilterType = this.userComponentFactory.getDefaultFloatingFilterType(colDef, () => this.getDefaultFloatingFilter(column));\n    if (defaultFloatingFilterType == null) {\n      defaultFloatingFilterType = \"agReadOnlyFloatingFilter\";\n    }\n    const params = {\n      column,\n      filterParams: finalFilterParams,\n      currentParentModel: () => this.getCurrentFloatingFilterParentModel(column),\n      parentFilterInstance,\n      showParentFilter,\n      suppressFilterButton: false\n      // This one might be overridden from the colDef\n    };\n    return this.userComponentFactory.getFloatingFilterCompDetails(colDef, params, defaultFloatingFilterType);\n  }\n  getCurrentFloatingFilterParentModel(column) {\n    const filterComponent = this.getFilterComponent(column, \"NO_UI\", false);\n    return filterComponent ? filterComponent.resolveNow(null, (filter) => filter && filter.getModel()) : null;\n  }\n  // destroys the filter, so it no longer takes part\n  destroyFilter(column, source = \"api\") {\n    const colId = column.getColId();\n    const filterWrapper = this.allColumnFilters.get(colId);\n    this.disposeColumnListener(colId);\n    delete this.initialFilterModel[colId];\n    if (filterWrapper) {\n      this.disposeFilterWrapper(filterWrapper, source);\n      this.onFilterChanged({\n        columns: [column],\n        source: \"api\"\n      });\n    }\n  }\n  disposeColumnListener(colId) {\n    const columnListener = this.allColumnListeners.get(colId);\n    if (columnListener) {\n      this.allColumnListeners.delete(colId);\n      columnListener();\n    }\n  }\n  disposeFilterWrapper(filterWrapper, source) {\n    filterWrapper.filterPromise.then((filter) => {\n      this.getContext().destroyBean(filter);\n      filterWrapper.column.setFilterActive(false, \"filterDestroyed\");\n      this.allColumnFilters.delete(filterWrapper.column.getColId());\n      const event = {\n        type: Events.EVENT_FILTER_DESTROYED,\n        source,\n        column: filterWrapper.column\n      };\n      this.eventService.dispatchEvent(event);\n    });\n  }\n  filterModifiedCallbackFactory(filter, column) {\n    return () => {\n      const event = {\n        type: Events.EVENT_FILTER_MODIFIED,\n        column,\n        filterInstance: filter\n      };\n      this.eventService.dispatchEvent(event);\n    };\n  }\n  filterChangedCallbackFactory(filter, column) {\n    return (additionalEventAttributes) => {\n      var _a;\n      const source = (_a = additionalEventAttributes == null ? void 0 : additionalEventAttributes.source) != null ? _a : \"api\";\n      const params = {\n        filter,\n        additionalEventAttributes,\n        columns: [column],\n        source\n      };\n      this.callOnFilterChangedOutsideRenderCycle(params);\n    };\n  }\n  checkDestroyFilter(colId) {\n    const filterWrapper = this.allColumnFilters.get(colId);\n    if (!filterWrapper) {\n      return;\n    }\n    const column = filterWrapper.column;\n    const { compDetails } = column.isFilterAllowed() ? this.createFilterInstance(column) : { compDetails: null };\n    if (this.areFilterCompsDifferent(filterWrapper.compDetails, compDetails)) {\n      this.destroyFilter(column, \"paramsUpdated\");\n      return;\n    }\n    const newFilterParams = column.getColDef().filterParams;\n    if (!filterWrapper.filterPromise) {\n      this.destroyFilter(column, \"paramsUpdated\");\n      return;\n    }\n    filterWrapper.filterPromise.then((filter) => {\n      const shouldRefreshFilter = (filter == null ? void 0 : filter.refresh) ? filter.refresh(__spreadValues(__spreadProps(__spreadValues({}, this.createFilterParams(column, column.getColDef())), {\n        filterModifiedCallback: this.filterModifiedCallbackFactory(filter, column),\n        filterChangedCallback: this.filterChangedCallbackFactory(filter, column),\n        doesRowPassOtherFilter: (node) => this.doesRowPassOtherFilters(filter, node)\n      }), newFilterParams)) : true;\n      if (shouldRefreshFilter === false) {\n        this.destroyFilter(column, \"paramsUpdated\");\n      }\n    });\n  }\n  setColumnFilterWrapper(column, filterWrapper) {\n    const colId = column.getColId();\n    this.allColumnFilters.set(colId, filterWrapper);\n    this.allColumnListeners.set(\n      colId,\n      this.addManagedListener(\n        column,\n        Column.EVENT_COL_DEF_CHANGED,\n        () => this.checkDestroyFilter(colId)\n      )\n    );\n  }\n  areFilterCompsDifferent(oldCompDetails, newCompDetails) {\n    if (!newCompDetails || !oldCompDetails) {\n      return true;\n    }\n    const { componentClass: oldComponentClass } = oldCompDetails;\n    const { componentClass: newComponentClass } = newCompDetails;\n    const isSameComponentClass = oldComponentClass === newComponentClass || // react hooks returns new wrappers, so check nested render method\n    (oldComponentClass == null ? void 0 : oldComponentClass.render) && (newComponentClass == null ? void 0 : newComponentClass.render) && oldComponentClass.render === newComponentClass.render;\n    return !isSameComponentClass;\n  }\n  getAdvancedFilterModel() {\n    return this.isAdvancedFilterEnabled() ? this.advancedFilterService.getModel() : null;\n  }\n  setAdvancedFilterModel(expression) {\n    if (!this.isAdvancedFilterEnabled()) {\n      return;\n    }\n    if (this.dataTypeService.isPendingInference()) {\n      this.advancedFilterModelUpdateQueue.push(expression);\n      return;\n    }\n    this.advancedFilterService.setModel(expression != null ? expression : null);\n    this.onFilterChanged({ source: \"advancedFilter\" });\n  }\n  showAdvancedFilterBuilder(source) {\n    if (!this.isAdvancedFilterEnabled()) {\n      return;\n    }\n    this.advancedFilterService.getCtrl().toggleFilterBuilder(source, true);\n  }\n  updateAdvancedFilterColumns() {\n    if (!this.isAdvancedFilterEnabled()) {\n      return;\n    }\n    if (this.advancedFilterService.updateValidity()) {\n      this.onFilterChanged({ source: \"advancedFilter\" });\n    }\n  }\n  hasFloatingFilters() {\n    if (this.isAdvancedFilterEnabled()) {\n      return false;\n    }\n    const gridColumns = this.columnModel.getAllGridColumns();\n    return gridColumns.some((col) => col.getColDef().floatingFilter);\n  }\n  getFilterInstance(key, callback) {\n    if (this.isAdvancedFilterEnabled()) {\n      this.warnAdvancedFilters();\n      return void 0;\n    }\n    const res = this.getFilterInstanceImpl(key, (instance) => {\n      if (!callback) {\n        return;\n      }\n      const unwrapped2 = unwrapUserComp(instance);\n      callback(unwrapped2);\n    });\n    const unwrapped = unwrapUserComp(res);\n    return unwrapped;\n  }\n  getColumnFilterInstance(key) {\n    return new Promise((resolve) => {\n      this.getFilterInstance(key, (filter) => {\n        resolve(filter);\n      });\n    });\n  }\n  getFilterInstanceImpl(key, callback) {\n    const column = this.columnModel.getPrimaryColumn(key);\n    if (!column) {\n      return void 0;\n    }\n    const filterPromise = this.getFilterComponent(column, \"NO_UI\");\n    const currentValue = filterPromise && filterPromise.resolveNow(null, (filterComp) => filterComp);\n    if (currentValue) {\n      setTimeout(callback, 0, currentValue);\n    } else if (filterPromise) {\n      filterPromise.then((comp) => {\n        callback(comp);\n      });\n    }\n    return currentValue;\n  }\n  warnAdvancedFilters() {\n    warnOnce(\"Column Filter API methods have been disabled as Advanced Filters are enabled.\");\n  }\n  setupAdvancedFilterHeaderComp(eCompToInsertBefore) {\n    var _a;\n    (_a = this.advancedFilterService) == null ? void 0 : _a.getCtrl().setupHeaderComp(eCompToInsertBefore);\n  }\n  getHeaderRowCount() {\n    return this.isAdvancedFilterHeaderActive() ? 1 : 0;\n  }\n  getHeaderHeight() {\n    return this.isAdvancedFilterHeaderActive() ? this.advancedFilterService.getCtrl().getHeaderHeight() : 0;\n  }\n  processFilterModelUpdateQueue() {\n    this.filterModelUpdateQueue.forEach(({ model, source }) => this.setFilterModel(model, source));\n    this.filterModelUpdateQueue = [];\n    this.columnFilterModelUpdateQueue.forEach(({ key, model, resolve }) => {\n      this.setColumnFilterModel(key, model).then(() => resolve());\n    });\n    this.columnFilterModelUpdateQueue = [];\n    this.advancedFilterModelUpdateQueue.forEach((model) => this.setAdvancedFilterModel(model));\n    this.advancedFilterModelUpdateQueue = [];\n  }\n  getColumnFilterModel(key) {\n    const filterWrapper = this.getFilterWrapper(key);\n    return filterWrapper ? this.getModelFromFilterWrapper(filterWrapper) : null;\n  }\n  setColumnFilterModel(key, model) {\n    if (this.isAdvancedFilterEnabled()) {\n      this.warnAdvancedFilters();\n      return Promise.resolve();\n    }\n    if (this.dataTypeService.isPendingInference()) {\n      let resolve = () => {\n      };\n      const promise = new Promise((res) => {\n        resolve = res;\n      });\n      this.columnFilterModelUpdateQueue.push({ key, model, resolve });\n      return promise;\n    }\n    const column = this.columnModel.getPrimaryColumn(key);\n    const filterWrapper = column ? this.getOrCreateFilterWrapper(column, \"NO_UI\") : null;\n    const convertPromise = (promise) => {\n      return new Promise((resolve) => {\n        promise.then((result) => resolve(result));\n      });\n    };\n    return filterWrapper ? convertPromise(this.setModelOnFilterWrapper(filterWrapper.filterPromise, model)) : Promise.resolve();\n  }\n  getFilterWrapper(key) {\n    var _a;\n    const column = this.columnModel.getPrimaryColumn(key);\n    return column ? (_a = this.cachedFilter(column)) != null ? _a : null : null;\n  }\n  destroy() {\n    super.destroy();\n    this.allColumnFilters.forEach((filterWrapper) => this.disposeFilterWrapper(filterWrapper, \"gridDestroyed\"));\n    this.allColumnListeners.clear();\n  }\n};\n__decorateClass([\n  Autowired(\"valueService\")\n], FilterManager.prototype, \"valueService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], FilterManager.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"rowModel\")\n], FilterManager.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"userComponentFactory\")\n], FilterManager.prototype, \"userComponentFactory\", 2);\n__decorateClass([\n  Autowired(\"rowRenderer\")\n], FilterManager.prototype, \"rowRenderer\", 2);\n__decorateClass([\n  Autowired(\"dataTypeService\")\n], FilterManager.prototype, \"dataTypeService\", 2);\n__decorateClass([\n  Autowired(\"quickFilterService\")\n], FilterManager.prototype, \"quickFilterService\", 2);\n__decorateClass([\n  Optional(\"advancedFilterService\")\n], FilterManager.prototype, \"advancedFilterService\", 2);\n__decorateClass([\n  PostConstruct\n], FilterManager.prototype, \"init\", 1);\nFilterManager = __decorateClass([\n  Bean(\"filterManager\")\n], FilterManager);\n\n// community-modules/core/src/filter/filterWrapperComp.ts\nvar FilterWrapperComp = class extends Component {\n  constructor(column, source) {\n    super(\n      /* html */\n      `<div class=\"ag-filter\"></div>`\n    );\n    this.column = column;\n    this.source = source;\n    this.filterWrapper = null;\n  }\n  postConstruct() {\n    this.createFilter(true);\n    this.addManagedListener(this.eventService, Events.EVENT_FILTER_DESTROYED, this.onFilterDestroyed.bind(this));\n  }\n  hasFilter() {\n    return !!this.filterWrapper;\n  }\n  getFilter() {\n    var _a, _b;\n    return (_b = (_a = this.filterWrapper) == null ? void 0 : _a.filterPromise) != null ? _b : null;\n  }\n  afterInit() {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = this.filterWrapper) == null ? void 0 : _a.filterPromise) == null ? void 0 : _b.then(() => {\n    })) != null ? _c : AgPromise.resolve();\n  }\n  afterGuiAttached(params) {\n    var _a, _b;\n    (_b = (_a = this.filterWrapper) == null ? void 0 : _a.filterPromise) == null ? void 0 : _b.then((filter) => {\n      var _a2;\n      (_a2 = filter == null ? void 0 : filter.afterGuiAttached) == null ? void 0 : _a2.call(filter, params);\n    });\n  }\n  afterGuiDetached() {\n    var _a, _b;\n    (_b = (_a = this.filterWrapper) == null ? void 0 : _a.filterPromise) == null ? void 0 : _b.then((filter) => {\n      var _a2;\n      (_a2 = filter == null ? void 0 : filter.afterGuiDetached) == null ? void 0 : _a2.call(filter);\n    });\n  }\n  createFilter(init) {\n    var _a;\n    const { column, source } = this;\n    this.filterWrapper = this.filterManager.getOrCreateFilterWrapper(column, source);\n    if (!((_a = this.filterWrapper) == null ? void 0 : _a.filterPromise)) {\n      return;\n    }\n    this.filterWrapper.filterPromise.then((filter) => {\n      let guiFromFilter = filter.getGui();\n      if (!exists(guiFromFilter)) {\n        console.warn(`AG Grid: getGui method from filter returned ${guiFromFilter}, it should be a DOM element or an HTML template string.`);\n      }\n      if (typeof guiFromFilter === \"string\") {\n        guiFromFilter = loadTemplate(guiFromFilter);\n      }\n      this.appendChild(guiFromFilter);\n      if (init) {\n        const event = {\n          type: Events.EVENT_FILTER_OPENED,\n          column,\n          source,\n          eGui: this.getGui()\n        };\n        this.eventService.dispatchEvent(event);\n      }\n    });\n  }\n  onFilterDestroyed(event) {\n    if ((event.source === \"api\" || event.source === \"paramsUpdated\") && event.column.getId() === this.column.getId() && this.columnModel.getPrimaryColumn(this.column)) {\n      clearElement(this.getGui());\n      this.createFilter();\n    }\n  }\n  destroy() {\n    this.filterWrapper = null;\n    super.destroy();\n  }\n};\n__decorateClass([\n  Autowired(\"filterManager\")\n], FilterWrapperComp.prototype, \"filterManager\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], FilterWrapperComp.prototype, \"columnModel\", 2);\n__decorateClass([\n  PostConstruct\n], FilterWrapperComp.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/headerRendering/cells/abstractCell/abstractHeaderCellComp.ts\nvar AbstractHeaderCellComp = class extends Component {\n  constructor(template, ctrl) {\n    super(template);\n    this.ctrl = ctrl;\n  }\n  getCtrl() {\n    return this.ctrl;\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/floatingFilter/headerFilterCellComp.ts\nvar _HeaderFilterCellComp = class _HeaderFilterCellComp extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super(_HeaderFilterCellComp.TEMPLATE, ctrl);\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      addOrRemoveBodyCssClass: (cssClassName, on) => this.eFloatingFilterBody.classList.toggle(cssClassName, on),\n      setButtonWrapperDisplayed: (displayed) => setDisplayed(this.eButtonWrapper, displayed),\n      setCompDetails: (compDetails) => this.setCompDetails(compDetails),\n      getFloatingFilterComp: () => this.compPromise,\n      setWidth: (width) => eGui.style.width = width,\n      setMenuIcon: (eIcon) => this.eButtonShowMainFilter.appendChild(eIcon)\n    };\n    this.ctrl.setComp(compProxy, eGui, this.eButtonShowMainFilter, this.eFloatingFilterBody);\n  }\n  setCompDetails(compDetails) {\n    if (!compDetails) {\n      this.destroyFloatingFilterComp();\n      this.compPromise = null;\n      return;\n    }\n    this.compPromise = compDetails.newAgStackInstance();\n    this.compPromise.then((comp) => this.afterCompCreated(comp));\n  }\n  destroyFloatingFilterComp() {\n    if (this.floatingFilterComp) {\n      this.eFloatingFilterBody.removeChild(this.floatingFilterComp.getGui());\n      this.floatingFilterComp = this.destroyBean(this.floatingFilterComp);\n    }\n  }\n  afterCompCreated(comp) {\n    if (!comp) {\n      return;\n    }\n    if (!this.isAlive()) {\n      this.destroyBean(comp);\n      return;\n    }\n    this.destroyFloatingFilterComp();\n    this.floatingFilterComp = comp;\n    this.eFloatingFilterBody.appendChild(comp.getGui());\n    if (comp.afterGuiAttached) {\n      comp.afterGuiAttached();\n    }\n  }\n};\n_HeaderFilterCellComp.TEMPLATE = /* html */\n`<div class=\"ag-header-cell ag-floating-filter\" role=\"gridcell\">\n            <div ref=\"eFloatingFilterBody\" role=\"presentation\"></div>\n            <div class=\"ag-floating-filter-button ag-hidden\" ref=\"eButtonWrapper\" role=\"presentation\">\n                <button type=\"button\" class=\"ag-button ag-floating-filter-button-button\" ref=\"eButtonShowMainFilter\" tabindex=\"-1\"></button>\n            </div>\n        </div>`;\n__decorateClass([\n  RefSelector(\"eFloatingFilterBody\")\n], _HeaderFilterCellComp.prototype, \"eFloatingFilterBody\", 2);\n__decorateClass([\n  RefSelector(\"eButtonWrapper\")\n], _HeaderFilterCellComp.prototype, \"eButtonWrapper\", 2);\n__decorateClass([\n  RefSelector(\"eButtonShowMainFilter\")\n], _HeaderFilterCellComp.prototype, \"eButtonShowMainFilter\", 2);\n__decorateClass([\n  PostConstruct\n], _HeaderFilterCellComp.prototype, \"postConstruct\", 1);\n__decorateClass([\n  PreDestroy\n], _HeaderFilterCellComp.prototype, \"destroyFloatingFilterComp\", 1);\nvar HeaderFilterCellComp = _HeaderFilterCellComp;\n\n// community-modules/core/src/styling/layoutFeature.ts\nvar LayoutCssClasses = /* @__PURE__ */ ((LayoutCssClasses2) => {\n  LayoutCssClasses2[\"AUTO_HEIGHT\"] = \"ag-layout-auto-height\";\n  LayoutCssClasses2[\"NORMAL\"] = \"ag-layout-normal\";\n  LayoutCssClasses2[\"PRINT\"] = \"ag-layout-print\";\n  return LayoutCssClasses2;\n})(LayoutCssClasses || {});\nvar LayoutFeature = class extends BeanStub {\n  constructor(view) {\n    super();\n    this.view = view;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"domLayout\", this.updateLayoutClasses.bind(this));\n    this.updateLayoutClasses();\n  }\n  updateLayoutClasses() {\n    const domLayout = this.getDomLayout();\n    const params = {\n      autoHeight: domLayout === \"autoHeight\",\n      normal: domLayout === \"normal\",\n      print: domLayout === \"print\"\n    };\n    const cssClass = params.autoHeight ? \"ag-layout-auto-height\" /* AUTO_HEIGHT */ : params.print ? \"ag-layout-print\" /* PRINT */ : \"ag-layout-normal\" /* NORMAL */;\n    this.view.updateLayoutClasses(cssClass, params);\n  }\n  // returns either 'print', 'autoHeight' or 'normal' (normal is the default)\n  getDomLayout() {\n    var _a;\n    const domLayout = (_a = this.gos.get(\"domLayout\")) != null ? _a : \"normal\";\n    const validLayouts = [\"normal\", \"print\", \"autoHeight\"];\n    if (validLayouts.indexOf(domLayout) === -1) {\n      warnOnce(`${domLayout} is not valid for DOM Layout, valid values are 'normal', 'autoHeight', 'print'.`);\n      return \"normal\";\n    }\n    return domLayout;\n  }\n};\n__decorateClass([\n  PostConstruct\n], LayoutFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/gridBodyComp/gridBodyScrollFeature.ts\nvar GridBodyScrollFeature = class extends BeanStub {\n  constructor(eBodyViewport) {\n    super();\n    this.lastScrollSource = [null, null];\n    this.scrollLeft = -1;\n    this.nextScrollTop = -1;\n    this.scrollTop = -1;\n    // Used to provide approximate values of scrollTop and offsetHeight\n    // without forcing the browser to recalculate styles.\n    this.lastOffsetHeight = -1;\n    this.lastScrollTop = -1;\n    this.eBodyViewport = eBodyViewport;\n    this.resetLastHScrollDebounced = debounce(() => this.lastScrollSource[1 /* Horizontal */] = null, 500);\n    this.resetLastVScrollDebounced = debounce(() => this.lastScrollSource[0 /* Vertical */] = null, 500);\n  }\n  postConstruct() {\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this));\n    this.ctrlsService.whenReady((p) => {\n      this.centerRowsCtrl = p.center;\n      this.onDisplayedColumnsWidthChanged();\n      this.addScrollListener();\n    });\n  }\n  addScrollListener() {\n    const { fakeHScrollComp, fakeVScrollComp } = this.ctrlsService.getParams();\n    this.addManagedListener(this.centerRowsCtrl.getViewportElement(), \"scroll\", this.onHScroll.bind(this));\n    fakeHScrollComp.onScrollCallback(this.onFakeHScroll.bind(this));\n    const isDebounce = this.gos.get(\"debounceVerticalScrollbar\");\n    const onVScroll = isDebounce ? debounce(this.onVScroll.bind(this), 100) : this.onVScroll.bind(this);\n    const onFakeVScroll = isDebounce ? debounce(this.onFakeVScroll.bind(this), 100) : this.onFakeVScroll.bind(this);\n    this.addManagedListener(this.eBodyViewport, \"scroll\", onVScroll);\n    fakeVScrollComp.onScrollCallback(onFakeVScroll);\n  }\n  onDisplayedColumnsWidthChanged() {\n    if (this.enableRtl) {\n      this.horizontallyScrollHeaderCenterAndFloatingCenter();\n    }\n  }\n  horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft) {\n    const notYetInitialised = this.centerRowsCtrl == null;\n    if (notYetInitialised) {\n      return;\n    }\n    if (scrollLeft === void 0) {\n      scrollLeft = this.centerRowsCtrl.getCenterViewportScrollLeft();\n    }\n    const offset = this.enableRtl ? scrollLeft : -scrollLeft;\n    const {\n      topCenter,\n      stickyTopCenter,\n      stickyBottomCenter,\n      centerHeader,\n      bottomCenter,\n      fakeHScrollComp\n    } = this.ctrlsService.getParams();\n    centerHeader.setHorizontalScroll(-offset);\n    bottomCenter.setContainerTranslateX(offset);\n    topCenter.setContainerTranslateX(offset);\n    stickyTopCenter.setContainerTranslateX(offset);\n    stickyBottomCenter.setContainerTranslateX(offset);\n    const centerViewport = this.centerRowsCtrl.getViewportElement();\n    const isCenterViewportLastHorizontal = this.lastScrollSource[1 /* Horizontal */] === 0 /* Container */;\n    scrollLeft = Math.abs(scrollLeft);\n    if (isCenterViewportLastHorizontal) {\n      fakeHScrollComp.setScrollPosition(scrollLeft);\n    } else {\n      setScrollLeft(centerViewport, scrollLeft, this.enableRtl);\n    }\n  }\n  isControllingScroll(source, direction) {\n    if (this.lastScrollSource[direction] == null) {\n      this.lastScrollSource[direction] = source;\n      return true;\n    }\n    return this.lastScrollSource[direction] === source;\n  }\n  onFakeHScroll() {\n    if (!this.isControllingScroll(1 /* FakeContainer */, 1 /* Horizontal */)) {\n      return;\n    }\n    this.onHScrollCommon(1 /* FakeContainer */);\n  }\n  onHScroll() {\n    if (!this.isControllingScroll(0 /* Container */, 1 /* Horizontal */)) {\n      return;\n    }\n    this.onHScrollCommon(0 /* Container */);\n  }\n  onHScrollCommon(source) {\n    const centerContainerViewport = this.centerRowsCtrl.getViewportElement();\n    const { scrollLeft } = centerContainerViewport;\n    if (this.shouldBlockScrollUpdate(1 /* Horizontal */, scrollLeft, true)) {\n      return;\n    }\n    let newScrollLeft;\n    if (source === 0 /* Container */) {\n      newScrollLeft = getScrollLeft(centerContainerViewport, this.enableRtl);\n    } else {\n      newScrollLeft = this.ctrlsService.get(\"fakeHScrollComp\").getScrollPosition();\n    }\n    this.doHorizontalScroll(Math.round(newScrollLeft));\n    this.resetLastHScrollDebounced();\n  }\n  onFakeVScroll() {\n    if (!this.isControllingScroll(1 /* FakeContainer */, 0 /* Vertical */)) {\n      return;\n    }\n    this.onVScrollCommon(1 /* FakeContainer */);\n  }\n  onVScroll() {\n    if (!this.isControllingScroll(0 /* Container */, 0 /* Vertical */)) {\n      return;\n    }\n    this.onVScrollCommon(0 /* Container */);\n  }\n  onVScrollCommon(source) {\n    let scrollTop;\n    if (source === 0 /* Container */) {\n      scrollTop = this.eBodyViewport.scrollTop;\n    } else {\n      scrollTop = this.ctrlsService.get(\"fakeVScrollComp\").getScrollPosition();\n    }\n    if (this.shouldBlockScrollUpdate(0 /* Vertical */, scrollTop, true)) {\n      return;\n    }\n    this.animationFrameService.setScrollTop(scrollTop);\n    this.nextScrollTop = scrollTop;\n    if (source === 0 /* Container */) {\n      this.ctrlsService.get(\"fakeVScrollComp\").setScrollPosition(scrollTop);\n    } else {\n      this.eBodyViewport.scrollTop = scrollTop;\n    }\n    if (this.gos.get(\"suppressAnimationFrame\")) {\n      this.scrollGridIfNeeded();\n    } else {\n      this.animationFrameService.schedule();\n    }\n    this.resetLastVScrollDebounced();\n  }\n  doHorizontalScroll(scrollLeft) {\n    const fakeScrollLeft = this.ctrlsService.get(\"fakeHScrollComp\").getScrollPosition();\n    if (this.scrollLeft === scrollLeft && scrollLeft === fakeScrollLeft) {\n      return;\n    }\n    this.scrollLeft = scrollLeft;\n    this.fireScrollEvent(1 /* Horizontal */);\n    this.horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft);\n    this.centerRowsCtrl.onHorizontalViewportChanged(true);\n  }\n  fireScrollEvent(direction) {\n    const bodyScrollEvent = {\n      type: Events.EVENT_BODY_SCROLL,\n      direction: direction === 1 /* Horizontal */ ? \"horizontal\" : \"vertical\",\n      left: this.scrollLeft,\n      top: this.scrollTop\n    };\n    this.eventService.dispatchEvent(bodyScrollEvent);\n    window.clearTimeout(this.scrollTimer);\n    this.scrollTimer = void 0;\n    this.scrollTimer = window.setTimeout(() => {\n      const bodyScrollEndEvent = __spreadProps(__spreadValues({}, bodyScrollEvent), {\n        type: Events.EVENT_BODY_SCROLL_END\n      });\n      this.eventService.dispatchEvent(bodyScrollEndEvent);\n    }, 100);\n  }\n  shouldBlockScrollUpdate(direction, scrollTo, touchOnly = false) {\n    if (touchOnly && !isIOSUserAgent()) {\n      return false;\n    }\n    if (direction === 0 /* Vertical */) {\n      return this.shouldBlockVerticalScroll(scrollTo);\n    }\n    return this.shouldBlockHorizontalScroll(scrollTo);\n  }\n  shouldBlockVerticalScroll(scrollTo) {\n    const clientHeight = getInnerHeight(this.eBodyViewport);\n    const { scrollHeight } = this.eBodyViewport;\n    if (scrollTo < 0 || scrollTo + clientHeight > scrollHeight) {\n      return true;\n    }\n    return false;\n  }\n  shouldBlockHorizontalScroll(scrollTo) {\n    const clientWidth = this.centerRowsCtrl.getCenterWidth();\n    const { scrollWidth } = this.centerRowsCtrl.getViewportElement();\n    if (this.enableRtl && isRtlNegativeScroll()) {\n      if (scrollTo > 0) {\n        return true;\n      }\n    } else if (scrollTo < 0) {\n      return true;\n    }\n    if (Math.abs(scrollTo) + clientWidth > scrollWidth) {\n      return true;\n    }\n    return false;\n  }\n  redrawRowsAfterScroll() {\n    this.fireScrollEvent(0 /* Vertical */);\n  }\n  // this is to cater for AG-3274, where grid is removed from the dom and then inserted back in again.\n  // (which happens with some implementations of tabbing). this can result in horizontal scroll getting\n  // reset back to the left, however no scroll event is fired. so we need to get header to also scroll\n  // back to the left to be kept in sync.\n  // adding and removing the grid from the DOM both resets the scroll position and\n  // triggers a resize event, so notify listeners if the scroll position has changed\n  checkScrollLeft() {\n    if (this.scrollLeft !== this.centerRowsCtrl.getCenterViewportScrollLeft()) {\n      this.onHScrollCommon(0 /* Container */);\n    }\n  }\n  scrollGridIfNeeded() {\n    const frameNeeded = this.scrollTop != this.nextScrollTop;\n    if (frameNeeded) {\n      this.scrollTop = this.nextScrollTop;\n      this.redrawRowsAfterScroll();\n    }\n    return frameNeeded;\n  }\n  // called by scrollHorizontally method and alignedGridsService\n  setHorizontalScrollPosition(hScrollPosition, fromAlignedGridsService = false) {\n    const minScrollLeft = 0;\n    const maxScrollLeft = this.centerRowsCtrl.getViewportElement().scrollWidth - this.centerRowsCtrl.getCenterWidth();\n    if (!fromAlignedGridsService && this.shouldBlockScrollUpdate(1 /* Horizontal */, hScrollPosition)) {\n      if (this.enableRtl && isRtlNegativeScroll()) {\n        hScrollPosition = hScrollPosition > 0 ? 0 : maxScrollLeft;\n      } else {\n        hScrollPosition = Math.min(Math.max(hScrollPosition, minScrollLeft), maxScrollLeft);\n      }\n    }\n    setScrollLeft(this.centerRowsCtrl.getViewportElement(), Math.abs(hScrollPosition), this.enableRtl);\n    this.doHorizontalScroll(hScrollPosition);\n  }\n  setVerticalScrollPosition(vScrollPosition) {\n    this.eBodyViewport.scrollTop = vScrollPosition;\n  }\n  getVScrollPosition() {\n    this.lastScrollTop = this.eBodyViewport.scrollTop;\n    this.lastOffsetHeight = this.eBodyViewport.offsetHeight;\n    const result = {\n      top: this.lastScrollTop,\n      bottom: this.lastScrollTop + this.lastOffsetHeight\n    };\n    return result;\n  }\n  /** Get an approximate scroll position that returns the last real value read.\n   * This is useful for avoiding repeated DOM reads that force the browser to recalculate styles.\n   * This can have big performance improvements but may not be 100% accurate so only use if this is acceptable.\n   */\n  getApproximateVScollPosition() {\n    if (this.lastScrollTop >= 0 && this.lastOffsetHeight >= 0) {\n      return {\n        top: this.scrollTop,\n        bottom: this.scrollTop + this.lastOffsetHeight\n      };\n    }\n    return this.getVScrollPosition();\n  }\n  getHScrollPosition() {\n    return this.centerRowsCtrl.getHScrollPosition();\n  }\n  isHorizontalScrollShowing() {\n    return this.centerRowsCtrl.isHorizontalScrollShowing();\n  }\n  // called by the headerRootComp and moveColumnController\n  scrollHorizontally(pixels) {\n    const oldScrollPosition = this.centerRowsCtrl.getViewportElement().scrollLeft;\n    this.setHorizontalScrollPosition(oldScrollPosition + pixels);\n    return this.centerRowsCtrl.getViewportElement().scrollLeft - oldScrollPosition;\n  }\n  // gets called by rowRenderer when new data loaded, as it will want to scroll to the top\n  scrollToTop() {\n    this.eBodyViewport.scrollTop = 0;\n  }\n  // Valid values for position are bottom, middle and top\n  ensureNodeVisible(comparator, position = null) {\n    const rowCount = this.rowModel.getRowCount();\n    let indexToSelect = -1;\n    for (let i = 0; i < rowCount; i++) {\n      const node = this.rowModel.getRow(i);\n      if (typeof comparator === \"function\") {\n        const predicate = comparator;\n        if (node && predicate(node)) {\n          indexToSelect = i;\n          break;\n        }\n      } else {\n        if (comparator === node || comparator === node.data) {\n          indexToSelect = i;\n          break;\n        }\n      }\n    }\n    if (indexToSelect >= 0) {\n      this.ensureIndexVisible(indexToSelect, position);\n    }\n  }\n  // Valid values for position are bottom, middle and top\n  // position should be {'top','middle','bottom', or undefined/null}.\n  // if undefined/null, then the grid will to the minimal amount of scrolling,\n  // eg if grid needs to scroll up, it scrolls until row is on top,\n  //    if grid needs to scroll down, it scrolls until row is on bottom,\n  //    if row is already in view, grid does not scroll\n  ensureIndexVisible(index, position) {\n    if (this.gos.isDomLayout(\"print\")) {\n      return;\n    }\n    const rowCount = this.paginationProxy.getRowCount();\n    if (typeof index !== \"number\" || index < 0 || index >= rowCount) {\n      console.warn(\"AG Grid: Invalid row index for ensureIndexVisible: \" + index);\n      return;\n    }\n    const isPaging = this.gos.get(\"pagination\");\n    const paginationPanelEnabled = isPaging && !this.gos.get(\"suppressPaginationPanel\");\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      if (!paginationPanelEnabled) {\n        this.paginationProxy.goToPageWithIndex(index);\n      }\n      const gridBodyCtrl = this.ctrlsService.getGridBodyCtrl();\n      const stickyTopHeight = gridBodyCtrl.getStickyTopHeight();\n      const stickyBottomHeight = gridBodyCtrl.getStickyBottomHeight();\n      const rowNode = this.paginationProxy.getRow(index);\n      let rowGotShiftedDuringOperation;\n      do {\n        const startingRowTop = rowNode.rowTop;\n        const startingRowHeight = rowNode.rowHeight;\n        const paginationOffset = this.paginationProxy.getPixelOffset();\n        const rowTopPixel = rowNode.rowTop - paginationOffset;\n        const rowBottomPixel = rowTopPixel + rowNode.rowHeight;\n        const scrollPosition = this.getVScrollPosition();\n        const heightOffset = this.heightScaler.getDivStretchOffset();\n        const vScrollTop = scrollPosition.top + heightOffset;\n        const vScrollBottom = scrollPosition.bottom + heightOffset;\n        const viewportHeight = vScrollBottom - vScrollTop;\n        const pxTop = this.heightScaler.getScrollPositionForPixel(rowTopPixel);\n        const pxBottom = this.heightScaler.getScrollPositionForPixel(rowBottomPixel - viewportHeight);\n        const pxMiddle = Math.min((pxTop + pxBottom) / 2, rowTopPixel);\n        const rowAboveViewport = vScrollTop + stickyTopHeight > rowTopPixel;\n        const rowBelowViewport = vScrollBottom - stickyBottomHeight < rowBottomPixel;\n        let newScrollPosition = null;\n        if (position === \"top\") {\n          newScrollPosition = pxTop;\n        } else if (position === \"bottom\") {\n          newScrollPosition = pxBottom;\n        } else if (position === \"middle\") {\n          newScrollPosition = pxMiddle;\n        } else if (rowAboveViewport) {\n          newScrollPosition = pxTop - stickyTopHeight;\n        } else if (rowBelowViewport) {\n          newScrollPosition = pxBottom + stickyBottomHeight;\n        }\n        if (newScrollPosition !== null) {\n          this.setVerticalScrollPosition(newScrollPosition);\n          this.rowRenderer.redraw({ afterScroll: true });\n        }\n        rowGotShiftedDuringOperation = startingRowTop !== rowNode.rowTop || startingRowHeight !== rowNode.rowHeight;\n      } while (rowGotShiftedDuringOperation);\n      this.animationFrameService.flushAllFrames();\n    });\n  }\n  ensureColumnVisible(key, position = \"auto\") {\n    const column = this.columnModel.getGridColumn(key);\n    if (!column) {\n      return;\n    }\n    if (column.isPinned()) {\n      return;\n    }\n    if (!this.columnModel.isColumnDisplayed(column)) {\n      return;\n    }\n    const newHorizontalScroll = this.getPositionedHorizontalScroll(column, position);\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      if (newHorizontalScroll !== null) {\n        this.centerRowsCtrl.setCenterViewportScrollLeft(newHorizontalScroll);\n      }\n      this.centerRowsCtrl.onHorizontalViewportChanged();\n      this.animationFrameService.flushAllFrames();\n    });\n  }\n  setScrollPosition(top, left) {\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      this.centerRowsCtrl.setCenterViewportScrollLeft(left);\n      this.setVerticalScrollPosition(top);\n      this.rowRenderer.redraw({ afterScroll: true });\n      this.animationFrameService.flushAllFrames();\n    });\n  }\n  getPositionedHorizontalScroll(column, position) {\n    const { columnBeforeStart, columnAfterEnd } = this.isColumnOutsideViewport(column);\n    const viewportTooSmallForColumn = this.centerRowsCtrl.getCenterWidth() < column.getActualWidth();\n    const viewportWidth = this.centerRowsCtrl.getCenterWidth();\n    const isRtl = this.enableRtl;\n    let alignColToStart = (isRtl ? columnBeforeStart : columnAfterEnd) || viewportTooSmallForColumn;\n    let alignColToEnd = isRtl ? columnAfterEnd : columnBeforeStart;\n    if (position !== \"auto\") {\n      alignColToStart = position === \"start\";\n      alignColToEnd = position === \"end\";\n    }\n    const isMiddle = position === \"middle\";\n    if (alignColToStart || alignColToEnd || isMiddle) {\n      const { colLeft, colMiddle, colRight } = this.getColumnBounds(column);\n      if (isMiddle) {\n        return colMiddle - viewportWidth / 2;\n      }\n      if (alignColToStart) {\n        return isRtl ? colRight : colLeft;\n      }\n      return isRtl ? colLeft - viewportWidth : colRight - viewportWidth;\n    }\n    return null;\n  }\n  isColumnOutsideViewport(column) {\n    const { start: viewportStart, end: viewportEnd } = this.getViewportBounds();\n    const { colLeft, colRight } = this.getColumnBounds(column);\n    const isRtl = this.enableRtl;\n    const columnBeforeStart = isRtl ? viewportStart > colRight : viewportEnd < colRight;\n    const columnAfterEnd = isRtl ? viewportEnd < colLeft : viewportStart > colLeft;\n    return { columnBeforeStart, columnAfterEnd };\n  }\n  getColumnBounds(column) {\n    const isRtl = this.enableRtl;\n    const bodyWidth = this.columnModel.getBodyContainerWidth();\n    const colWidth = column.getActualWidth();\n    const colLeft = column.getLeft();\n    const multiplier = isRtl ? -1 : 1;\n    const colLeftPixel = isRtl ? bodyWidth - colLeft : colLeft;\n    const colRightPixel = colLeftPixel + colWidth * multiplier;\n    const colMidPixel = colLeftPixel + colWidth / 2 * multiplier;\n    return { colLeft: colLeftPixel, colMiddle: colMidPixel, colRight: colRightPixel };\n  }\n  getViewportBounds() {\n    const viewportWidth = this.centerRowsCtrl.getCenterWidth();\n    const scrollPosition = this.centerRowsCtrl.getCenterViewportScrollLeft();\n    const viewportStartPixel = scrollPosition;\n    const viewportEndPixel = viewportWidth + scrollPosition;\n    return { start: viewportStartPixel, end: viewportEndPixel, width: viewportWidth };\n  }\n};\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], GridBodyScrollFeature.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"animationFrameService\")\n], GridBodyScrollFeature.prototype, \"animationFrameService\", 2);\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], GridBodyScrollFeature.prototype, \"paginationProxy\", 2);\n__decorateClass([\n  Autowired(\"rowModel\")\n], GridBodyScrollFeature.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"rowContainerHeightService\")\n], GridBodyScrollFeature.prototype, \"heightScaler\", 2);\n__decorateClass([\n  Autowired(\"rowRenderer\")\n], GridBodyScrollFeature.prototype, \"rowRenderer\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], GridBodyScrollFeature.prototype, \"columnModel\", 2);\n__decorateClass([\n  PostConstruct\n], GridBodyScrollFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/gridBodyComp/gridBodyCtrl.ts\nvar RowAnimationCssClasses = /* @__PURE__ */ ((RowAnimationCssClasses2) => {\n  RowAnimationCssClasses2[\"ANIMATION_ON\"] = \"ag-row-animation\";\n  RowAnimationCssClasses2[\"ANIMATION_OFF\"] = \"ag-row-no-animation\";\n  return RowAnimationCssClasses2;\n})(RowAnimationCssClasses || {});\nvar CSS_CLASS_FORCE_VERTICAL_SCROLL = \"ag-force-vertical-scroll\";\nvar CSS_CLASS_CELL_SELECTABLE = \"ag-selectable\";\nvar CSS_CLASS_COLUMN_MOVING = \"ag-column-moving\";\nvar GridBodyCtrl = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.stickyTopHeight = 0;\n    this.stickyBottomHeight = 0;\n  }\n  getScrollFeature() {\n    return this.bodyScrollFeature;\n  }\n  getBodyViewportElement() {\n    return this.eBodyViewport;\n  }\n  setComp(comp, eGridBody, eBodyViewport, eTop, eBottom, eStickyTop, eStickyBottom) {\n    this.comp = comp;\n    this.eGridBody = eGridBody;\n    this.eBodyViewport = eBodyViewport;\n    this.eTop = eTop;\n    this.eBottom = eBottom;\n    this.eStickyTop = eStickyTop;\n    this.eStickyBottom = eStickyBottom;\n    this.setCellTextSelection(this.gos.get(\"enableCellTextSelection\"));\n    this.addManagedPropertyListener(\"enableCellTextSelection\", (props) => this.setCellTextSelection(props.currentValue));\n    this.createManagedBean(new LayoutFeature(this.comp));\n    this.bodyScrollFeature = this.createManagedBean(new GridBodyScrollFeature(this.eBodyViewport));\n    this.addRowDragListener();\n    this.setupRowAnimationCssClass();\n    this.addEventListeners();\n    this.addFocusListeners([eTop, eBodyViewport, eBottom, eStickyTop, eStickyBottom]);\n    this.onGridColumnsChanged();\n    this.addBodyViewportListener();\n    this.setFloatingHeights();\n    this.disableBrowserDragging();\n    this.addStopEditingWhenGridLosesFocus();\n    this.filterManager.setupAdvancedFilterHeaderComp(eTop);\n    this.ctrlsService.register(\"gridBodyCtrl\", this);\n  }\n  getComp() {\n    return this.comp;\n  }\n  addEventListeners() {\n    this.addManagedListener(this.eventService, Events.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_PINNED_ROW_DATA_CHANGED, this.onPinnedRowDataChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_HEADER_HEIGHT_CHANGED, this.onHeaderHeightChanged.bind(this));\n  }\n  addFocusListeners(elements) {\n    elements.forEach((element) => {\n      this.addManagedListener(element, \"focusin\", (e) => {\n        const { target } = e;\n        const isFocusedElementNested = isElementChildOfClass(target, \"ag-root\", element);\n        element.classList.toggle(\"ag-has-focus\", !isFocusedElementNested);\n      });\n      this.addManagedListener(element, \"focusout\", (e) => {\n        const { target, relatedTarget } = e;\n        const gridContainRelatedTarget = element.contains(relatedTarget);\n        const isNestedRelatedTarget = isElementChildOfClass(relatedTarget, \"ag-root\", element);\n        const isNestedTarget = isElementChildOfClass(target, \"ag-root\", element);\n        if (isNestedTarget) {\n          return;\n        }\n        if (!gridContainRelatedTarget || isNestedRelatedTarget) {\n          element.classList.remove(\"ag-has-focus\");\n        }\n      });\n    });\n  }\n  // used by ColumnAnimationService\n  setColumnMovingCss(moving) {\n    this.comp.setColumnMovingCss(CSS_CLASS_COLUMN_MOVING, moving);\n  }\n  setCellTextSelection(selectable = false) {\n    this.comp.setCellSelectableCss(CSS_CLASS_CELL_SELECTABLE, selectable);\n  }\n  onScrollVisibilityChanged() {\n    const visible = this.scrollVisibleService.isVerticalScrollShowing();\n    this.setVerticalScrollPaddingVisible(visible);\n    this.setStickyWidth(visible);\n    this.setStickyBottomOffsetBottom();\n    const scrollbarWidth = visible ? this.gos.getScrollbarWidth() || 0 : 0;\n    const pad = isInvisibleScrollbar() ? 16 : 0;\n    const width = `calc(100% + ${scrollbarWidth + pad}px)`;\n    this.animationFrameService.requestAnimationFrame(() => this.comp.setBodyViewportWidth(width));\n  }\n  onGridColumnsChanged() {\n    const columns = this.columnModel.getAllGridColumns();\n    this.comp.setColumnCount(columns.length);\n  }\n  // if we do not do this, then the user can select a pic in the grid (eg an image in a custom cell renderer)\n  // and then that will start the browser native drag n' drop, which messes up with our own drag and drop.\n  disableBrowserDragging() {\n    this.addManagedListener(this.eGridBody, \"dragstart\", (event) => {\n      if (event.target instanceof HTMLImageElement) {\n        event.preventDefault();\n        return false;\n      }\n    });\n  }\n  addStopEditingWhenGridLosesFocus() {\n    if (!this.gos.get(\"stopEditingWhenCellsLoseFocus\")) {\n      return;\n    }\n    const focusOutListener = (event) => {\n      const elementWithFocus = event.relatedTarget;\n      if (getTabIndex(elementWithFocus) === null) {\n        this.rowRenderer.stopEditing();\n        return;\n      }\n      let clickInsideGrid = (\n        // see if click came from inside the viewports\n        viewports.some((viewport) => viewport.contains(elementWithFocus)) && this.mouseEventService.isElementInThisGrid(elementWithFocus)\n      );\n      if (!clickInsideGrid) {\n        const popupService = this.popupService;\n        clickInsideGrid = popupService.getActivePopups().some((popup) => popup.contains(elementWithFocus)) || popupService.isElementWithinCustomPopup(elementWithFocus);\n      }\n      if (!clickInsideGrid) {\n        this.rowRenderer.stopEditing();\n      }\n    };\n    const viewports = [this.eBodyViewport, this.eBottom, this.eTop, this.eStickyTop, this.eStickyBottom];\n    viewports.forEach((viewport) => this.addManagedListener(viewport, \"focusout\", focusOutListener));\n  }\n  updateRowCount() {\n    const headerCount = this.headerNavigationService.getHeaderRowCount() + this.filterManager.getHeaderRowCount();\n    const rowCount = this.rowModel.isLastRowIndexKnown() ? this.rowModel.getRowCount() : -1;\n    const total = rowCount === -1 ? -1 : headerCount + rowCount;\n    this.comp.setRowCount(total);\n  }\n  registerBodyViewportResizeListener(listener) {\n    this.comp.registerBodyViewportResizeListener(listener);\n  }\n  setVerticalScrollPaddingVisible(visible) {\n    const overflowY = visible ? \"scroll\" : \"hidden\";\n    this.comp.setPinnedTopBottomOverflowY(overflowY);\n  }\n  isVerticalScrollShowing() {\n    const show = this.gos.get(\"alwaysShowVerticalScroll\");\n    const cssClass = show ? CSS_CLASS_FORCE_VERTICAL_SCROLL : null;\n    const allowVerticalScroll = this.gos.isDomLayout(\"normal\");\n    this.comp.setAlwaysVerticalScrollClass(cssClass, show);\n    return show || allowVerticalScroll && isVerticalScrollShowing(this.eBodyViewport);\n  }\n  setupRowAnimationCssClass() {\n    const listener = () => {\n      const animateRows = this.gos.isAnimateRows() && !this.rowContainerHeightService.isStretching();\n      const animateRowsCssClass = animateRows ? \"ag-row-animation\" /* ANIMATION_ON */ : \"ag-row-no-animation\" /* ANIMATION_OFF */;\n      this.comp.setRowAnimationCssOnBodyViewport(animateRowsCssClass, animateRows);\n    };\n    listener();\n    this.addManagedListener(this.eventService, Events.EVENT_HEIGHT_SCALE_CHANGED, listener);\n    this.addManagedPropertyListener(\"animateRows\", listener);\n  }\n  getGridBodyElement() {\n    return this.eGridBody;\n  }\n  addBodyViewportListener() {\n    const listener = this.onBodyViewportContextMenu.bind(this);\n    this.addManagedListener(this.eBodyViewport, \"contextmenu\", listener);\n    this.mockContextMenuForIPad(listener);\n    this.addManagedListener(this.eBodyViewport, \"wheel\", this.onBodyViewportWheel.bind(this));\n    this.addManagedListener(this.eStickyTop, \"wheel\", this.onStickyWheel.bind(this));\n    this.addManagedListener(this.eStickyBottom, \"wheel\", this.onStickyWheel.bind(this));\n    this.addFullWidthContainerWheelListener();\n  }\n  addFullWidthContainerWheelListener() {\n    const fullWidthContainer = this.eBodyViewport.querySelector(\".ag-full-width-container\");\n    const eCenterColsViewport = this.eBodyViewport.querySelector(\".ag-center-cols-viewport\");\n    if (fullWidthContainer && eCenterColsViewport) {\n      this.addManagedListener(fullWidthContainer, \"wheel\", (e) => this.onFullWidthContainerWheel(e, eCenterColsViewport));\n    }\n  }\n  onFullWidthContainerWheel(e, eCenterColsViewport) {\n    if (!e.deltaX || Math.abs(e.deltaY) > Math.abs(e.deltaX) || !this.mouseEventService.isEventFromThisGrid(e)) {\n      return;\n    }\n    e.preventDefault();\n    eCenterColsViewport.scrollBy({ left: e.deltaX });\n  }\n  onBodyViewportContextMenu(mouseEvent, touch, touchEvent) {\n    if (!mouseEvent && !touchEvent) {\n      return;\n    }\n    if (this.gos.get(\"preventDefaultOnContextMenu\")) {\n      const event = mouseEvent || touchEvent;\n      event.preventDefault();\n    }\n    const { target } = mouseEvent || touch;\n    if (target === this.eBodyViewport || target === this.ctrlsService.get(\"center\").getViewportElement()) {\n      this.menuService.showContextMenu({ mouseEvent, touchEvent, value: null, anchorToElement: this.eGridBody });\n    }\n  }\n  mockContextMenuForIPad(listener) {\n    if (!isIOSUserAgent()) {\n      return;\n    }\n    const touchListener = new TouchListener(this.eBodyViewport);\n    const longTapListener = (event) => {\n      listener(void 0, event.touchStart, event.touchEvent);\n    };\n    this.addManagedListener(touchListener, TouchListener.EVENT_LONG_TAP, longTapListener);\n    this.addDestroyFunc(() => touchListener.destroy());\n  }\n  onBodyViewportWheel(e) {\n    if (!this.gos.get(\"suppressScrollWhenPopupsAreOpen\")) {\n      return;\n    }\n    if (this.popupService.hasAnchoredPopup()) {\n      e.preventDefault();\n    }\n  }\n  onStickyWheel(e) {\n    e.preventDefault();\n    if (e.offsetY) {\n      this.scrollVertically(e.deltaY);\n    }\n  }\n  getGui() {\n    return this.eGridBody;\n  }\n  // called by rowDragFeature\n  scrollVertically(pixels) {\n    const oldScrollPosition = this.eBodyViewport.scrollTop;\n    this.bodyScrollFeature.setVerticalScrollPosition(oldScrollPosition + pixels);\n    return this.eBodyViewport.scrollTop - oldScrollPosition;\n  }\n  addRowDragListener() {\n    this.rowDragFeature = this.createManagedBean(new RowDragFeature(this.eBodyViewport));\n    this.dragAndDropService.addDropTarget(this.rowDragFeature);\n  }\n  getRowDragFeature() {\n    return this.rowDragFeature;\n  }\n  onPinnedRowDataChanged() {\n    this.setFloatingHeights();\n  }\n  setFloatingHeights() {\n    const { pinnedRowModel } = this;\n    let floatingTopHeight = pinnedRowModel.getPinnedTopTotalHeight();\n    let floatingBottomHeight = pinnedRowModel.getPinnedBottomTotalHeight();\n    this.comp.setTopHeight(floatingTopHeight);\n    this.comp.setBottomHeight(floatingBottomHeight);\n    this.comp.setTopDisplay(floatingTopHeight ? \"inherit\" : \"none\");\n    this.comp.setBottomDisplay(floatingBottomHeight ? \"inherit\" : \"none\");\n    this.setStickyTopOffsetTop();\n    this.setStickyBottomOffsetBottom();\n  }\n  setStickyTopHeight(height = 0) {\n    this.comp.setStickyTopHeight(`${height}px`);\n    this.stickyTopHeight = height;\n  }\n  getStickyTopHeight() {\n    return this.stickyTopHeight;\n  }\n  setStickyBottomHeight(height = 0) {\n    this.comp.setStickyBottomHeight(`${height}px`);\n    this.stickyBottomHeight = height;\n  }\n  getStickyBottomHeight() {\n    return this.stickyBottomHeight;\n  }\n  setStickyWidth(vScrollVisible) {\n    if (!vScrollVisible) {\n      this.comp.setStickyTopWidth(\"100%\");\n      this.comp.setStickyBottomWidth(\"100%\");\n    } else {\n      const scrollbarWidth = this.gos.getScrollbarWidth();\n      this.comp.setStickyTopWidth(`calc(100% - ${scrollbarWidth}px)`);\n      this.comp.setStickyBottomWidth(`calc(100% - ${scrollbarWidth}px)`);\n    }\n  }\n  onHeaderHeightChanged() {\n    this.setStickyTopOffsetTop();\n  }\n  setStickyTopOffsetTop() {\n    const headerCtrl = this.ctrlsService.get(\"gridHeaderCtrl\");\n    const headerHeight = headerCtrl.getHeaderHeight() + this.filterManager.getHeaderHeight();\n    const pinnedTopHeight = this.pinnedRowModel.getPinnedTopTotalHeight();\n    let height = 0;\n    if (headerHeight > 0) {\n      height += headerHeight;\n    }\n    if (pinnedTopHeight > 0) {\n      height += pinnedTopHeight;\n    }\n    if (height > 0) {\n      height += 1;\n    }\n    this.comp.setStickyTopTop(`${height}px`);\n  }\n  setStickyBottomOffsetBottom() {\n    const pinnedBottomHeight = this.pinnedRowModel.getPinnedBottomTotalHeight();\n    const hScrollShowing = this.scrollVisibleService.isHorizontalScrollShowing();\n    const scrollbarWidth = hScrollShowing ? this.gos.getScrollbarWidth() || 0 : 0;\n    const height = pinnedBottomHeight + scrollbarWidth;\n    this.comp.setStickyBottomBottom(`${height}px`);\n  }\n  // method will call itself if no available width. this covers if the grid\n  // isn't visible, but is just about to be visible.\n  sizeColumnsToFit(params, nextTimeout) {\n    const removeScrollWidth = this.isVerticalScrollShowing();\n    const scrollWidthToRemove = removeScrollWidth ? this.gos.getScrollbarWidth() : 0;\n    const bodyViewportWidth = getInnerWidth(this.eGridBody);\n    const availableWidth = bodyViewportWidth - scrollWidthToRemove;\n    if (availableWidth > 0) {\n      this.columnModel.sizeColumnsToFit(availableWidth, \"sizeColumnsToFit\", false, params);\n      return;\n    }\n    if (nextTimeout === void 0) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFit(params, 100);\n      }, 0);\n    } else if (nextTimeout === 100) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFit(params, 500);\n      }, 100);\n    } else if (nextTimeout === 500) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFit(params, -1);\n      }, 500);\n    } else {\n      console.warn(\"AG Grid: tried to call sizeColumnsToFit() but the grid is coming back with zero width, maybe the grid is not visible yet on the screen?\");\n    }\n  }\n  // + rangeService\n  addScrollEventListener(listener) {\n    this.eBodyViewport.addEventListener(\"scroll\", listener, { passive: true });\n  }\n  // + focusService\n  removeScrollEventListener(listener) {\n    this.eBodyViewport.removeEventListener(\"scroll\", listener);\n  }\n};\n__decorateClass([\n  Autowired(\"animationFrameService\")\n], GridBodyCtrl.prototype, \"animationFrameService\", 2);\n__decorateClass([\n  Autowired(\"rowContainerHeightService\")\n], GridBodyCtrl.prototype, \"rowContainerHeightService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], GridBodyCtrl.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], GridBodyCtrl.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"scrollVisibleService\")\n], GridBodyCtrl.prototype, \"scrollVisibleService\", 2);\n__decorateClass([\n  Autowired(\"menuService\")\n], GridBodyCtrl.prototype, \"menuService\", 2);\n__decorateClass([\n  Autowired(\"headerNavigationService\")\n], GridBodyCtrl.prototype, \"headerNavigationService\", 2);\n__decorateClass([\n  Autowired(\"dragAndDropService\")\n], GridBodyCtrl.prototype, \"dragAndDropService\", 2);\n__decorateClass([\n  Autowired(\"pinnedRowModel\")\n], GridBodyCtrl.prototype, \"pinnedRowModel\", 2);\n__decorateClass([\n  Autowired(\"rowRenderer\")\n], GridBodyCtrl.prototype, \"rowRenderer\", 2);\n__decorateClass([\n  Autowired(\"popupService\")\n], GridBodyCtrl.prototype, \"popupService\", 2);\n__decorateClass([\n  Autowired(\"mouseEventService\")\n], GridBodyCtrl.prototype, \"mouseEventService\", 2);\n__decorateClass([\n  Autowired(\"rowModel\")\n], GridBodyCtrl.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"filterManager\")\n], GridBodyCtrl.prototype, \"filterManager\", 2);\n\n// community-modules/core/src/interfaces/IRangeService.ts\nvar SelectionHandleType = /* @__PURE__ */ ((SelectionHandleType2) => {\n  SelectionHandleType2[SelectionHandleType2[\"FILL\"] = 0] = \"FILL\";\n  SelectionHandleType2[SelectionHandleType2[\"RANGE\"] = 1] = \"RANGE\";\n  return SelectionHandleType2;\n})(SelectionHandleType || {});\nvar CellRangeType = /* @__PURE__ */ ((CellRangeType2) => {\n  CellRangeType2[CellRangeType2[\"VALUE\"] = 0] = \"VALUE\";\n  CellRangeType2[CellRangeType2[\"DIMENSION\"] = 1] = \"DIMENSION\";\n  return CellRangeType2;\n})(CellRangeType || {});\n\n// community-modules/core/src/rendering/cell/cellRangeFeature.ts\nvar CSS_CELL_RANGE_SELECTED = \"ag-cell-range-selected\";\nvar CSS_CELL_RANGE_CHART = \"ag-cell-range-chart\";\nvar CSS_CELL_RANGE_SINGLE_CELL = \"ag-cell-range-single-cell\";\nvar CSS_CELL_RANGE_CHART_CATEGORY = \"ag-cell-range-chart-category\";\nvar CSS_CELL_RANGE_HANDLE = \"ag-cell-range-handle\";\nvar CSS_CELL_RANGE_TOP = \"ag-cell-range-top\";\nvar CSS_CELL_RANGE_RIGHT = \"ag-cell-range-right\";\nvar CSS_CELL_RANGE_BOTTOM = \"ag-cell-range-bottom\";\nvar CSS_CELL_RANGE_LEFT = \"ag-cell-range-left\";\nvar CellRangeFeature = class {\n  constructor(beans, ctrl) {\n    this.beans = beans;\n    this.rangeService = beans.rangeService;\n    this.selectionHandleFactory = beans.selectionHandleFactory;\n    this.cellCtrl = ctrl;\n  }\n  setComp(cellComp, eGui) {\n    this.cellComp = cellComp;\n    this.eGui = eGui;\n    this.onRangeSelectionChanged();\n  }\n  onRangeSelectionChanged() {\n    if (!this.cellComp) {\n      return;\n    }\n    this.rangeCount = this.rangeService.getCellRangeCount(this.cellCtrl.getCellPosition());\n    this.hasChartRange = this.getHasChartRange();\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SELECTED, this.rangeCount !== 0);\n    this.cellComp.addOrRemoveCssClass(`${CSS_CELL_RANGE_SELECTED}-1`, this.rangeCount === 1);\n    this.cellComp.addOrRemoveCssClass(`${CSS_CELL_RANGE_SELECTED}-2`, this.rangeCount === 2);\n    this.cellComp.addOrRemoveCssClass(`${CSS_CELL_RANGE_SELECTED}-3`, this.rangeCount === 3);\n    this.cellComp.addOrRemoveCssClass(`${CSS_CELL_RANGE_SELECTED}-4`, this.rangeCount >= 4);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_CHART, this.hasChartRange);\n    setAriaSelected(this.eGui, this.rangeCount > 0 ? true : void 0);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SINGLE_CELL, this.isSingleCell());\n    this.updateRangeBorders();\n    this.refreshHandle();\n  }\n  updateRangeBorders() {\n    const rangeBorders = this.getRangeBorders();\n    const isSingleCell = this.isSingleCell();\n    const isTop = !isSingleCell && rangeBorders.top;\n    const isRight = !isSingleCell && rangeBorders.right;\n    const isBottom = !isSingleCell && rangeBorders.bottom;\n    const isLeft = !isSingleCell && rangeBorders.left;\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_TOP, isTop);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_RIGHT, isRight);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_BOTTOM, isBottom);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_LEFT, isLeft);\n  }\n  isSingleCell() {\n    const { rangeService } = this.beans;\n    return this.rangeCount === 1 && !!rangeService && !rangeService.isMoreThanOneCell();\n  }\n  getHasChartRange() {\n    const { rangeService } = this.beans;\n    if (!this.rangeCount || !rangeService) {\n      return false;\n    }\n    const cellRanges = rangeService.getCellRanges();\n    return cellRanges.length > 0 && cellRanges.every((range) => includes([1 /* DIMENSION */, 0 /* VALUE */], range.type));\n  }\n  updateRangeBordersIfRangeCount() {\n    if (this.rangeCount > 0) {\n      this.updateRangeBorders();\n      this.refreshHandle();\n    }\n  }\n  getRangeBorders() {\n    const isRtl = this.beans.gos.get(\"enableRtl\");\n    let top = false;\n    let right = false;\n    let bottom = false;\n    let left = false;\n    const thisCol = this.cellCtrl.getCellPosition().column;\n    const columnModel = this.beans.columnModel;\n    let leftCol;\n    let rightCol;\n    if (isRtl) {\n      leftCol = columnModel.getDisplayedColAfter(thisCol);\n      rightCol = columnModel.getDisplayedColBefore(thisCol);\n    } else {\n      leftCol = columnModel.getDisplayedColBefore(thisCol);\n      rightCol = columnModel.getDisplayedColAfter(thisCol);\n    }\n    const ranges = this.rangeService.getCellRanges().filter(\n      (range) => this.rangeService.isCellInSpecificRange(this.cellCtrl.getCellPosition(), range)\n    );\n    if (!leftCol) {\n      left = true;\n    }\n    if (!rightCol) {\n      right = true;\n    }\n    for (let i = 0; i < ranges.length; i++) {\n      if (top && right && bottom && left) {\n        break;\n      }\n      const range = ranges[i];\n      const startRow = this.rangeService.getRangeStartRow(range);\n      const endRow = this.rangeService.getRangeEndRow(range);\n      if (!top && this.beans.rowPositionUtils.sameRow(startRow, this.cellCtrl.getCellPosition())) {\n        top = true;\n      }\n      if (!bottom && this.beans.rowPositionUtils.sameRow(endRow, this.cellCtrl.getCellPosition())) {\n        bottom = true;\n      }\n      if (!left && leftCol && range.columns.indexOf(leftCol) < 0) {\n        left = true;\n      }\n      if (!right && rightCol && range.columns.indexOf(rightCol) < 0) {\n        right = true;\n      }\n    }\n    return { top, right, bottom, left };\n  }\n  refreshHandle() {\n    if (this.beans.context.isDestroyed()) {\n      return;\n    }\n    const shouldHaveSelectionHandle = this.shouldHaveSelectionHandle();\n    if (this.selectionHandle && !shouldHaveSelectionHandle) {\n      this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle);\n    }\n    if (shouldHaveSelectionHandle) {\n      this.addSelectionHandle();\n    }\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_HANDLE, !!this.selectionHandle);\n  }\n  shouldHaveSelectionHandle() {\n    const gos = this.beans.gos;\n    const cellRanges = this.rangeService.getCellRanges();\n    const rangesLen = cellRanges.length;\n    if (this.rangeCount < 1 || rangesLen < 1) {\n      return false;\n    }\n    const cellRange = last(cellRanges);\n    const cellPosition = this.cellCtrl.getCellPosition();\n    const isFillHandleAvailable = gos.get(\"enableFillHandle\") && !this.cellCtrl.isSuppressFillHandle();\n    const isRangeHandleAvailable = gos.get(\"enableRangeHandle\");\n    let handleIsAvailable = rangesLen === 1 && !this.cellCtrl.isEditing() && (isFillHandleAvailable || isRangeHandleAvailable);\n    if (this.hasChartRange) {\n      const hasCategoryRange = cellRanges[0].type === 1 /* DIMENSION */;\n      const isCategoryCell = hasCategoryRange && this.rangeService.isCellInSpecificRange(cellPosition, cellRanges[0]);\n      this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_CHART_CATEGORY, isCategoryCell);\n      handleIsAvailable = cellRange.type === 0 /* VALUE */;\n    }\n    return handleIsAvailable && cellRange.endRow != null && this.rangeService.isContiguousRange(cellRange) && this.rangeService.isBottomRightCell(cellRange, cellPosition);\n  }\n  addSelectionHandle() {\n    const gos = this.beans.gos;\n    const cellRangeType = last(this.rangeService.getCellRanges()).type;\n    const selectionHandleFill = gos.get(\"enableFillHandle\") && missing(cellRangeType);\n    const type = selectionHandleFill ? 0 /* FILL */ : 1 /* RANGE */;\n    if (this.selectionHandle && this.selectionHandle.getType() !== type) {\n      this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle);\n    }\n    if (!this.selectionHandle) {\n      this.selectionHandle = this.selectionHandleFactory.createSelectionHandle(type);\n    }\n    this.selectionHandle.refresh(this.cellCtrl);\n  }\n  destroy() {\n    this.beans.context.destroyBean(this.selectionHandle);\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellPositionFeature.ts\nvar CellPositionFeature = class extends BeanStub {\n  constructor(ctrl, beans) {\n    super();\n    this.cellCtrl = ctrl;\n    this.beans = beans;\n    this.column = ctrl.getColumn();\n    this.rowNode = ctrl.getRowNode();\n  }\n  setupRowSpan() {\n    this.rowSpan = this.column.getRowSpan(this.rowNode);\n    this.addManagedListener(this.beans.eventService, Events.EVENT_NEW_COLUMNS_LOADED, () => this.onNewColumnsLoaded());\n  }\n  setComp(eGui) {\n    this.eGui = eGui;\n    this.setupColSpan();\n    this.setupRowSpan();\n    this.onLeftChanged();\n    this.onWidthChanged();\n    this.applyRowSpan();\n  }\n  onNewColumnsLoaded() {\n    const rowSpan = this.column.getRowSpan(this.rowNode);\n    if (this.rowSpan === rowSpan) {\n      return;\n    }\n    this.rowSpan = rowSpan;\n    this.applyRowSpan(true);\n  }\n  onDisplayColumnsChanged() {\n    const colsSpanning = this.getColSpanningList();\n    if (!areEqual(this.colsSpanning, colsSpanning)) {\n      this.colsSpanning = colsSpanning;\n      this.onWidthChanged();\n      this.onLeftChanged();\n    }\n  }\n  setupColSpan() {\n    if (this.column.getColDef().colSpan == null) {\n      return;\n    }\n    this.colsSpanning = this.getColSpanningList();\n    this.addManagedListener(this.beans.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayColumnsChanged.bind(this));\n    this.addManagedListener(this.beans.eventService, Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onWidthChanged.bind(this));\n  }\n  onWidthChanged() {\n    if (!this.eGui) {\n      return;\n    }\n    const width = this.getCellWidth();\n    this.eGui.style.width = `${width}px`;\n  }\n  getCellWidth() {\n    if (!this.colsSpanning) {\n      return this.column.getActualWidth();\n    }\n    return this.colsSpanning.reduce((width, col) => width + col.getActualWidth(), 0);\n  }\n  getColSpanningList() {\n    const colSpan = this.column.getColSpan(this.rowNode);\n    const colsSpanning = [];\n    if (colSpan === 1) {\n      colsSpanning.push(this.column);\n    } else {\n      let pointer = this.column;\n      const pinned = this.column.getPinned();\n      for (let i = 0; pointer && i < colSpan; i++) {\n        colsSpanning.push(pointer);\n        pointer = this.beans.columnModel.getDisplayedColAfter(pointer);\n        if (!pointer || missing(pointer)) {\n          break;\n        }\n        if (pinned !== pointer.getPinned()) {\n          break;\n        }\n      }\n    }\n    return colsSpanning;\n  }\n  onLeftChanged() {\n    if (!this.eGui) {\n      return;\n    }\n    const left = this.modifyLeftForPrintLayout(this.getCellLeft());\n    this.eGui.style.left = left + \"px\";\n  }\n  getCellLeft() {\n    let mostLeftCol;\n    if (this.beans.gos.get(\"enableRtl\") && this.colsSpanning) {\n      mostLeftCol = last(this.colsSpanning);\n    } else {\n      mostLeftCol = this.column;\n    }\n    return mostLeftCol.getLeft();\n  }\n  modifyLeftForPrintLayout(leftPosition) {\n    if (!this.cellCtrl.isPrintLayout() || this.column.getPinned() === \"left\") {\n      return leftPosition;\n    }\n    const leftWidth = this.beans.columnModel.getDisplayedColumnsLeftWidth();\n    if (this.column.getPinned() === \"right\") {\n      const bodyWidth = this.beans.columnModel.getBodyContainerWidth();\n      return leftWidth + bodyWidth + (leftPosition || 0);\n    }\n    return leftWidth + (leftPosition || 0);\n  }\n  applyRowSpan(force) {\n    if (this.rowSpan === 1 && !force) {\n      return;\n    }\n    const singleRowHeight = this.beans.gos.getRowHeightAsNumber();\n    const totalRowHeight = singleRowHeight * this.rowSpan;\n    this.eGui.style.height = `${totalRowHeight}px`;\n    this.eGui.style.zIndex = \"1\";\n  }\n  // overriding to make public, as we don't dispose this bean via context\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellCustomStyleFeature.ts\nvar CellCustomStyleFeature = class extends BeanStub {\n  constructor(ctrl, beans) {\n    super();\n    this.staticClasses = [];\n    this.cellCtrl = ctrl;\n    this.beans = beans;\n    this.column = ctrl.getColumn();\n    this.rowNode = ctrl.getRowNode();\n  }\n  setComp(comp) {\n    this.cellComp = comp;\n    this.applyUserStyles();\n    this.applyCellClassRules();\n    this.applyClassesFromColDef();\n  }\n  applyCellClassRules() {\n    const colDef = this.column.getColDef();\n    const { cellClassRules } = colDef;\n    const cellClassParams = this.beans.gos.addGridCommonParams({\n      value: this.cellCtrl.getValue(),\n      data: this.rowNode.data,\n      node: this.rowNode,\n      colDef,\n      column: this.column,\n      rowIndex: this.rowNode.rowIndex\n    });\n    this.beans.stylingService.processClassRules(\n      // if current was previous, skip\n      cellClassRules === this.cellClassRules ? void 0 : this.cellClassRules,\n      cellClassRules,\n      cellClassParams,\n      (className) => this.cellComp.addOrRemoveCssClass(className, true),\n      (className) => this.cellComp.addOrRemoveCssClass(className, false)\n    );\n    this.cellClassRules = cellClassRules;\n  }\n  applyUserStyles() {\n    const colDef = this.column.getColDef();\n    if (!colDef.cellStyle) {\n      return;\n    }\n    let styles;\n    if (typeof colDef.cellStyle === \"function\") {\n      const cellStyleParams = this.beans.gos.addGridCommonParams({\n        column: this.column,\n        value: this.cellCtrl.getValue(),\n        colDef,\n        data: this.rowNode.data,\n        node: this.rowNode,\n        rowIndex: this.rowNode.rowIndex\n      });\n      const cellStyleFunc = colDef.cellStyle;\n      styles = cellStyleFunc(cellStyleParams);\n    } else {\n      styles = colDef.cellStyle;\n    }\n    if (styles) {\n      this.cellComp.setUserStyles(styles);\n    }\n  }\n  applyClassesFromColDef() {\n    const colDef = this.column.getColDef();\n    const cellClassParams = this.beans.gos.addGridCommonParams({\n      value: this.cellCtrl.getValue(),\n      data: this.rowNode.data,\n      node: this.rowNode,\n      column: this.column,\n      colDef,\n      rowIndex: this.rowNode.rowIndex\n    });\n    if (this.staticClasses.length) {\n      this.staticClasses.forEach((className) => this.cellComp.addOrRemoveCssClass(className, false));\n    }\n    this.staticClasses = this.beans.stylingService.getStaticCellClasses(colDef, cellClassParams);\n    if (this.staticClasses.length) {\n      this.staticClasses.forEach((className) => this.cellComp.addOrRemoveCssClass(className, true));\n    }\n  }\n  // overriding to make public, as we don't dispose this bean via context\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/beans.ts\nvar Beans = class {\n  postConstruct() {\n    if (this.gos.isRowModelType(\"clientSide\")) {\n      this.clientSideRowModel = this.rowModel;\n    }\n    if (this.gos.isRowModelType(\"serverSide\")) {\n      this.serverSideRowModel = this.rowModel;\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"resizeObserverService\")\n], Beans.prototype, \"resizeObserverService\", 2);\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], Beans.prototype, \"paginationProxy\", 2);\n__decorateClass([\n  Autowired(\"context\")\n], Beans.prototype, \"context\", 2);\n__decorateClass([\n  Autowired(\"gridOptionsService\")\n], Beans.prototype, \"gos\", 2);\n__decorateClass([\n  Autowired(\"environment\")\n], Beans.prototype, \"environment\", 2);\n__decorateClass([\n  Autowired(\"rowRenderer\")\n], Beans.prototype, \"rowRenderer\", 2);\n__decorateClass([\n  Autowired(\"valueService\")\n], Beans.prototype, \"valueService\", 2);\n__decorateClass([\n  Autowired(\"eventService\")\n], Beans.prototype, \"eventService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], Beans.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"headerNavigationService\")\n], Beans.prototype, \"headerNavigationService\", 2);\n__decorateClass([\n  Autowired(\"navigationService\")\n], Beans.prototype, \"navigationService\", 2);\n__decorateClass([\n  Autowired(\"columnAnimationService\")\n], Beans.prototype, \"columnAnimationService\", 2);\n__decorateClass([\n  Autowired(\"focusService\")\n], Beans.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"popupService\")\n], Beans.prototype, \"popupService\", 2);\n__decorateClass([\n  Autowired(\"stylingService\")\n], Beans.prototype, \"stylingService\", 2);\n__decorateClass([\n  Autowired(\"columnHoverService\")\n], Beans.prototype, \"columnHoverService\", 2);\n__decorateClass([\n  Autowired(\"userComponentFactory\")\n], Beans.prototype, \"userComponentFactory\", 2);\n__decorateClass([\n  Autowired(\"userComponentRegistry\")\n], Beans.prototype, \"userComponentRegistry\", 2);\n__decorateClass([\n  Autowired(\"animationFrameService\")\n], Beans.prototype, \"animationFrameService\", 2);\n__decorateClass([\n  Autowired(\"dragService\")\n], Beans.prototype, \"dragService\", 2);\n__decorateClass([\n  Autowired(\"dragAndDropService\")\n], Beans.prototype, \"dragAndDropService\", 2);\n__decorateClass([\n  Autowired(\"sortController\")\n], Beans.prototype, \"sortController\", 2);\n__decorateClass([\n  Autowired(\"filterManager\")\n], Beans.prototype, \"filterManager\", 2);\n__decorateClass([\n  Autowired(\"rowContainerHeightService\")\n], Beans.prototype, \"rowContainerHeightService\", 2);\n__decorateClass([\n  Autowired(\"frameworkOverrides\")\n], Beans.prototype, \"frameworkOverrides\", 2);\n__decorateClass([\n  Autowired(\"cellPositionUtils\")\n], Beans.prototype, \"cellPositionUtils\", 2);\n__decorateClass([\n  Autowired(\"rowPositionUtils\")\n], Beans.prototype, \"rowPositionUtils\", 2);\n__decorateClass([\n  Autowired(\"selectionService\")\n], Beans.prototype, \"selectionService\", 2);\n__decorateClass([\n  Autowired(\"rowCssClassCalculator\")\n], Beans.prototype, \"rowCssClassCalculator\", 2);\n__decorateClass([\n  Autowired(\"rowModel\")\n], Beans.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], Beans.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsFactory\")\n], Beans.prototype, \"ctrlsFactory\", 2);\n__decorateClass([\n  Autowired(\"agStackComponentsRegistry\")\n], Beans.prototype, \"agStackComponentsRegistry\", 2);\n__decorateClass([\n  Autowired(\"valueCache\")\n], Beans.prototype, \"valueCache\", 2);\n__decorateClass([\n  Autowired(\"rowNodeEventThrottle\")\n], Beans.prototype, \"rowNodeEventThrottle\", 2);\n__decorateClass([\n  Autowired(\"localeService\")\n], Beans.prototype, \"localeService\", 2);\n__decorateClass([\n  Autowired(\"syncService\")\n], Beans.prototype, \"syncService\", 2);\n__decorateClass([\n  Autowired(\"ariaAnnouncementService\")\n], Beans.prototype, \"ariaAnnouncementService\", 2);\n__decorateClass([\n  Optional(\"rangeService\")\n], Beans.prototype, \"rangeService\", 2);\n__decorateClass([\n  Optional(\"selectionHandleFactory\")\n], Beans.prototype, \"selectionHandleFactory\", 2);\n__decorateClass([\n  PostConstruct\n], Beans.prototype, \"postConstruct\", 1);\nBeans = __decorateClass([\n  Bean(\"beans\")\n], Beans);\n\n// community-modules/core/src/rendering/cell/cellMouseListenerFeature.ts\nvar CellMouseListenerFeature = class extends Beans {\n  constructor(ctrl, beans, column) {\n    super();\n    this.cellCtrl = ctrl;\n    this.beans = beans;\n    this.column = column;\n  }\n  onMouseEvent(eventName, mouseEvent) {\n    if (isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    switch (eventName) {\n      case \"click\":\n        this.onCellClicked(mouseEvent);\n        break;\n      case \"mousedown\":\n      case \"touchstart\":\n        this.onMouseDown(mouseEvent);\n        break;\n      case \"dblclick\":\n        this.onCellDoubleClicked(mouseEvent);\n        break;\n      case \"mouseout\":\n        this.onMouseOut(mouseEvent);\n        break;\n      case \"mouseover\":\n        this.onMouseOver(mouseEvent);\n        break;\n    }\n  }\n  onCellClicked(mouseEvent) {\n    if (this.isDoubleClickOnIPad()) {\n      this.onCellDoubleClicked(mouseEvent);\n      mouseEvent.preventDefault();\n      return;\n    }\n    const { eventService, rangeService, gos } = this.beans;\n    const isMultiKey = mouseEvent.ctrlKey || mouseEvent.metaKey;\n    if (rangeService && isMultiKey) {\n      if (rangeService.getCellRangeCount(this.cellCtrl.getCellPosition()) > 1) {\n        rangeService.intersectLastRange(true);\n      }\n    }\n    const cellClickedEvent = this.cellCtrl.createEvent(mouseEvent, Events.EVENT_CELL_CLICKED);\n    eventService.dispatchEvent(cellClickedEvent);\n    const colDef = this.column.getColDef();\n    if (colDef.onCellClicked) {\n      window.setTimeout(() => {\n        this.beans.frameworkOverrides.wrapOutgoing(() => {\n          colDef.onCellClicked(cellClickedEvent);\n        });\n      }, 0);\n    }\n    const editOnSingleClick = (gos.get(\"singleClickEdit\") || colDef.singleClickEdit) && !gos.get(\"suppressClickEdit\");\n    if (editOnSingleClick && !(mouseEvent.shiftKey && (rangeService == null ? void 0 : rangeService.getCellRanges().length) != 0)) {\n      this.cellCtrl.startRowOrCellEdit();\n    }\n  }\n  // returns true if on iPad and this is second 'click' event in 200ms\n  isDoubleClickOnIPad() {\n    if (!isIOSUserAgent() || isEventSupported(\"dblclick\")) {\n      return false;\n    }\n    const nowMillis = (/* @__PURE__ */ new Date()).getTime();\n    const res = nowMillis - this.lastIPadMouseClickEvent < 200;\n    this.lastIPadMouseClickEvent = nowMillis;\n    return res;\n  }\n  onCellDoubleClicked(mouseEvent) {\n    const colDef = this.column.getColDef();\n    const cellDoubleClickedEvent = this.cellCtrl.createEvent(mouseEvent, Events.EVENT_CELL_DOUBLE_CLICKED);\n    this.beans.eventService.dispatchEvent(cellDoubleClickedEvent);\n    if (typeof colDef.onCellDoubleClicked === \"function\") {\n      window.setTimeout(() => {\n        this.beans.frameworkOverrides.wrapOutgoing(() => {\n          colDef.onCellDoubleClicked(cellDoubleClickedEvent);\n        });\n      }, 0);\n    }\n    const editOnDoubleClick = !this.beans.gos.get(\"singleClickEdit\") && !this.beans.gos.get(\"suppressClickEdit\");\n    if (editOnDoubleClick) {\n      this.cellCtrl.startRowOrCellEdit(null, mouseEvent);\n    }\n  }\n  onMouseDown(mouseEvent) {\n    const { ctrlKey, metaKey, shiftKey } = mouseEvent;\n    const target = mouseEvent.target;\n    const { cellCtrl, beans } = this;\n    const { eventService, rangeService, focusService } = beans;\n    if (this.isRightClickInExistingRange(mouseEvent)) {\n      return;\n    }\n    const ranges = rangeService && rangeService.getCellRanges().length != 0;\n    if (!shiftKey || !ranges) {\n      const forceBrowserFocus = isBrowserSafari() && !cellCtrl.isEditing() && !isFocusableFormField(target);\n      cellCtrl.focusCell(forceBrowserFocus);\n    }\n    if (shiftKey && ranges && !focusService.isCellFocused(cellCtrl.getCellPosition())) {\n      mouseEvent.preventDefault();\n      const focusedCellPosition = focusService.getFocusedCell();\n      if (focusedCellPosition) {\n        const { column, rowIndex, rowPinned } = focusedCellPosition;\n        const focusedRowCtrl = beans.rowRenderer.getRowByPosition({ rowIndex, rowPinned });\n        const focusedCellCtrl = focusedRowCtrl == null ? void 0 : focusedRowCtrl.getCellCtrl(column);\n        if (focusedCellCtrl == null ? void 0 : focusedCellCtrl.isEditing()) {\n          focusedCellCtrl.stopEditing();\n        }\n        focusService.setFocusedCell({\n          column,\n          rowIndex,\n          rowPinned,\n          forceBrowserFocus: true,\n          preventScrollOnBrowserFocus: true\n        });\n      }\n    }\n    if (this.containsWidget(target)) {\n      return;\n    }\n    if (rangeService) {\n      const thisCell = this.cellCtrl.getCellPosition();\n      if (shiftKey) {\n        rangeService.extendLatestRangeToCell(thisCell);\n      } else {\n        const isMultiKey = ctrlKey || metaKey;\n        rangeService.setRangeToCell(thisCell, isMultiKey);\n      }\n    }\n    eventService.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, Events.EVENT_CELL_MOUSE_DOWN));\n  }\n  isRightClickInExistingRange(mouseEvent) {\n    const { rangeService } = this.beans;\n    if (rangeService) {\n      const cellInRange = rangeService.isCellInAnyRange(this.cellCtrl.getCellPosition());\n      const isRightClick = mouseEvent.button === 2 || mouseEvent.ctrlKey && this.beans.gos.get(\"allowContextMenuWithControlKey\");\n      if (cellInRange && isRightClick) {\n        return true;\n      }\n    }\n    return false;\n  }\n  containsWidget(target) {\n    return isElementChildOfClass(target, \"ag-selection-checkbox\", 3);\n  }\n  onMouseOut(mouseEvent) {\n    if (this.mouseStayingInsideCell(mouseEvent)) {\n      return;\n    }\n    const cellMouseOutEvent = this.cellCtrl.createEvent(mouseEvent, Events.EVENT_CELL_MOUSE_OUT);\n    this.beans.eventService.dispatchEvent(cellMouseOutEvent);\n    this.beans.columnHoverService.clearMouseOver();\n  }\n  onMouseOver(mouseEvent) {\n    if (this.mouseStayingInsideCell(mouseEvent)) {\n      return;\n    }\n    const cellMouseOverEvent = this.cellCtrl.createEvent(mouseEvent, Events.EVENT_CELL_MOUSE_OVER);\n    this.beans.eventService.dispatchEvent(cellMouseOverEvent);\n    this.beans.columnHoverService.setMouseOver([this.column]);\n  }\n  mouseStayingInsideCell(e) {\n    if (!e.target || !e.relatedTarget) {\n      return false;\n    }\n    const eGui = this.cellCtrl.getGui();\n    const cellContainsTarget = eGui.contains(e.target);\n    const cellContainsRelatedTarget = eGui.contains(e.relatedTarget);\n    return cellContainsTarget && cellContainsRelatedTarget;\n  }\n  destroy() {\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellKeyboardListenerFeature.ts\nvar CellKeyboardListenerFeature = class extends BeanStub {\n  constructor(ctrl, beans, column, rowNode, rowCtrl) {\n    super();\n    this.cellCtrl = ctrl;\n    this.beans = beans;\n    this.rowNode = rowNode;\n    this.rowCtrl = rowCtrl;\n  }\n  setComp(eGui) {\n    this.eGui = eGui;\n  }\n  onKeyDown(event) {\n    const key = event.key;\n    switch (key) {\n      case KeyCode.ENTER:\n        this.onEnterKeyDown(event);\n        break;\n      case KeyCode.F2:\n        this.onF2KeyDown(event);\n        break;\n      case KeyCode.ESCAPE:\n        this.onEscapeKeyDown(event);\n        break;\n      case KeyCode.TAB:\n        this.onTabKeyDown(event);\n        break;\n      case KeyCode.BACKSPACE:\n      case KeyCode.DELETE:\n        this.onBackspaceOrDeleteKeyDown(key, event);\n        break;\n      case KeyCode.DOWN:\n      case KeyCode.UP:\n      case KeyCode.RIGHT:\n      case KeyCode.LEFT:\n        this.onNavigationKeyDown(event, key);\n        break;\n    }\n  }\n  onNavigationKeyDown(event, key) {\n    if (this.cellCtrl.isEditing()) {\n      return;\n    }\n    if (event.shiftKey && this.cellCtrl.isRangeSelectionEnabled()) {\n      this.onShiftRangeSelect(event);\n    } else {\n      this.beans.navigationService.navigateToNextCell(event, key, this.cellCtrl.getCellPosition(), true);\n    }\n    event.preventDefault();\n  }\n  onShiftRangeSelect(event) {\n    if (!this.beans.rangeService) {\n      return;\n    }\n    const endCell = this.beans.rangeService.extendLatestRangeInDirection(event);\n    if (endCell) {\n      this.beans.navigationService.ensureCellVisible(endCell);\n    }\n  }\n  onTabKeyDown(event) {\n    this.beans.navigationService.onTabKeyDown(this.cellCtrl, event);\n  }\n  onBackspaceOrDeleteKeyDown(key, event) {\n    var _a;\n    const { cellCtrl, beans, rowNode } = this;\n    const { gos, rangeService, eventService } = beans;\n    if (cellCtrl.isEditing()) {\n      return;\n    }\n    eventService.dispatchEvent({ type: Events.EVENT_KEY_SHORTCUT_CHANGED_CELL_START });\n    if (isDeleteKey(key, gos.get(\"enableCellEditingOnBackspace\"))) {\n      if (rangeService && gos.get(\"enableRangeSelection\")) {\n        rangeService.clearCellRangeCellValues({ dispatchWrapperEvents: true, wrapperEventSource: \"deleteKey\" });\n      } else if (cellCtrl.isCellEditable()) {\n        const column = cellCtrl.getColumn();\n        const emptyValue = (_a = this.beans.valueService.parseValue(column, rowNode, \"\", rowNode.getValueFromValueService(column))) != null ? _a : null;\n        rowNode.setDataValue(column, emptyValue, \"cellClear\");\n      }\n    } else {\n      cellCtrl.startRowOrCellEdit(key, event);\n    }\n    eventService.dispatchEvent({ type: Events.EVENT_KEY_SHORTCUT_CHANGED_CELL_END });\n  }\n  onEnterKeyDown(e) {\n    if (this.cellCtrl.isEditing() || this.rowCtrl.isEditing()) {\n      this.cellCtrl.stopEditingAndFocus(false, e.shiftKey);\n    } else {\n      if (this.beans.gos.get(\"enterNavigatesVertically\")) {\n        const key = e.shiftKey ? KeyCode.UP : KeyCode.DOWN;\n        this.beans.navigationService.navigateToNextCell(null, key, this.cellCtrl.getCellPosition(), false);\n      } else {\n        this.cellCtrl.startRowOrCellEdit(KeyCode.ENTER, e);\n        if (this.cellCtrl.isEditing()) {\n          e.preventDefault();\n        }\n      }\n    }\n  }\n  onF2KeyDown(event) {\n    if (!this.cellCtrl.isEditing()) {\n      this.cellCtrl.startRowOrCellEdit(KeyCode.F2, event);\n    }\n  }\n  onEscapeKeyDown(event) {\n    if (this.cellCtrl.isEditing()) {\n      this.cellCtrl.stopRowOrCellEdit(true);\n      this.cellCtrl.focusCell(true);\n    }\n  }\n  processCharacter(event) {\n    const eventTarget = event.target;\n    const eventOnChildComponent = eventTarget !== this.eGui;\n    if (eventOnChildComponent || this.cellCtrl.isEditing()) {\n      return;\n    }\n    const key = event.key;\n    if (key === \" \") {\n      this.onSpaceKeyDown(event);\n    } else {\n      this.cellCtrl.startRowOrCellEdit(key, event);\n      event.preventDefault();\n    }\n  }\n  onSpaceKeyDown(event) {\n    const { gos } = this.beans;\n    if (!this.cellCtrl.isEditing() && gos.isRowSelection()) {\n      const currentSelection = this.rowNode.isSelected();\n      const newSelection = !currentSelection;\n      if (newSelection || !gos.get(\"suppressRowDeselection\")) {\n        const groupSelectsFiltered = this.beans.gos.get(\"groupSelectsFiltered\");\n        const updatedCount = this.rowNode.setSelectedParams({\n          newValue: newSelection,\n          rangeSelect: event.shiftKey,\n          groupSelectsFiltered,\n          event,\n          source: \"spaceKey\"\n        });\n        if (currentSelection === void 0 && updatedCount === 0) {\n          this.rowNode.setSelectedParams({\n            newValue: false,\n            rangeSelect: event.shiftKey,\n            groupSelectsFiltered,\n            event,\n            source: \"spaceKey\"\n          });\n        }\n      }\n    }\n    event.preventDefault();\n  }\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/dndSourceComp.ts\nvar DndSourceComp = class extends Component {\n  constructor(rowNode, column, eCell) {\n    super(\n      /* html */\n      `<div class=\"ag-drag-handle ag-row-drag\" draggable=\"true\"></div>`\n    );\n    this.rowNode = rowNode;\n    this.column = column;\n    this.eCell = eCell;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    eGui.appendChild(createIconNoSpan(\"rowDrag\", this.gos, null));\n    this.addGuiEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n    });\n    this.addDragSource();\n    this.checkVisibility();\n  }\n  addDragSource() {\n    this.addGuiEventListener(\"dragstart\", this.onDragStart.bind(this));\n  }\n  onDragStart(dragEvent) {\n    const providedOnRowDrag = this.column.getColDef().dndSourceOnRowDrag;\n    dragEvent.dataTransfer.setDragImage(this.eCell, 0, 0);\n    const defaultOnRowDrag = () => {\n      try {\n        const jsonData = JSON.stringify(this.rowNode.data);\n        dragEvent.dataTransfer.setData(\"application/json\", jsonData);\n        dragEvent.dataTransfer.setData(\"text/plain\", jsonData);\n      } catch (e) {\n      }\n    };\n    if (providedOnRowDrag) {\n      const params = this.gos.addGridCommonParams({\n        rowNode: this.rowNode,\n        dragEvent\n      });\n      providedOnRowDrag(params);\n    } else {\n      defaultOnRowDrag();\n    }\n  }\n  checkVisibility() {\n    const visible = this.column.isDndSource(this.rowNode);\n    this.setDisplayed(visible);\n  }\n};\n__decorateClass([\n  PostConstruct\n], DndSourceComp.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/headerRendering/cells/cssClassApplier.ts\nvar CSS_FIRST_COLUMN = \"ag-column-first\";\nvar CSS_LAST_COLUMN = \"ag-column-last\";\nvar CssClassApplier = class {\n  static getHeaderClassesFromColDef(abstractColDef, gos, column, columnGroup) {\n    if (missing(abstractColDef)) {\n      return [];\n    }\n    return this.getColumnClassesFromCollDef(\n      abstractColDef.headerClass,\n      abstractColDef,\n      gos,\n      column,\n      columnGroup\n    );\n  }\n  static getToolPanelClassesFromColDef(abstractColDef, gos, column, columnGroup) {\n    if (missing(abstractColDef)) {\n      return [];\n    }\n    return this.getColumnClassesFromCollDef(\n      abstractColDef.toolPanelClass,\n      abstractColDef,\n      gos,\n      column,\n      columnGroup\n    );\n  }\n  static refreshFirstAndLastStyles(comp, column, columnModel) {\n    comp.addOrRemoveCssClass(CSS_FIRST_COLUMN, columnModel.isColumnAtEdge(column, \"first\"));\n    comp.addOrRemoveCssClass(CSS_LAST_COLUMN, columnModel.isColumnAtEdge(column, \"last\"));\n  }\n  static getClassParams(abstractColDef, gos, column, columnGroup) {\n    return gos.addGridCommonParams({\n      // bad naming, as colDef here can be a group or a column,\n      // however most people won't appreciate the difference,\n      // so keeping it as colDef to avoid confusion.\n      colDef: abstractColDef,\n      column,\n      columnGroup\n    });\n  }\n  static getColumnClassesFromCollDef(classesOrFunc, abstractColDef, gos, column, columnGroup) {\n    if (missing(classesOrFunc)) {\n      return [];\n    }\n    let classToUse;\n    if (typeof classesOrFunc === \"function\") {\n      const params = this.getClassParams(abstractColDef, gos, column, columnGroup);\n      classToUse = classesOrFunc(params);\n    } else {\n      classToUse = classesOrFunc;\n    }\n    if (typeof classToUse === \"string\") {\n      return [classToUse];\n    }\n    if (Array.isArray(classToUse)) {\n      return [...classToUse];\n    }\n    return [];\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellCtrl.ts\nvar CSS_CELL = \"ag-cell\";\nvar CSS_AUTO_HEIGHT = \"ag-cell-auto-height\";\nvar CSS_NORMAL_HEIGHT = \"ag-cell-normal-height\";\nvar CSS_CELL_FOCUS = \"ag-cell-focus\";\nvar CSS_CELL_FIRST_RIGHT_PINNED = \"ag-cell-first-right-pinned\";\nvar CSS_CELL_LAST_LEFT_PINNED = \"ag-cell-last-left-pinned\";\nvar CSS_CELL_NOT_INLINE_EDITING = \"ag-cell-not-inline-editing\";\nvar CSS_COLUMN_HOVER = \"ag-column-hover\";\nvar CSS_CELL_WRAP_TEXT = \"ag-cell-wrap-text\";\nvar instanceIdSequence2 = 0;\nvar _CellCtrl = class _CellCtrl extends BeanStub {\n  constructor(column, rowNode, beans, rowCtrl) {\n    super();\n    this.cellRangeFeature = null;\n    this.cellPositionFeature = null;\n    this.cellCustomStyleFeature = null;\n    this.tooltipFeature = null;\n    this.cellMouseListenerFeature = null;\n    this.cellKeyboardListenerFeature = null;\n    this.suppressRefreshCell = false;\n    this.onCellCompAttachedFuncs = [];\n    this.column = column;\n    this.rowNode = rowNode;\n    this.beans = beans;\n    this.rowCtrl = rowCtrl;\n    this.instanceId = column.getId() + \"-\" + instanceIdSequence2++;\n    this.colIdSanitised = escapeString(this.column.getId());\n    if (!beans.gos.get(\"suppressCellFocus\")) {\n      this.tabIndex = -1;\n    }\n    this.createCellPosition();\n    this.addFeatures();\n    this.updateAndFormatValue(false);\n  }\n  shouldRestoreFocus() {\n    return this.beans.focusService.shouldRestoreFocus(this.cellPosition);\n  }\n  addFeatures() {\n    this.cellPositionFeature = new CellPositionFeature(this, this.beans);\n    this.addDestroyFunc(() => {\n      var _a;\n      (_a = this.cellPositionFeature) == null ? void 0 : _a.destroy();\n      this.cellPositionFeature = null;\n    });\n    this.cellCustomStyleFeature = new CellCustomStyleFeature(this, this.beans);\n    this.addDestroyFunc(() => {\n      var _a;\n      (_a = this.cellCustomStyleFeature) == null ? void 0 : _a.destroy();\n      this.cellCustomStyleFeature = null;\n    });\n    this.cellMouseListenerFeature = new CellMouseListenerFeature(this, this.beans, this.column);\n    this.addDestroyFunc(() => {\n      var _a;\n      (_a = this.cellMouseListenerFeature) == null ? void 0 : _a.destroy();\n      this.cellMouseListenerFeature = null;\n    });\n    this.cellKeyboardListenerFeature = new CellKeyboardListenerFeature(this, this.beans, this.column, this.rowNode, this.rowCtrl);\n    this.addDestroyFunc(() => {\n      var _a;\n      (_a = this.cellKeyboardListenerFeature) == null ? void 0 : _a.destroy();\n      this.cellKeyboardListenerFeature = null;\n    });\n    if (this.column.isTooltipEnabled()) {\n      this.enableTooltipFeature();\n      this.addDestroyFunc(() => {\n        this.disableTooltipFeature();\n      });\n    }\n    const rangeSelectionEnabled = this.beans.rangeService && this.beans.gos.get(\"enableRangeSelection\");\n    if (rangeSelectionEnabled) {\n      this.cellRangeFeature = new CellRangeFeature(this.beans, this);\n      this.addDestroyFunc(() => {\n        var _a;\n        (_a = this.cellRangeFeature) == null ? void 0 : _a.destroy();\n        this.cellRangeFeature = null;\n      });\n    }\n  }\n  enableTooltipFeature(value, shouldDisplayTooltip) {\n    const getTooltipValue = () => {\n      const colDef = this.column.getColDef();\n      const data = this.rowNode.data;\n      if (colDef.tooltipField && exists(data)) {\n        return getValueUsingField(data, colDef.tooltipField, this.column.isTooltipFieldContainsDots());\n      }\n      const valueGetter = colDef.tooltipValueGetter;\n      if (valueGetter) {\n        return valueGetter(this.beans.gos.addGridCommonParams({\n          location: \"cell\",\n          colDef: this.column.getColDef(),\n          column: this.column,\n          rowIndex: this.cellPosition.rowIndex,\n          node: this.rowNode,\n          data: this.rowNode.data,\n          value: this.value,\n          valueFormatted: this.valueFormatted\n        }));\n      }\n      return null;\n    };\n    const isTooltipWhenTruncated = this.beans.gos.get(\"tooltipShowMode\") === \"whenTruncated\";\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !this.isCellRenderer()) {\n      shouldDisplayTooltip = () => {\n        const eGui = this.getGui();\n        const textEl = eGui.children.length === 0 ? eGui : eGui.querySelector(\".ag-cell-value\");\n        if (!textEl) {\n          return true;\n        }\n        return textEl.scrollWidth > textEl.clientWidth;\n      };\n    }\n    const tooltipCtrl = {\n      getColumn: () => this.column,\n      getColDef: () => this.column.getColDef(),\n      getRowIndex: () => this.cellPosition.rowIndex,\n      getRowNode: () => this.rowNode,\n      getGui: () => this.getGui(),\n      getLocation: () => \"cell\",\n      getTooltipValue: value != null ? () => value : getTooltipValue,\n      // this makes no sense, why is the cell formatted value passed to the tooltip???\n      getValueFormatted: () => this.valueFormatted,\n      shouldDisplayTooltip\n    };\n    this.tooltipFeature = new TooltipFeature(tooltipCtrl, this.beans);\n  }\n  disableTooltipFeature() {\n    if (!this.tooltipFeature) {\n      return;\n    }\n    this.tooltipFeature.destroy();\n    this.tooltipFeature = null;\n  }\n  setComp(comp, eGui, eCellWrapper, printLayout, startEditing) {\n    var _a, _b, _c, _d;\n    this.cellComp = comp;\n    this.eGui = eGui;\n    this.printLayout = printLayout;\n    this.addDomData();\n    this.onCellFocused(this.focusEventToRestore);\n    this.applyStaticCssClasses();\n    this.setWrapText();\n    this.onFirstRightPinnedChanged();\n    this.onLastLeftPinnedChanged();\n    this.onColumnHover();\n    this.setupControlComps();\n    this.setupAutoHeight(eCellWrapper);\n    this.refreshFirstAndLastStyles();\n    this.refreshAriaColIndex();\n    (_a = this.cellPositionFeature) == null ? void 0 : _a.setComp(eGui);\n    (_b = this.cellCustomStyleFeature) == null ? void 0 : _b.setComp(comp);\n    (_c = this.tooltipFeature) == null ? void 0 : _c.refreshToolTip();\n    (_d = this.cellKeyboardListenerFeature) == null ? void 0 : _d.setComp(this.eGui);\n    if (this.cellRangeFeature) {\n      this.cellRangeFeature.setComp(comp, eGui);\n    }\n    if (startEditing && this.isCellEditable()) {\n      this.startEditing();\n    } else {\n      this.showValue();\n    }\n    if (this.onCellCompAttachedFuncs.length) {\n      this.onCellCompAttachedFuncs.forEach((func) => func());\n      this.onCellCompAttachedFuncs = [];\n    }\n  }\n  setupAutoHeight(eCellWrapper) {\n    this.isAutoHeight = this.column.isAutoHeight();\n    if (!this.isAutoHeight || !eCellWrapper) {\n      return;\n    }\n    const eParentCell = eCellWrapper.parentElement;\n    const minRowHeight = this.beans.gos.getRowHeightForNode(this.rowNode).height;\n    const measureHeight = (timesCalled) => {\n      if (this.editing) {\n        return;\n      }\n      if (!this.isAlive()) {\n        return;\n      }\n      const { paddingTop, paddingBottom, borderBottomWidth, borderTopWidth } = getElementSize(eParentCell);\n      const extraHeight = paddingTop + paddingBottom + borderBottomWidth + borderTopWidth;\n      const wrapperHeight = eCellWrapper.offsetHeight;\n      const autoHeight = wrapperHeight + extraHeight;\n      if (timesCalled < 5) {\n        const doc = this.beans.gos.getDocument();\n        const notYetInDom = !doc || !doc.contains(eCellWrapper);\n        const possiblyNoContentYet = autoHeight == 0;\n        if (notYetInDom || possiblyNoContentYet) {\n          window.setTimeout(() => measureHeight(timesCalled + 1), 0);\n          return;\n        }\n      }\n      const newHeight = Math.max(autoHeight, minRowHeight);\n      this.rowNode.setRowAutoHeight(newHeight, this.column);\n    };\n    const listener = () => measureHeight(0);\n    listener();\n    const destroyResizeObserver = this.beans.resizeObserverService.observeResize(eCellWrapper, listener);\n    this.addDestroyFunc(() => {\n      destroyResizeObserver();\n      this.rowNode.setRowAutoHeight(void 0, this.column);\n    });\n  }\n  getCellAriaRole() {\n    var _a;\n    return (_a = this.column.getColDef().cellAriaRole) != null ? _a : \"gridcell\";\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  getColumnIdSanitised() {\n    return this.colIdSanitised;\n  }\n  getTabIndex() {\n    return this.tabIndex;\n  }\n  isCellRenderer() {\n    const colDef = this.column.getColDef();\n    return colDef.cellRenderer != null || colDef.cellRendererSelector != null;\n  }\n  getValueToDisplay() {\n    var _a;\n    return (_a = this.valueFormatted) != null ? _a : this.value;\n  }\n  showValue(forceNewCellRendererInstance = false) {\n    var _a;\n    const valueToDisplay = this.getValueToDisplay();\n    let compDetails;\n    if (this.rowNode.stub) {\n      const params = this.createCellRendererParams();\n      compDetails = this.beans.userComponentFactory.getLoadingCellRendererDetails(this.column.getColDef(), params);\n    } else if (this.isCellRenderer()) {\n      const params = this.createCellRendererParams();\n      compDetails = this.beans.userComponentFactory.getCellRendererDetails(this.column.getColDef(), params);\n    }\n    this.cellComp.setRenderDetails(compDetails, valueToDisplay, forceNewCellRendererInstance);\n    (_a = this.cellRangeFeature) == null ? void 0 : _a.refreshHandle();\n  }\n  setupControlComps() {\n    const colDef = this.column.getColDef();\n    this.includeSelection = this.isIncludeControl(colDef.checkboxSelection);\n    this.includeRowDrag = this.isIncludeControl(colDef.rowDrag);\n    this.includeDndSource = this.isIncludeControl(colDef.dndSource);\n    this.cellComp.setIncludeSelection(this.includeSelection);\n    this.cellComp.setIncludeDndSource(this.includeDndSource);\n    this.cellComp.setIncludeRowDrag(this.includeRowDrag);\n  }\n  isForceWrapper() {\n    const forceWrapper = this.beans.gos.get(\"enableCellTextSelection\") || this.column.isAutoHeight();\n    return forceWrapper;\n  }\n  isIncludeControl(value) {\n    const rowNodePinned = this.rowNode.rowPinned != null;\n    const isFunc = typeof value === \"function\";\n    const res = rowNodePinned ? false : isFunc || value === true;\n    return res;\n  }\n  refreshShouldDestroy() {\n    const colDef = this.column.getColDef();\n    const selectionChanged = this.includeSelection != this.isIncludeControl(colDef.checkboxSelection);\n    const rowDragChanged = this.includeRowDrag != this.isIncludeControl(colDef.rowDrag);\n    const dndSourceChanged = this.includeDndSource != this.isIncludeControl(colDef.dndSource);\n    const autoHeightChanged = this.isAutoHeight != this.column.isAutoHeight();\n    return selectionChanged || rowDragChanged || dndSourceChanged || autoHeightChanged;\n  }\n  // either called internally if single cell editing, or called by rowRenderer if row editing\n  startEditing(key = null, cellStartedEdit = false, event = null) {\n    if (!this.isCellEditable() || this.editing) {\n      return;\n    }\n    if (!this.cellComp) {\n      this.onCellCompAttachedFuncs.push(() => {\n        this.startEditing(key, cellStartedEdit, event);\n      });\n      return;\n    }\n    const editorParams = this.createCellEditorParams(key, cellStartedEdit);\n    const colDef = this.column.getColDef();\n    const compDetails = this.beans.userComponentFactory.getCellEditorDetails(colDef, editorParams);\n    this.editCompDetails = compDetails;\n    const popup = (compDetails == null ? void 0 : compDetails.popupFromSelector) != null ? compDetails.popupFromSelector : !!colDef.cellEditorPopup;\n    const position = (compDetails == null ? void 0 : compDetails.popupPositionFromSelector) != null ? compDetails.popupPositionFromSelector : colDef.cellEditorPopupPosition;\n    this.setEditing(true);\n    this.cellComp.setEditDetails(compDetails, popup, position, this.beans.gos.get(\"reactiveCustomComponents\"));\n    const e = this.createEvent(event, Events.EVENT_CELL_EDITING_STARTED);\n    this.beans.eventService.dispatchEvent(e);\n  }\n  setEditing(editing) {\n    var _a;\n    if (this.editing === editing) {\n      return;\n    }\n    this.editing = editing;\n    (_a = this.cellRangeFeature) == null ? void 0 : _a.refreshHandle();\n  }\n  // pass in 'true' to cancel the editing.\n  stopRowOrCellEdit(cancel = false) {\n    if (this.beans.gos.get(\"editType\") === \"fullRow\") {\n      this.rowCtrl.stopEditing(cancel);\n    } else {\n      this.stopEditing(cancel);\n    }\n  }\n  onPopupEditorClosed() {\n    if (!this.isEditing()) {\n      return;\n    }\n    this.stopEditingAndFocus();\n  }\n  takeValueFromCellEditor(cancel) {\n    const noValueResult = { newValueExists: false };\n    if (cancel) {\n      return noValueResult;\n    }\n    const cellEditor = this.cellComp.getCellEditor();\n    if (!cellEditor) {\n      return noValueResult;\n    }\n    const userWantsToCancel = cellEditor.isCancelAfterEnd && cellEditor.isCancelAfterEnd();\n    if (userWantsToCancel) {\n      return noValueResult;\n    }\n    const newValue = cellEditor.getValue();\n    return {\n      newValue,\n      newValueExists: true\n    };\n  }\n  /**\n   * @returns `True` if the value changes, otherwise `False`.\n   */\n  saveNewValue(oldValue, newValue) {\n    if (newValue === oldValue) {\n      return false;\n    }\n    this.suppressRefreshCell = true;\n    const valueChanged = this.rowNode.setDataValue(this.column, newValue, \"edit\");\n    this.suppressRefreshCell = false;\n    return valueChanged;\n  }\n  /**\n   * Ends the Cell Editing\n   * @param cancel `True` if the edit process is being canceled.\n   * @returns `True` if the value of the `GridCell` has been updated, otherwise `False`.\n   */\n  stopEditing(cancel = false) {\n    if (!this.editing) {\n      return false;\n    }\n    const { newValue, newValueExists } = this.takeValueFromCellEditor(cancel);\n    const oldValue = this.rowNode.getValueFromValueService(this.column);\n    let valueChanged = false;\n    if (newValueExists) {\n      valueChanged = this.saveNewValue(oldValue, newValue);\n    }\n    this.setEditing(false);\n    this.cellComp.setEditDetails();\n    this.editCompDetails = void 0;\n    this.updateAndFormatValue(false);\n    this.refreshCell({ forceRefresh: true, suppressFlash: true });\n    this.dispatchEditingStoppedEvent(oldValue, newValue, !cancel && !!valueChanged);\n    return valueChanged;\n  }\n  dispatchEditingStoppedEvent(oldValue, newValue, valueChanged) {\n    const editingStoppedEvent = __spreadProps(__spreadValues({}, this.createEvent(null, Events.EVENT_CELL_EDITING_STOPPED)), {\n      oldValue,\n      newValue,\n      valueChanged\n    });\n    this.beans.eventService.dispatchEvent(editingStoppedEvent);\n  }\n  createCellEditorParams(key, cellStartedEdit) {\n    return this.beans.gos.addGridCommonParams({\n      value: this.rowNode.getValueFromValueService(this.column),\n      eventKey: key,\n      column: this.column,\n      colDef: this.column.getColDef(),\n      rowIndex: this.getCellPosition().rowIndex,\n      node: this.rowNode,\n      data: this.rowNode.data,\n      cellStartedEdit,\n      onKeyDown: this.onKeyDown.bind(this),\n      stopEditing: this.stopEditingAndFocus.bind(this),\n      eGridCell: this.getGui(),\n      parseValue: this.parseValue.bind(this),\n      formatValue: this.formatValue.bind(this)\n    });\n  }\n  createCellRendererParams() {\n    const res = this.beans.gos.addGridCommonParams({\n      value: this.value,\n      valueFormatted: this.valueFormatted,\n      getValue: () => this.rowNode.getValueFromValueService(this.column),\n      setValue: (value) => this.beans.valueService.setValue(this.rowNode, this.column, value),\n      formatValue: this.formatValue.bind(this),\n      data: this.rowNode.data,\n      node: this.rowNode,\n      pinned: this.column.getPinned(),\n      colDef: this.column.getColDef(),\n      column: this.column,\n      rowIndex: this.getCellPosition().rowIndex,\n      refreshCell: this.refreshCell.bind(this),\n      eGridCell: this.getGui(),\n      eParentOfValue: this.cellComp.getParentOfValue(),\n      registerRowDragger: (rowDraggerElement, dragStartPixels, value, suppressVisibilityChange) => this.registerRowDragger(rowDraggerElement, dragStartPixels, suppressVisibilityChange),\n      setTooltip: (value, shouldDisplayTooltip) => {\n        var _a;\n        if (this.tooltipFeature) {\n          this.disableTooltipFeature();\n        }\n        this.enableTooltipFeature(value, shouldDisplayTooltip);\n        (_a = this.tooltipFeature) == null ? void 0 : _a.refreshToolTip();\n      }\n    });\n    return res;\n  }\n  parseValue(newValue) {\n    return this.beans.valueService.parseValue(this.column, this.rowNode, newValue, this.getValue());\n  }\n  setFocusOutOnEditor() {\n    if (!this.editing) {\n      return;\n    }\n    const cellEditor = this.cellComp.getCellEditor();\n    if (cellEditor && cellEditor.focusOut) {\n      cellEditor.focusOut();\n    }\n  }\n  setFocusInOnEditor() {\n    if (!this.editing) {\n      return;\n    }\n    const cellEditor = this.cellComp.getCellEditor();\n    if (cellEditor && cellEditor.focusIn) {\n      cellEditor.focusIn();\n    } else {\n      this.focusCell(true);\n    }\n  }\n  onCellChanged(event) {\n    const eventImpactsThisCell = event.column === this.column;\n    if (eventImpactsThisCell) {\n      this.refreshCell({});\n    }\n  }\n  refreshOrDestroyCell(params) {\n    var _a;\n    if (this.refreshShouldDestroy()) {\n      (_a = this.rowCtrl) == null ? void 0 : _a.recreateCell(this);\n    } else {\n      this.refreshCell(params);\n    }\n  }\n  // + stop editing {forceRefresh: true, suppressFlash: true}\n  // + event cellChanged {}\n  // + cellRenderer.params.refresh() {} -> method passes 'as is' to the cellRenderer, so params could be anything\n  // + rowCtrl: event dataChanged {suppressFlash: !update, newData: !update}\n  // + rowCtrl: api refreshCells() {animate: true/false}\n  // + rowRenderer: api softRefreshView() {}\n  refreshCell(params) {\n    var _a, _b, _c, _d;\n    if (this.suppressRefreshCell || this.editing) {\n      return;\n    }\n    const colDef = this.column.getColDef();\n    const newData = params != null && !!params.newData;\n    const suppressFlash = params != null && !!params.suppressFlash || !!colDef.suppressCellFlash;\n    const noValueProvided = colDef.field == null && colDef.valueGetter == null && colDef.showRowGroup == null;\n    const forceRefresh = params && params.forceRefresh || noValueProvided || newData;\n    const isCellCompReady = !!this.cellComp;\n    const valuesDifferent = this.updateAndFormatValue(isCellCompReady);\n    const dataNeedsUpdating = forceRefresh || valuesDifferent;\n    if (!isCellCompReady) {\n      return;\n    }\n    if (dataNeedsUpdating) {\n      this.showValue(newData);\n      const processingFilterChange = this.beans.filterManager.isSuppressFlashingCellsBecauseFiltering();\n      const flashCell = !suppressFlash && !processingFilterChange && (this.beans.gos.get(\"enableCellChangeFlash\") || colDef.enableCellChangeFlash);\n      if (flashCell) {\n        this.flashCell();\n      }\n      (_a = this.cellCustomStyleFeature) == null ? void 0 : _a.applyUserStyles();\n      (_b = this.cellCustomStyleFeature) == null ? void 0 : _b.applyClassesFromColDef();\n    }\n    (_c = this.tooltipFeature) == null ? void 0 : _c.refreshToolTip();\n    (_d = this.cellCustomStyleFeature) == null ? void 0 : _d.applyCellClassRules();\n  }\n  // cell editors call this, when they want to stop for reasons other\n  // than what we pick up on. eg selecting from a dropdown ends editing.\n  stopEditingAndFocus(suppressNavigateAfterEdit = false, shiftKey = false) {\n    this.stopRowOrCellEdit();\n    this.focusCell(true);\n    if (!suppressNavigateAfterEdit) {\n      this.navigateAfterEdit(shiftKey);\n    }\n  }\n  navigateAfterEdit(shiftKey) {\n    const enterNavigatesVerticallyAfterEdit = this.beans.gos.get(\"enterNavigatesVerticallyAfterEdit\");\n    if (enterNavigatesVerticallyAfterEdit) {\n      const key = shiftKey ? KeyCode.UP : KeyCode.DOWN;\n      this.beans.navigationService.navigateToNextCell(null, key, this.getCellPosition(), false);\n    }\n  }\n  // user can also call this via API\n  flashCell(delays) {\n    var _a, _b;\n    const flashDuration = (_a = delays == null ? void 0 : delays.flashDuration) != null ? _a : delays == null ? void 0 : delays.flashDelay;\n    const fadeDuration = (_b = delays == null ? void 0 : delays.fadeDuration) != null ? _b : delays == null ? void 0 : delays.fadeDelay;\n    this.animateCell(\"data-changed\", flashDuration, fadeDuration);\n  }\n  animateCell(cssName, flashDuration, fadeDuration) {\n    if (!this.cellComp) {\n      return;\n    }\n    const fullName = `ag-cell-${cssName}`;\n    const animationFullName = `ag-cell-${cssName}-animation`;\n    const { gos } = this.beans;\n    if (!flashDuration) {\n      flashDuration = gos.get(\"cellFlashDuration\");\n    }\n    if (!exists(fadeDuration)) {\n      fadeDuration = gos.get(\"cellFadeDuration\");\n    }\n    this.cellComp.addOrRemoveCssClass(fullName, true);\n    this.cellComp.addOrRemoveCssClass(animationFullName, false);\n    this.beans.frameworkOverrides.wrapIncoming(() => {\n      window.setTimeout(() => {\n        if (!this.isAlive()) {\n          return;\n        }\n        this.cellComp.addOrRemoveCssClass(fullName, false);\n        this.cellComp.addOrRemoveCssClass(animationFullName, true);\n        this.eGui.style.transition = `background-color ${fadeDuration}ms`;\n        window.setTimeout(() => {\n          if (!this.isAlive()) {\n            return;\n          }\n          this.cellComp.addOrRemoveCssClass(animationFullName, false);\n          this.eGui.style.transition = \"\";\n        }, fadeDuration);\n      }, flashDuration);\n    });\n  }\n  onFlashCells(event) {\n    if (!this.cellComp) {\n      return;\n    }\n    const cellId = this.beans.cellPositionUtils.createId(this.getCellPosition());\n    const shouldFlash = event.cells[cellId];\n    if (shouldFlash) {\n      this.animateCell(\"highlight\");\n    }\n  }\n  isCellEditable() {\n    return this.column.isCellEditable(this.rowNode);\n  }\n  isSuppressFillHandle() {\n    return this.column.isSuppressFillHandle();\n  }\n  formatValue(value) {\n    var _a;\n    return (_a = this.callValueFormatter(value)) != null ? _a : value;\n  }\n  callValueFormatter(value) {\n    return this.beans.valueService.formatValue(this.column, this.rowNode, value);\n  }\n  updateAndFormatValue(compareValues) {\n    const oldValue = this.value;\n    const oldValueFormatted = this.valueFormatted;\n    this.value = this.rowNode.getValueFromValueService(this.column);\n    this.valueFormatted = this.callValueFormatter(this.value);\n    if (compareValues) {\n      return !this.valuesAreEqual(oldValue, this.value) || this.valueFormatted != oldValueFormatted;\n    }\n    return true;\n  }\n  valuesAreEqual(val1, val2) {\n    const colDef = this.column.getColDef();\n    return colDef.equals ? colDef.equals(val1, val2) : val1 === val2;\n  }\n  getComp() {\n    return this.cellComp;\n  }\n  getValue() {\n    return this.value;\n  }\n  addDomData() {\n    const element = this.getGui();\n    this.beans.gos.setDomData(element, _CellCtrl.DOM_DATA_KEY_CELL_CTRL, this);\n    this.addDestroyFunc(() => this.beans.gos.setDomData(element, _CellCtrl.DOM_DATA_KEY_CELL_CTRL, null));\n  }\n  createEvent(domEvent, eventType) {\n    const event = this.beans.gos.addGridCommonParams({\n      type: eventType,\n      node: this.rowNode,\n      data: this.rowNode.data,\n      value: this.value,\n      column: this.column,\n      colDef: this.column.getColDef(),\n      rowPinned: this.rowNode.rowPinned,\n      event: domEvent,\n      rowIndex: this.rowNode.rowIndex\n    });\n    return event;\n  }\n  processCharacter(event) {\n    var _a;\n    (_a = this.cellKeyboardListenerFeature) == null ? void 0 : _a.processCharacter(event);\n  }\n  onKeyDown(event) {\n    var _a;\n    (_a = this.cellKeyboardListenerFeature) == null ? void 0 : _a.onKeyDown(event);\n  }\n  onMouseEvent(eventName, mouseEvent) {\n    var _a;\n    (_a = this.cellMouseListenerFeature) == null ? void 0 : _a.onMouseEvent(eventName, mouseEvent);\n  }\n  getGui() {\n    return this.eGui;\n  }\n  getColSpanningList() {\n    return this.cellPositionFeature.getColSpanningList();\n  }\n  onLeftChanged() {\n    var _a;\n    if (!this.cellComp) {\n      return;\n    }\n    (_a = this.cellPositionFeature) == null ? void 0 : _a.onLeftChanged();\n  }\n  onDisplayedColumnsChanged() {\n    if (!this.eGui) {\n      return;\n    }\n    this.refreshAriaColIndex();\n    this.refreshFirstAndLastStyles();\n  }\n  refreshFirstAndLastStyles() {\n    const { cellComp, column, beans } = this;\n    CssClassApplier.refreshFirstAndLastStyles(cellComp, column, beans.columnModel);\n  }\n  refreshAriaColIndex() {\n    const colIdx = this.beans.columnModel.getAriaColumnIndex(this.column);\n    setAriaColIndex(this.getGui(), colIdx);\n  }\n  isSuppressNavigable() {\n    return this.column.isSuppressNavigable(this.rowNode);\n  }\n  onWidthChanged() {\n    var _a;\n    return (_a = this.cellPositionFeature) == null ? void 0 : _a.onWidthChanged();\n  }\n  getColumn() {\n    return this.column;\n  }\n  getRowNode() {\n    return this.rowNode;\n  }\n  isPrintLayout() {\n    return this.printLayout;\n  }\n  getCellPosition() {\n    return this.cellPosition;\n  }\n  isEditing() {\n    return this.editing;\n  }\n  // called by rowRenderer when user navigates via tab key\n  startRowOrCellEdit(key, event = null) {\n    if (!this.cellComp) {\n      this.onCellCompAttachedFuncs.push(() => {\n        this.startRowOrCellEdit(key, event);\n      });\n      return;\n    }\n    if (this.beans.gos.get(\"editType\") === \"fullRow\") {\n      this.rowCtrl.startRowEditing(key, this);\n    } else {\n      this.startEditing(key, true, event);\n    }\n  }\n  getRowCtrl() {\n    return this.rowCtrl;\n  }\n  getRowPosition() {\n    return {\n      rowIndex: this.cellPosition.rowIndex,\n      rowPinned: this.cellPosition.rowPinned\n    };\n  }\n  updateRangeBordersIfRangeCount() {\n    if (!this.cellComp) {\n      return;\n    }\n    if (this.cellRangeFeature) {\n      this.cellRangeFeature.updateRangeBordersIfRangeCount();\n    }\n  }\n  onRangeSelectionChanged() {\n    if (!this.cellComp) {\n      return;\n    }\n    if (this.cellRangeFeature) {\n      this.cellRangeFeature.onRangeSelectionChanged();\n    }\n  }\n  isRangeSelectionEnabled() {\n    return this.cellRangeFeature != null;\n  }\n  focusCell(forceBrowserFocus = false) {\n    this.beans.focusService.setFocusedCell({\n      rowIndex: this.getCellPosition().rowIndex,\n      column: this.column,\n      rowPinned: this.rowNode.rowPinned,\n      forceBrowserFocus\n    });\n  }\n  onRowIndexChanged() {\n    this.createCellPosition();\n    this.onCellFocused();\n    if (this.cellRangeFeature) {\n      this.cellRangeFeature.onRangeSelectionChanged();\n    }\n  }\n  onFirstRightPinnedChanged() {\n    if (!this.cellComp) {\n      return;\n    }\n    const firstRightPinned = this.column.isFirstRightPinned();\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_FIRST_RIGHT_PINNED, firstRightPinned);\n  }\n  onLastLeftPinnedChanged() {\n    if (!this.cellComp) {\n      return;\n    }\n    const lastLeftPinned = this.column.isLastLeftPinned();\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_LAST_LEFT_PINNED, lastLeftPinned);\n  }\n  onCellFocused(event) {\n    if (this.beans.gos.get(\"suppressCellFocus\")) {\n      return;\n    }\n    const cellFocused = this.beans.focusService.isCellFocused(this.cellPosition);\n    if (!this.cellComp) {\n      if (cellFocused && (event == null ? void 0 : event.forceBrowserFocus)) {\n        this.focusEventToRestore = event;\n      }\n      return;\n    }\n    this.focusEventToRestore = void 0;\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_FOCUS, cellFocused);\n    if (cellFocused && event && event.forceBrowserFocus) {\n      const focusEl = this.cellComp.getFocusableElement();\n      focusEl.focus({ preventScroll: !!event.preventScrollOnBrowserFocus });\n    }\n    const fullRowEdit = this.beans.gos.get(\"editType\") === \"fullRow\";\n    if (!cellFocused && !fullRowEdit && this.editing) {\n      this.stopRowOrCellEdit();\n    }\n    if (cellFocused) {\n      this.rowCtrl.announceDescription();\n    }\n  }\n  createCellPosition() {\n    this.cellPosition = {\n      rowIndex: this.rowNode.rowIndex,\n      rowPinned: makeNull(this.rowNode.rowPinned),\n      column: this.column\n    };\n  }\n  // CSS Classes that only get applied once, they never change\n  applyStaticCssClasses() {\n    this.cellComp.addOrRemoveCssClass(CSS_CELL, true);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_NOT_INLINE_EDITING, true);\n    const autoHeight = this.column.isAutoHeight() == true;\n    this.cellComp.addOrRemoveCssClass(CSS_AUTO_HEIGHT, autoHeight);\n    this.cellComp.addOrRemoveCssClass(CSS_NORMAL_HEIGHT, !autoHeight);\n  }\n  onColumnHover() {\n    if (!this.cellComp) {\n      return;\n    }\n    if (!this.beans.gos.get(\"columnHoverHighlight\")) {\n      return;\n    }\n    const isHovered = this.beans.columnHoverService.isHovered(this.column);\n    this.cellComp.addOrRemoveCssClass(CSS_COLUMN_HOVER, isHovered);\n  }\n  onColDefChanged() {\n    if (!this.cellComp) {\n      return;\n    }\n    const isTooltipEnabled = this.column.isTooltipEnabled();\n    if (isTooltipEnabled) {\n      this.disableTooltipFeature();\n      this.enableTooltipFeature();\n    } else {\n      this.disableTooltipFeature();\n    }\n    this.setWrapText();\n    if (!this.editing) {\n      this.refreshOrDestroyCell({ forceRefresh: true, suppressFlash: true });\n    } else {\n      const cellEditor = this.getCellEditor();\n      if (cellEditor == null ? void 0 : cellEditor.refresh) {\n        const { eventKey, cellStartedEdit } = this.editCompDetails.params;\n        const editorParams = this.createCellEditorParams(eventKey, cellStartedEdit);\n        const colDef = this.column.getColDef();\n        const compDetails = this.beans.userComponentFactory.getCellEditorDetails(colDef, editorParams);\n        cellEditor.refresh(compDetails.params);\n      }\n    }\n  }\n  setWrapText() {\n    const value = this.column.getColDef().wrapText == true;\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_WRAP_TEXT, value);\n  }\n  dispatchCellContextMenuEvent(event) {\n    const colDef = this.column.getColDef();\n    const cellContextMenuEvent = this.createEvent(event, Events.EVENT_CELL_CONTEXT_MENU);\n    this.beans.eventService.dispatchEvent(cellContextMenuEvent);\n    if (colDef.onCellContextMenu) {\n      window.setTimeout(() => {\n        this.beans.frameworkOverrides.wrapOutgoing(() => {\n          colDef.onCellContextMenu(cellContextMenuEvent);\n        });\n      }, 0);\n    }\n  }\n  getCellRenderer() {\n    return this.cellComp ? this.cellComp.getCellRenderer() : null;\n  }\n  getCellEditor() {\n    return this.cellComp ? this.cellComp.getCellEditor() : null;\n  }\n  destroy() {\n    this.onCellCompAttachedFuncs = [];\n    super.destroy();\n  }\n  createSelectionCheckbox() {\n    const cbSelectionComponent = new CheckboxSelectionComponent();\n    this.beans.context.createBean(cbSelectionComponent);\n    cbSelectionComponent.init({ rowNode: this.rowNode, column: this.column });\n    return cbSelectionComponent;\n  }\n  createDndSource() {\n    const dndSourceComp = new DndSourceComp(this.rowNode, this.column, this.eGui);\n    this.beans.context.createBean(dndSourceComp);\n    return dndSourceComp;\n  }\n  registerRowDragger(customElement, dragStartPixels, suppressVisibilityChange) {\n    if (this.customRowDragComp) {\n      this.customRowDragComp.setDragElement(customElement, dragStartPixels);\n      return;\n    }\n    const newComp = this.createRowDragComp(customElement, dragStartPixels, suppressVisibilityChange);\n    if (newComp) {\n      this.customRowDragComp = newComp;\n      this.addDestroyFunc(() => {\n        this.beans.context.destroyBean(newComp);\n        this.customRowDragComp = null;\n      });\n    }\n  }\n  createRowDragComp(customElement, dragStartPixels, suppressVisibilityChange) {\n    const pagination = this.beans.gos.get(\"pagination\");\n    const rowDragManaged = this.beans.gos.get(\"rowDragManaged\");\n    const clientSideRowModelActive = this.beans.gos.isRowModelType(\"clientSide\");\n    if (rowDragManaged) {\n      if (!clientSideRowModelActive) {\n        warnOnce(\"managed row dragging is only allowed in the Client Side Row Model\");\n        return;\n      }\n      if (pagination) {\n        warnOnce(\"managed row dragging is not possible when doing pagination\");\n        return;\n      }\n    }\n    const rowDragComp = new RowDragComp(() => this.value, this.rowNode, this.column, customElement, dragStartPixels, suppressVisibilityChange);\n    this.beans.context.createBean(rowDragComp);\n    return rowDragComp;\n  }\n};\n_CellCtrl.DOM_DATA_KEY_CELL_CTRL = \"cellCtrl\";\nvar CellCtrl = _CellCtrl;\n\n// community-modules/core/src/rendering/row/rowCtrl.ts\nvar instanceIdSequence3 = 0;\nvar _RowCtrl = class _RowCtrl extends BeanStub {\n  constructor(rowNode, beans, animateIn, useAnimationFrameForCreate, printLayout) {\n    super();\n    this.allRowGuis = [];\n    this.active = true;\n    this.centerCellCtrls = { list: [], map: {} };\n    this.leftCellCtrls = { list: [], map: {} };\n    this.rightCellCtrls = { list: [], map: {} };\n    this.slideInAnimation = {\n      left: false,\n      center: false,\n      right: false,\n      fullWidth: false\n    };\n    this.fadeInAnimation = {\n      left: false,\n      center: false,\n      right: false,\n      fullWidth: false\n    };\n    this.rowDragComps = [];\n    this.lastMouseDownOnDragger = false;\n    this.emptyStyle = {};\n    this.updateColumnListsPending = false;\n    this.rowId = null;\n    this.businessKeySanitised = null;\n    this.beans = beans;\n    this.gos = beans.gos;\n    this.rowNode = rowNode;\n    this.paginationPage = beans.paginationProxy.getCurrentPage();\n    this.useAnimationFrameForCreate = useAnimationFrameForCreate;\n    this.printLayout = printLayout;\n    this.suppressRowTransform = this.gos.get(\"suppressRowTransform\");\n    this.instanceId = rowNode.id + \"-\" + instanceIdSequence3++;\n    this.rowId = escapeString(rowNode.id);\n    this.initRowBusinessKey();\n    this.rowFocused = beans.focusService.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n    this.rowLevel = beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);\n    this.setRowType();\n    this.setAnimateFlags(animateIn);\n    this.rowStyles = this.processStylesFromGridOptions();\n    if (this.isFullWidth() && !this.gos.get(\"suppressCellFocus\")) {\n      this.tabIndex = -1;\n    }\n    this.addListeners();\n  }\n  initRowBusinessKey() {\n    this.businessKeyForNodeFunc = this.gos.get(\"getBusinessKeyForNode\");\n    this.updateRowBusinessKey();\n  }\n  updateRowBusinessKey() {\n    if (typeof this.businessKeyForNodeFunc !== \"function\") {\n      return;\n    }\n    const businessKey = this.businessKeyForNodeFunc(this.rowNode);\n    this.businessKeySanitised = escapeString(businessKey);\n  }\n  getRowId() {\n    return this.rowId;\n  }\n  getRowStyles() {\n    return this.rowStyles;\n  }\n  getTabIndex() {\n    return this.tabIndex;\n  }\n  isSticky() {\n    return this.rowNode.sticky;\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  setComp(rowComp, element, containerType) {\n    const gui = { rowComp, element, containerType };\n    this.allRowGuis.push(gui);\n    if (containerType === \"left\" /* LEFT */) {\n      this.leftGui = gui;\n    } else if (containerType === \"right\" /* RIGHT */) {\n      this.rightGui = gui;\n    } else if (containerType === \"fullWidth\" /* FULL_WIDTH */) {\n      this.fullWidthGui = gui;\n    } else {\n      this.centerGui = gui;\n    }\n    this.initialiseRowComp(gui);\n    if (this.rowType !== \"FullWidthLoading\" && !this.rowNode.rowPinned) {\n      this.beans.rowRenderer.dispatchFirstDataRenderedEvent();\n    }\n  }\n  unsetComp(containerType) {\n    this.allRowGuis = this.allRowGuis.filter((rowGui) => rowGui.containerType !== containerType);\n    switch (containerType) {\n      case \"left\" /* LEFT */:\n        this.leftGui = void 0;\n        break;\n      case \"right\" /* RIGHT */:\n        this.rightGui = void 0;\n        break;\n      case \"fullWidth\" /* FULL_WIDTH */:\n        this.fullWidthGui = void 0;\n        break;\n      case \"center\" /* CENTER */:\n        this.centerGui = void 0;\n        break;\n      default:\n    }\n  }\n  isCacheable() {\n    return this.rowType === \"FullWidthDetail\" /* FullWidthDetail */ && this.gos.get(\"keepDetailRows\");\n  }\n  setCached(cached) {\n    const displayValue = cached ? \"none\" : \"\";\n    this.allRowGuis.forEach((rg) => rg.element.style.display = displayValue);\n  }\n  initialiseRowComp(gui) {\n    const gos = this.gos;\n    this.listenOnDomOrder(gui);\n    if (this.beans.columnModel.wasAutoRowHeightEverActive()) {\n      this.rowNode.checkAutoHeights();\n    }\n    this.onRowHeightChanged(gui);\n    this.updateRowIndexes(gui);\n    this.setFocusedClasses(gui);\n    this.setStylesFromGridOptions(false, gui);\n    if (gos.isRowSelection() && this.rowNode.selectable) {\n      this.onRowSelected(gui);\n    }\n    this.updateColumnLists(!this.useAnimationFrameForCreate);\n    const comp = gui.rowComp;\n    const initialRowClasses = this.getInitialRowClasses(gui.containerType);\n    initialRowClasses.forEach((name) => comp.addOrRemoveCssClass(name, true));\n    this.executeSlideAndFadeAnimations(gui);\n    if (this.rowNode.group) {\n      setAriaExpanded(gui.element, this.rowNode.expanded == true);\n    }\n    this.setRowCompRowId(comp);\n    this.setRowCompRowBusinessKey(comp);\n    gos.setDomData(gui.element, _RowCtrl.DOM_DATA_KEY_ROW_CTRL, this);\n    this.addDestroyFunc(\n      () => gos.setDomData(gui.element, _RowCtrl.DOM_DATA_KEY_ROW_CTRL, null)\n    );\n    if (this.useAnimationFrameForCreate) {\n      this.beans.animationFrameService.createTask(\n        this.addHoverFunctionality.bind(this, gui.element),\n        this.rowNode.rowIndex,\n        \"createTasksP2\"\n      );\n    } else {\n      this.addHoverFunctionality(gui.element);\n    }\n    if (this.isFullWidth()) {\n      this.setupFullWidth(gui);\n    }\n    if (gos.get(\"rowDragEntireRow\")) {\n      this.addRowDraggerToRow(gui);\n    }\n    if (this.useAnimationFrameForCreate) {\n      this.beans.animationFrameService.addDestroyTask(() => {\n        if (!this.isAlive()) {\n          return;\n        }\n        gui.rowComp.addOrRemoveCssClass(\"ag-after-created\", true);\n      });\n    }\n    this.executeProcessRowPostCreateFunc();\n  }\n  setRowCompRowBusinessKey(comp) {\n    if (this.businessKeySanitised == null) {\n      return;\n    }\n    comp.setRowBusinessKey(this.businessKeySanitised);\n  }\n  getBusinessKey() {\n    return this.businessKeySanitised;\n  }\n  setRowCompRowId(comp) {\n    this.rowId = escapeString(this.rowNode.id);\n    if (this.rowId == null) {\n      return;\n    }\n    comp.setRowId(this.rowId);\n  }\n  executeSlideAndFadeAnimations(gui) {\n    const { containerType } = gui;\n    const shouldSlide = this.slideInAnimation[containerType];\n    if (shouldSlide) {\n      executeNextVMTurn(() => {\n        this.onTopChanged();\n      });\n      this.slideInAnimation[containerType] = false;\n    }\n    const shouldFade = this.fadeInAnimation[containerType];\n    if (shouldFade) {\n      executeNextVMTurn(() => {\n        gui.rowComp.addOrRemoveCssClass(\"ag-opacity-zero\", false);\n      });\n      this.fadeInAnimation[containerType] = false;\n    }\n  }\n  addRowDraggerToRow(gui) {\n    if (this.gos.get(\"enableRangeSelection\")) {\n      warnOnce(\"Setting `rowDragEntireRow: true` in the gridOptions doesn't work with `enableRangeSelection: true`\");\n      return;\n    }\n    const translate = this.beans.localeService.getLocaleTextFunc();\n    const rowDragComp = new RowDragComp(\n      () => `1 ${translate(\"rowDragRow\", \"row\")}`,\n      this.rowNode,\n      void 0,\n      gui.element,\n      void 0,\n      true\n    );\n    const rowDragBean = this.createBean(rowDragComp, this.beans.context);\n    this.rowDragComps.push(rowDragBean);\n  }\n  setupFullWidth(gui) {\n    const pinned = this.getPinnedForContainer(gui.containerType);\n    if (this.rowType == \"FullWidthDetail\" /* FullWidthDetail */) {\n      if (!ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/master-detail\" /* MasterDetailModule */, \"cell renderer 'agDetailCellRenderer' (for master detail)\", this.beans.context.getGridId())) {\n        return;\n      }\n    }\n    const compDetails = this.createFullWidthCompDetails(gui.element, pinned);\n    gui.rowComp.showFullWidth(compDetails);\n  }\n  isPrintLayout() {\n    return this.printLayout;\n  }\n  getFullWidthCellRenderers() {\n    var _a, _b;\n    if (this.gos.get(\"embedFullWidthRows\")) {\n      return this.allRowGuis.map((gui) => {\n        var _a2;\n        return (_a2 = gui == null ? void 0 : gui.rowComp) == null ? void 0 : _a2.getFullWidthCellRenderer();\n      });\n    }\n    return [(_b = (_a = this.fullWidthGui) == null ? void 0 : _a.rowComp) == null ? void 0 : _b.getFullWidthCellRenderer()];\n  }\n  // use by autoWidthCalculator, as it clones the elements\n  getCellElement(column) {\n    const cellCtrl = this.getCellCtrl(column);\n    return cellCtrl ? cellCtrl.getGui() : null;\n  }\n  executeProcessRowPostCreateFunc() {\n    const func = this.gos.getCallback(\"processRowPostCreate\");\n    if (!func || !this.areAllContainersReady()) {\n      return;\n    }\n    const params = {\n      // areAllContainersReady asserts that centerGui is not null\n      eRow: this.centerGui.element,\n      ePinnedLeftRow: this.leftGui ? this.leftGui.element : void 0,\n      ePinnedRightRow: this.rightGui ? this.rightGui.element : void 0,\n      node: this.rowNode,\n      rowIndex: this.rowNode.rowIndex,\n      addRenderedRowListener: this.addEventListener.bind(this)\n    };\n    func(params);\n  }\n  areAllContainersReady() {\n    const isLeftReady = !!this.leftGui || !this.beans.columnModel.isPinningLeft();\n    const isCenterReady = !!this.centerGui;\n    const isRightReady = !!this.rightGui || !this.beans.columnModel.isPinningRight();\n    return isLeftReady && isCenterReady && isRightReady;\n  }\n  setRowType() {\n    const isStub = this.rowNode.stub && !this.gos.get(\"suppressServerSideFullWidthLoadingRow\");\n    const isFullWidthCell = this.rowNode.isFullWidthCell();\n    const isDetailCell = this.gos.get(\"masterDetail\") && this.rowNode.detail;\n    const pivotMode = this.beans.columnModel.isPivotMode();\n    const isGroupRow = !!this.rowNode.group && !this.rowNode.footer;\n    const isFullWidthGroup = isGroupRow && this.gos.isGroupUseEntireRow(pivotMode);\n    if (isStub) {\n      this.rowType = \"FullWidthLoading\" /* FullWidthLoading */;\n    } else if (isDetailCell) {\n      this.rowType = \"FullWidthDetail\" /* FullWidthDetail */;\n    } else if (isFullWidthCell) {\n      this.rowType = \"FullWidth\" /* FullWidth */;\n    } else if (isFullWidthGroup) {\n      this.rowType = \"FullWidthGroup\" /* FullWidthGroup */;\n    } else {\n      this.rowType = \"Normal\" /* Normal */;\n    }\n  }\n  updateColumnLists(suppressAnimationFrame = false, useFlushSync = false) {\n    if (this.isFullWidth()) {\n      return;\n    }\n    const noAnimation = suppressAnimationFrame || this.gos.get(\"suppressAnimationFrame\") || this.printLayout;\n    if (noAnimation) {\n      this.updateColumnListsImpl(useFlushSync);\n      return;\n    }\n    if (this.updateColumnListsPending) {\n      return;\n    }\n    this.beans.animationFrameService.createTask(\n      () => {\n        if (!this.active) {\n          return;\n        }\n        this.updateColumnListsImpl(true);\n      },\n      this.rowNode.rowIndex,\n      \"createTasksP1\"\n    );\n    this.updateColumnListsPending = true;\n  }\n  createCellCtrls(prev, cols, pinned = null) {\n    const res = {\n      list: [],\n      map: {}\n    };\n    const addCell = (colInstanceId, cellCtrl) => {\n      res.list.push(cellCtrl);\n      res.map[colInstanceId] = cellCtrl;\n    };\n    cols.forEach((col) => {\n      const colInstanceId = col.getInstanceId();\n      let cellCtrl = prev.map[colInstanceId];\n      if (!cellCtrl) {\n        cellCtrl = new CellCtrl(col, this.rowNode, this.beans, this);\n      }\n      addCell(colInstanceId, cellCtrl);\n    });\n    prev.list.forEach((prevCellCtrl) => {\n      const cellInResult = res.map[prevCellCtrl.getColumn().getInstanceId()] != null;\n      if (cellInResult) {\n        return;\n      }\n      const keepCell = !this.isCellEligibleToBeRemoved(prevCellCtrl, pinned);\n      if (keepCell) {\n        addCell(prevCellCtrl.getColumn().getInstanceId(), prevCellCtrl);\n        return;\n      }\n      prevCellCtrl.destroy();\n    });\n    return res;\n  }\n  updateColumnListsImpl(useFlushSync) {\n    this.updateColumnListsPending = false;\n    this.createAllCellCtrls();\n    this.setCellCtrls(useFlushSync);\n  }\n  setCellCtrls(useFlushSync) {\n    this.allRowGuis.forEach((item) => {\n      const cellControls = this.getCellCtrlsForContainer(item.containerType);\n      item.rowComp.setCellCtrls(cellControls, useFlushSync);\n    });\n  }\n  getCellCtrlsForContainer(containerType) {\n    switch (containerType) {\n      case \"left\" /* LEFT */:\n        return this.leftCellCtrls.list;\n      case \"right\" /* RIGHT */:\n        return this.rightCellCtrls.list;\n      case \"fullWidth\" /* FULL_WIDTH */:\n        return [];\n      case \"center\" /* CENTER */:\n        return this.centerCellCtrls.list;\n      default:\n        const exhaustiveCheck = containerType;\n        throw new Error(`Unhandled case: ${exhaustiveCheck}`);\n    }\n  }\n  createAllCellCtrls() {\n    const columnModel = this.beans.columnModel;\n    if (this.printLayout) {\n      this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, columnModel.getAllDisplayedColumns());\n      this.leftCellCtrls = { list: [], map: {} };\n      this.rightCellCtrls = { list: [], map: {} };\n    } else {\n      const centerCols = columnModel.getViewportCenterColumnsForRow(this.rowNode);\n      this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, centerCols);\n      const leftCols = columnModel.getDisplayedLeftColumnsForRow(this.rowNode);\n      this.leftCellCtrls = this.createCellCtrls(this.leftCellCtrls, leftCols, \"left\");\n      const rightCols = columnModel.getDisplayedRightColumnsForRow(this.rowNode);\n      this.rightCellCtrls = this.createCellCtrls(this.rightCellCtrls, rightCols, \"right\");\n    }\n  }\n  isCellEligibleToBeRemoved(cellCtrl, nextContainerPinned) {\n    const REMOVE_CELL = true;\n    const KEEP_CELL = false;\n    const column = cellCtrl.getColumn();\n    if (column.getPinned() != nextContainerPinned) {\n      return REMOVE_CELL;\n    }\n    const editing = cellCtrl.isEditing();\n    const focused = this.beans.focusService.isCellFocused(cellCtrl.getCellPosition());\n    const mightWantToKeepCell = editing || focused;\n    if (mightWantToKeepCell) {\n      const column2 = cellCtrl.getColumn();\n      const displayedColumns = this.beans.columnModel.getAllDisplayedColumns();\n      const cellStillDisplayed = displayedColumns.indexOf(column2) >= 0;\n      return cellStillDisplayed ? KEEP_CELL : REMOVE_CELL;\n    }\n    return REMOVE_CELL;\n  }\n  getDomOrder() {\n    const isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n    return isEnsureDomOrder || this.gos.isDomLayout(\"print\");\n  }\n  listenOnDomOrder(gui) {\n    const listener = () => {\n      gui.rowComp.setDomOrder(this.getDomOrder());\n    };\n    this.addManagedPropertyListener(\"domLayout\", listener);\n    this.addManagedPropertyListener(\"ensureDomOrder\", listener);\n  }\n  setAnimateFlags(animateIn) {\n    if (this.isSticky() || !animateIn) {\n      return;\n    }\n    const oldRowTopExists = exists(this.rowNode.oldRowTop);\n    const pinningLeft = this.beans.columnModel.isPinningLeft();\n    const pinningRight = this.beans.columnModel.isPinningRight();\n    if (oldRowTopExists) {\n      if (this.isFullWidth() && !this.gos.get(\"embedFullWidthRows\")) {\n        this.slideInAnimation.fullWidth = true;\n        return;\n      }\n      this.slideInAnimation.center = true;\n      this.slideInAnimation.left = pinningLeft;\n      this.slideInAnimation.right = pinningRight;\n    } else {\n      if (this.isFullWidth() && !this.gos.get(\"embedFullWidthRows\")) {\n        this.fadeInAnimation.fullWidth = true;\n        return;\n      }\n      this.fadeInAnimation.center = true;\n      this.fadeInAnimation.left = pinningLeft;\n      this.fadeInAnimation.right = pinningRight;\n    }\n  }\n  isEditing() {\n    return this.editingRow;\n  }\n  isFullWidth() {\n    return this.rowType !== \"Normal\" /* Normal */;\n  }\n  refreshFullWidth() {\n    const tryRefresh = (gui, pinned) => {\n      if (!gui) {\n        return true;\n      }\n      return gui.rowComp.refreshFullWidth(() => {\n        const compDetails = this.createFullWidthCompDetails(gui.element, pinned);\n        return compDetails.params;\n      });\n    };\n    const fullWidthSuccess = tryRefresh(this.fullWidthGui, null);\n    const centerSuccess = tryRefresh(this.centerGui, null);\n    const leftSuccess = tryRefresh(this.leftGui, \"left\");\n    const rightSuccess = tryRefresh(this.rightGui, \"right\");\n    const allFullWidthRowsRefreshed = fullWidthSuccess && centerSuccess && leftSuccess && rightSuccess;\n    return allFullWidthRowsRefreshed;\n  }\n  addListeners() {\n    this.addManagedListener(this.rowNode, RowNode.EVENT_HEIGHT_CHANGED, () => this.onRowHeightChanged());\n    this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_SELECTED, () => this.onRowSelected());\n    this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, this.onRowIndexChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_TOP_CHANGED, this.onTopChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_EXPANDED_CHANGED, this.updateExpandedCss.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_HAS_CHILDREN_CHANGED, this.updateExpandedCss.bind(this));\n    if (this.rowNode.detail) {\n      this.addManagedListener(this.rowNode.parent, RowNode.EVENT_DATA_CHANGED, this.onRowNodeDataChanged.bind(this));\n    }\n    this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.onRowNodeDataChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.postProcessCss.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_HIGHLIGHT_CHANGED, this.onRowNodeHighlightChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_DRAGGING_CHANGED, this.postProcessRowDragging.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_UI_LEVEL_CHANGED, this.onUiLevelChanged.bind(this));\n    const eventService = this.beans.eventService;\n    this.addManagedListener(eventService, Events.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED, this.onPaginationPixelOffsetChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_HEIGHT_SCALE_CHANGED, this.onTopChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_CELL_FOCUSED, this.onCellFocusChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_CELL_FOCUS_CLEARED, this.onCellFocusChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_MODEL_UPDATED, this.refreshFirstAndLastRowStyles.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_COLUMN_MOVED, this.updateColumnLists.bind(this));\n    this.addDestroyFunc(() => {\n      this.destroyBeans(this.rowDragComps, this.beans.context);\n      if (this.tooltipFeature) {\n        this.tooltipFeature = this.destroyBean(this.tooltipFeature, this.beans.context);\n      }\n    });\n    this.addManagedPropertyListeners([\"rowDragEntireRow\"], () => {\n      const useRowDragEntireRow = this.gos.get(\"rowDragEntireRow\");\n      if (useRowDragEntireRow) {\n        this.allRowGuis.forEach((gui) => {\n          this.addRowDraggerToRow(gui);\n        });\n        return;\n      }\n      this.destroyBeans(this.rowDragComps, this.beans.context);\n      this.rowDragComps = [];\n    });\n    this.addListenersForCellComps();\n  }\n  addListenersForCellComps() {\n    this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, () => {\n      this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onRowIndexChanged());\n    });\n    this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, (event) => {\n      this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onCellChanged(event));\n    });\n  }\n  onRowNodeDataChanged(event) {\n    const fullWidthChanged = this.isFullWidth() !== !!this.rowNode.isFullWidthCell();\n    if (fullWidthChanged) {\n      this.beans.rowRenderer.redrawRow(this.rowNode);\n      return;\n    }\n    if (this.isFullWidth()) {\n      const refresh = this.refreshFullWidth();\n      if (!refresh) {\n        this.beans.rowRenderer.redrawRow(this.rowNode);\n      }\n      return;\n    }\n    this.getAllCellCtrls().forEach(\n      (cellCtrl) => cellCtrl.refreshCell({\n        suppressFlash: !event.update,\n        newData: !event.update\n      })\n    );\n    this.allRowGuis.forEach((gui) => {\n      this.setRowCompRowId(gui.rowComp);\n      this.updateRowBusinessKey();\n      this.setRowCompRowBusinessKey(gui.rowComp);\n    });\n    this.onRowSelected();\n    this.postProcessCss();\n  }\n  postProcessCss() {\n    this.setStylesFromGridOptions(true);\n    this.postProcessClassesFromGridOptions();\n    this.postProcessRowClassRules();\n    this.postProcessRowDragging();\n  }\n  onRowNodeHighlightChanged() {\n    const highlighted = this.rowNode.highlighted;\n    this.allRowGuis.forEach((gui) => {\n      const aboveOn = highlighted === 0 /* Above */;\n      const belowOn = highlighted === 1 /* Below */;\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-highlight-above\", aboveOn);\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-highlight-below\", belowOn);\n    });\n  }\n  postProcessRowDragging() {\n    const dragging = this.rowNode.dragging;\n    this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(\"ag-row-dragging\", dragging));\n  }\n  updateExpandedCss() {\n    const expandable = this.rowNode.isExpandable();\n    const expanded = this.rowNode.expanded == true;\n    this.allRowGuis.forEach((gui) => {\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-group\", expandable);\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-group-expanded\", expandable && expanded);\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-group-contracted\", expandable && !expanded);\n      setAriaExpanded(gui.element, expandable && expanded);\n    });\n  }\n  onDisplayedColumnsChanged() {\n    this.updateColumnLists(true);\n    if (this.beans.columnModel.wasAutoRowHeightEverActive()) {\n      this.rowNode.checkAutoHeights();\n    }\n  }\n  onVirtualColumnsChanged() {\n    this.updateColumnLists(false, true);\n  }\n  getRowPosition() {\n    return {\n      rowPinned: makeNull(this.rowNode.rowPinned),\n      rowIndex: this.rowNode.rowIndex\n    };\n  }\n  onKeyboardNavigate(keyboardEvent) {\n    const currentFullWidthComp = this.allRowGuis.find((c) => c.element.contains(keyboardEvent.target));\n    const currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\n    const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n    if (!isFullWidthContainerFocused) {\n      return;\n    }\n    const node = this.rowNode;\n    const lastFocusedCell = this.beans.focusService.getFocusedCell();\n    const cellPosition = {\n      rowIndex: node.rowIndex,\n      rowPinned: node.rowPinned,\n      column: lastFocusedCell && lastFocusedCell.column\n    };\n    this.beans.navigationService.navigateToNextCell(keyboardEvent, keyboardEvent.key, cellPosition, true);\n    keyboardEvent.preventDefault();\n  }\n  onTabKeyDown(keyboardEvent) {\n    if (keyboardEvent.defaultPrevented || isStopPropagationForAgGrid(keyboardEvent)) {\n      return;\n    }\n    const currentFullWidthComp = this.allRowGuis.find((c) => c.element.contains(keyboardEvent.target));\n    const currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\n    const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n    let nextEl = null;\n    if (!isFullWidthContainerFocused) {\n      nextEl = this.beans.focusService.findNextFocusableElement(currentFullWidthContainer, false, keyboardEvent.shiftKey);\n    }\n    if (this.isFullWidth() && isFullWidthContainerFocused || !nextEl) {\n      this.beans.navigationService.onTabKeyDown(this, keyboardEvent);\n    }\n  }\n  getFullWidthElement() {\n    if (this.fullWidthGui) {\n      return this.fullWidthGui.element;\n    }\n    return null;\n  }\n  getRowYPosition() {\n    var _a;\n    const displayedEl = (_a = this.allRowGuis.find((el) => isVisible(el.element))) == null ? void 0 : _a.element;\n    if (displayedEl) {\n      return displayedEl.getBoundingClientRect().top;\n    }\n    return 0;\n  }\n  onFullWidthRowFocused(event) {\n    var _a;\n    const node = this.rowNode;\n    const isFocused = !event ? false : this.isFullWidth() && event.rowIndex === node.rowIndex && event.rowPinned == node.rowPinned;\n    const element = this.fullWidthGui ? this.fullWidthGui.element : (_a = this.centerGui) == null ? void 0 : _a.element;\n    if (!element) {\n      return;\n    }\n    element.classList.toggle(\"ag-full-width-focus\", isFocused);\n    if (isFocused) {\n      element.focus({ preventScroll: true });\n    }\n  }\n  recreateCell(cellCtrl) {\n    this.centerCellCtrls = this.removeCellCtrl(this.centerCellCtrls, cellCtrl);\n    this.leftCellCtrls = this.removeCellCtrl(this.leftCellCtrls, cellCtrl);\n    this.rightCellCtrls = this.removeCellCtrl(this.rightCellCtrls, cellCtrl);\n    cellCtrl.destroy();\n    this.updateColumnLists();\n  }\n  removeCellCtrl(prev, cellCtrlToRemove) {\n    const res = {\n      list: [],\n      map: {}\n    };\n    prev.list.forEach((cellCtrl) => {\n      if (cellCtrl === cellCtrlToRemove) {\n        return;\n      }\n      res.list.push(cellCtrl);\n      res.map[cellCtrl.getColumn().getInstanceId()] = cellCtrl;\n    });\n    return res;\n  }\n  onMouseEvent(eventName, mouseEvent) {\n    switch (eventName) {\n      case \"dblclick\":\n        this.onRowDblClick(mouseEvent);\n        break;\n      case \"click\":\n        this.onRowClick(mouseEvent);\n        break;\n      case \"touchstart\":\n      case \"mousedown\":\n        this.onRowMouseDown(mouseEvent);\n        break;\n    }\n  }\n  createRowEvent(type, domEvent) {\n    return this.gos.addGridCommonParams({\n      type,\n      node: this.rowNode,\n      data: this.rowNode.data,\n      rowIndex: this.rowNode.rowIndex,\n      rowPinned: this.rowNode.rowPinned,\n      event: domEvent\n    });\n  }\n  createRowEventWithSource(type, domEvent) {\n    const event = this.createRowEvent(type, domEvent);\n    event.source = this;\n    return event;\n  }\n  onRowDblClick(mouseEvent) {\n    if (isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    const agEvent = this.createRowEventWithSource(Events.EVENT_ROW_DOUBLE_CLICKED, mouseEvent);\n    this.beans.eventService.dispatchEvent(agEvent);\n  }\n  onRowMouseDown(mouseEvent) {\n    this.lastMouseDownOnDragger = isElementChildOfClass(mouseEvent.target, \"ag-row-drag\", 3);\n    if (!this.isFullWidth()) {\n      return;\n    }\n    const node = this.rowNode;\n    const columnModel = this.beans.columnModel;\n    if (this.beans.rangeService) {\n      this.beans.rangeService.removeAllCellRanges();\n    }\n    this.beans.focusService.setFocusedCell({\n      rowIndex: node.rowIndex,\n      column: columnModel.getAllDisplayedColumns()[0],\n      rowPinned: node.rowPinned,\n      forceBrowserFocus: true\n    });\n  }\n  onRowClick(mouseEvent) {\n    const stop = isStopPropagationForAgGrid(mouseEvent) || this.lastMouseDownOnDragger;\n    if (stop) {\n      return;\n    }\n    const agEvent = this.createRowEventWithSource(Events.EVENT_ROW_CLICKED, mouseEvent);\n    this.beans.eventService.dispatchEvent(agEvent);\n    const isMultiKey = mouseEvent.ctrlKey || mouseEvent.metaKey;\n    const isShiftKey = mouseEvent.shiftKey;\n    const groupSelectsChildren = this.gos.get(\"groupSelectsChildren\");\n    if (\n      // we do not allow selecting groups by clicking (as the click here expands the group), or if it's a detail row,\n      // so return if it's a group row\n      groupSelectsChildren && this.rowNode.group || this.isRowSelectionBlocked() || // if click selection suppressed, do nothing\n      this.gos.get(\"suppressRowClickSelection\")\n    ) {\n      return;\n    }\n    const multiSelectOnClick = this.gos.get(\"rowMultiSelectWithClick\");\n    const rowDeselectionWithCtrl = !this.gos.get(\"suppressRowDeselection\");\n    const source = \"rowClicked\";\n    if (this.rowNode.isSelected()) {\n      if (multiSelectOnClick) {\n        this.rowNode.setSelectedParams({ newValue: false, event: mouseEvent, source });\n      } else if (isMultiKey) {\n        if (rowDeselectionWithCtrl) {\n          this.rowNode.setSelectedParams({ newValue: false, event: mouseEvent, source });\n        }\n      } else {\n        this.rowNode.setSelectedParams({ newValue: true, clearSelection: !isShiftKey, rangeSelect: isShiftKey, event: mouseEvent, source });\n      }\n    } else {\n      const clearSelection = multiSelectOnClick ? false : !isMultiKey;\n      this.rowNode.setSelectedParams({ newValue: true, clearSelection, rangeSelect: isShiftKey, event: mouseEvent, source });\n    }\n  }\n  isRowSelectionBlocked() {\n    return !this.rowNode.selectable || !!this.rowNode.rowPinned || !this.gos.isRowSelection();\n  }\n  setupDetailRowAutoHeight(eDetailGui) {\n    if (this.rowType !== \"FullWidthDetail\" /* FullWidthDetail */) {\n      return;\n    }\n    if (!this.gos.get(\"detailRowAutoHeight\")) {\n      return;\n    }\n    const checkRowSizeFunc = () => {\n      const clientHeight = eDetailGui.clientHeight;\n      if (clientHeight != null && clientHeight > 0) {\n        const updateRowHeightFunc = () => {\n          this.rowNode.setRowHeight(clientHeight);\n          if (this.beans.clientSideRowModel) {\n            this.beans.clientSideRowModel.onRowHeightChanged();\n          } else if (this.beans.serverSideRowModel) {\n            this.beans.serverSideRowModel.onRowHeightChanged();\n          }\n        };\n        window.setTimeout(updateRowHeightFunc, 0);\n      }\n    };\n    const resizeObserverDestroyFunc = this.beans.resizeObserverService.observeResize(eDetailGui, checkRowSizeFunc);\n    this.addDestroyFunc(resizeObserverDestroyFunc);\n    checkRowSizeFunc();\n  }\n  createFullWidthCompDetails(eRow, pinned) {\n    const params = this.gos.addGridCommonParams({\n      fullWidth: true,\n      data: this.rowNode.data,\n      node: this.rowNode,\n      value: this.rowNode.key,\n      valueFormatted: this.rowNode.key,\n      rowIndex: this.rowNode.rowIndex,\n      // these need to be taken out, as part of 'afterAttached' now\n      eGridCell: eRow,\n      eParentOfValue: eRow,\n      pinned,\n      addRenderedRowListener: this.addEventListener.bind(this),\n      registerRowDragger: (rowDraggerElement, dragStartPixels, value, suppressVisibilityChange) => this.addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value, suppressVisibilityChange),\n      setTooltip: (value, shouldDisplayTooltip) => this.refreshRowTooltip(value, shouldDisplayTooltip)\n    });\n    switch (this.rowType) {\n      case \"FullWidthDetail\" /* FullWidthDetail */:\n        return this.beans.userComponentFactory.getFullWidthDetailCellRendererDetails(params);\n      case \"FullWidthGroup\" /* FullWidthGroup */:\n        return this.beans.userComponentFactory.getFullWidthGroupCellRendererDetails(params);\n      case \"FullWidthLoading\" /* FullWidthLoading */:\n        return this.beans.userComponentFactory.getFullWidthLoadingCellRendererDetails(params);\n      default:\n        return this.beans.userComponentFactory.getFullWidthCellRendererDetails(params);\n    }\n  }\n  refreshRowTooltip(value, shouldDisplayTooltip) {\n    if (!this.fullWidthGui) {\n      return;\n    }\n    const tooltipParams = {\n      getGui: () => this.fullWidthGui.element,\n      getTooltipValue: () => value,\n      getLocation: () => \"fullWidthRow\",\n      shouldDisplayTooltip\n    };\n    if (this.tooltipFeature) {\n      this.destroyBean(this.tooltipFeature, this.beans.context);\n    }\n    this.tooltipFeature = this.createBean(new TooltipFeature(tooltipParams, this.beans));\n  }\n  addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value = \"\", suppressVisibilityChange) {\n    if (!this.isFullWidth()) {\n      return;\n    }\n    const rowDragComp = new RowDragComp(() => value, this.rowNode, void 0, rowDraggerElement, dragStartPixels, suppressVisibilityChange);\n    this.createBean(rowDragComp, this.beans.context);\n    this.addDestroyFunc(() => {\n      this.destroyBean(rowDragComp, this.beans.context);\n    });\n  }\n  onUiLevelChanged() {\n    const newLevel = this.beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);\n    if (this.rowLevel != newLevel) {\n      const classToAdd = \"ag-row-level-\" + newLevel;\n      const classToRemove = \"ag-row-level-\" + this.rowLevel;\n      this.allRowGuis.forEach((gui) => {\n        gui.rowComp.addOrRemoveCssClass(classToAdd, true);\n        gui.rowComp.addOrRemoveCssClass(classToRemove, false);\n      });\n    }\n    this.rowLevel = newLevel;\n  }\n  isFirstRowOnPage() {\n    return this.rowNode.rowIndex === this.beans.paginationProxy.getPageFirstRow();\n  }\n  isLastRowOnPage() {\n    return this.rowNode.rowIndex === this.beans.paginationProxy.getPageLastRow();\n  }\n  refreshFirstAndLastRowStyles() {\n    const newFirst = this.isFirstRowOnPage();\n    const newLast = this.isLastRowOnPage();\n    if (this.firstRowOnPage !== newFirst) {\n      this.firstRowOnPage = newFirst;\n      this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(\"ag-row-first\", newFirst));\n    }\n    if (this.lastRowOnPage !== newLast) {\n      this.lastRowOnPage = newLast;\n      this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(\"ag-row-last\", newLast));\n    }\n  }\n  stopEditing(cancel = false) {\n    if (this.stoppingRowEdit) {\n      return;\n    }\n    const cellControls = this.getAllCellCtrls();\n    const isRowEdit = this.editingRow;\n    this.stoppingRowEdit = true;\n    let fireRowEditEvent = false;\n    for (const ctrl of cellControls) {\n      const valueChanged = ctrl.stopEditing(cancel);\n      if (isRowEdit && !cancel && !fireRowEditEvent && valueChanged) {\n        fireRowEditEvent = true;\n      }\n    }\n    if (fireRowEditEvent) {\n      const event = this.createRowEvent(Events.EVENT_ROW_VALUE_CHANGED);\n      this.beans.eventService.dispatchEvent(event);\n    }\n    if (isRowEdit) {\n      this.setEditingRow(false);\n    }\n    this.stoppingRowEdit = false;\n  }\n  setInlineEditingCss(editing) {\n    this.allRowGuis.forEach((gui) => {\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-inline-editing\", editing);\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-not-inline-editing\", !editing);\n    });\n  }\n  setEditingRow(value) {\n    this.editingRow = value;\n    this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(\"ag-row-editing\", value));\n    const event = value ? this.createRowEvent(Events.EVENT_ROW_EDITING_STARTED) : this.createRowEvent(Events.EVENT_ROW_EDITING_STOPPED);\n    this.beans.eventService.dispatchEvent(event);\n  }\n  startRowEditing(key = null, sourceRenderedCell = null, event = null) {\n    if (this.editingRow) {\n      return;\n    }\n    const atLeastOneEditing = this.getAllCellCtrls().reduce((prev, cellCtrl) => {\n      const cellStartedEdit = cellCtrl === sourceRenderedCell;\n      if (cellStartedEdit) {\n        cellCtrl.startEditing(key, cellStartedEdit, event);\n      } else {\n        cellCtrl.startEditing(null, cellStartedEdit, event);\n      }\n      if (prev) {\n        return true;\n      }\n      return cellCtrl.isEditing();\n    }, false);\n    if (atLeastOneEditing) {\n      this.setEditingRow(true);\n    }\n  }\n  getAllCellCtrls() {\n    if (this.leftCellCtrls.list.length === 0 && this.rightCellCtrls.list.length === 0) {\n      return this.centerCellCtrls.list;\n    }\n    const res = [...this.centerCellCtrls.list, ...this.leftCellCtrls.list, ...this.rightCellCtrls.list];\n    return res;\n  }\n  postProcessClassesFromGridOptions() {\n    const cssClasses = this.beans.rowCssClassCalculator.processClassesFromGridOptions(this.rowNode);\n    if (!cssClasses || !cssClasses.length) {\n      return;\n    }\n    cssClasses.forEach((classStr) => {\n      this.allRowGuis.forEach((c) => c.rowComp.addOrRemoveCssClass(classStr, true));\n    });\n  }\n  postProcessRowClassRules() {\n    this.beans.rowCssClassCalculator.processRowClassRules(\n      this.rowNode,\n      (className) => {\n        this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(className, true));\n      },\n      (className) => {\n        this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(className, false));\n      }\n    );\n  }\n  setStylesFromGridOptions(updateStyles, gui) {\n    if (updateStyles) {\n      this.rowStyles = this.processStylesFromGridOptions();\n    }\n    this.forEachGui(gui, (gui2) => gui2.rowComp.setUserStyles(this.rowStyles));\n  }\n  getPinnedForContainer(rowContainerType) {\n    const pinned = rowContainerType === \"left\" /* LEFT */ ? \"left\" : rowContainerType === \"right\" /* RIGHT */ ? \"right\" : null;\n    return pinned;\n  }\n  getInitialRowClasses(rowContainerType) {\n    const pinned = this.getPinnedForContainer(rowContainerType);\n    const params = {\n      rowNode: this.rowNode,\n      rowFocused: this.rowFocused,\n      fadeRowIn: this.fadeInAnimation[rowContainerType],\n      rowIsEven: this.rowNode.rowIndex % 2 === 0,\n      rowLevel: this.rowLevel,\n      fullWidthRow: this.isFullWidth(),\n      firstRowOnPage: this.isFirstRowOnPage(),\n      lastRowOnPage: this.isLastRowOnPage(),\n      printLayout: this.printLayout,\n      expandable: this.rowNode.isExpandable(),\n      pinned\n    };\n    return this.beans.rowCssClassCalculator.getInitialRowClasses(params);\n  }\n  processStylesFromGridOptions() {\n    const rowStyle = this.gos.get(\"rowStyle\");\n    if (rowStyle && typeof rowStyle === \"function\") {\n      console.warn(\"AG Grid: rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead\");\n      return;\n    }\n    const rowStyleFunc = this.gos.getCallback(\"getRowStyle\");\n    let rowStyleFuncResult;\n    if (rowStyleFunc) {\n      const params = {\n        data: this.rowNode.data,\n        node: this.rowNode,\n        rowIndex: this.rowNode.rowIndex\n      };\n      rowStyleFuncResult = rowStyleFunc(params);\n    }\n    if (rowStyleFuncResult || rowStyle) {\n      return Object.assign({}, rowStyle, rowStyleFuncResult);\n    }\n    return this.emptyStyle;\n  }\n  onRowSelected(gui) {\n    const selected = !!this.rowNode.isSelected();\n    this.forEachGui(gui, (gui2) => {\n      gui2.rowComp.addOrRemoveCssClass(\"ag-row-selected\", selected);\n      setAriaSelected(gui2.element, selected);\n      const hasFocus = gui2.element.contains(this.beans.gos.getActiveDomElement());\n      if (hasFocus && (gui2 === this.centerGui || gui2 === this.fullWidthGui)) {\n        this.announceDescription();\n      }\n    });\n  }\n  announceDescription() {\n    if (this.isRowSelectionBlocked()) {\n      return;\n    }\n    const selected = this.rowNode.isSelected();\n    if (selected && this.beans.gos.get(\"suppressRowDeselection\")) {\n      return;\n    }\n    const translate = this.beans.localeService.getLocaleTextFunc();\n    const label = translate(\n      selected ? \"ariaRowDeselect\" : \"ariaRowSelect\",\n      `Press SPACE to ${selected ? \"deselect\" : \"select\"} this row.`\n    );\n    this.beans.ariaAnnouncementService.announceValue(label);\n  }\n  addHoverFunctionality(eRow) {\n    if (!this.active) {\n      return;\n    }\n    this.addManagedListener(eRow, \"mouseenter\", () => this.rowNode.onMouseEnter());\n    this.addManagedListener(eRow, \"mouseleave\", () => this.rowNode.onMouseLeave());\n    this.addManagedListener(this.rowNode, RowNode.EVENT_MOUSE_ENTER, () => {\n      if (!this.beans.dragService.isDragging() && !this.gos.get(\"suppressRowHoverHighlight\")) {\n        eRow.classList.add(\"ag-row-hover\");\n        this.rowNode.setHovered(true);\n      }\n    });\n    this.addManagedListener(this.rowNode, RowNode.EVENT_MOUSE_LEAVE, () => {\n      eRow.classList.remove(\"ag-row-hover\");\n      this.rowNode.setHovered(false);\n    });\n  }\n  // for animation, we don't want to animate entry or exit to a very far away pixel,\n  // otherwise the row would move so fast, it would appear to disappear. so this method\n  // moves the row closer to the viewport if it is far away, so the row slide in / out\n  // at a speed the user can see.\n  roundRowTopToBounds(rowTop) {\n    const range = this.beans.ctrlsService.getGridBodyCtrl().getScrollFeature().getApproximateVScollPosition();\n    const minPixel = this.applyPaginationOffset(range.top, true) - 100;\n    const maxPixel = this.applyPaginationOffset(range.bottom, true) + 100;\n    return Math.min(Math.max(minPixel, rowTop), maxPixel);\n  }\n  getFrameworkOverrides() {\n    return this.beans.frameworkOverrides;\n  }\n  forEachGui(gui, callback) {\n    if (gui) {\n      callback(gui);\n    } else {\n      this.allRowGuis.forEach(callback);\n    }\n  }\n  onRowHeightChanged(gui) {\n    if (this.rowNode.rowHeight == null) {\n      return;\n    }\n    const rowHeight = this.rowNode.rowHeight;\n    const defaultRowHeight = this.beans.environment.getDefaultRowHeight();\n    const isHeightFromFunc = this.gos.isGetRowHeightFunction();\n    const heightFromFunc = isHeightFromFunc ? this.gos.getRowHeightForNode(this.rowNode).height : void 0;\n    const lineHeight = heightFromFunc ? `${Math.min(defaultRowHeight, heightFromFunc) - 2}px` : void 0;\n    this.forEachGui(gui, (gui2) => {\n      gui2.element.style.height = `${rowHeight}px`;\n      if (lineHeight) {\n        gui2.element.style.setProperty(\"--ag-line-height\", lineHeight);\n      }\n    });\n  }\n  addEventListener(eventType, listener) {\n    super.addEventListener(eventType, listener);\n  }\n  removeEventListener(eventType, listener) {\n    super.removeEventListener(eventType, listener);\n  }\n  // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n  destroyFirstPass(suppressAnimation = false) {\n    this.active = false;\n    if (!suppressAnimation && this.gos.isAnimateRows() && !this.isSticky()) {\n      const rowStillVisibleJustNotInViewport = this.rowNode.rowTop != null;\n      if (rowStillVisibleJustNotInViewport) {\n        const rowTop = this.roundRowTopToBounds(this.rowNode.rowTop);\n        this.setRowTop(rowTop);\n      } else {\n        this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(\"ag-opacity-zero\", true));\n      }\n    }\n    this.rowNode.setHovered(false);\n    const event = this.createRowEvent(Events.EVENT_VIRTUAL_ROW_REMOVED);\n    this.dispatchEvent(event);\n    this.beans.eventService.dispatchEvent(event);\n    super.destroy();\n  }\n  destroySecondPass() {\n    this.allRowGuis.length = 0;\n    this.stopEditing();\n    const destroyCellCtrls = (ctrls) => {\n      ctrls.list.forEach((c) => c.destroy());\n      return { list: [], map: {} };\n    };\n    this.centerCellCtrls = destroyCellCtrls(this.centerCellCtrls);\n    this.leftCellCtrls = destroyCellCtrls(this.leftCellCtrls);\n    this.rightCellCtrls = destroyCellCtrls(this.rightCellCtrls);\n  }\n  setFocusedClasses(gui) {\n    this.forEachGui(gui, (gui2) => {\n      gui2.rowComp.addOrRemoveCssClass(\"ag-row-focus\", this.rowFocused);\n      gui2.rowComp.addOrRemoveCssClass(\"ag-row-no-focus\", !this.rowFocused);\n    });\n  }\n  onCellFocusChanged() {\n    const rowFocused = this.beans.focusService.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n    if (rowFocused !== this.rowFocused) {\n      this.rowFocused = rowFocused;\n      this.setFocusedClasses();\n    }\n    if (!rowFocused && this.editingRow) {\n      this.stopEditing(false);\n    }\n  }\n  onPaginationChanged() {\n    const currentPage = this.beans.paginationProxy.getCurrentPage();\n    if (this.paginationPage !== currentPage) {\n      this.paginationPage = currentPage;\n      this.onTopChanged();\n    }\n    this.refreshFirstAndLastRowStyles();\n  }\n  onTopChanged() {\n    this.setRowTop(this.rowNode.rowTop);\n  }\n  onPaginationPixelOffsetChanged() {\n    this.onTopChanged();\n  }\n  // applies pagination offset, eg if on second page, and page height is 500px, then removes\n  // 500px from the top position, so a row with rowTop 600px is displayed at location 100px.\n  // reverse will take the offset away rather than add.\n  applyPaginationOffset(topPx, reverse = false) {\n    if (this.rowNode.isRowPinned() || this.rowNode.sticky) {\n      return topPx;\n    }\n    const pixelOffset = this.beans.paginationProxy.getPixelOffset();\n    const multiplier = reverse ? 1 : -1;\n    return topPx + pixelOffset * multiplier;\n  }\n  setRowTop(pixels) {\n    if (this.printLayout) {\n      return;\n    }\n    if (exists(pixels)) {\n      const afterPaginationPixels = this.applyPaginationOffset(pixels);\n      const skipScaling = this.rowNode.isRowPinned() || this.rowNode.sticky;\n      const afterScalingPixels = skipScaling ? afterPaginationPixels : this.beans.rowContainerHeightService.getRealPixelPosition(afterPaginationPixels);\n      const topPx = `${afterScalingPixels}px`;\n      this.setRowTopStyle(topPx);\n    }\n  }\n  // the top needs to be set into the DOM element when the element is created, not updated afterwards.\n  // otherwise the transition would not work, as it would be transitioning from zero (the unset value).\n  // for example, suppose a row that is outside the viewport, then user does a filter to remove other rows\n  // and this row now appears in the viewport, and the row moves up (ie it was under the viewport and not rendered,\n  // but now is in the viewport) then a new RowComp is created, however it should have it's position initialised\n  // to below the viewport, so the row will appear to animate up. if we didn't set the initial position at creation\n  // time, the row would animate down (ie from position zero).\n  getInitialRowTop(rowContainerType) {\n    return this.suppressRowTransform ? this.getInitialRowTopShared(rowContainerType) : void 0;\n  }\n  getInitialTransform(rowContainerType) {\n    return this.suppressRowTransform ? void 0 : `translateY(${this.getInitialRowTopShared(rowContainerType)})`;\n  }\n  getInitialRowTopShared(rowContainerType) {\n    if (this.printLayout) {\n      return \"\";\n    }\n    let rowTop;\n    if (this.isSticky()) {\n      rowTop = this.rowNode.stickyRowTop;\n    } else {\n      const pixels = this.slideInAnimation[rowContainerType] ? this.roundRowTopToBounds(this.rowNode.oldRowTop) : this.rowNode.rowTop;\n      const afterPaginationPixels = this.applyPaginationOffset(pixels);\n      rowTop = this.rowNode.isRowPinned() ? afterPaginationPixels : this.beans.rowContainerHeightService.getRealPixelPosition(afterPaginationPixels);\n    }\n    return rowTop + \"px\";\n  }\n  setRowTopStyle(topPx) {\n    this.allRowGuis.forEach(\n      (gui) => this.suppressRowTransform ? gui.rowComp.setTop(topPx) : gui.rowComp.setTransform(`translateY(${topPx})`)\n    );\n  }\n  getRowNode() {\n    return this.rowNode;\n  }\n  getCellCtrl(column) {\n    let res = null;\n    this.getAllCellCtrls().forEach((cellCtrl) => {\n      if (cellCtrl.getColumn() == column) {\n        res = cellCtrl;\n      }\n    });\n    if (res != null) {\n      return res;\n    }\n    this.getAllCellCtrls().forEach((cellCtrl) => {\n      if (cellCtrl.getColSpanningList().indexOf(column) >= 0) {\n        res = cellCtrl;\n      }\n    });\n    return res;\n  }\n  onRowIndexChanged() {\n    if (this.rowNode.rowIndex != null) {\n      this.onCellFocusChanged();\n      this.updateRowIndexes();\n      this.postProcessCss();\n    }\n  }\n  getRowIndex() {\n    return this.rowNode.getRowIndexString();\n  }\n  updateRowIndexes(gui) {\n    const rowIndexStr = this.rowNode.getRowIndexString();\n    const headerRowCount = this.beans.headerNavigationService.getHeaderRowCount() + this.beans.filterManager.getHeaderRowCount();\n    const rowIsEven = this.rowNode.rowIndex % 2 === 0;\n    const ariaRowIndex = headerRowCount + this.rowNode.rowIndex + 1;\n    this.forEachGui(gui, (c) => {\n      c.rowComp.setRowIndex(rowIndexStr);\n      c.rowComp.addOrRemoveCssClass(\"ag-row-even\", rowIsEven);\n      c.rowComp.addOrRemoveCssClass(\"ag-row-odd\", !rowIsEven);\n      setAriaRowIndex(c.element, ariaRowIndex);\n    });\n  }\n};\n_RowCtrl.DOM_DATA_KEY_ROW_CTRL = \"renderedRow\";\nvar RowCtrl = _RowCtrl;\n\n// community-modules/core/src/gridBodyComp/rowContainer/rowContainerEventsFeature.ts\nvar RowContainerEventsFeature = class extends BeanStub {\n  constructor(element) {\n    super();\n    this.element = element;\n  }\n  postConstruct() {\n    this.addKeyboardListeners();\n    this.addMouseListeners();\n    this.mockContextMenuForIPad();\n  }\n  addKeyboardListeners() {\n    const eventName = \"keydown\";\n    const listener = this.processKeyboardEvent.bind(this, eventName);\n    this.addManagedListener(this.element, eventName, listener);\n  }\n  addMouseListeners() {\n    const mouseDownEvent = isEventSupported(\"touchstart\") ? \"touchstart\" : \"mousedown\";\n    const eventNames = [\"dblclick\", \"contextmenu\", \"mouseover\", \"mouseout\", \"click\", mouseDownEvent];\n    eventNames.forEach((eventName) => {\n      const listener = this.processMouseEvent.bind(this, eventName);\n      this.addManagedListener(this.element, eventName, listener);\n    });\n  }\n  processMouseEvent(eventName, mouseEvent) {\n    if (!this.mouseEventService.isEventFromThisGrid(mouseEvent) || isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    const rowComp = this.getRowForEvent(mouseEvent);\n    const cellCtrl = this.mouseEventService.getRenderedCellForEvent(mouseEvent);\n    if (eventName === \"contextmenu\") {\n      this.handleContextMenuMouseEvent(mouseEvent, void 0, rowComp, cellCtrl);\n    } else {\n      if (cellCtrl) {\n        cellCtrl.onMouseEvent(eventName, mouseEvent);\n      }\n      if (rowComp) {\n        rowComp.onMouseEvent(eventName, mouseEvent);\n      }\n    }\n  }\n  mockContextMenuForIPad() {\n    if (!isIOSUserAgent()) {\n      return;\n    }\n    const touchListener = new TouchListener(this.element);\n    const longTapListener = (event) => {\n      const rowComp = this.getRowForEvent(event.touchEvent);\n      const cellComp = this.mouseEventService.getRenderedCellForEvent(event.touchEvent);\n      this.handleContextMenuMouseEvent(void 0, event.touchEvent, rowComp, cellComp);\n    };\n    this.addManagedListener(touchListener, TouchListener.EVENT_LONG_TAP, longTapListener);\n    this.addDestroyFunc(() => touchListener.destroy());\n  }\n  getRowForEvent(event) {\n    let sourceElement = event.target;\n    while (sourceElement) {\n      const rowCon = this.gos.getDomData(sourceElement, RowCtrl.DOM_DATA_KEY_ROW_CTRL);\n      if (rowCon) {\n        return rowCon;\n      }\n      sourceElement = sourceElement.parentElement;\n    }\n    return null;\n  }\n  handleContextMenuMouseEvent(mouseEvent, touchEvent, rowComp, cellCtrl) {\n    const rowNode = rowComp ? rowComp.getRowNode() : null;\n    const column = cellCtrl ? cellCtrl.getColumn() : null;\n    let value = null;\n    if (column) {\n      const event = mouseEvent ? mouseEvent : touchEvent;\n      cellCtrl.dispatchCellContextMenuEvent(event != null ? event : null);\n      value = this.valueService.getValue(column, rowNode);\n    }\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const anchorToElement = cellCtrl ? cellCtrl.getGui() : gridBodyCon.getGridBodyElement();\n    this.menuService.showContextMenu({ mouseEvent, touchEvent, rowNode, column, value, anchorToElement });\n  }\n  getControlsForEventTarget(target) {\n    return {\n      cellCtrl: getCtrlForEventTarget(this.gos, target, CellCtrl.DOM_DATA_KEY_CELL_CTRL),\n      rowCtrl: getCtrlForEventTarget(this.gos, target, RowCtrl.DOM_DATA_KEY_ROW_CTRL)\n    };\n  }\n  processKeyboardEvent(eventName, keyboardEvent) {\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(keyboardEvent.target);\n    if (keyboardEvent.defaultPrevented) {\n      return;\n    }\n    if (cellCtrl) {\n      this.processCellKeyboardEvent(cellCtrl, eventName, keyboardEvent);\n    } else if (rowCtrl && rowCtrl.isFullWidth()) {\n      this.processFullWidthRowKeyboardEvent(rowCtrl, eventName, keyboardEvent);\n    }\n  }\n  processCellKeyboardEvent(cellCtrl, eventName, keyboardEvent) {\n    const rowNode = cellCtrl.getRowNode();\n    const column = cellCtrl.getColumn();\n    const editing = cellCtrl.isEditing();\n    const gridProcessingAllowed = !isUserSuppressingKeyboardEvent(this.gos, keyboardEvent, rowNode, column, editing);\n    if (gridProcessingAllowed) {\n      if (eventName === \"keydown\") {\n        const wasScrollKey = !editing && this.navigationService.handlePageScrollingKey(keyboardEvent);\n        if (!wasScrollKey) {\n          cellCtrl.onKeyDown(keyboardEvent);\n        }\n        this.doGridOperations(keyboardEvent, cellCtrl.isEditing());\n        if (isEventFromPrintableCharacter(keyboardEvent)) {\n          cellCtrl.processCharacter(keyboardEvent);\n        }\n      }\n    }\n    if (eventName === \"keydown\") {\n      const cellKeyDownEvent = cellCtrl.createEvent(keyboardEvent, Events.EVENT_CELL_KEY_DOWN);\n      this.eventService.dispatchEvent(cellKeyDownEvent);\n    }\n  }\n  processFullWidthRowKeyboardEvent(rowComp, eventName, keyboardEvent) {\n    const rowNode = rowComp.getRowNode();\n    const focusedCell = this.focusService.getFocusedCell();\n    const column = focusedCell && focusedCell.column;\n    const gridProcessingAllowed = !isUserSuppressingKeyboardEvent(this.gos, keyboardEvent, rowNode, column, false);\n    if (gridProcessingAllowed) {\n      const key = keyboardEvent.key;\n      if (eventName === \"keydown\") {\n        switch (key) {\n          case KeyCode.PAGE_HOME:\n          case KeyCode.PAGE_END:\n          case KeyCode.PAGE_UP:\n          case KeyCode.PAGE_DOWN:\n            this.navigationService.handlePageScrollingKey(keyboardEvent, true);\n            break;\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n            rowComp.onKeyboardNavigate(keyboardEvent);\n            break;\n          case KeyCode.TAB:\n            rowComp.onTabKeyDown(keyboardEvent);\n            break;\n          default:\n        }\n      }\n    }\n    if (eventName === \"keydown\") {\n      const cellKeyDownEvent = rowComp.createRowEvent(Events.EVENT_CELL_KEY_DOWN, keyboardEvent);\n      this.eventService.dispatchEvent(cellKeyDownEvent);\n    }\n  }\n  doGridOperations(keyboardEvent, editing) {\n    if (!keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\n      return;\n    }\n    if (editing) {\n      return;\n    }\n    if (!this.mouseEventService.isEventFromThisGrid(keyboardEvent)) {\n      return;\n    }\n    const keyCode = normaliseQwertyAzerty(keyboardEvent);\n    if (keyCode === KeyCode.A) {\n      return this.onCtrlAndA(keyboardEvent);\n    }\n    if (keyCode === KeyCode.C) {\n      return this.onCtrlAndC(keyboardEvent);\n    }\n    if (keyCode === KeyCode.D) {\n      return this.onCtrlAndD(keyboardEvent);\n    }\n    if (keyCode === KeyCode.V) {\n      return this.onCtrlAndV(keyboardEvent);\n    }\n    if (keyCode === KeyCode.X) {\n      return this.onCtrlAndX(keyboardEvent);\n    }\n    if (keyCode === KeyCode.Y) {\n      return this.onCtrlAndY();\n    }\n    if (keyCode === KeyCode.Z) {\n      return this.onCtrlAndZ(keyboardEvent);\n    }\n  }\n  onCtrlAndA(event) {\n    const { pinnedRowModel, paginationProxy, rangeService } = this;\n    if (rangeService && paginationProxy.isRowsToRender()) {\n      const [isEmptyPinnedTop, isEmptyPinnedBottom] = [\n        pinnedRowModel.isEmpty(\"top\"),\n        pinnedRowModel.isEmpty(\"bottom\")\n      ];\n      const floatingStart = isEmptyPinnedTop ? null : \"top\";\n      let floatingEnd;\n      let rowEnd;\n      if (isEmptyPinnedBottom) {\n        floatingEnd = null;\n        rowEnd = this.paginationProxy.getRowCount() - 1;\n      } else {\n        floatingEnd = \"bottom\";\n        rowEnd = pinnedRowModel.getPinnedBottomRowData().length - 1;\n      }\n      const allDisplayedColumns = this.columnModel.getAllDisplayedColumns();\n      if (missingOrEmpty(allDisplayedColumns)) {\n        return;\n      }\n      rangeService.setCellRange({\n        rowStartIndex: 0,\n        rowStartPinned: floatingStart,\n        rowEndIndex: rowEnd,\n        rowEndPinned: floatingEnd,\n        columnStart: allDisplayedColumns[0],\n        columnEnd: last(allDisplayedColumns)\n      });\n    }\n    event.preventDefault();\n  }\n  onCtrlAndC(event) {\n    if (!this.clipboardService || this.gos.get(\"enableCellTextSelection\")) {\n      return;\n    }\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(event.target);\n    if ((cellCtrl == null ? void 0 : cellCtrl.isEditing()) || (rowCtrl == null ? void 0 : rowCtrl.isEditing())) {\n      return;\n    }\n    event.preventDefault();\n    this.clipboardService.copyToClipboard();\n  }\n  onCtrlAndX(event) {\n    if (!this.clipboardService || this.gos.get(\"enableCellTextSelection\") || this.gos.get(\"suppressCutToClipboard\")) {\n      return;\n    }\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(event.target);\n    if ((cellCtrl == null ? void 0 : cellCtrl.isEditing()) || (rowCtrl == null ? void 0 : rowCtrl.isEditing())) {\n      return;\n    }\n    event.preventDefault();\n    this.clipboardService.cutToClipboard(void 0, \"ui\");\n  }\n  onCtrlAndV(event) {\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(event.target);\n    if ((cellCtrl == null ? void 0 : cellCtrl.isEditing()) || (rowCtrl == null ? void 0 : rowCtrl.isEditing())) {\n      return;\n    }\n    if (this.clipboardService && !this.gos.get(\"suppressClipboardPaste\")) {\n      this.clipboardService.pasteFromClipboard();\n    }\n  }\n  onCtrlAndD(event) {\n    if (this.clipboardService && !this.gos.get(\"suppressClipboardPaste\")) {\n      this.clipboardService.copyRangeDown();\n    }\n    event.preventDefault();\n  }\n  onCtrlAndZ(event) {\n    if (!this.gos.get(\"undoRedoCellEditing\")) {\n      return;\n    }\n    event.preventDefault();\n    if (event.shiftKey) {\n      this.undoRedoService.redo(\"ui\");\n    } else {\n      this.undoRedoService.undo(\"ui\");\n    }\n  }\n  onCtrlAndY() {\n    this.undoRedoService.redo(\"ui\");\n  }\n};\n__decorateClass([\n  Autowired(\"mouseEventService\")\n], RowContainerEventsFeature.prototype, \"mouseEventService\", 2);\n__decorateClass([\n  Autowired(\"valueService\")\n], RowContainerEventsFeature.prototype, \"valueService\", 2);\n__decorateClass([\n  Autowired(\"menuService\")\n], RowContainerEventsFeature.prototype, \"menuService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], RowContainerEventsFeature.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"navigationService\")\n], RowContainerEventsFeature.prototype, \"navigationService\", 2);\n__decorateClass([\n  Autowired(\"focusService\")\n], RowContainerEventsFeature.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"undoRedoService\")\n], RowContainerEventsFeature.prototype, \"undoRedoService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], RowContainerEventsFeature.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], RowContainerEventsFeature.prototype, \"paginationProxy\", 2);\n__decorateClass([\n  Autowired(\"pinnedRowModel\")\n], RowContainerEventsFeature.prototype, \"pinnedRowModel\", 2);\n__decorateClass([\n  Optional(\"rangeService\")\n], RowContainerEventsFeature.prototype, \"rangeService\", 2);\n__decorateClass([\n  Optional(\"clipboardService\")\n], RowContainerEventsFeature.prototype, \"clipboardService\", 2);\n__decorateClass([\n  PostConstruct\n], RowContainerEventsFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/gridBodyComp/viewportSizeFeature.ts\nvar ViewportSizeFeature = class extends BeanStub {\n  constructor(centerContainerCtrl) {\n    super();\n    this.centerContainerCtrl = centerContainerCtrl;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n      this.listenForResize();\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_SCROLLBAR_WIDTH_CHANGED, this.onScrollbarWidthChanged.bind(this));\n    this.addManagedPropertyListeners([\"alwaysShowHorizontalScroll\", \"alwaysShowVerticalScroll\"], () => {\n      this.checkViewportAndScrolls();\n    });\n  }\n  listenForResize() {\n    const listener = () => this.onCenterViewportResized();\n    this.centerContainerCtrl.registerViewportResizeListener(listener);\n    this.gridBodyCtrl.registerBodyViewportResizeListener(listener);\n  }\n  onScrollbarWidthChanged() {\n    this.checkViewportAndScrolls();\n  }\n  onCenterViewportResized() {\n    if (this.centerContainerCtrl.isViewportInTheDOMTree()) {\n      this.keepPinnedColumnsNarrowerThanViewport();\n      this.checkViewportAndScrolls();\n      const newWidth = this.centerContainerCtrl.getCenterWidth();\n      if (newWidth !== this.centerWidth) {\n        this.centerWidth = newWidth;\n        this.columnModel.refreshFlexedColumns(\n          { viewportWidth: this.centerWidth, updateBodyWidths: true, fireResizedEvent: true }\n        );\n      }\n    } else {\n      this.bodyHeight = 0;\n    }\n  }\n  keepPinnedColumnsNarrowerThanViewport() {\n    const eBodyViewport = this.gridBodyCtrl.getBodyViewportElement();\n    const bodyWidth = getInnerWidth(eBodyViewport);\n    if (bodyWidth <= 50) {\n      return;\n    }\n    let columnsToRemove = this.getPinnedColumnsOverflowingViewport(bodyWidth - 50);\n    const processUnpinnedColumns = this.gos.getCallback(\"processUnpinnedColumns\");\n    if (!columnsToRemove.length) {\n      return;\n    }\n    if (processUnpinnedColumns) {\n      const params = {\n        columns: columnsToRemove,\n        viewportWidth: bodyWidth\n      };\n      columnsToRemove = processUnpinnedColumns(params);\n    }\n    this.columnModel.setColumnsPinned(columnsToRemove, null, \"viewportSizeFeature\");\n  }\n  getPinnedColumnsOverflowingViewport(viewportWidth) {\n    const pinnedRightWidth = this.pinnedWidthService.getPinnedRightWidth();\n    const pinnedLeftWidth = this.pinnedWidthService.getPinnedLeftWidth();\n    const totalPinnedWidth = pinnedRightWidth + pinnedLeftWidth;\n    if (totalPinnedWidth < viewportWidth) {\n      return [];\n    }\n    const pinnedLeftColumns = [...this.columnModel.getDisplayedLeftColumns()];\n    const pinnedRightColumns = [...this.columnModel.getDisplayedRightColumns()];\n    let indexRight = 0;\n    let indexLeft = 0;\n    let totalWidthRemoved = 0;\n    const columnsToRemove = [];\n    let spaceNecessary = totalPinnedWidth - totalWidthRemoved - viewportWidth;\n    while ((indexLeft < pinnedLeftColumns.length || indexRight < pinnedRightColumns.length) && spaceNecessary > 0) {\n      if (indexRight < pinnedRightColumns.length) {\n        const currentColumn = pinnedRightColumns[indexRight++];\n        spaceNecessary -= currentColumn.getActualWidth();\n        columnsToRemove.push(currentColumn);\n      }\n      if (indexLeft < pinnedLeftColumns.length && spaceNecessary > 0) {\n        const currentColumn = pinnedLeftColumns[indexLeft++];\n        spaceNecessary -= currentColumn.getActualWidth();\n        columnsToRemove.push(currentColumn);\n      }\n    }\n    return columnsToRemove;\n  }\n  // gets called every time the viewport size changes. we use this to check visibility of scrollbars\n  // in the grid panel, and also to check size and position of viewport for row and column virtualisation.\n  checkViewportAndScrolls() {\n    this.updateScrollVisibleService();\n    this.checkBodyHeight();\n    this.onHorizontalViewportChanged();\n    this.gridBodyCtrl.getScrollFeature().checkScrollLeft();\n  }\n  getBodyHeight() {\n    return this.bodyHeight;\n  }\n  checkBodyHeight() {\n    const eBodyViewport = this.gridBodyCtrl.getBodyViewportElement();\n    const bodyHeight = getInnerHeight(eBodyViewport);\n    if (this.bodyHeight !== bodyHeight) {\n      this.bodyHeight = bodyHeight;\n      const event = {\n        type: Events.EVENT_BODY_HEIGHT_CHANGED\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  updateScrollVisibleService() {\n    this.updateScrollVisibleServiceImpl();\n    setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);\n  }\n  updateScrollVisibleServiceImpl() {\n    const params = {\n      horizontalScrollShowing: this.isHorizontalScrollShowing(),\n      verticalScrollShowing: this.gridBodyCtrl.isVerticalScrollShowing()\n    };\n    this.scrollVisibleService.setScrollsVisible(params);\n  }\n  isHorizontalScrollShowing() {\n    return this.centerContainerCtrl.isHorizontalScrollShowing();\n  }\n  // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n  // out the virtual columns again. gets called from following locations:\n  // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged\n  onHorizontalViewportChanged() {\n    const scrollWidth = this.centerContainerCtrl.getCenterWidth();\n    const scrollPosition = this.centerContainerCtrl.getViewportScrollLeft();\n    this.columnModel.setViewportPosition(scrollWidth, scrollPosition);\n  }\n};\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], ViewportSizeFeature.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"pinnedWidthService\")\n], ViewportSizeFeature.prototype, \"pinnedWidthService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], ViewportSizeFeature.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"scrollVisibleService\")\n], ViewportSizeFeature.prototype, \"scrollVisibleService\", 2);\n__decorateClass([\n  PostConstruct\n], ViewportSizeFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/gridBodyComp/rowContainer/setPinnedLeftWidthFeature.ts\nvar SetPinnedLeftWidthFeature = class extends BeanStub {\n  constructor(element) {\n    super();\n    this.element = element;\n  }\n  postConstruct() {\n    this.addManagedListener(this.eventService, Events.EVENT_LEFT_PINNED_WIDTH_CHANGED, this.onPinnedLeftWidthChanged.bind(this));\n  }\n  onPinnedLeftWidthChanged() {\n    const leftWidth = this.pinnedWidthService.getPinnedLeftWidth();\n    const displayed = leftWidth > 0;\n    setDisplayed(this.element, displayed);\n    setFixedWidth(this.element, leftWidth);\n  }\n  getWidth() {\n    return this.pinnedWidthService.getPinnedLeftWidth();\n  }\n};\n__decorateClass([\n  Autowired(\"pinnedWidthService\")\n], SetPinnedLeftWidthFeature.prototype, \"pinnedWidthService\", 2);\n__decorateClass([\n  PostConstruct\n], SetPinnedLeftWidthFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/gridBodyComp/rowContainer/setPinnedRightWidthFeature.ts\nvar SetPinnedRightWidthFeature = class extends BeanStub {\n  constructor(element) {\n    super();\n    this.element = element;\n  }\n  postConstruct() {\n    this.addManagedListener(this.eventService, Events.EVENT_RIGHT_PINNED_WIDTH_CHANGED, this.onPinnedRightWidthChanged.bind(this));\n  }\n  onPinnedRightWidthChanged() {\n    const rightWidth = this.pinnedWidthService.getPinnedRightWidth();\n    const displayed = rightWidth > 0;\n    setDisplayed(this.element, displayed);\n    setFixedWidth(this.element, rightWidth);\n  }\n  getWidth() {\n    return this.pinnedWidthService.getPinnedRightWidth();\n  }\n};\n__decorateClass([\n  Autowired(\"pinnedWidthService\")\n], SetPinnedRightWidthFeature.prototype, \"pinnedWidthService\", 2);\n__decorateClass([\n  PostConstruct\n], SetPinnedRightWidthFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/gridBodyComp/rowContainer/setHeightFeature.ts\nvar SetHeightFeature = class extends BeanStub {\n  constructor(eContainer, eViewport) {\n    super();\n    this.eContainer = eContainer;\n    this.eViewport = eViewport;\n  }\n  postConstruct() {\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_CONTAINER_HEIGHT_CHANGED, this.onHeightChanged.bind(this));\n  }\n  onHeightChanged() {\n    const height = this.maxDivHeightScaler.getUiContainerHeight();\n    const heightString = height != null ? `${height}px` : ``;\n    this.eContainer.style.height = heightString;\n    if (this.eViewport) {\n      this.eViewport.style.height = heightString;\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"rowContainerHeightService\")\n], SetHeightFeature.prototype, \"maxDivHeightScaler\", 2);\n__decorateClass([\n  PostConstruct\n], SetHeightFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/gridBodyComp/rowContainer/dragListenerFeature.ts\nvar DragListenerFeature = class extends BeanStub {\n  constructor(eContainer) {\n    super();\n    this.eContainer = eContainer;\n  }\n  postConstruct() {\n    if (!this.rangeService) {\n      return;\n    }\n    this.params = {\n      eElement: this.eContainer,\n      onDragStart: this.rangeService.onDragStart.bind(this.rangeService),\n      onDragStop: this.rangeService.onDragStop.bind(this.rangeService),\n      onDragging: this.rangeService.onDragging.bind(this.rangeService)\n    };\n    this.addManagedPropertyListener(\"enableRangeSelection\", (props) => {\n      const isEnabled = props.currentValue;\n      if (isEnabled) {\n        this.enableFeature();\n        return;\n      }\n      this.disableFeature();\n    });\n    this.addDestroyFunc(() => this.disableFeature());\n    const isRangeSelection = this.gos.get(\"enableRangeSelection\");\n    if (isRangeSelection) {\n      this.enableFeature();\n    }\n  }\n  enableFeature() {\n    this.dragService.addDragSource(this.params);\n  }\n  disableFeature() {\n    this.dragService.removeDragSource(this.params);\n  }\n};\n__decorateClass([\n  Autowired(\"dragService\")\n], DragListenerFeature.prototype, \"dragService\", 2);\n__decorateClass([\n  Optional(\"rangeService\")\n], DragListenerFeature.prototype, \"rangeService\", 2);\n__decorateClass([\n  PostConstruct\n], DragListenerFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/gridBodyComp/centerWidthFeature.ts\nvar CenterWidthFeature = class extends BeanStub {\n  constructor(callback, addSpacer = false) {\n    super();\n    this.callback = callback;\n    this.addSpacer = addSpacer;\n  }\n  postConstruct() {\n    const listener = this.setWidth.bind(this);\n    this.addManagedPropertyListener(\"domLayout\", listener);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_CONTAINER_WIDTH_CHANGED, listener);\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, listener);\n    this.addManagedListener(this.eventService, Events.EVENT_LEFT_PINNED_WIDTH_CHANGED, listener);\n    if (this.addSpacer) {\n      this.addManagedListener(this.eventService, Events.EVENT_RIGHT_PINNED_WIDTH_CHANGED, listener);\n      this.addManagedListener(this.eventService, Events.EVENT_SCROLL_VISIBILITY_CHANGED, listener);\n      this.addManagedListener(this.eventService, Events.EVENT_SCROLLBAR_WIDTH_CHANGED, listener);\n    }\n    this.setWidth();\n  }\n  setWidth() {\n    const { columnModel } = this;\n    const printLayout = this.gos.isDomLayout(\"print\");\n    const centerWidth = columnModel.getBodyContainerWidth();\n    const leftWidth = columnModel.getDisplayedColumnsLeftWidth();\n    const rightWidth = columnModel.getDisplayedColumnsRightWidth();\n    let totalWidth;\n    if (printLayout) {\n      totalWidth = centerWidth + leftWidth + rightWidth;\n    } else {\n      totalWidth = centerWidth;\n      if (this.addSpacer) {\n        const relevantWidth = this.gos.get(\"enableRtl\") ? leftWidth : rightWidth;\n        if (relevantWidth === 0 && this.scrollVisibleService.isVerticalScrollShowing()) {\n          totalWidth += this.gos.getScrollbarWidth();\n        }\n      }\n    }\n    this.callback(totalWidth);\n  }\n};\n__decorateClass([\n  Autowired(\"columnModel\")\n], CenterWidthFeature.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"scrollVisibleService\")\n], CenterWidthFeature.prototype, \"scrollVisibleService\", 2);\n__decorateClass([\n  PostConstruct\n], CenterWidthFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/gridBodyComp/rowContainer/rowContainerCtrl.ts\nvar RowContainerName = /* @__PURE__ */ ((RowContainerName2) => {\n  RowContainerName2[\"LEFT\"] = \"left\";\n  RowContainerName2[\"RIGHT\"] = \"right\";\n  RowContainerName2[\"CENTER\"] = \"center\";\n  RowContainerName2[\"FULL_WIDTH\"] = \"fullWidth\";\n  RowContainerName2[\"TOP_LEFT\"] = \"topLeft\";\n  RowContainerName2[\"TOP_RIGHT\"] = \"topRight\";\n  RowContainerName2[\"TOP_CENTER\"] = \"topCenter\";\n  RowContainerName2[\"TOP_FULL_WIDTH\"] = \"topFullWidth\";\n  RowContainerName2[\"STICKY_TOP_LEFT\"] = \"stickyTopLeft\";\n  RowContainerName2[\"STICKY_TOP_RIGHT\"] = \"stickyTopRight\";\n  RowContainerName2[\"STICKY_TOP_CENTER\"] = \"stickyTopCenter\";\n  RowContainerName2[\"STICKY_TOP_FULL_WIDTH\"] = \"stickyTopFullWidth\";\n  RowContainerName2[\"STICKY_BOTTOM_LEFT\"] = \"stickyBottomLeft\";\n  RowContainerName2[\"STICKY_BOTTOM_RIGHT\"] = \"stickyBottomRight\";\n  RowContainerName2[\"STICKY_BOTTOM_CENTER\"] = \"stickyBottomCenter\";\n  RowContainerName2[\"STICKY_BOTTOM_FULL_WIDTH\"] = \"stickyBottomFullWidth\";\n  RowContainerName2[\"BOTTOM_LEFT\"] = \"bottomLeft\";\n  RowContainerName2[\"BOTTOM_RIGHT\"] = \"bottomRight\";\n  RowContainerName2[\"BOTTOM_CENTER\"] = \"bottomCenter\";\n  RowContainerName2[\"BOTTOM_FULL_WIDTH\"] = \"bottomFullWidth\";\n  return RowContainerName2;\n})(RowContainerName || {});\nvar RowContainerType = /* @__PURE__ */ ((RowContainerType3) => {\n  RowContainerType3[\"LEFT\"] = \"left\";\n  RowContainerType3[\"RIGHT\"] = \"right\";\n  RowContainerType3[\"CENTER\"] = \"center\";\n  RowContainerType3[\"FULL_WIDTH\"] = \"fullWidth\";\n  return RowContainerType3;\n})(RowContainerType || {});\nfunction getRowContainerTypeForName(name) {\n  switch (name) {\n    case \"center\" /* CENTER */:\n    case \"topCenter\" /* TOP_CENTER */:\n    case \"stickyTopCenter\" /* STICKY_TOP_CENTER */:\n    case \"bottomCenter\" /* BOTTOM_CENTER */:\n    case \"stickyBottomCenter\" /* STICKY_BOTTOM_CENTER */:\n      return \"center\" /* CENTER */;\n    case \"left\" /* LEFT */:\n    case \"topLeft\" /* TOP_LEFT */:\n    case \"stickyTopLeft\" /* STICKY_TOP_LEFT */:\n    case \"bottomLeft\" /* BOTTOM_LEFT */:\n    case \"stickyBottomLeft\" /* STICKY_BOTTOM_LEFT */:\n      return \"left\" /* LEFT */;\n    case \"right\" /* RIGHT */:\n    case \"topRight\" /* TOP_RIGHT */:\n    case \"stickyTopRight\" /* STICKY_TOP_RIGHT */:\n    case \"bottomRight\" /* BOTTOM_RIGHT */:\n    case \"stickyBottomRight\" /* STICKY_BOTTOM_RIGHT */:\n      return \"right\" /* RIGHT */;\n    case \"fullWidth\" /* FULL_WIDTH */:\n    case \"topFullWidth\" /* TOP_FULL_WIDTH */:\n    case \"stickyTopFullWidth\" /* STICKY_TOP_FULL_WIDTH */:\n    case \"bottomFullWidth\" /* BOTTOM_FULL_WIDTH */:\n    case \"stickyBottomFullWidth\" /* STICKY_BOTTOM_FULL_WIDTH */:\n      return \"fullWidth\" /* FULL_WIDTH */;\n    default:\n      throw Error(\"Invalid Row Container Type\");\n  }\n}\nvar ContainerCssClasses = convertToMap([\n  [\"center\" /* CENTER */, \"ag-center-cols-container\"],\n  [\"left\" /* LEFT */, \"ag-pinned-left-cols-container\"],\n  [\"right\" /* RIGHT */, \"ag-pinned-right-cols-container\"],\n  [\"fullWidth\" /* FULL_WIDTH */, \"ag-full-width-container\"],\n  [\"topCenter\" /* TOP_CENTER */, \"ag-floating-top-container\"],\n  [\"topLeft\" /* TOP_LEFT */, \"ag-pinned-left-floating-top\"],\n  [\"topRight\" /* TOP_RIGHT */, \"ag-pinned-right-floating-top\"],\n  [\"topFullWidth\" /* TOP_FULL_WIDTH */, \"ag-floating-top-full-width-container\"],\n  [\"stickyTopCenter\" /* STICKY_TOP_CENTER */, \"ag-sticky-top-container\"],\n  [\"stickyTopLeft\" /* STICKY_TOP_LEFT */, \"ag-pinned-left-sticky-top\"],\n  [\"stickyTopRight\" /* STICKY_TOP_RIGHT */, \"ag-pinned-right-sticky-top\"],\n  [\"stickyTopFullWidth\" /* STICKY_TOP_FULL_WIDTH */, \"ag-sticky-top-full-width-container\"],\n  [\"stickyBottomCenter\" /* STICKY_BOTTOM_CENTER */, \"ag-sticky-bottom-container\"],\n  [\"stickyBottomLeft\" /* STICKY_BOTTOM_LEFT */, \"ag-pinned-left-sticky-bottom\"],\n  [\"stickyBottomRight\" /* STICKY_BOTTOM_RIGHT */, \"ag-pinned-right-sticky-bottom\"],\n  [\"stickyBottomFullWidth\" /* STICKY_BOTTOM_FULL_WIDTH */, \"ag-sticky-bottom-full-width-container\"],\n  [\"bottomCenter\" /* BOTTOM_CENTER */, \"ag-floating-bottom-container\"],\n  [\"bottomLeft\" /* BOTTOM_LEFT */, \"ag-pinned-left-floating-bottom\"],\n  [\"bottomRight\" /* BOTTOM_RIGHT */, \"ag-pinned-right-floating-bottom\"],\n  [\"bottomFullWidth\" /* BOTTOM_FULL_WIDTH */, \"ag-floating-bottom-full-width-container\"]\n]);\nvar ViewportCssClasses = convertToMap([\n  [\"center\" /* CENTER */, \"ag-center-cols-viewport\"],\n  [\"topCenter\" /* TOP_CENTER */, \"ag-floating-top-viewport\"],\n  [\"stickyTopCenter\" /* STICKY_TOP_CENTER */, \"ag-sticky-top-viewport\"],\n  [\"bottomCenter\" /* BOTTOM_CENTER */, \"ag-floating-bottom-viewport\"],\n  [\"stickyBottomCenter\" /* STICKY_BOTTOM_CENTER */, \"ag-sticky-bottom-viewport\"]\n]);\nvar _RowContainerCtrl = class _RowContainerCtrl extends BeanStub {\n  constructor(name) {\n    super();\n    this.visible = true;\n    // Maintaining a constant reference enables optimization in React.\n    this.EMPTY_CTRLS = [];\n    this.name = name;\n    this.isFullWithContainer = this.name === \"topFullWidth\" /* TOP_FULL_WIDTH */ || this.name === \"stickyTopFullWidth\" /* STICKY_TOP_FULL_WIDTH */ || this.name === \"stickyBottomFullWidth\" /* STICKY_BOTTOM_FULL_WIDTH */ || this.name === \"bottomFullWidth\" /* BOTTOM_FULL_WIDTH */ || this.name === \"fullWidth\" /* FULL_WIDTH */;\n  }\n  static getRowContainerCssClasses(name) {\n    const containerClass = ContainerCssClasses.get(name);\n    const viewportClass = ViewportCssClasses.get(name);\n    return { container: containerClass, viewport: viewportClass };\n  }\n  static getPinned(name) {\n    switch (name) {\n      case \"bottomLeft\" /* BOTTOM_LEFT */:\n      case \"topLeft\" /* TOP_LEFT */:\n      case \"stickyTopLeft\" /* STICKY_TOP_LEFT */:\n      case \"stickyBottomLeft\" /* STICKY_BOTTOM_LEFT */:\n      case \"left\" /* LEFT */:\n        return \"left\";\n      case \"bottomRight\" /* BOTTOM_RIGHT */:\n      case \"topRight\" /* TOP_RIGHT */:\n      case \"stickyTopRight\" /* STICKY_TOP_RIGHT */:\n      case \"stickyBottomRight\" /* STICKY_BOTTOM_RIGHT */:\n      case \"right\" /* RIGHT */:\n        return \"right\";\n      default:\n        return null;\n    }\n  }\n  postConstruct() {\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    this.forContainers(\n      [\"center\" /* CENTER */],\n      () => this.viewportSizeFeature = this.createManagedBean(new ViewportSizeFeature(this))\n    );\n  }\n  registerWithCtrlsService() {\n    switch (this.name) {\n      case \"fullWidth\" /* FULL_WIDTH */:\n      case \"topFullWidth\" /* TOP_FULL_WIDTH */:\n      case \"stickyTopFullWidth\" /* STICKY_TOP_FULL_WIDTH */:\n      case \"bottomFullWidth\" /* BOTTOM_FULL_WIDTH */:\n      case \"stickyBottomFullWidth\" /* STICKY_BOTTOM_FULL_WIDTH */:\n        return;\n      default: {\n        this.ctrlsService.register(this.name, this);\n      }\n    }\n  }\n  forContainers(names, callback) {\n    if (names.indexOf(this.name) >= 0) {\n      callback();\n    }\n  }\n  getContainerElement() {\n    return this.eContainer;\n  }\n  getViewportSizeFeature() {\n    return this.viewportSizeFeature;\n  }\n  setComp(view, eContainer, eViewport) {\n    this.comp = view;\n    this.eContainer = eContainer;\n    this.eViewport = eViewport;\n    this.createManagedBean(new RowContainerEventsFeature(this.eContainer));\n    this.addPreventScrollWhileDragging();\n    this.listenOnDomOrder();\n    this.stopHScrollOnPinnedRows();\n    const allTopNoFW = [\"topCenter\" /* TOP_CENTER */, \"topLeft\" /* TOP_LEFT */, \"topRight\" /* TOP_RIGHT */];\n    const allStickyTopNoFW = [\"stickyTopCenter\" /* STICKY_TOP_CENTER */, \"stickyTopLeft\" /* STICKY_TOP_LEFT */, \"stickyTopRight\" /* STICKY_TOP_RIGHT */];\n    const allStickyBottomNoFW = [\"stickyBottomCenter\" /* STICKY_BOTTOM_CENTER */, \"stickyBottomLeft\" /* STICKY_BOTTOM_LEFT */, \"stickyBottomRight\" /* STICKY_BOTTOM_RIGHT */];\n    const allBottomNoFW = [\"bottomCenter\" /* BOTTOM_CENTER */, \"bottomLeft\" /* BOTTOM_LEFT */, \"bottomRight\" /* BOTTOM_RIGHT */];\n    const allMiddleNoFW = [\"center\" /* CENTER */, \"left\" /* LEFT */, \"right\" /* RIGHT */];\n    const allNoFW = [...allTopNoFW, ...allBottomNoFW, ...allMiddleNoFW, ...allStickyTopNoFW, ...allStickyBottomNoFW];\n    const allMiddle = [\"center\" /* CENTER */, \"left\" /* LEFT */, \"right\" /* RIGHT */, \"fullWidth\" /* FULL_WIDTH */];\n    const allCenter = [\"center\" /* CENTER */, \"topCenter\" /* TOP_CENTER */, \"stickyTopCenter\" /* STICKY_TOP_CENTER */, \"bottomCenter\" /* BOTTOM_CENTER */, \"stickyBottomCenter\" /* STICKY_BOTTOM_CENTER */];\n    const allLeft = [\"left\" /* LEFT */, \"bottomLeft\" /* BOTTOM_LEFT */, \"topLeft\" /* TOP_LEFT */, \"stickyTopLeft\" /* STICKY_TOP_LEFT */, \"stickyBottomLeft\" /* STICKY_BOTTOM_LEFT */];\n    const allRight = [\"right\" /* RIGHT */, \"bottomRight\" /* BOTTOM_RIGHT */, \"topRight\" /* TOP_RIGHT */, \"stickyTopRight\" /* STICKY_TOP_RIGHT */, \"stickyBottomRight\" /* STICKY_BOTTOM_RIGHT */];\n    this.forContainers(allLeft, () => {\n      this.pinnedWidthFeature = this.createManagedBean(new SetPinnedLeftWidthFeature(this.eContainer));\n      this.addManagedListener(this.eventService, Events.EVENT_LEFT_PINNED_WIDTH_CHANGED, () => this.onPinnedWidthChanged());\n    });\n    this.forContainers(allRight, () => {\n      this.pinnedWidthFeature = this.createManagedBean(new SetPinnedRightWidthFeature(this.eContainer));\n      this.addManagedListener(this.eventService, Events.EVENT_RIGHT_PINNED_WIDTH_CHANGED, () => this.onPinnedWidthChanged());\n    });\n    this.forContainers(allMiddle, () => this.createManagedBean(new SetHeightFeature(this.eContainer, this.name === \"center\" /* CENTER */ ? eViewport : void 0)));\n    this.forContainers(allNoFW, () => this.createManagedBean(new DragListenerFeature(this.eContainer)));\n    this.forContainers(allCenter, () => this.createManagedBean(\n      new CenterWidthFeature((width) => this.comp.setContainerWidth(`${width}px`))\n    ));\n    this.addListeners();\n    this.registerWithCtrlsService();\n  }\n  addListeners() {\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, () => this.onDisplayedColumnsChanged());\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, () => this.onDisplayedColumnsWidthChanged());\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_ROWS_CHANGED, (params) => this.onDisplayedRowsChanged(params.afterScroll));\n    this.onDisplayedColumnsChanged();\n    this.onDisplayedColumnsWidthChanged();\n    this.onDisplayedRowsChanged();\n  }\n  listenOnDomOrder() {\n    const allStickyContainers = [\n      \"stickyTopCenter\" /* STICKY_TOP_CENTER */,\n      \"stickyTopLeft\" /* STICKY_TOP_LEFT */,\n      \"stickyTopRight\" /* STICKY_TOP_RIGHT */,\n      \"stickyTopFullWidth\" /* STICKY_TOP_FULL_WIDTH */,\n      \"stickyBottomCenter\" /* STICKY_BOTTOM_CENTER */,\n      \"stickyBottomLeft\" /* STICKY_BOTTOM_LEFT */,\n      \"stickyBottomRight\" /* STICKY_BOTTOM_RIGHT */,\n      \"stickyBottomFullWidth\" /* STICKY_BOTTOM_FULL_WIDTH */\n    ];\n    const isStickContainer = allStickyContainers.indexOf(this.name) >= 0;\n    if (isStickContainer) {\n      this.comp.setDomOrder(true);\n      return;\n    }\n    const listener = () => {\n      const isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n      const isPrintLayout = this.gos.isDomLayout(\"print\");\n      this.comp.setDomOrder(isEnsureDomOrder || isPrintLayout);\n    };\n    this.addManagedPropertyListener(\"domLayout\", listener);\n    listener();\n  }\n  // when editing a pinned row, if the cell is half outside the scrollable area, the browser can\n  // scroll the column into view. we do not want this, the pinned sections should never scroll.\n  // so we listen to scrolls on these containers and reset the scroll if we find one.\n  stopHScrollOnPinnedRows() {\n    this.forContainers([\n      \"topCenter\" /* TOP_CENTER */,\n      \"stickyTopCenter\" /* STICKY_TOP_CENTER */,\n      \"bottomCenter\" /* BOTTOM_CENTER */,\n      \"stickyBottomCenter\" /* STICKY_BOTTOM_CENTER */\n    ], () => {\n      const resetScrollLeft = () => this.eViewport.scrollLeft = 0;\n      this.addManagedListener(this.eViewport, \"scroll\", resetScrollLeft);\n    });\n  }\n  onDisplayedColumnsChanged() {\n    this.forContainers([\"center\" /* CENTER */], () => this.onHorizontalViewportChanged());\n  }\n  onDisplayedColumnsWidthChanged() {\n    this.forContainers([\"center\" /* CENTER */], () => this.onHorizontalViewportChanged());\n  }\n  // this methods prevents the grid views from being scrolled while the dragService is being used\n  // eg. the view should not scroll up and down while dragging rows using the rowDragComp.\n  addPreventScrollWhileDragging() {\n    const preventScroll = (e) => {\n      if (this.dragService.isDragging()) {\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n      }\n    };\n    this.eContainer.addEventListener(\"touchmove\", preventScroll, { passive: false });\n    this.addDestroyFunc(() => this.eContainer.removeEventListener(\"touchmove\", preventScroll));\n  }\n  // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n  // out the virtual columns again. gets called from following locations:\n  // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged\n  onHorizontalViewportChanged(afterScroll = false) {\n    const scrollWidth = this.getCenterWidth();\n    const scrollPosition = this.getCenterViewportScrollLeft();\n    this.columnModel.setViewportPosition(scrollWidth, scrollPosition, afterScroll);\n  }\n  getCenterWidth() {\n    return getInnerWidth(this.eViewport);\n  }\n  getCenterViewportScrollLeft() {\n    return getScrollLeft(this.eViewport, this.enableRtl);\n  }\n  registerViewportResizeListener(listener) {\n    const unsubscribeFromResize = this.resizeObserverService.observeResize(this.eViewport, listener);\n    this.addDestroyFunc(() => unsubscribeFromResize());\n  }\n  isViewportInTheDOMTree() {\n    return isInDOM(this.eViewport);\n  }\n  getViewportScrollLeft() {\n    return getScrollLeft(this.eViewport, this.enableRtl);\n  }\n  isHorizontalScrollShowing() {\n    const isAlwaysShowHorizontalScroll = this.gos.get(\"alwaysShowHorizontalScroll\");\n    return isAlwaysShowHorizontalScroll || isHorizontalScrollShowing(this.eViewport);\n  }\n  getViewportElement() {\n    return this.eViewport;\n  }\n  setContainerTranslateX(amount) {\n    this.eContainer.style.transform = `translateX(${amount}px)`;\n  }\n  getHScrollPosition() {\n    const res = {\n      left: this.eViewport.scrollLeft,\n      right: this.eViewport.scrollLeft + this.eViewport.offsetWidth\n    };\n    return res;\n  }\n  setCenterViewportScrollLeft(value) {\n    setScrollLeft(this.eViewport, value, this.enableRtl);\n  }\n  isContainerVisible() {\n    const pinned = _RowContainerCtrl.getPinned(this.name);\n    return !pinned || !!this.pinnedWidthFeature && this.pinnedWidthFeature.getWidth() > 0;\n  }\n  onPinnedWidthChanged() {\n    const visible = this.isContainerVisible();\n    if (this.visible != visible) {\n      this.visible = visible;\n      this.onDisplayedRowsChanged();\n    }\n  }\n  onDisplayedRowsChanged(afterScroll = false) {\n    const rows = this.getRowCtrls();\n    if (!this.visible || rows.length === 0) {\n      this.comp.setRowCtrls({ rowCtrls: this.EMPTY_CTRLS });\n      return;\n    }\n    const printLayout = this.gos.isDomLayout(\"print\");\n    const embedFullWidthRows = this.gos.get(\"embedFullWidthRows\");\n    const embedFW = embedFullWidthRows || printLayout;\n    const rowsThisContainer = rows.filter((rowCtrl) => {\n      const fullWidthRow = rowCtrl.isFullWidth();\n      const match = this.isFullWithContainer ? !embedFW && fullWidthRow : embedFW || !fullWidthRow;\n      return match;\n    });\n    this.comp.setRowCtrls({ rowCtrls: rowsThisContainer, useFlushSync: afterScroll });\n  }\n  getRowCtrls() {\n    switch (this.name) {\n      case \"topCenter\" /* TOP_CENTER */:\n      case \"topLeft\" /* TOP_LEFT */:\n      case \"topRight\" /* TOP_RIGHT */:\n      case \"topFullWidth\" /* TOP_FULL_WIDTH */:\n        return this.rowRenderer.getTopRowCtrls();\n      case \"stickyTopCenter\" /* STICKY_TOP_CENTER */:\n      case \"stickyTopLeft\" /* STICKY_TOP_LEFT */:\n      case \"stickyTopRight\" /* STICKY_TOP_RIGHT */:\n      case \"stickyTopFullWidth\" /* STICKY_TOP_FULL_WIDTH */:\n        return this.rowRenderer.getStickyTopRowCtrls();\n      case \"stickyBottomCenter\" /* STICKY_BOTTOM_CENTER */:\n      case \"stickyBottomLeft\" /* STICKY_BOTTOM_LEFT */:\n      case \"stickyBottomRight\" /* STICKY_BOTTOM_RIGHT */:\n      case \"stickyBottomFullWidth\" /* STICKY_BOTTOM_FULL_WIDTH */:\n        return this.rowRenderer.getStickyBottomRowCtrls();\n      case \"bottomCenter\" /* BOTTOM_CENTER */:\n      case \"bottomLeft\" /* BOTTOM_LEFT */:\n      case \"bottomRight\" /* BOTTOM_RIGHT */:\n      case \"bottomFullWidth\" /* BOTTOM_FULL_WIDTH */:\n        return this.rowRenderer.getBottomRowCtrls();\n      default:\n        return this.rowRenderer.getCentreRowCtrls();\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"dragService\")\n], _RowContainerCtrl.prototype, \"dragService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], _RowContainerCtrl.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], _RowContainerCtrl.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"resizeObserverService\")\n], _RowContainerCtrl.prototype, \"resizeObserverService\", 2);\n__decorateClass([\n  Autowired(\"rowRenderer\")\n], _RowContainerCtrl.prototype, \"rowRenderer\", 2);\n__decorateClass([\n  PostConstruct\n], _RowContainerCtrl.prototype, \"postConstruct\", 1);\nvar RowContainerCtrl = _RowContainerCtrl;\n\n// community-modules/core/src/gridBodyComp/gridBodyComp.ts\nvar GRID_BODY_TEMPLATE = (\n  /* html */\n  `<div class=\"ag-root ag-unselectable\" role=\"treegrid\">\n        <ag-header-root ref=\"gridHeader\"></ag-header-root>\n        <div class=\"ag-floating-top\" ref=\"eTop\" role=\"presentation\">\n            <ag-row-container ref=\"topLeftContainer\" name=\"${\"topLeft\" /* TOP_LEFT */}\"></ag-row-container>\n            <ag-row-container ref=\"topCenterContainer\" name=\"${\"topCenter\" /* TOP_CENTER */}\"></ag-row-container>\n            <ag-row-container ref=\"topRightContainer\" name=\"${\"topRight\" /* TOP_RIGHT */}\"></ag-row-container>\n            <ag-row-container ref=\"topFullWidthContainer\" name=\"${\"topFullWidth\" /* TOP_FULL_WIDTH */}\"></ag-row-container>\n        </div>\n        <div class=\"ag-body\" ref=\"eBody\" role=\"presentation\">\n            <div class=\"ag-body-viewport\" ref=\"eBodyViewport\" role=\"presentation\">\n                <ag-row-container ref=\"leftContainer\" name=\"${\"left\" /* LEFT */}\"></ag-row-container>\n                <ag-row-container ref=\"centerContainer\" name=\"${\"center\" /* CENTER */}\"></ag-row-container>\n                <ag-row-container ref=\"rightContainer\" name=\"${\"right\" /* RIGHT */}\"></ag-row-container>\n                <ag-row-container ref=\"fullWidthContainer\" name=\"${\"fullWidth\" /* FULL_WIDTH */}\"></ag-row-container>\n            </div>\n            <ag-fake-vertical-scroll></ag-fake-vertical-scroll>\n        </div>\n        <div class=\"ag-sticky-top\" ref=\"eStickyTop\" role=\"presentation\">\n            <ag-row-container ref=\"stickyTopLeftContainer\" name=\"${\"stickyTopLeft\" /* STICKY_TOP_LEFT */}\"></ag-row-container>\n            <ag-row-container ref=\"stickyTopCenterContainer\" name=\"${\"stickyTopCenter\" /* STICKY_TOP_CENTER */}\"></ag-row-container>\n            <ag-row-container ref=\"stickyTopRightContainer\" name=\"${\"stickyTopRight\" /* STICKY_TOP_RIGHT */}\"></ag-row-container>\n            <ag-row-container ref=\"stickyTopFullWidthContainer\" name=\"${\"stickyTopFullWidth\" /* STICKY_TOP_FULL_WIDTH */}\"></ag-row-container>\n        </div>\n        <div class=\"ag-sticky-bottom\" ref=\"eStickyBottom\" role=\"presentation\">\n            <ag-row-container ref=\"stickyBottomLeftContainer\" name=\"${\"stickyBottomLeft\" /* STICKY_BOTTOM_LEFT */}\"></ag-row-container>\n            <ag-row-container ref=\"stickyBottomCenterContainer\" name=\"${\"stickyBottomCenter\" /* STICKY_BOTTOM_CENTER */}\"></ag-row-container>\n            <ag-row-container ref=\"stickyBottomRightContainer\" name=\"${\"stickyBottomRight\" /* STICKY_BOTTOM_RIGHT */}\"></ag-row-container>\n            <ag-row-container ref=\"stickyBottomFullWidthContainer\" name=\"${\"stickyBottomFullWidth\" /* STICKY_BOTTOM_FULL_WIDTH */}\"></ag-row-container>\n        </div>\n        <div class=\"ag-floating-bottom\" ref=\"eBottom\" role=\"presentation\">\n            <ag-row-container ref=\"bottomLeftContainer\" name=\"${\"bottomLeft\" /* BOTTOM_LEFT */}\"></ag-row-container>\n            <ag-row-container ref=\"bottomCenterContainer\" name=\"${\"bottomCenter\" /* BOTTOM_CENTER */}\"></ag-row-container>\n            <ag-row-container ref=\"bottomRightContainer\" name=\"${\"bottomRight\" /* BOTTOM_RIGHT */}\"></ag-row-container>\n            <ag-row-container ref=\"bottomFullWidthContainer\" name=\"${\"bottomFullWidth\" /* BOTTOM_FULL_WIDTH */}\"></ag-row-container>\n        </div>\n        <ag-fake-horizontal-scroll></ag-fake-horizontal-scroll>\n        <ag-overlay-wrapper></ag-overlay-wrapper>\n    </div>`\n);\nvar GridBodyComp = class extends Component {\n  constructor() {\n    super(GRID_BODY_TEMPLATE);\n  }\n  init() {\n    const setHeight = (height, element) => {\n      const heightString = `${height}px`;\n      element.style.minHeight = heightString;\n      element.style.height = heightString;\n    };\n    const compProxy = {\n      setRowAnimationCssOnBodyViewport: (cssClass, animate) => this.setRowAnimationCssOnBodyViewport(cssClass, animate),\n      setColumnCount: (count) => setAriaColCount(this.getGui(), count),\n      setRowCount: (count) => setAriaRowCount(this.getGui(), count),\n      setTopHeight: (height) => setHeight(height, this.eTop),\n      setBottomHeight: (height) => setHeight(height, this.eBottom),\n      setTopDisplay: (display) => this.eTop.style.display = display,\n      setBottomDisplay: (display) => this.eBottom.style.display = display,\n      setStickyTopHeight: (height) => this.eStickyTop.style.height = height,\n      setStickyTopTop: (top) => this.eStickyTop.style.top = top,\n      setStickyTopWidth: (width) => this.eStickyTop.style.width = width,\n      setStickyBottomHeight: (height) => this.eStickyBottom.style.height = height,\n      setStickyBottomBottom: (bottom) => this.eStickyBottom.style.bottom = bottom,\n      setStickyBottomWidth: (width) => this.eStickyBottom.style.width = width,\n      setColumnMovingCss: (cssClass, flag) => this.addOrRemoveCssClass(cssClass, flag),\n      updateLayoutClasses: (cssClass, params) => {\n        const classLists = [\n          this.eBodyViewport.classList,\n          this.eBody.classList\n        ];\n        classLists.forEach((classList) => {\n          classList.toggle(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n          classList.toggle(\"ag-layout-normal\" /* NORMAL */, params.normal);\n          classList.toggle(\"ag-layout-print\" /* PRINT */, params.print);\n        });\n        this.addOrRemoveCssClass(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n        this.addOrRemoveCssClass(\"ag-layout-normal\" /* NORMAL */, params.normal);\n        this.addOrRemoveCssClass(\"ag-layout-print\" /* PRINT */, params.print);\n      },\n      setAlwaysVerticalScrollClass: (cssClass, on) => this.eBodyViewport.classList.toggle(CSS_CLASS_FORCE_VERTICAL_SCROLL, on),\n      registerBodyViewportResizeListener: (listener) => {\n        const unsubscribeFromResize = this.resizeObserverService.observeResize(this.eBodyViewport, listener);\n        this.addDestroyFunc(() => unsubscribeFromResize());\n      },\n      setPinnedTopBottomOverflowY: (overflow) => this.eTop.style.overflowY = this.eBottom.style.overflowY = overflow,\n      setCellSelectableCss: (cssClass, selectable) => {\n        [this.eTop, this.eBodyViewport, this.eBottom].forEach((ct) => ct.classList.toggle(cssClass, selectable));\n      },\n      setBodyViewportWidth: (width) => this.eBodyViewport.style.width = width\n    };\n    this.ctrl = this.createManagedBean(new GridBodyCtrl());\n    this.ctrl.setComp(\n      compProxy,\n      this.getGui(),\n      this.eBodyViewport,\n      this.eTop,\n      this.eBottom,\n      this.eStickyTop,\n      this.eStickyBottom\n    );\n    if (this.rangeService && this.gos.get(\"enableRangeSelection\") || this.gos.get(\"rowSelection\") === \"multiple\") {\n      setAriaMultiSelectable(this.getGui(), true);\n    }\n  }\n  setRowAnimationCssOnBodyViewport(cssClass, animateRows) {\n    const bodyViewportClassList = this.eBodyViewport.classList;\n    bodyViewportClassList.toggle(\"ag-row-animation\" /* ANIMATION_ON */, animateRows);\n    bodyViewportClassList.toggle(\"ag-row-no-animation\" /* ANIMATION_OFF */, !animateRows);\n  }\n  getFloatingTopBottom() {\n    return [this.eTop, this.eBottom];\n  }\n};\n__decorateClass([\n  Autowired(\"resizeObserverService\")\n], GridBodyComp.prototype, \"resizeObserverService\", 2);\n__decorateClass([\n  Optional(\"rangeService\")\n], GridBodyComp.prototype, \"rangeService\", 2);\n__decorateClass([\n  RefSelector(\"eBodyViewport\")\n], GridBodyComp.prototype, \"eBodyViewport\", 2);\n__decorateClass([\n  RefSelector(\"eStickyTop\")\n], GridBodyComp.prototype, \"eStickyTop\", 2);\n__decorateClass([\n  RefSelector(\"eStickyBottom\")\n], GridBodyComp.prototype, \"eStickyBottom\", 2);\n__decorateClass([\n  RefSelector(\"eTop\")\n], GridBodyComp.prototype, \"eTop\", 2);\n__decorateClass([\n  RefSelector(\"eBottom\")\n], GridBodyComp.prototype, \"eBottom\", 2);\n__decorateClass([\n  RefSelector(\"gridHeader\")\n], GridBodyComp.prototype, \"headerRootComp\", 2);\n__decorateClass([\n  RefSelector(\"eBody\")\n], GridBodyComp.prototype, \"eBody\", 2);\n__decorateClass([\n  PostConstruct\n], GridBodyComp.prototype, \"init\", 1);\n\n// community-modules/core/src/gridBodyComp/scrollVisibleService.ts\nvar ScrollVisibleService = class extends BeanStub {\n  postConstruct() {\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this));\n  }\n  onDisplayedColumnsChanged() {\n    this.update();\n  }\n  onDisplayedColumnsWidthChanged() {\n    this.update();\n  }\n  update() {\n    if (this.columnAnimationService.isActive()) {\n      this.columnAnimationService.executeLaterVMTurn(() => {\n        this.columnAnimationService.executeLaterVMTurn(() => this.updateImpl());\n      });\n    } else {\n      this.updateImpl();\n    }\n  }\n  updateImpl() {\n    const centerRowCtrl = this.ctrlsService.get(\"center\");\n    if (!centerRowCtrl || this.columnAnimationService.isActive()) {\n      return;\n    }\n    const params = {\n      horizontalScrollShowing: centerRowCtrl.isHorizontalScrollShowing(),\n      verticalScrollShowing: this.isVerticalScrollShowing()\n    };\n    this.setScrollsVisible(params);\n  }\n  setScrollsVisible(params) {\n    const atLeastOneDifferent = this.horizontalScrollShowing !== params.horizontalScrollShowing || this.verticalScrollShowing !== params.verticalScrollShowing;\n    if (atLeastOneDifferent) {\n      this.horizontalScrollShowing = params.horizontalScrollShowing;\n      this.verticalScrollShowing = params.verticalScrollShowing;\n      const event = {\n        type: Events.EVENT_SCROLL_VISIBILITY_CHANGED\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  // used by pagination service - to know page height\n  isHorizontalScrollShowing() {\n    return this.horizontalScrollShowing;\n  }\n  // used by header container\n  isVerticalScrollShowing() {\n    return this.verticalScrollShowing;\n  }\n};\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], ScrollVisibleService.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"columnAnimationService\")\n], ScrollVisibleService.prototype, \"columnAnimationService\", 2);\n__decorateClass([\n  PostConstruct\n], ScrollVisibleService.prototype, \"postConstruct\", 1);\nScrollVisibleService = __decorateClass([\n  Bean(\"scrollVisibleService\")\n], ScrollVisibleService);\n\n// community-modules/core/src/gridBodyComp/mouseEventService.ts\nvar MouseEventService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.gridInstanceId = MouseEventService.gridInstanceSequence.next();\n  }\n  // we put the instance id onto the main DOM element. this is used for events, when grids are inside grids,\n  // so the grid can work out if the even came from this grid or a grid inside this one. see the ctrl+v logic\n  // for where this is used.\n  stampTopLevelGridCompWithGridInstance(eGridDiv) {\n    eGridDiv[MouseEventService.GRID_DOM_KEY] = this.gridInstanceId;\n  }\n  getRenderedCellForEvent(event) {\n    return getCtrlForEventTarget(this.gos, event.target, CellCtrl.DOM_DATA_KEY_CELL_CTRL);\n  }\n  // walks the path of the event, and returns true if this grid is the first one that it finds. if doing\n  // master / detail grids, and a child grid is found, then it returns false. this stops things like copy/paste\n  // getting executed on many grids at the same time.\n  isEventFromThisGrid(event) {\n    const res = this.isElementInThisGrid(event.target);\n    return res;\n  }\n  isElementInThisGrid(element) {\n    let pointer = element;\n    while (pointer) {\n      const instanceId = pointer[MouseEventService.GRID_DOM_KEY];\n      if (exists(instanceId)) {\n        const eventFromThisGrid = instanceId === this.gridInstanceId;\n        return eventFromThisGrid;\n      }\n      pointer = pointer.parentElement;\n    }\n    return false;\n  }\n  getCellPositionForEvent(event) {\n    const cellComp = this.getRenderedCellForEvent(event);\n    return cellComp ? cellComp.getCellPosition() : null;\n  }\n  getNormalisedPosition(event) {\n    const gridPanelHasScrolls = this.gos.isDomLayout(\"normal\");\n    const e = event;\n    let x;\n    let y;\n    if (e.clientX != null || e.clientY != null) {\n      x = e.clientX;\n      y = e.clientY;\n    } else {\n      x = e.x;\n      y = e.y;\n    }\n    if (gridPanelHasScrolls) {\n      const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n      const vRange = gridBodyCon.getScrollFeature().getVScrollPosition();\n      const hRange = gridBodyCon.getScrollFeature().getHScrollPosition();\n      x += hRange.left;\n      y += vRange.top;\n    }\n    return { x, y };\n  }\n};\nMouseEventService.gridInstanceSequence = new NumberSequence();\nMouseEventService.GRID_DOM_KEY = \"__ag_grid_instance\";\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], MouseEventService.prototype, \"ctrlsService\", 2);\nMouseEventService = __decorateClass([\n  Bean(\"mouseEventService\")\n], MouseEventService);\n\n// community-modules/core/src/gridBodyComp/navigationService.ts\nvar NavigationService = class extends BeanStub {\n  constructor() {\n    super();\n    this.onPageDown = throttle(this.onPageDown, 100);\n    this.onPageUp = throttle(this.onPageUp, 100);\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n  }\n  handlePageScrollingKey(event, fromFullWidth = false) {\n    const key = event.key;\n    const alt = event.altKey;\n    const ctrl = event.ctrlKey || event.metaKey;\n    const rangeServiceShouldHandleShift = !!this.rangeService && event.shiftKey;\n    const currentCell = this.mouseEventService.getCellPositionForEvent(event);\n    let processed = false;\n    switch (key) {\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        if (!ctrl && !alt) {\n          this.onHomeOrEndKey(key);\n          processed = true;\n        }\n        break;\n      case KeyCode.LEFT:\n      case KeyCode.RIGHT:\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n        if (!currentCell) {\n          return false;\n        }\n        if (ctrl && !alt && !rangeServiceShouldHandleShift) {\n          this.onCtrlUpDownLeftRight(key, currentCell);\n          processed = true;\n        }\n        break;\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n        if (!ctrl && !alt) {\n          processed = this.handlePageUpDown(key, currentCell, fromFullWidth);\n        }\n        break;\n    }\n    if (processed) {\n      event.preventDefault();\n    }\n    return processed;\n  }\n  handlePageUpDown(key, currentCell, fromFullWidth) {\n    if (fromFullWidth) {\n      currentCell = this.focusService.getFocusedCell();\n    }\n    if (!currentCell) {\n      return false;\n    }\n    if (key === KeyCode.PAGE_UP) {\n      this.onPageUp(currentCell);\n    } else {\n      this.onPageDown(currentCell);\n    }\n    return true;\n  }\n  navigateTo(navigateParams) {\n    var _a;\n    const { scrollIndex, scrollType, scrollColumn, focusIndex, focusColumn } = navigateParams;\n    if (exists(scrollColumn) && !scrollColumn.isPinned()) {\n      this.gridBodyCon.getScrollFeature().ensureColumnVisible(scrollColumn);\n    }\n    if (exists(scrollIndex)) {\n      this.gridBodyCon.getScrollFeature().ensureIndexVisible(scrollIndex, scrollType);\n    }\n    if (!navigateParams.isAsync) {\n      this.gridBodyCon.getScrollFeature().ensureIndexVisible(focusIndex);\n    }\n    this.focusService.setFocusedCell({ rowIndex: focusIndex, column: focusColumn, rowPinned: null, forceBrowserFocus: true });\n    (_a = this.rangeService) == null ? void 0 : _a.setRangeToCell({ rowIndex: focusIndex, rowPinned: null, column: focusColumn });\n  }\n  // this method is throttled, see the `constructor`\n  onPageDown(gridCell) {\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const scrollPosition = gridBodyCon.getScrollFeature().getVScrollPosition();\n    const pixelsInOnePage = this.getViewportHeight();\n    const pagingPixelOffset = this.paginationProxy.getPixelOffset();\n    const currentPageBottomPixel = scrollPosition.top + pixelsInOnePage;\n    const currentPageBottomRow = this.paginationProxy.getRowIndexAtPixel(currentPageBottomPixel + pagingPixelOffset);\n    if (this.columnModel.isAutoRowHeightActive()) {\n      this.navigateToNextPageWithAutoHeight(gridCell, currentPageBottomRow);\n    } else {\n      this.navigateToNextPage(gridCell, currentPageBottomRow);\n    }\n  }\n  // this method is throttled, see the `constructor`\n  onPageUp(gridCell) {\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const scrollPosition = gridBodyCon.getScrollFeature().getVScrollPosition();\n    const pagingPixelOffset = this.paginationProxy.getPixelOffset();\n    const currentPageTopPixel = scrollPosition.top;\n    const currentPageTopRow = this.paginationProxy.getRowIndexAtPixel(currentPageTopPixel + pagingPixelOffset);\n    if (this.columnModel.isAutoRowHeightActive()) {\n      this.navigateToNextPageWithAutoHeight(gridCell, currentPageTopRow, true);\n    } else {\n      this.navigateToNextPage(gridCell, currentPageTopRow, true);\n    }\n  }\n  navigateToNextPage(gridCell, scrollIndex, up = false) {\n    const pixelsInOnePage = this.getViewportHeight();\n    const firstRow = this.paginationProxy.getPageFirstRow();\n    const lastRow = this.paginationProxy.getPageLastRow();\n    const pagingPixelOffset = this.paginationProxy.getPixelOffset();\n    const currentRowNode = this.paginationProxy.getRow(gridCell.rowIndex);\n    const rowPixelDiff = up ? (currentRowNode == null ? void 0 : currentRowNode.rowHeight) - pixelsInOnePage - pagingPixelOffset : pixelsInOnePage - pagingPixelOffset;\n    const nextCellPixel = (currentRowNode == null ? void 0 : currentRowNode.rowTop) + rowPixelDiff;\n    let focusIndex = this.paginationProxy.getRowIndexAtPixel(nextCellPixel + pagingPixelOffset);\n    if (focusIndex === gridCell.rowIndex) {\n      const diff = up ? -1 : 1;\n      scrollIndex = focusIndex = gridCell.rowIndex + diff;\n    }\n    let scrollType;\n    if (up) {\n      scrollType = \"bottom\";\n      if (focusIndex < firstRow) {\n        focusIndex = firstRow;\n      }\n      if (scrollIndex < firstRow) {\n        scrollIndex = firstRow;\n      }\n    } else {\n      scrollType = \"top\";\n      if (focusIndex > lastRow) {\n        focusIndex = lastRow;\n      }\n      if (scrollIndex > lastRow) {\n        scrollIndex = lastRow;\n      }\n    }\n    if (this.isRowTallerThanView(focusIndex)) {\n      scrollIndex = focusIndex;\n      scrollType = \"top\";\n    }\n    this.navigateTo({\n      scrollIndex,\n      scrollType,\n      scrollColumn: null,\n      focusIndex,\n      focusColumn: gridCell.column\n    });\n  }\n  navigateToNextPageWithAutoHeight(gridCell, scrollIndex, up = false) {\n    this.navigateTo({\n      scrollIndex,\n      scrollType: up ? \"bottom\" : \"top\",\n      scrollColumn: null,\n      focusIndex: scrollIndex,\n      focusColumn: gridCell.column\n    });\n    setTimeout(() => {\n      const focusIndex = this.getNextFocusIndexForAutoHeight(gridCell, up);\n      this.navigateTo({\n        scrollIndex,\n        scrollType: up ? \"bottom\" : \"top\",\n        scrollColumn: null,\n        focusIndex,\n        focusColumn: gridCell.column,\n        isAsync: true\n      });\n    }, 50);\n  }\n  getNextFocusIndexForAutoHeight(gridCell, up = false) {\n    var _a;\n    const step = up ? -1 : 1;\n    const pixelsInOnePage = this.getViewportHeight();\n    const lastRowIndex = this.paginationProxy.getPageLastRow();\n    let pixelSum = 0;\n    let currentIndex = gridCell.rowIndex;\n    while (currentIndex >= 0 && currentIndex <= lastRowIndex) {\n      const currentCell = this.paginationProxy.getRow(currentIndex);\n      if (currentCell) {\n        const currentCellHeight = (_a = currentCell.rowHeight) != null ? _a : 0;\n        if (pixelSum + currentCellHeight > pixelsInOnePage) {\n          break;\n        }\n        pixelSum += currentCellHeight;\n      }\n      currentIndex += step;\n    }\n    return Math.max(0, Math.min(currentIndex, lastRowIndex));\n  }\n  getViewportHeight() {\n    const { gridBodyCtrl, center } = this.ctrlsService.getParams();\n    const scrollPosition = gridBodyCtrl.getScrollFeature().getVScrollPosition();\n    const scrollbarWidth = this.gos.getScrollbarWidth();\n    let pixelsInOnePage = scrollPosition.bottom - scrollPosition.top;\n    if (center.isHorizontalScrollShowing()) {\n      pixelsInOnePage -= scrollbarWidth;\n    }\n    return pixelsInOnePage;\n  }\n  isRowTallerThanView(rowIndex) {\n    const rowNode = this.paginationProxy.getRow(rowIndex);\n    if (!rowNode) {\n      return false;\n    }\n    const rowHeight = rowNode.rowHeight;\n    if (typeof rowHeight !== \"number\") {\n      return false;\n    }\n    return rowHeight > this.getViewportHeight();\n  }\n  onCtrlUpDownLeftRight(key, gridCell) {\n    const cellToFocus = this.cellNavigationService.getNextCellToFocus(key, gridCell, true);\n    const { rowIndex, column } = cellToFocus;\n    this.navigateTo({\n      scrollIndex: rowIndex,\n      scrollType: null,\n      scrollColumn: column,\n      focusIndex: rowIndex,\n      focusColumn: column\n    });\n  }\n  // home brings focus to top left cell, end brings focus to bottom right, grid scrolled to bring\n  // same cell into view (which means either scroll all the way up, or all the way down).\n  onHomeOrEndKey(key) {\n    const homeKey = key === KeyCode.PAGE_HOME;\n    const allColumns = this.columnModel.getAllDisplayedColumns();\n    const columnToSelect = homeKey ? allColumns[0] : last(allColumns);\n    const scrollIndex = homeKey ? this.paginationProxy.getPageFirstRow() : this.paginationProxy.getPageLastRow();\n    this.navigateTo({\n      scrollIndex,\n      scrollType: null,\n      scrollColumn: columnToSelect,\n      focusIndex: scrollIndex,\n      focusColumn: columnToSelect\n    });\n  }\n  // result of keyboard event\n  onTabKeyDown(previous, keyboardEvent) {\n    const backwards = keyboardEvent.shiftKey;\n    const movedToNextCell = this.tabToNextCellCommon(previous, backwards, keyboardEvent);\n    if (movedToNextCell !== false) {\n      if (movedToNextCell) {\n        keyboardEvent.preventDefault();\n      }\n      return;\n    }\n    if (backwards) {\n      const { rowIndex, rowPinned } = previous.getRowPosition();\n      const firstRow = rowPinned ? rowIndex === 0 : rowIndex === this.paginationProxy.getPageFirstRow();\n      if (firstRow) {\n        if (this.gos.get(\"headerHeight\") === 0 || this.gos.get(\"suppressHeaderFocus\")) {\n          this.focusService.focusNextGridCoreContainer(true, true);\n        } else {\n          keyboardEvent.preventDefault();\n          this.focusService.focusPreviousFromFirstCell(keyboardEvent);\n        }\n      }\n    } else {\n      if (previous instanceof CellCtrl) {\n        previous.focusCell(true);\n      }\n      if (this.focusService.focusNextGridCoreContainer(backwards)) {\n        keyboardEvent.preventDefault();\n      }\n    }\n  }\n  // comes from API\n  tabToNextCell(backwards, event) {\n    const focusedCell = this.focusService.getFocusedCell();\n    if (!focusedCell) {\n      return false;\n    }\n    let cellOrRow = this.getCellByPosition(focusedCell);\n    if (!cellOrRow) {\n      cellOrRow = this.rowRenderer.getRowByPosition(focusedCell);\n      if (!cellOrRow || !cellOrRow.isFullWidth()) {\n        return false;\n      }\n    }\n    return !!this.tabToNextCellCommon(cellOrRow, backwards, event);\n  }\n  tabToNextCellCommon(previous, backwards, event) {\n    let editing = previous.isEditing();\n    if (!editing && previous instanceof CellCtrl) {\n      const cell = previous;\n      const row = cell.getRowCtrl();\n      if (row) {\n        editing = row.isEditing();\n      }\n    }\n    let res;\n    if (editing) {\n      if (this.gos.get(\"editType\") === \"fullRow\") {\n        res = this.moveToNextEditingRow(previous, backwards, event);\n      } else {\n        res = this.moveToNextEditingCell(previous, backwards, event);\n      }\n    } else {\n      res = this.moveToNextCellNotEditing(previous, backwards);\n    }\n    if (res === null) {\n      return res;\n    }\n    return res || !!this.focusService.getFocusedHeader();\n  }\n  // returns null if no navigation should be performed\n  moveToNextEditingCell(previousCell, backwards, event = null) {\n    const previousPos = previousCell.getCellPosition();\n    previousCell.getGui().focus();\n    previousCell.stopEditing();\n    const nextCell = this.findNextCellToFocusOn(previousPos, backwards, true);\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell == null) {\n      return false;\n    }\n    nextCell.startEditing(null, true, event);\n    nextCell.focusCell(false);\n    return true;\n  }\n  // returns null if no navigation should be performed\n  moveToNextEditingRow(previousCell, backwards, event = null) {\n    const previousPos = previousCell.getCellPosition();\n    const nextCell = this.findNextCellToFocusOn(previousPos, backwards, true);\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell == null) {\n      return false;\n    }\n    const nextPos = nextCell.getCellPosition();\n    const previousEditable = this.isCellEditable(previousPos);\n    const nextEditable = this.isCellEditable(nextPos);\n    const rowsMatch = nextPos && previousPos.rowIndex === nextPos.rowIndex && previousPos.rowPinned === nextPos.rowPinned;\n    if (previousEditable) {\n      previousCell.setFocusOutOnEditor();\n    }\n    if (!rowsMatch) {\n      const pRow = previousCell.getRowCtrl();\n      pRow.stopEditing();\n      const nRow = nextCell.getRowCtrl();\n      nRow.startRowEditing(void 0, void 0, event);\n    }\n    if (nextEditable) {\n      nextCell.setFocusInOnEditor();\n      nextCell.focusCell();\n    } else {\n      nextCell.focusCell(true);\n    }\n    return true;\n  }\n  // returns null if no navigation should be performed\n  moveToNextCellNotEditing(previousCell, backwards) {\n    const displayedColumns = this.columnModel.getAllDisplayedColumns();\n    let cellPos;\n    if (previousCell instanceof RowCtrl) {\n      cellPos = __spreadProps(__spreadValues({}, previousCell.getRowPosition()), {\n        column: backwards ? displayedColumns[0] : last(displayedColumns)\n      });\n    } else {\n      cellPos = previousCell.getCellPosition();\n    }\n    const nextCell = this.findNextCellToFocusOn(cellPos, backwards, false);\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell instanceof CellCtrl) {\n      nextCell.focusCell(true);\n    } else if (nextCell) {\n      return this.tryToFocusFullWidthRow(nextCell.getRowPosition(), backwards);\n    }\n    return exists(nextCell);\n  }\n  /**\n   * called by the cell, when tab is pressed while editing.\n   * @return: RenderedCell when navigation successful, false if navigation should not be performed, otherwise null\n   */\n  findNextCellToFocusOn(previousPosition, backwards, startEditing) {\n    var _a;\n    let nextPosition = previousPosition;\n    while (true) {\n      if (previousPosition !== nextPosition) {\n        previousPosition = nextPosition;\n      }\n      if (!backwards) {\n        nextPosition = this.getLastCellOfColSpan(nextPosition);\n      }\n      nextPosition = this.cellNavigationService.getNextTabbedCell(nextPosition, backwards);\n      const userFunc = this.gos.getCallback(\"tabToNextCell\");\n      if (exists(userFunc)) {\n        const params = {\n          backwards,\n          editing: startEditing,\n          previousCellPosition: previousPosition,\n          nextCellPosition: nextPosition ? nextPosition : null\n        };\n        const userResult = userFunc(params);\n        if (userResult === true || userResult === null) {\n          if (userResult === null) {\n            warnOnce(\"Returning `null` from tabToNextCell is deprecated. Return `true` to stay on the current cell, or `false` to let the browser handle the tab behaviour.\");\n          }\n          nextPosition = previousPosition;\n        } else if (userResult === false) {\n          return false;\n        } else {\n          if (userResult.floating) {\n            warnOnce(`tabToNextCellFunc return type should have attributes: rowIndex, rowPinned, column. However you had 'floating', maybe you meant 'rowPinned'?`);\n            userResult.rowPinned = userResult.floating;\n          }\n          nextPosition = {\n            rowIndex: userResult.rowIndex,\n            column: userResult.column,\n            rowPinned: userResult.rowPinned\n          };\n        }\n      }\n      if (!nextPosition) {\n        return null;\n      }\n      if (nextPosition.rowIndex < 0) {\n        const headerLen = this.headerNavigationService.getHeaderRowCount();\n        this.focusService.focusHeaderPosition({\n          headerPosition: {\n            headerRowIndex: headerLen + nextPosition.rowIndex,\n            column: nextPosition.column\n          },\n          fromCell: true\n        });\n        return null;\n      }\n      const fullRowEdit = this.gos.get(\"editType\") === \"fullRow\";\n      if (startEditing && !fullRowEdit) {\n        const cellIsEditable = this.isCellEditable(nextPosition);\n        if (!cellIsEditable) {\n          continue;\n        }\n      }\n      this.ensureCellVisible(nextPosition);\n      const nextCell = this.getCellByPosition(nextPosition);\n      if (!nextCell) {\n        const row = this.rowRenderer.getRowByPosition(nextPosition);\n        if (!row || !row.isFullWidth() || startEditing) {\n          continue;\n        }\n        return row;\n      }\n      if (nextCell.isSuppressNavigable()) {\n        continue;\n      }\n      (_a = this.rangeService) == null ? void 0 : _a.setRangeToCell(nextPosition);\n      return nextCell;\n    }\n  }\n  isCellEditable(cell) {\n    const rowNode = this.lookupRowNodeForCell(cell);\n    if (rowNode) {\n      return cell.column.isCellEditable(rowNode);\n    }\n    return false;\n  }\n  getCellByPosition(cellPosition) {\n    const rowCtrl = this.rowRenderer.getRowByPosition(cellPosition);\n    if (!rowCtrl) {\n      return null;\n    }\n    return rowCtrl.getCellCtrl(cellPosition.column);\n  }\n  lookupRowNodeForCell(cell) {\n    if (cell.rowPinned === \"top\") {\n      return this.pinnedRowModel.getPinnedTopRow(cell.rowIndex);\n    }\n    if (cell.rowPinned === \"bottom\") {\n      return this.pinnedRowModel.getPinnedBottomRow(cell.rowIndex);\n    }\n    return this.paginationProxy.getRow(cell.rowIndex);\n  }\n  // we use index for rows, but column object for columns, as the next column (by index) might not\n  // be visible (header grouping) so it's not reliable, so using the column object instead.\n  navigateToNextCell(event, key, currentCell, allowUserOverride) {\n    let nextCell = currentCell;\n    let hitEdgeOfGrid = false;\n    while (nextCell && (nextCell === currentCell || !this.isValidNavigateCell(nextCell))) {\n      if (this.gos.get(\"enableRtl\")) {\n        if (key === KeyCode.LEFT) {\n          nextCell = this.getLastCellOfColSpan(nextCell);\n        }\n      } else if (key === KeyCode.RIGHT) {\n        nextCell = this.getLastCellOfColSpan(nextCell);\n      }\n      nextCell = this.cellNavigationService.getNextCellToFocus(key, nextCell);\n      hitEdgeOfGrid = missing(nextCell);\n    }\n    if (hitEdgeOfGrid && event && event.key === KeyCode.UP) {\n      nextCell = {\n        rowIndex: -1,\n        rowPinned: null,\n        column: currentCell.column\n      };\n    }\n    if (allowUserOverride) {\n      const userFunc = this.gos.getCallback(\"navigateToNextCell\");\n      if (exists(userFunc)) {\n        const params = {\n          key,\n          previousCellPosition: currentCell,\n          nextCellPosition: nextCell ? nextCell : null,\n          event\n        };\n        const userCell = userFunc(params);\n        if (exists(userCell)) {\n          if (userCell.floating) {\n            warnOnce(`tabToNextCellFunc return type should have attributes: rowIndex, rowPinned, column. However you had 'floating', maybe you meant 'rowPinned'?`);\n            userCell.rowPinned = userCell.floating;\n          }\n          nextCell = {\n            rowPinned: userCell.rowPinned,\n            rowIndex: userCell.rowIndex,\n            column: userCell.column\n          };\n        } else {\n          nextCell = null;\n        }\n      }\n    }\n    if (!nextCell) {\n      return;\n    }\n    if (nextCell.rowIndex < 0) {\n      const headerLen = this.headerNavigationService.getHeaderRowCount();\n      this.focusService.focusHeaderPosition({\n        headerPosition: { headerRowIndex: headerLen + nextCell.rowIndex, column: currentCell.column },\n        event: event || void 0,\n        fromCell: true\n      });\n      return;\n    }\n    const normalisedPosition = this.getNormalisedPosition(nextCell);\n    if (normalisedPosition) {\n      this.focusPosition(normalisedPosition);\n    } else {\n      this.tryToFocusFullWidthRow(nextCell);\n    }\n  }\n  getNormalisedPosition(cellPosition) {\n    this.ensureCellVisible(cellPosition);\n    const cellCtrl = this.getCellByPosition(cellPosition);\n    if (!cellCtrl) {\n      return null;\n    }\n    cellPosition = cellCtrl.getCellPosition();\n    this.ensureCellVisible(cellPosition);\n    return cellPosition;\n  }\n  tryToFocusFullWidthRow(position, backwards = false) {\n    const displayedColumns = this.columnModel.getAllDisplayedColumns();\n    const rowComp = this.rowRenderer.getRowByPosition(position);\n    if (!rowComp || !rowComp.isFullWidth()) {\n      return false;\n    }\n    const currentCellFocused = this.focusService.getFocusedCell();\n    const cellPosition = {\n      rowIndex: position.rowIndex,\n      rowPinned: position.rowPinned,\n      column: position.column || (backwards ? last(displayedColumns) : displayedColumns[0])\n    };\n    this.focusPosition(cellPosition);\n    const fromBelow = currentCellFocused != null ? this.rowPositionUtils.before(cellPosition, currentCellFocused) : false;\n    const focusEvent = {\n      type: Events.EVENT_FULL_WIDTH_ROW_FOCUSED,\n      rowIndex: cellPosition.rowIndex,\n      rowPinned: cellPosition.rowPinned,\n      column: cellPosition.column,\n      isFullWidthCell: true,\n      floating: cellPosition.rowPinned,\n      fromBelow\n    };\n    this.eventService.dispatchEvent(focusEvent);\n    return true;\n  }\n  focusPosition(cellPosition) {\n    var _a;\n    this.focusService.setFocusedCell({\n      rowIndex: cellPosition.rowIndex,\n      column: cellPosition.column,\n      rowPinned: cellPosition.rowPinned,\n      forceBrowserFocus: true\n    });\n    (_a = this.rangeService) == null ? void 0 : _a.setRangeToCell(cellPosition);\n  }\n  isValidNavigateCell(cell) {\n    const rowNode = this.rowPositionUtils.getRowNode(cell);\n    return !!rowNode;\n  }\n  getLastCellOfColSpan(cell) {\n    const cellCtrl = this.getCellByPosition(cell);\n    if (!cellCtrl) {\n      return cell;\n    }\n    const colSpanningList = cellCtrl.getColSpanningList();\n    if (colSpanningList.length === 1) {\n      return cell;\n    }\n    return {\n      rowIndex: cell.rowIndex,\n      column: last(colSpanningList),\n      rowPinned: cell.rowPinned\n    };\n  }\n  ensureCellVisible(gridCell) {\n    const isGroupStickyEnabled = this.gos.isGroupRowsSticky();\n    const rowNode = this.rowModel.getRow(gridCell.rowIndex);\n    const skipScrollToRow = isGroupStickyEnabled && (rowNode == null ? void 0 : rowNode.sticky);\n    if (!skipScrollToRow && missing(gridCell.rowPinned)) {\n      this.gridBodyCon.getScrollFeature().ensureIndexVisible(gridCell.rowIndex);\n    }\n    if (!gridCell.column.isPinned()) {\n      this.gridBodyCon.getScrollFeature().ensureColumnVisible(gridCell.column);\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"mouseEventService\")\n], NavigationService.prototype, \"mouseEventService\", 2);\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], NavigationService.prototype, \"paginationProxy\", 2);\n__decorateClass([\n  Autowired(\"focusService\")\n], NavigationService.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], NavigationService.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"rowModel\")\n], NavigationService.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], NavigationService.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"rowRenderer\")\n], NavigationService.prototype, \"rowRenderer\", 2);\n__decorateClass([\n  Autowired(\"headerNavigationService\")\n], NavigationService.prototype, \"headerNavigationService\", 2);\n__decorateClass([\n  Autowired(\"rowPositionUtils\")\n], NavigationService.prototype, \"rowPositionUtils\", 2);\n__decorateClass([\n  Autowired(\"cellNavigationService\")\n], NavigationService.prototype, \"cellNavigationService\", 2);\n__decorateClass([\n  Autowired(\"pinnedRowModel\")\n], NavigationService.prototype, \"pinnedRowModel\", 2);\n__decorateClass([\n  Optional(\"rangeService\")\n], NavigationService.prototype, \"rangeService\", 2);\n__decorateClass([\n  PostConstruct\n], NavigationService.prototype, \"postConstruct\", 1);\nNavigationService = __decorateClass([\n  Bean(\"navigationService\")\n], NavigationService);\n\n// community-modules/core/src/rendering/cellEditors/popupEditorWrapper.ts\nvar _PopupEditorWrapper = class _PopupEditorWrapper extends PopupComponent {\n  constructor(params) {\n    super(\n      /* html */\n      `<div class=\"ag-popup-editor\" tabindex=\"-1\"/>`\n    );\n    this.params = params;\n  }\n  postConstruct() {\n    this.gos.setDomData(this.getGui(), _PopupEditorWrapper.DOM_KEY_POPUP_EDITOR_WRAPPER, true);\n    this.addKeyDownListener();\n  }\n  addKeyDownListener() {\n    const eGui = this.getGui();\n    const params = this.params;\n    const listener = (event) => {\n      if (!isUserSuppressingKeyboardEvent(this.gos, event, params.node, params.column, true)) {\n        params.onKeyDown(event);\n      }\n    };\n    this.addManagedListener(eGui, \"keydown\", listener);\n  }\n};\n_PopupEditorWrapper.DOM_KEY_POPUP_EDITOR_WRAPPER = \"popupEditorWrapper\";\n__decorateClass([\n  PostConstruct\n], _PopupEditorWrapper.prototype, \"postConstruct\", 1);\nvar PopupEditorWrapper = _PopupEditorWrapper;\n\n// community-modules/core/src/rendering/cell/cellComp.ts\nvar CellComp = class extends Component {\n  constructor(beans, cellCtrl, printLayout, eRow, editingRow) {\n    super();\n    // every time we go into edit mode, or back again, this gets incremented.\n    // it's the components way of dealing with the async nature of framework components,\n    // so if a framework component takes a while to be created, we know if the object\n    // is still relevant when creating is finished. eg we could click edit / un-edit 20\n    // times before the first React edit component comes back - we should discard\n    // the first 19.\n    this.rendererVersion = 0;\n    this.editorVersion = 0;\n    this.beans = beans;\n    this.column = cellCtrl.getColumn();\n    this.rowNode = cellCtrl.getRowNode();\n    this.rowCtrl = cellCtrl.getRowCtrl();\n    this.eRow = eRow;\n    this.cellCtrl = cellCtrl;\n    const cellDiv = document.createElement(\"div\");\n    cellDiv.setAttribute(\"comp-id\", `${this.getCompId()}`);\n    this.setTemplateFromElement(cellDiv);\n    const eGui = this.getGui();\n    this.forceWrapper = cellCtrl.isForceWrapper();\n    this.refreshWrapper(false);\n    const setAttribute = (name, value) => {\n      if (value != null && value != \"\") {\n        eGui.setAttribute(name, value);\n      } else {\n        eGui.removeAttribute(name);\n      }\n    };\n    setAriaRole(eGui, cellCtrl.getCellAriaRole());\n    setAttribute(\"col-id\", cellCtrl.getColumnIdSanitised());\n    const tabIndex = cellCtrl.getTabIndex();\n    if (tabIndex !== void 0) {\n      setAttribute(\"tabindex\", tabIndex.toString());\n    }\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setUserStyles: (styles) => addStylesToElement(eGui, styles),\n      getFocusableElement: () => this.getFocusableElement(),\n      setIncludeSelection: (include) => this.includeSelection = include,\n      setIncludeRowDrag: (include) => this.includeRowDrag = include,\n      setIncludeDndSource: (include) => this.includeDndSource = include,\n      setRenderDetails: (compDetails, valueToDisplay, force) => this.setRenderDetails(compDetails, valueToDisplay, force),\n      setEditDetails: (compDetails, popup, position) => this.setEditDetails(compDetails, popup, position),\n      getCellEditor: () => this.cellEditor || null,\n      getCellRenderer: () => this.cellRenderer || null,\n      getParentOfValue: () => this.getParentOfValue()\n    };\n    cellCtrl.setComp(compProxy, this.getGui(), this.eCellWrapper, printLayout, editingRow);\n  }\n  getParentOfValue() {\n    if (this.eCellValue) {\n      return this.eCellValue;\n    }\n    if (this.eCellWrapper) {\n      return this.eCellWrapper;\n    }\n    return this.getGui();\n  }\n  setRenderDetails(compDetails, valueToDisplay, forceNewCellRendererInstance) {\n    const isInlineEditing = this.cellEditor && !this.cellEditorPopupWrapper;\n    if (isInlineEditing) {\n      return;\n    }\n    this.firstRender = this.firstRender == null;\n    const controlWrapperChanged = this.refreshWrapper(false);\n    this.refreshEditStyles(false);\n    if (compDetails) {\n      const neverRefresh = forceNewCellRendererInstance || controlWrapperChanged;\n      const cellRendererRefreshSuccessful = neverRefresh ? false : this.refreshCellRenderer(compDetails);\n      if (!cellRendererRefreshSuccessful) {\n        this.destroyRenderer();\n        this.createCellRendererInstance(compDetails);\n      }\n    } else {\n      this.destroyRenderer();\n      this.insertValueWithoutCellRenderer(valueToDisplay);\n    }\n  }\n  setEditDetails(compDetails, popup, position) {\n    if (compDetails) {\n      this.createCellEditorInstance(compDetails, popup, position);\n    } else {\n      this.destroyEditor();\n    }\n  }\n  removeControls() {\n    this.checkboxSelectionComp = this.beans.context.destroyBean(this.checkboxSelectionComp);\n    this.dndSourceComp = this.beans.context.destroyBean(this.dndSourceComp);\n    this.rowDraggingComp = this.beans.context.destroyBean(this.rowDraggingComp);\n  }\n  // returns true if wrapper was changed\n  refreshWrapper(editing) {\n    const providingControls = this.includeRowDrag || this.includeDndSource || this.includeSelection;\n    const usingWrapper = providingControls || this.forceWrapper;\n    const putWrapperIn = usingWrapper && this.eCellWrapper == null;\n    if (putWrapperIn) {\n      const wrapperDiv = document.createElement(\"div\");\n      wrapperDiv.setAttribute(\"role\", \"presentation\");\n      wrapperDiv.setAttribute(\"class\", \"ag-cell-wrapper\");\n      this.eCellWrapper = wrapperDiv;\n      this.getGui().appendChild(this.eCellWrapper);\n    }\n    const takeWrapperOut = !usingWrapper && this.eCellWrapper != null;\n    if (takeWrapperOut) {\n      removeFromParent(this.eCellWrapper);\n      this.eCellWrapper = void 0;\n    }\n    this.addOrRemoveCssClass(\"ag-cell-value\", !usingWrapper);\n    const usingCellValue = !editing && usingWrapper;\n    const putCellValueIn = usingCellValue && this.eCellValue == null;\n    if (putCellValueIn) {\n      const cellSpan = document.createElement(\"span\");\n      cellSpan.setAttribute(\"role\", \"presentation\");\n      cellSpan.setAttribute(\"class\", \"ag-cell-value\");\n      this.eCellValue = cellSpan;\n      this.eCellWrapper.appendChild(this.eCellValue);\n    }\n    const takeCellValueOut = !usingCellValue && this.eCellValue != null;\n    if (takeCellValueOut) {\n      removeFromParent(this.eCellValue);\n      this.eCellValue = void 0;\n    }\n    const templateChanged = putWrapperIn || takeWrapperOut || putCellValueIn || takeCellValueOut;\n    if (templateChanged) {\n      this.removeControls();\n    }\n    if (!editing) {\n      if (providingControls) {\n        this.addControls();\n      }\n    }\n    return templateChanged;\n  }\n  addControls() {\n    if (this.includeRowDrag) {\n      if (this.rowDraggingComp == null) {\n        this.rowDraggingComp = this.cellCtrl.createRowDragComp();\n        if (this.rowDraggingComp) {\n          this.eCellWrapper.insertBefore(this.rowDraggingComp.getGui(), this.eCellValue);\n        }\n      }\n    }\n    if (this.includeDndSource) {\n      if (this.dndSourceComp == null) {\n        this.dndSourceComp = this.cellCtrl.createDndSource();\n        this.eCellWrapper.insertBefore(this.dndSourceComp.getGui(), this.eCellValue);\n      }\n    }\n    if (this.includeSelection) {\n      if (this.checkboxSelectionComp == null) {\n        this.checkboxSelectionComp = this.cellCtrl.createSelectionCheckbox();\n        this.eCellWrapper.insertBefore(this.checkboxSelectionComp.getGui(), this.eCellValue);\n      }\n    }\n  }\n  createCellEditorInstance(compDetails, popup, position) {\n    const versionCopy = this.editorVersion;\n    const cellEditorPromise = compDetails.newAgStackInstance();\n    if (!cellEditorPromise) {\n      return;\n    }\n    const { params } = compDetails;\n    cellEditorPromise.then((c) => this.afterCellEditorCreated(versionCopy, c, params, popup, position));\n    const cellEditorAsync = missing(this.cellEditor);\n    if (cellEditorAsync && params.cellStartedEdit) {\n      this.cellCtrl.focusCell(true);\n    }\n  }\n  insertValueWithoutCellRenderer(valueToDisplay) {\n    const eParent = this.getParentOfValue();\n    clearElement(eParent);\n    const escapedValue = valueToDisplay != null ? escapeString(valueToDisplay, true) : null;\n    if (escapedValue != null) {\n      eParent.textContent = escapedValue;\n    }\n  }\n  destroyEditorAndRenderer() {\n    this.destroyRenderer();\n    this.destroyEditor();\n  }\n  destroyRenderer() {\n    const { context } = this.beans;\n    this.cellRenderer = context.destroyBean(this.cellRenderer);\n    removeFromParent(this.cellRendererGui);\n    this.cellRendererGui = null;\n    this.rendererVersion++;\n  }\n  destroyEditor() {\n    const { context } = this.beans;\n    if (this.hideEditorPopup) {\n      this.hideEditorPopup();\n    }\n    this.hideEditorPopup = void 0;\n    this.cellEditor = context.destroyBean(this.cellEditor);\n    this.cellEditorPopupWrapper = context.destroyBean(this.cellEditorPopupWrapper);\n    removeFromParent(this.cellEditorGui);\n    this.cellEditorGui = null;\n    this.editorVersion++;\n  }\n  refreshCellRenderer(compClassAndParams) {\n    if (this.cellRenderer == null || this.cellRenderer.refresh == null) {\n      return false;\n    }\n    if (this.cellRendererClass !== compClassAndParams.componentClass) {\n      return false;\n    }\n    const result = this.cellRenderer.refresh(compClassAndParams.params);\n    return result === true || result === void 0;\n  }\n  createCellRendererInstance(compDetails) {\n    const suppressAnimationFrame = this.beans.gos.get(\"suppressAnimationFrame\");\n    const useTaskService = !suppressAnimationFrame;\n    const displayComponentVersionCopy = this.rendererVersion;\n    const { componentClass } = compDetails;\n    const createCellRendererFunc = () => {\n      const staleTask = this.rendererVersion !== displayComponentVersionCopy || !this.isAlive();\n      if (staleTask) {\n        return;\n      }\n      const componentPromise = compDetails.newAgStackInstance();\n      const callback = this.afterCellRendererCreated.bind(this, displayComponentVersionCopy, componentClass);\n      if (componentPromise) {\n        componentPromise.then(callback);\n      }\n    };\n    if (useTaskService && this.firstRender) {\n      this.beans.animationFrameService.createTask(createCellRendererFunc, this.rowNode.rowIndex, \"createTasksP2\");\n    } else {\n      createCellRendererFunc();\n    }\n  }\n  getCtrl() {\n    return this.cellCtrl;\n  }\n  getRowCtrl() {\n    return this.rowCtrl;\n  }\n  getCellRenderer() {\n    return this.cellRenderer;\n  }\n  getCellEditor() {\n    return this.cellEditor;\n  }\n  afterCellRendererCreated(cellRendererVersion, cellRendererClass, cellRenderer) {\n    const staleTask = !this.isAlive() || cellRendererVersion !== this.rendererVersion;\n    if (staleTask) {\n      this.beans.context.destroyBean(cellRenderer);\n      return;\n    }\n    this.cellRenderer = cellRenderer;\n    this.cellRendererClass = cellRendererClass;\n    this.cellRendererGui = this.cellRenderer.getGui();\n    if (this.cellRendererGui != null) {\n      const eParent = this.getParentOfValue();\n      clearElement(eParent);\n      eParent.appendChild(this.cellRendererGui);\n    }\n  }\n  afterCellEditorCreated(requestVersion, cellEditor, params, popup, position) {\n    const staleComp = requestVersion !== this.editorVersion;\n    if (staleComp) {\n      this.beans.context.destroyBean(cellEditor);\n      return;\n    }\n    const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n    if (editingCancelledByUserComp) {\n      this.beans.context.destroyBean(cellEditor);\n      this.cellCtrl.stopEditing(true);\n      return;\n    }\n    if (!cellEditor.getGui) {\n      console.warn(`AG Grid: cellEditor for column ${this.column.getId()} is missing getGui() method`);\n      this.beans.context.destroyBean(cellEditor);\n      return;\n    }\n    this.cellEditor = cellEditor;\n    this.cellEditorGui = cellEditor.getGui();\n    const cellEditorInPopup = popup || cellEditor.isPopup !== void 0 && cellEditor.isPopup();\n    if (cellEditorInPopup) {\n      this.addPopupCellEditor(params, position);\n    } else {\n      this.addInCellEditor();\n    }\n    this.refreshEditStyles(true, cellEditorInPopup);\n    if (cellEditor.afterGuiAttached) {\n      cellEditor.afterGuiAttached();\n    }\n  }\n  refreshEditStyles(editing, isPopup) {\n    var _a;\n    this.addOrRemoveCssClass(\"ag-cell-inline-editing\", editing && !isPopup);\n    this.addOrRemoveCssClass(\"ag-cell-popup-editing\", editing && !!isPopup);\n    this.addOrRemoveCssClass(\"ag-cell-not-inline-editing\", !editing || !!isPopup);\n    (_a = this.rowCtrl) == null ? void 0 : _a.setInlineEditingCss(editing);\n  }\n  addInCellEditor() {\n    const eGui = this.getGui();\n    if (eGui.contains(this.beans.gos.getActiveDomElement())) {\n      eGui.focus();\n    }\n    this.destroyRenderer();\n    this.refreshWrapper(true);\n    this.clearParentOfValue();\n    if (this.cellEditorGui) {\n      const eParent = this.getParentOfValue();\n      eParent.appendChild(this.cellEditorGui);\n    }\n  }\n  addPopupCellEditor(params, position) {\n    if (this.beans.gos.get(\"editType\") === \"fullRow\") {\n      console.warn(\"AG Grid: popup cellEditor does not work with fullRowEdit - you cannot use them both - either turn off fullRowEdit, or stop using popup editors.\");\n    }\n    const cellEditor = this.cellEditor;\n    this.cellEditorPopupWrapper = this.beans.context.createBean(new PopupEditorWrapper(params));\n    const ePopupGui = this.cellEditorPopupWrapper.getGui();\n    if (this.cellEditorGui) {\n      ePopupGui.appendChild(this.cellEditorGui);\n    }\n    const popupService = this.beans.popupService;\n    const useModelPopup = this.beans.gos.get(\"stopEditingWhenCellsLoseFocus\");\n    const positionToUse = position != null ? position : cellEditor.getPopupPosition ? cellEditor.getPopupPosition() : \"over\";\n    const isRtl = this.beans.gos.get(\"enableRtl\");\n    const positionParams = {\n      ePopup: ePopupGui,\n      column: this.column,\n      rowNode: this.rowNode,\n      type: \"popupCellEditor\",\n      eventSource: this.getGui(),\n      position: positionToUse,\n      alignSide: isRtl ? \"right\" : \"left\",\n      keepWithinBounds: true\n    };\n    const positionCallback = popupService.positionPopupByComponent.bind(popupService, positionParams);\n    const translate = this.beans.localeService.getLocaleTextFunc();\n    const addPopupRes = popupService.addPopup({\n      modal: useModelPopup,\n      eChild: ePopupGui,\n      closeOnEsc: true,\n      closedCallback: () => {\n        this.cellCtrl.onPopupEditorClosed();\n      },\n      anchorToElement: this.getGui(),\n      positionCallback,\n      ariaLabel: translate(\"ariaLabelCellEditor\", \"Cell Editor\")\n    });\n    if (addPopupRes) {\n      this.hideEditorPopup = addPopupRes.hideFunc;\n    }\n  }\n  detach() {\n    this.eRow.removeChild(this.getGui());\n  }\n  // if the row is also getting destroyed, then we don't need to remove from dom,\n  // as the row will also get removed, so no need to take out the cells from the row\n  // if the row is going (removing is an expensive operation, so only need to remove\n  // the top part)\n  //\n  // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n  destroy() {\n    this.cellCtrl.stopEditing();\n    this.destroyEditorAndRenderer();\n    this.removeControls();\n    super.destroy();\n  }\n  clearParentOfValue() {\n    const eGui = this.getGui();\n    if (eGui.contains(this.beans.gos.getActiveDomElement()) && browserSupportsPreventScroll()) {\n      eGui.focus({ preventScroll: true });\n    }\n    clearElement(this.getParentOfValue());\n  }\n};\n\n// community-modules/core/src/rendering/row/rowComp.ts\nvar RowComp = class extends Component {\n  constructor(ctrl, beans, containerType) {\n    super();\n    this.cellComps = {};\n    this.beans = beans;\n    this.rowCtrl = ctrl;\n    const rowDiv = document.createElement(\"div\");\n    rowDiv.setAttribute(\"comp-id\", `${this.getCompId()}`);\n    rowDiv.setAttribute(\"style\", this.getInitialStyle(containerType));\n    this.setTemplateFromElement(rowDiv);\n    const eGui = this.getGui();\n    const style = eGui.style;\n    this.domOrder = this.rowCtrl.getDomOrder();\n    setAriaRole(eGui, \"row\");\n    const tabIndex = this.rowCtrl.getTabIndex();\n    if (tabIndex != null) {\n      eGui.setAttribute(\"tabindex\", tabIndex.toString());\n    }\n    const compProxy = {\n      setDomOrder: (domOrder) => this.domOrder = domOrder,\n      setCellCtrls: (cellCtrls) => this.setCellCtrls(cellCtrls),\n      showFullWidth: (compDetails) => this.showFullWidth(compDetails),\n      getFullWidthCellRenderer: () => this.getFullWidthCellRenderer(),\n      addOrRemoveCssClass: (name, on) => this.addOrRemoveCssClass(name, on),\n      setUserStyles: (styles) => addStylesToElement(eGui, styles),\n      setTop: (top) => style.top = top,\n      setTransform: (transform) => style.transform = transform,\n      setRowIndex: (rowIndex) => eGui.setAttribute(\"row-index\", rowIndex),\n      setRowId: (rowId) => eGui.setAttribute(\"row-id\", rowId),\n      setRowBusinessKey: (businessKey) => eGui.setAttribute(\"row-business-key\", businessKey),\n      refreshFullWidth: (getUpdatedParams) => this.refreshFullWidth(getUpdatedParams)\n    };\n    ctrl.setComp(compProxy, this.getGui(), containerType);\n    this.addDestroyFunc(() => {\n      ctrl.unsetComp(containerType);\n    });\n  }\n  getInitialStyle(containerType) {\n    const transform = this.rowCtrl.getInitialTransform(containerType);\n    return transform ? `transform: ${transform}` : `top: ${this.rowCtrl.getInitialRowTop(containerType)}`;\n  }\n  showFullWidth(compDetails) {\n    const callback = (cellRenderer) => {\n      if (this.isAlive()) {\n        const eGui = cellRenderer.getGui();\n        this.getGui().appendChild(eGui);\n        this.rowCtrl.setupDetailRowAutoHeight(eGui);\n        this.setFullWidthRowComp(cellRenderer);\n      } else {\n        this.beans.context.destroyBean(cellRenderer);\n      }\n    };\n    const res = compDetails.newAgStackInstance();\n    if (!res) {\n      return;\n    }\n    res.then(callback);\n  }\n  setCellCtrls(cellCtrls) {\n    const cellsToRemove = Object.assign({}, this.cellComps);\n    cellCtrls.forEach((cellCtrl) => {\n      const key = cellCtrl.getInstanceId();\n      const existingCellComp = this.cellComps[key];\n      if (existingCellComp == null) {\n        this.newCellComp(cellCtrl);\n      } else {\n        cellsToRemove[key] = null;\n      }\n    });\n    const cellCompsToRemove = getAllValuesInObject(cellsToRemove).filter((cellComp) => cellComp != null);\n    this.destroyCells(cellCompsToRemove);\n    this.ensureDomOrder(cellCtrls);\n  }\n  ensureDomOrder(cellCtrls) {\n    if (!this.domOrder) {\n      return;\n    }\n    const elementsInOrder = [];\n    cellCtrls.forEach((cellCtrl) => {\n      const cellComp = this.cellComps[cellCtrl.getInstanceId()];\n      if (cellComp) {\n        elementsInOrder.push(cellComp.getGui());\n      }\n    });\n    setDomChildOrder(this.getGui(), elementsInOrder);\n  }\n  newCellComp(cellCtrl) {\n    const cellComp = new CellComp(\n      this.beans,\n      cellCtrl,\n      this.rowCtrl.isPrintLayout(),\n      this.getGui(),\n      this.rowCtrl.isEditing()\n    );\n    this.cellComps[cellCtrl.getInstanceId()] = cellComp;\n    this.getGui().appendChild(cellComp.getGui());\n  }\n  destroy() {\n    super.destroy();\n    this.destroyAllCells();\n  }\n  destroyAllCells() {\n    const cellsToDestroy = getAllValuesInObject(this.cellComps).filter((cp) => cp != null);\n    this.destroyCells(cellsToDestroy);\n  }\n  setFullWidthRowComp(fullWidthRowComponent) {\n    if (this.fullWidthCellRenderer) {\n      console.error(\"AG Grid - should not be setting fullWidthRowComponent twice\");\n    }\n    this.fullWidthCellRenderer = fullWidthRowComponent;\n    this.addDestroyFunc(() => {\n      this.fullWidthCellRenderer = this.beans.context.destroyBean(this.fullWidthCellRenderer);\n    });\n  }\n  getFullWidthCellRenderer() {\n    return this.fullWidthCellRenderer;\n  }\n  destroyCells(cellComps) {\n    cellComps.forEach((cellComp) => {\n      if (!cellComp) {\n        return;\n      }\n      const instanceId = cellComp.getCtrl().getInstanceId();\n      if (this.cellComps[instanceId] !== cellComp) {\n        return;\n      }\n      cellComp.detach();\n      cellComp.destroy();\n      this.cellComps[instanceId] = null;\n    });\n  }\n  refreshFullWidth(getUpdatedParams) {\n    const { fullWidthCellRenderer } = this;\n    if (!fullWidthCellRenderer || !fullWidthCellRenderer.refresh) {\n      return false;\n    }\n    const params = getUpdatedParams();\n    return fullWidthCellRenderer.refresh(params);\n  }\n};\n\n// community-modules/core/src/gridBodyComp/rowContainer/rowContainerComp.ts\nfunction templateFactory() {\n  const name = Component.elementGettingCreated.getAttribute(\"name\");\n  const cssClasses = RowContainerCtrl.getRowContainerCssClasses(name);\n  let res;\n  const centerTemplate = name === \"center\" /* CENTER */ || name === \"topCenter\" /* TOP_CENTER */ || name === \"stickyTopCenter\" /* STICKY_TOP_CENTER */ || name === \"bottomCenter\" /* BOTTOM_CENTER */ || name === \"stickyBottomCenter\" /* STICKY_BOTTOM_CENTER */;\n  if (centerTemplate) {\n    res = /* html */\n    `<div class=\"${cssClasses.viewport}\" ref=\"eViewport\" role=\"presentation\">\n                <div class=\"${cssClasses.container}\" ref=\"eContainer\"></div>\n            </div>`;\n  } else {\n    res = /* html */\n    `<div class=\"${cssClasses.container}\" ref=\"eContainer\"></div>`;\n  }\n  return res;\n}\nvar RowContainerComp = class extends Component {\n  constructor() {\n    super(templateFactory());\n    this.rowComps = {};\n    this.name = Component.elementGettingCreated.getAttribute(\"name\");\n    this.type = getRowContainerTypeForName(this.name);\n  }\n  postConstruct() {\n    const compProxy = {\n      setViewportHeight: (height) => this.eViewport.style.height = height,\n      setRowCtrls: ({ rowCtrls }) => this.setRowCtrls(rowCtrls),\n      setDomOrder: (domOrder) => {\n        this.domOrder = domOrder;\n      },\n      setContainerWidth: (width) => this.eContainer.style.width = width\n    };\n    const ctrl = this.createManagedBean(new RowContainerCtrl(this.name));\n    ctrl.setComp(compProxy, this.eContainer, this.eViewport);\n  }\n  preDestroy() {\n    this.setRowCtrls([]);\n  }\n  setRowCtrls(rowCtrls) {\n    const oldRows = __spreadValues({}, this.rowComps);\n    this.rowComps = {};\n    this.lastPlacedElement = null;\n    const processRow = (rowCon) => {\n      const instanceId = rowCon.getInstanceId();\n      const existingRowComp = oldRows[instanceId];\n      if (existingRowComp) {\n        this.rowComps[instanceId] = existingRowComp;\n        delete oldRows[instanceId];\n        this.ensureDomOrder(existingRowComp.getGui());\n      } else {\n        if (!rowCon.getRowNode().displayed) {\n          return;\n        }\n        const rowComp = new RowComp(rowCon, this.beans, this.type);\n        this.rowComps[instanceId] = rowComp;\n        this.appendRow(rowComp.getGui());\n      }\n    };\n    rowCtrls.forEach(processRow);\n    getAllValuesInObject(oldRows).forEach((oldRowComp) => {\n      this.eContainer.removeChild(oldRowComp.getGui());\n      oldRowComp.destroy();\n    });\n    setAriaRole(this.eContainer, \"rowgroup\");\n  }\n  appendRow(element) {\n    if (this.domOrder) {\n      insertWithDomOrder(this.eContainer, element, this.lastPlacedElement);\n    } else {\n      this.eContainer.appendChild(element);\n    }\n    this.lastPlacedElement = element;\n  }\n  ensureDomOrder(eRow) {\n    if (this.domOrder) {\n      ensureDomOrder(this.eContainer, eRow, this.lastPlacedElement);\n      this.lastPlacedElement = eRow;\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"beans\")\n], RowContainerComp.prototype, \"beans\", 2);\n__decorateClass([\n  RefSelector(\"eViewport\")\n], RowContainerComp.prototype, \"eViewport\", 2);\n__decorateClass([\n  RefSelector(\"eContainer\")\n], RowContainerComp.prototype, \"eContainer\", 2);\n__decorateClass([\n  PostConstruct\n], RowContainerComp.prototype, \"postConstruct\", 1);\n__decorateClass([\n  PreDestroy\n], RowContainerComp.prototype, \"preDestroy\", 1);\n\n// community-modules/core/src/headerRendering/columnDrag/bodyDropPivotTarget.ts\nvar BodyDropPivotTarget = class {\n  constructor(pinned) {\n    this.columnsToAggregate = [];\n    this.columnsToGroup = [];\n    this.columnsToPivot = [];\n    this.pinned = pinned;\n  }\n  /** Callback for when drag enters */\n  onDragEnter(draggingEvent) {\n    this.clearColumnsList();\n    if (this.gos.get(\"functionsReadOnly\")) {\n      return;\n    }\n    const dragColumns = draggingEvent.dragItem.columns;\n    if (!dragColumns) {\n      return;\n    }\n    dragColumns.forEach((column) => {\n      if (!column.isPrimary()) {\n        return;\n      }\n      if (column.isAnyFunctionActive()) {\n        return;\n      }\n      if (column.isAllowValue()) {\n        this.columnsToAggregate.push(column);\n      } else if (column.isAllowRowGroup()) {\n        this.columnsToGroup.push(column);\n      } else if (column.isAllowPivot()) {\n        this.columnsToPivot.push(column);\n      }\n    });\n  }\n  getIconName() {\n    const totalColumns = this.columnsToAggregate.length + this.columnsToGroup.length + this.columnsToPivot.length;\n    if (totalColumns > 0) {\n      return this.pinned ? DragAndDropService.ICON_PINNED : DragAndDropService.ICON_MOVE;\n    }\n    return null;\n  }\n  /** Callback for when drag leaves */\n  onDragLeave(draggingEvent) {\n    this.clearColumnsList();\n  }\n  clearColumnsList() {\n    this.columnsToAggregate.length = 0;\n    this.columnsToGroup.length = 0;\n    this.columnsToPivot.length = 0;\n  }\n  /** Callback for when dragging */\n  onDragging(draggingEvent) {\n  }\n  /** Callback for when drag stops */\n  onDragStop(draggingEvent) {\n    if (this.columnsToAggregate.length > 0) {\n      this.columnModel.addValueColumns(this.columnsToAggregate, \"toolPanelDragAndDrop\");\n    }\n    if (this.columnsToGroup.length > 0) {\n      this.columnModel.addRowGroupColumns(this.columnsToGroup, \"toolPanelDragAndDrop\");\n    }\n    if (this.columnsToPivot.length > 0) {\n      this.columnModel.addPivotColumns(this.columnsToPivot, \"toolPanelDragAndDrop\");\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"columnModel\")\n], BodyDropPivotTarget.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"gridOptionsService\")\n], BodyDropPivotTarget.prototype, \"gos\", 2);\n\n// community-modules/core/src/headerRendering/columnMoveHelper.ts\nvar ColumnMoveHelper = class {\n  static attemptMoveColumns(params) {\n    const { isFromHeader, hDirection, xPosition, fromEnter, fakeEvent, pinned, gos, columnModel } = params;\n    const draggingLeft = hDirection === 0 /* Left */;\n    const draggingRight = hDirection === 1 /* Right */;\n    let { allMovingColumns } = params;\n    if (isFromHeader) {\n      let newCols = [];\n      allMovingColumns.forEach((col) => {\n        var _a;\n        let movingGroup = null;\n        let parent = col.getParent();\n        while (parent != null && parent.getDisplayedLeafColumns().length === 1) {\n          movingGroup = parent;\n          parent = parent.getParent();\n        }\n        if (movingGroup != null) {\n          const isMarryChildren = !!((_a = movingGroup.getColGroupDef()) == null ? void 0 : _a.marryChildren);\n          const columnsToMove = isMarryChildren ? movingGroup.getProvidedColumnGroup().getLeafColumns() : movingGroup.getLeafColumns();\n          columnsToMove.forEach((newCol) => {\n            if (!newCols.includes(newCol)) {\n              newCols.push(newCol);\n            }\n          });\n        } else if (!newCols.includes(col)) {\n          newCols.push(col);\n        }\n      });\n      allMovingColumns = newCols;\n    }\n    const allMovingColumnsOrdered = allMovingColumns.slice();\n    columnModel.sortColumnsLikeGridColumns(allMovingColumnsOrdered);\n    const validMoves = this.calculateValidMoves({\n      movingCols: allMovingColumnsOrdered,\n      draggingRight,\n      xPosition,\n      pinned,\n      gos,\n      columnModel\n    });\n    const oldIndex = this.calculateOldIndex(allMovingColumnsOrdered, columnModel);\n    if (validMoves.length === 0) {\n      return;\n    }\n    const firstValidMove = validMoves[0];\n    let constrainDirection = oldIndex !== null && !fromEnter;\n    if (isFromHeader) {\n      constrainDirection = oldIndex !== null;\n    }\n    if (constrainDirection && !fakeEvent) {\n      if (draggingLeft && firstValidMove >= oldIndex) {\n        return;\n      }\n      if (draggingRight && firstValidMove <= oldIndex) {\n        return;\n      }\n    }\n    const displayedCols = columnModel.getAllDisplayedColumns();\n    let potentialMoves = [];\n    let targetOrder = null;\n    for (let i = 0; i < validMoves.length; i++) {\n      const move = validMoves[i];\n      const order = columnModel.getProposedColumnOrder(allMovingColumnsOrdered, move);\n      if (!columnModel.doesOrderPassRules(order)) {\n        continue;\n      }\n      const displayedOrder = order.filter((col) => displayedCols.includes(col));\n      if (targetOrder === null) {\n        targetOrder = displayedOrder;\n      } else if (!areEqual(displayedOrder, targetOrder)) {\n        break;\n      }\n      const fragCount = this.groupFragCount(order);\n      potentialMoves.push({ move, fragCount });\n    }\n    if (potentialMoves.length === 0) {\n      return;\n    }\n    potentialMoves.sort((a, b) => a.fragCount - b.fragCount);\n    return this.moveColumns(allMovingColumns, potentialMoves[0].move, \"uiColumnMoved\", false, columnModel);\n  }\n  static moveColumns(columns, toIndex, source, finished, columnModel) {\n    columnModel.moveColumns(columns, toIndex, source, finished);\n    return finished ? null : { columns, toIndex };\n  }\n  // returns the index of the first column in the list ONLY if the cols are all beside\n  // each other. if the cols are not beside each other, then returns null\n  static calculateOldIndex(movingCols, columnModel) {\n    const gridCols = columnModel.getAllGridColumns();\n    const indexes = sortNumerically(movingCols.map((col) => gridCols.indexOf(col)));\n    const firstIndex = indexes[0];\n    const lastIndex = last(indexes);\n    const spread = lastIndex - firstIndex;\n    const gapsExist = spread !== indexes.length - 1;\n    return gapsExist ? null : firstIndex;\n  }\n  // A measure of how fragmented in terms of groups an order of columns is\n  static groupFragCount(columns) {\n    function parents(col) {\n      let result = [];\n      let parent = col.getOriginalParent();\n      while (parent != null) {\n        result.push(parent);\n        parent = parent.getOriginalParent();\n      }\n      return result;\n    }\n    let count = 0;\n    for (let i = 0; i < columns.length - 1; i++) {\n      let a = parents(columns[i]);\n      let b = parents(columns[i + 1]);\n      [a, b] = a.length > b.length ? [a, b] : [b, a];\n      a.forEach((parent) => {\n        if (b.indexOf(parent) === -1) {\n          count++;\n        }\n      });\n    }\n    return count;\n  }\n  static getDisplayedColumns(columnModel, type) {\n    switch (type) {\n      case \"left\":\n        return columnModel.getDisplayedLeftColumns();\n      case \"right\":\n        return columnModel.getDisplayedRightColumns();\n      default:\n        return columnModel.getDisplayedCenterColumns();\n    }\n  }\n  static calculateValidMoves(params) {\n    const { movingCols, draggingRight, xPosition, pinned, gos, columnModel } = params;\n    const isMoveBlocked = gos.get(\"suppressMovableColumns\") || movingCols.some((col) => col.getColDef().suppressMovable);\n    if (isMoveBlocked) {\n      return [];\n    }\n    const allDisplayedCols = this.getDisplayedColumns(columnModel, pinned);\n    const allGridCols = columnModel.getAllGridColumns();\n    const movingDisplayedCols = allDisplayedCols.filter((col) => includes(movingCols, col));\n    const otherDisplayedCols = allDisplayedCols.filter((col) => !includes(movingCols, col));\n    const otherGridCols = allGridCols.filter((col) => !includes(movingCols, col));\n    let displayIndex = 0;\n    let availableWidth = xPosition;\n    if (draggingRight) {\n      let widthOfMovingDisplayedCols = 0;\n      movingDisplayedCols.forEach((col) => widthOfMovingDisplayedCols += col.getActualWidth());\n      availableWidth -= widthOfMovingDisplayedCols;\n    }\n    if (availableWidth > 0) {\n      for (let i = 0; i < otherDisplayedCols.length; i++) {\n        const col = otherDisplayedCols[i];\n        availableWidth -= col.getActualWidth();\n        if (availableWidth < 0) {\n          break;\n        }\n        displayIndex++;\n      }\n      if (draggingRight) {\n        displayIndex++;\n      }\n    }\n    let firstValidMove;\n    if (displayIndex > 0) {\n      const leftColumn = otherDisplayedCols[displayIndex - 1];\n      firstValidMove = otherGridCols.indexOf(leftColumn) + 1;\n    } else {\n      firstValidMove = otherGridCols.indexOf(otherDisplayedCols[0]);\n      if (firstValidMove === -1) {\n        firstValidMove = 0;\n      }\n    }\n    const validMoves = [firstValidMove];\n    const numberComparator = (a, b) => a - b;\n    if (draggingRight) {\n      let pointer = firstValidMove + 1;\n      const lastIndex = allGridCols.length - 1;\n      while (pointer <= lastIndex) {\n        validMoves.push(pointer);\n        pointer++;\n      }\n      validMoves.sort(numberComparator);\n    } else {\n      let pointer = firstValidMove;\n      const lastIndex = allGridCols.length - 1;\n      let displacedCol = allGridCols[pointer];\n      while (pointer <= lastIndex && allDisplayedCols.indexOf(displacedCol) < 0) {\n        pointer++;\n        validMoves.push(pointer);\n        displacedCol = allGridCols[pointer];\n      }\n      pointer = firstValidMove - 1;\n      const firstDisplayIndex = 0;\n      while (pointer >= firstDisplayIndex) {\n        validMoves.push(pointer);\n        pointer--;\n      }\n      validMoves.sort(numberComparator).reverse();\n    }\n    return validMoves;\n  }\n  static normaliseX(x, pinned, fromKeyboard, gos, ctrlsService) {\n    const eViewport = ctrlsService.getHeaderRowContainerCtrl(pinned).getViewport();\n    if (fromKeyboard) {\n      x -= eViewport.getBoundingClientRect().left;\n    }\n    if (gos.get(\"enableRtl\")) {\n      const clientWidth = eViewport.clientWidth;\n      x = clientWidth - x;\n    }\n    if (pinned == null) {\n      x += ctrlsService.get(\"center\").getCenterViewportScrollLeft();\n    }\n    return x;\n  }\n};\n\n// community-modules/core/src/headerRendering/columnDrag/moveColumnFeature.ts\nvar MoveColumnFeature = class {\n  constructor(pinned) {\n    this.needToMoveLeft = false;\n    this.needToMoveRight = false;\n    this.lastMovedInfo = null;\n    this.pinned = pinned;\n    this.isCenterContainer = !exists(pinned);\n  }\n  init() {\n    this.ctrlsService.whenReady((p) => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n  }\n  getIconName() {\n    return this.pinned ? DragAndDropService.ICON_PINNED : DragAndDropService.ICON_MOVE;\n  }\n  onDragEnter(draggingEvent) {\n    const columns = draggingEvent.dragItem.columns;\n    const dragCameFromToolPanel = draggingEvent.dragSource.type === 0 /* ToolPanel */;\n    if (dragCameFromToolPanel) {\n      this.setColumnsVisible(columns, true, \"uiColumnDragged\");\n    } else {\n      const visibleState = draggingEvent.dragItem.visibleState;\n      const visibleColumns = (columns || []).filter((column) => visibleState[column.getId()]);\n      this.setColumnsVisible(visibleColumns, true, \"uiColumnDragged\");\n    }\n    this.setColumnsPinned(columns, this.pinned, \"uiColumnDragged\");\n    this.onDragging(draggingEvent, true, true);\n  }\n  onDragLeave() {\n    this.ensureIntervalCleared();\n    this.lastMovedInfo = null;\n  }\n  setColumnsVisible(columns, visible, source) {\n    if (columns) {\n      const allowedCols = columns.filter((c) => !c.getColDef().lockVisible);\n      this.columnModel.setColumnsVisible(allowedCols, visible, source);\n    }\n  }\n  setColumnsPinned(columns, pinned, source) {\n    if (columns) {\n      const allowedCols = columns.filter((c) => !c.getColDef().lockPinned);\n      this.columnModel.setColumnsPinned(allowedCols, pinned, source);\n    }\n  }\n  onDragStop() {\n    this.onDragging(this.lastDraggingEvent, false, true, true);\n    this.ensureIntervalCleared();\n    this.lastMovedInfo = null;\n  }\n  checkCenterForScrolling(xAdjustedForScroll) {\n    if (this.isCenterContainer) {\n      const centerCtrl = this.ctrlsService.get(\"center\");\n      const firstVisiblePixel = centerCtrl.getCenterViewportScrollLeft();\n      const lastVisiblePixel = firstVisiblePixel + centerCtrl.getCenterWidth();\n      if (this.gos.get(\"enableRtl\")) {\n        this.needToMoveRight = xAdjustedForScroll < firstVisiblePixel + 50;\n        this.needToMoveLeft = xAdjustedForScroll > lastVisiblePixel - 50;\n      } else {\n        this.needToMoveLeft = xAdjustedForScroll < firstVisiblePixel + 50;\n        this.needToMoveRight = xAdjustedForScroll > lastVisiblePixel - 50;\n      }\n      if (this.needToMoveLeft || this.needToMoveRight) {\n        this.ensureIntervalStarted();\n      } else {\n        this.ensureIntervalCleared();\n      }\n    }\n  }\n  onDragging(draggingEvent = this.lastDraggingEvent, fromEnter = false, fakeEvent = false, finished = false) {\n    var _a;\n    if (finished) {\n      if (this.lastMovedInfo) {\n        const { columns, toIndex } = this.lastMovedInfo;\n        ColumnMoveHelper.moveColumns(columns, toIndex, \"uiColumnMoved\", true, this.columnModel);\n      }\n      return;\n    }\n    this.lastDraggingEvent = draggingEvent;\n    if (missing(draggingEvent.hDirection)) {\n      return;\n    }\n    const mouseX = ColumnMoveHelper.normaliseX(\n      draggingEvent.x,\n      this.pinned,\n      false,\n      this.gos,\n      this.ctrlsService\n    );\n    if (!fromEnter) {\n      this.checkCenterForScrolling(mouseX);\n    }\n    const hDirection = this.normaliseDirection(draggingEvent.hDirection);\n    const dragSourceType = draggingEvent.dragSource.type;\n    const allMovingColumns = ((_a = draggingEvent.dragSource.getDragItem().columns) == null ? void 0 : _a.filter((col) => {\n      if (col.getColDef().lockPinned) {\n        return col.getPinned() == this.pinned;\n      }\n      return true;\n    })) || [];\n    const lastMovedInfo = ColumnMoveHelper.attemptMoveColumns({\n      allMovingColumns,\n      isFromHeader: dragSourceType === 1 /* HeaderCell */,\n      hDirection,\n      xPosition: mouseX,\n      pinned: this.pinned,\n      fromEnter,\n      fakeEvent,\n      gos: this.gos,\n      columnModel: this.columnModel\n    });\n    if (lastMovedInfo) {\n      this.lastMovedInfo = lastMovedInfo;\n    }\n  }\n  normaliseDirection(hDirection) {\n    if (this.gos.get(\"enableRtl\")) {\n      switch (hDirection) {\n        case 0 /* Left */:\n          return 1 /* Right */;\n        case 1 /* Right */:\n          return 0 /* Left */;\n        default:\n          console.error(`AG Grid: Unknown direction ${hDirection}`);\n      }\n    } else {\n      return hDirection;\n    }\n  }\n  ensureIntervalStarted() {\n    if (!this.movingIntervalId) {\n      this.intervalCount = 0;\n      this.failedMoveAttempts = 0;\n      this.movingIntervalId = window.setInterval(this.moveInterval.bind(this), 100);\n      if (this.needToMoveLeft) {\n        this.dragAndDropService.setGhostIcon(DragAndDropService.ICON_LEFT, true);\n      } else {\n        this.dragAndDropService.setGhostIcon(DragAndDropService.ICON_RIGHT, true);\n      }\n    }\n  }\n  ensureIntervalCleared() {\n    if (this.movingIntervalId) {\n      window.clearInterval(this.movingIntervalId);\n      this.movingIntervalId = null;\n      this.dragAndDropService.setGhostIcon(DragAndDropService.ICON_MOVE);\n    }\n  }\n  moveInterval() {\n    let pixelsToMove;\n    this.intervalCount++;\n    pixelsToMove = 10 + this.intervalCount * 5;\n    if (pixelsToMove > 100) {\n      pixelsToMove = 100;\n    }\n    let pixelsMoved = null;\n    const scrollFeature = this.gridBodyCon.getScrollFeature();\n    if (this.needToMoveLeft) {\n      pixelsMoved = scrollFeature.scrollHorizontally(-pixelsToMove);\n    } else if (this.needToMoveRight) {\n      pixelsMoved = scrollFeature.scrollHorizontally(pixelsToMove);\n    }\n    if (pixelsMoved !== 0) {\n      this.onDragging(this.lastDraggingEvent);\n      this.failedMoveAttempts = 0;\n    } else {\n      this.failedMoveAttempts++;\n      const columns = this.lastDraggingEvent.dragItem.columns;\n      const columnsThatCanPin = columns.filter((c) => !c.getColDef().lockPinned);\n      if (columnsThatCanPin.length > 0) {\n        this.dragAndDropService.setGhostIcon(DragAndDropService.ICON_PINNED);\n        if (this.failedMoveAttempts > 7) {\n          const pinType = this.needToMoveLeft ? \"left\" : \"right\";\n          this.setColumnsPinned(columnsThatCanPin, pinType, \"uiColumnDragged\");\n          this.dragAndDropService.nudge();\n        }\n      }\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"columnModel\")\n], MoveColumnFeature.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"dragAndDropService\")\n], MoveColumnFeature.prototype, \"dragAndDropService\", 2);\n__decorateClass([\n  Autowired(\"gridOptionsService\")\n], MoveColumnFeature.prototype, \"gos\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], MoveColumnFeature.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  PostConstruct\n], MoveColumnFeature.prototype, \"init\", 1);\n\n// community-modules/core/src/headerRendering/columnDrag/bodyDropTarget.ts\nvar BodyDropTarget = class extends BeanStub {\n  constructor(pinned, eContainer) {\n    super();\n    this.pinned = pinned;\n    this.eContainer = eContainer;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      switch (this.pinned) {\n        case \"left\":\n          this.eSecondaryContainers = [\n            [p.gridBodyCtrl.getBodyViewportElement(), p.left.getContainerElement()],\n            [p.bottomLeft.getContainerElement()],\n            [p.topLeft.getContainerElement()]\n          ];\n          break;\n        case \"right\":\n          this.eSecondaryContainers = [\n            [p.gridBodyCtrl.getBodyViewportElement(), p.right.getContainerElement()],\n            [p.bottomRight.getContainerElement()],\n            [p.topRight.getContainerElement()]\n          ];\n          break;\n        default:\n          this.eSecondaryContainers = [\n            [p.gridBodyCtrl.getBodyViewportElement(), p.center.getViewportElement()],\n            [p.bottomCenter.getViewportElement()],\n            [p.topCenter.getViewportElement()]\n          ];\n          break;\n      }\n    });\n  }\n  isInterestedIn(type) {\n    return type === 1 /* HeaderCell */ || type === 0 /* ToolPanel */ && this.gos.get(\"allowDragFromColumnsToolPanel\");\n  }\n  getSecondaryContainers() {\n    return this.eSecondaryContainers;\n  }\n  getContainer() {\n    return this.eContainer;\n  }\n  init() {\n    this.moveColumnFeature = this.createManagedBean(new MoveColumnFeature(this.pinned));\n    this.bodyDropPivotTarget = this.createManagedBean(new BodyDropPivotTarget(this.pinned));\n    this.dragAndDropService.addDropTarget(this);\n  }\n  getIconName() {\n    return this.currentDropListener.getIconName();\n  }\n  // we want to use the bodyPivotTarget if the user is dragging columns in from the toolPanel\n  // and we are in pivot mode, as it has to logic to set pivot/value/group on the columns when\n  // dropped into the grid's body.\n  isDropColumnInPivotMode(draggingEvent) {\n    return this.columnModel.isPivotMode() && draggingEvent.dragSource.type === 0 /* ToolPanel */;\n  }\n  onDragEnter(draggingEvent) {\n    this.currentDropListener = this.isDropColumnInPivotMode(draggingEvent) ? this.bodyDropPivotTarget : this.moveColumnFeature;\n    this.currentDropListener.onDragEnter(draggingEvent);\n  }\n  onDragLeave(params) {\n    this.currentDropListener.onDragLeave(params);\n  }\n  onDragging(params) {\n    this.currentDropListener.onDragging(params);\n  }\n  onDragStop(params) {\n    this.currentDropListener.onDragStop(params);\n  }\n};\n__decorateClass([\n  Autowired(\"dragAndDropService\")\n], BodyDropTarget.prototype, \"dragAndDropService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], BodyDropTarget.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], BodyDropTarget.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  PostConstruct\n], BodyDropTarget.prototype, \"postConstruct\", 1);\n__decorateClass([\n  PostConstruct\n], BodyDropTarget.prototype, \"init\", 1);\n\n// community-modules/core/src/headerRendering/cells/column/headerCellComp.ts\nvar _HeaderCellComp = class _HeaderCellComp extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super(_HeaderCellComp.TEMPLATE, ctrl);\n    this.headerCompVersion = 0;\n    this.column = ctrl.getColumnGroupChild();\n    this.pinned = ctrl.getPinned();\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const setAttribute = (name, value) => {\n      if (value != null && value != \"\") {\n        eGui.setAttribute(name, value);\n      } else {\n        eGui.removeAttribute(name);\n      }\n    };\n    setAttribute(\"col-id\", this.column.getColId());\n    const compProxy = {\n      setWidth: (width) => eGui.style.width = width,\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setAriaSort: (sort) => sort ? setAriaSort(eGui, sort) : removeAriaSort(eGui),\n      setUserCompDetails: (compDetails) => this.setUserCompDetails(compDetails),\n      getUserCompInstance: () => this.headerComp\n    };\n    this.ctrl.setComp(compProxy, this.getGui(), this.eResize, this.eHeaderCompWrapper);\n    const selectAllGui = this.ctrl.getSelectAllGui();\n    this.eResize.insertAdjacentElement(\"afterend\", selectAllGui);\n  }\n  destroyHeaderComp() {\n    if (this.headerComp) {\n      this.eHeaderCompWrapper.removeChild(this.headerCompGui);\n      this.headerComp = this.destroyBean(this.headerComp);\n      this.headerCompGui = void 0;\n    }\n  }\n  setUserCompDetails(compDetails) {\n    this.headerCompVersion++;\n    const versionCopy = this.headerCompVersion;\n    compDetails.newAgStackInstance().then((comp) => this.afterCompCreated(versionCopy, comp));\n  }\n  afterCompCreated(version, headerComp) {\n    if (version != this.headerCompVersion || !this.isAlive()) {\n      this.destroyBean(headerComp);\n      return;\n    }\n    this.destroyHeaderComp();\n    this.headerComp = headerComp;\n    this.headerCompGui = headerComp.getGui();\n    this.eHeaderCompWrapper.appendChild(this.headerCompGui);\n    this.ctrl.setDragSource(this.getGui());\n  }\n};\n_HeaderCellComp.TEMPLATE = /* html */\n`<div class=\"ag-header-cell\" role=\"columnheader\">\n            <div ref=\"eResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n            <div ref=\"eHeaderCompWrapper\" class=\"ag-header-cell-comp-wrapper\" role=\"presentation\"></div>\n        </div>`;\n__decorateClass([\n  RefSelector(\"eResize\")\n], _HeaderCellComp.prototype, \"eResize\", 2);\n__decorateClass([\n  RefSelector(\"eHeaderCompWrapper\")\n], _HeaderCellComp.prototype, \"eHeaderCompWrapper\", 2);\n__decorateClass([\n  PostConstruct\n], _HeaderCellComp.prototype, \"postConstruct\", 1);\n__decorateClass([\n  PreDestroy\n], _HeaderCellComp.prototype, \"destroyHeaderComp\", 1);\nvar HeaderCellComp = _HeaderCellComp;\n\n// community-modules/core/src/headerRendering/cells/columnGroup/headerGroupCellComp.ts\nvar _HeaderGroupCellComp = class _HeaderGroupCellComp extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super(_HeaderGroupCellComp.TEMPLATE, ctrl);\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const setAttribute = (key, value) => value != void 0 ? eGui.setAttribute(key, value) : eGui.removeAttribute(key);\n    eGui.setAttribute(\"col-id\", this.ctrl.getColId());\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setResizableDisplayed: (displayed) => setDisplayed(this.eResize, displayed),\n      setWidth: (width) => eGui.style.width = width,\n      setAriaExpanded: (expanded) => setAttribute(\"aria-expanded\", expanded),\n      setUserCompDetails: (details) => this.setUserCompDetails(details),\n      getUserCompInstance: () => this.headerGroupComp\n    };\n    this.ctrl.setComp(compProxy, eGui, this.eResize);\n  }\n  setUserCompDetails(details) {\n    details.newAgStackInstance().then((comp) => this.afterHeaderCompCreated(comp));\n  }\n  afterHeaderCompCreated(headerGroupComp) {\n    const destroyFunc = () => this.destroyBean(headerGroupComp);\n    if (!this.isAlive()) {\n      destroyFunc();\n      return;\n    }\n    const eGui = this.getGui();\n    const eHeaderGroupGui = headerGroupComp.getGui();\n    eGui.appendChild(eHeaderGroupGui);\n    this.addDestroyFunc(destroyFunc);\n    this.headerGroupComp = headerGroupComp;\n    this.ctrl.setDragSource(eGui);\n  }\n};\n_HeaderGroupCellComp.TEMPLATE = /* html */\n`<div class=\"ag-header-group-cell\" role=\"columnheader\">\n            <div ref=\"eResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n        </div>`;\n__decorateClass([\n  RefSelector(\"eResize\")\n], _HeaderGroupCellComp.prototype, \"eResize\", 2);\n__decorateClass([\n  PostConstruct\n], _HeaderGroupCellComp.prototype, \"postConstruct\", 1);\nvar HeaderGroupCellComp = _HeaderGroupCellComp;\n\n// community-modules/core/src/headerRendering/row/headerRowComp.ts\nvar HeaderRowType = /* @__PURE__ */ ((HeaderRowType2) => {\n  HeaderRowType2[\"COLUMN_GROUP\"] = \"group\";\n  HeaderRowType2[\"COLUMN\"] = \"column\";\n  HeaderRowType2[\"FLOATING_FILTER\"] = \"filter\";\n  return HeaderRowType2;\n})(HeaderRowType || {});\nvar HeaderRowComp = class extends Component {\n  constructor(ctrl) {\n    super();\n    this.headerComps = {};\n    this.ctrl = ctrl;\n    this.setTemplate(\n      /* html */\n      `<div class=\"${this.ctrl.getHeaderRowClass()}\" role=\"row\"></div>`\n    );\n  }\n  init() {\n    setAriaRowIndex(this.getGui(), this.ctrl.getAriaRowIndex());\n    const compProxy = {\n      setHeight: (height) => this.getGui().style.height = height,\n      setTop: (top) => this.getGui().style.top = top,\n      setHeaderCtrls: (ctrls, forceOrder) => this.setHeaderCtrls(ctrls, forceOrder),\n      setWidth: (width) => this.getGui().style.width = width\n    };\n    this.ctrl.setComp(compProxy);\n  }\n  destroyHeaderCtrls() {\n    this.setHeaderCtrls([], false);\n  }\n  setHeaderCtrls(ctrls, forceOrder) {\n    if (!this.isAlive()) {\n      return;\n    }\n    const oldComps = this.headerComps;\n    this.headerComps = {};\n    ctrls.forEach((ctrl) => {\n      const id = ctrl.getInstanceId();\n      let comp = oldComps[id];\n      delete oldComps[id];\n      if (comp == null) {\n        comp = this.createHeaderComp(ctrl);\n        this.getGui().appendChild(comp.getGui());\n      }\n      this.headerComps[id] = comp;\n    });\n    iterateObject(oldComps, (id, comp) => {\n      this.getGui().removeChild(comp.getGui());\n      this.destroyBean(comp);\n    });\n    if (forceOrder) {\n      const comps = getAllValuesInObject(this.headerComps);\n      comps.sort((a, b) => {\n        const leftA = a.getCtrl().getColumnGroupChild().getLeft();\n        const leftB = b.getCtrl().getColumnGroupChild().getLeft();\n        return leftA - leftB;\n      });\n      const elementsInOrder = comps.map((c) => c.getGui());\n      setDomChildOrder(this.getGui(), elementsInOrder);\n    }\n  }\n  createHeaderComp(headerCtrl) {\n    let result;\n    switch (this.ctrl.getType()) {\n      case \"group\" /* COLUMN_GROUP */:\n        result = new HeaderGroupCellComp(headerCtrl);\n        break;\n      case \"filter\" /* FLOATING_FILTER */:\n        result = new HeaderFilterCellComp(headerCtrl);\n        break;\n      default:\n        result = new HeaderCellComp(headerCtrl);\n        break;\n    }\n    this.createBean(result);\n    result.setParentComponent(this);\n    return result;\n  }\n};\n__decorateClass([\n  PostConstruct\n], HeaderRowComp.prototype, \"init\", 1);\n__decorateClass([\n  PreDestroy\n], HeaderRowComp.prototype, \"destroyHeaderCtrls\", 1);\n\n// community-modules/core/src/headerRendering/cells/abstractCell/abstractHeaderCellCtrl.ts\nvar instanceIdSequence4 = 0;\nvar _AbstractHeaderCellCtrl = class _AbstractHeaderCellCtrl extends BeanStub {\n  constructor(columnGroupChild, beans, parentRowCtrl) {\n    super();\n    this.resizeToggleTimeout = 0;\n    this.resizeMultiplier = 1;\n    this.resizeFeature = null;\n    this.lastFocusEvent = null;\n    this.dragSource = null;\n    this.columnGroupChild = columnGroupChild;\n    this.parentRowCtrl = parentRowCtrl;\n    this.beans = beans;\n    this.instanceId = columnGroupChild.getUniqueId() + \"-\" + instanceIdSequence4++;\n  }\n  postConstruct() {\n    this.addManagedPropertyListeners([\"suppressHeaderFocus\"], () => this.refreshTabIndex());\n  }\n  shouldStopEventPropagation(e) {\n    const { headerRowIndex, column } = this.focusService.getFocusedHeader();\n    return isUserSuppressingHeaderKeyboardEvent(\n      this.gos,\n      e,\n      headerRowIndex,\n      column\n    );\n  }\n  getWrapperHasFocus() {\n    const activeEl = this.gos.getActiveDomElement();\n    return activeEl === this.eGui;\n  }\n  setGui(eGui) {\n    this.eGui = eGui;\n    this.addDomData();\n    this.addManagedListener(this.beans.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    this.onDisplayedColumnsChanged();\n    this.refreshTabIndex();\n  }\n  onDisplayedColumnsChanged() {\n    if (!this.comp || !this.column) {\n      return;\n    }\n    this.refreshFirstAndLastStyles();\n    this.refreshAriaColIndex();\n  }\n  refreshFirstAndLastStyles() {\n    const { comp, column, beans } = this;\n    CssClassApplier.refreshFirstAndLastStyles(comp, column, beans.columnModel);\n  }\n  refreshAriaColIndex() {\n    const { beans, column } = this;\n    const colIdx = beans.columnModel.getAriaColumnIndex(column);\n    setAriaColIndex(this.eGui, colIdx);\n  }\n  addResizeAndMoveKeyboardListeners() {\n    if (!this.resizeFeature) {\n      return;\n    }\n    this.addManagedListener(this.eGui, \"keydown\", this.onGuiKeyDown.bind(this));\n    this.addManagedListener(this.eGui, \"keyup\", this.onGuiKeyUp.bind(this));\n  }\n  refreshTabIndex() {\n    const suppressHeaderFocus = this.gos.get(\"suppressHeaderFocus\");\n    if (suppressHeaderFocus) {\n      this.eGui.removeAttribute(\"tabindex\");\n    } else {\n      this.eGui.setAttribute(\"tabindex\", \"-1\");\n    }\n  }\n  onGuiKeyDown(e) {\n    var _a;\n    const activeEl = this.gos.getActiveDomElement();\n    const isLeftOrRight = e.key === KeyCode.LEFT || e.key === KeyCode.RIGHT;\n    if (this.isResizing) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n    if (\n      // if elements within the header are focused, we don't process the event\n      activeEl !== this.eGui || // if shiftKey and altKey are not pressed, it's cell navigation so we don't process the event\n      !e.shiftKey && !e.altKey\n    ) {\n      return;\n    }\n    if (this.isResizing || isLeftOrRight) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n    if (!isLeftOrRight) {\n      return;\n    }\n    const isLeft = e.key === KeyCode.LEFT !== this.gos.get(\"enableRtl\");\n    const direction = HorizontalDirection[isLeft ? \"Left\" : \"Right\"];\n    if (e.altKey) {\n      this.isResizing = true;\n      this.resizeMultiplier += 1;\n      const diff = this.getViewportAdjustedResizeDiff(e);\n      this.resizeHeader(diff, e.shiftKey);\n      (_a = this.resizeFeature) == null ? void 0 : _a.toggleColumnResizing(true);\n    } else {\n      this.moveHeader(direction);\n    }\n  }\n  getViewportAdjustedResizeDiff(e) {\n    let diff = this.getResizeDiff(e);\n    const pinned = this.column.getPinned();\n    if (pinned) {\n      const leftWidth = this.pinnedWidthService.getPinnedLeftWidth();\n      const rightWidth = this.pinnedWidthService.getPinnedRightWidth();\n      const bodyWidth = getInnerWidth(this.ctrlsService.getGridBodyCtrl().getBodyViewportElement()) - 50;\n      if (leftWidth + rightWidth + diff > bodyWidth) {\n        if (bodyWidth > leftWidth + rightWidth) {\n          diff = bodyWidth - leftWidth - rightWidth;\n        } else {\n          return 0;\n        }\n      }\n    }\n    return diff;\n  }\n  getResizeDiff(e) {\n    let isLeft = e.key === KeyCode.LEFT !== this.gos.get(\"enableRtl\");\n    const pinned = this.column.getPinned();\n    const isRtl = this.gos.get(\"enableRtl\");\n    if (pinned) {\n      if (isRtl !== (pinned === \"right\")) {\n        isLeft = !isLeft;\n      }\n    }\n    return (isLeft ? -1 : 1) * this.resizeMultiplier;\n  }\n  onGuiKeyUp() {\n    if (!this.isResizing) {\n      return;\n    }\n    if (this.resizeToggleTimeout) {\n      window.clearTimeout(this.resizeToggleTimeout);\n      this.resizeToggleTimeout = 0;\n    }\n    this.isResizing = false;\n    this.resizeMultiplier = 1;\n    this.resizeToggleTimeout = setTimeout(() => {\n      var _a;\n      (_a = this.resizeFeature) == null ? void 0 : _a.toggleColumnResizing(false);\n    }, 150);\n  }\n  handleKeyDown(e) {\n    const wrapperHasFocus = this.getWrapperHasFocus();\n    switch (e.key) {\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        if (wrapperHasFocus) {\n          e.preventDefault();\n        }\n    }\n  }\n  addDomData() {\n    const key = _AbstractHeaderCellCtrl.DOM_DATA_KEY_HEADER_CTRL;\n    this.gos.setDomData(this.eGui, key, this);\n    this.addDestroyFunc(() => this.gos.setDomData(this.eGui, key, null));\n  }\n  getGui() {\n    return this.eGui;\n  }\n  focus(event) {\n    if (!this.eGui) {\n      return false;\n    }\n    this.lastFocusEvent = event || null;\n    this.eGui.focus();\n    return true;\n  }\n  getRowIndex() {\n    return this.parentRowCtrl.getRowIndex();\n  }\n  getParentRowCtrl() {\n    return this.parentRowCtrl;\n  }\n  getPinned() {\n    return this.parentRowCtrl.getPinned();\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  getColumnGroupChild() {\n    return this.columnGroupChild;\n  }\n  removeDragSource() {\n    if (this.dragSource) {\n      this.dragAndDropService.removeDragSource(this.dragSource);\n      this.dragSource = null;\n    }\n  }\n  handleContextMenuMouseEvent(mouseEvent, touchEvent, column) {\n    const event = mouseEvent != null ? mouseEvent : touchEvent;\n    if (this.gos.get(\"preventDefaultOnContextMenu\")) {\n      event.preventDefault();\n    }\n    const columnToUse = column instanceof Column ? column : void 0;\n    if (this.menuService.isHeaderContextMenuEnabled(columnToUse)) {\n      this.menuService.showHeaderContextMenu(columnToUse, mouseEvent, touchEvent);\n    }\n    this.dispatchColumnMouseEvent(Events.EVENT_COLUMN_HEADER_CONTEXT_MENU, column);\n  }\n  dispatchColumnMouseEvent(eventType, column) {\n    const event = {\n      type: eventType,\n      column\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  destroy() {\n    super.destroy();\n    this.removeDragSource();\n    this.comp = null;\n    this.column = null;\n    this.resizeFeature = null;\n    this.lastFocusEvent = null;\n    this.columnGroupChild = null;\n    this.parentRowCtrl = null;\n    this.eGui = null;\n  }\n};\n_AbstractHeaderCellCtrl.DOM_DATA_KEY_HEADER_CTRL = \"headerCtrl\";\n__decorateClass([\n  Autowired(\"pinnedWidthService\")\n], _AbstractHeaderCellCtrl.prototype, \"pinnedWidthService\", 2);\n__decorateClass([\n  Autowired(\"focusService\")\n], _AbstractHeaderCellCtrl.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"userComponentFactory\")\n], _AbstractHeaderCellCtrl.prototype, \"userComponentFactory\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], _AbstractHeaderCellCtrl.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"dragAndDropService\")\n], _AbstractHeaderCellCtrl.prototype, \"dragAndDropService\", 2);\n__decorateClass([\n  Autowired(\"menuService\")\n], _AbstractHeaderCellCtrl.prototype, \"menuService\", 2);\n__decorateClass([\n  PostConstruct\n], _AbstractHeaderCellCtrl.prototype, \"postConstruct\", 1);\nvar AbstractHeaderCellCtrl = _AbstractHeaderCellCtrl;\n\n// community-modules/core/src/rendering/features/setLeftFeature.ts\nvar SetLeftFeature = class extends BeanStub {\n  constructor(columnOrGroup, eCell, beans, colsSpanning) {\n    super();\n    this.columnOrGroup = columnOrGroup;\n    this.eCell = eCell;\n    this.ariaEl = this.eCell.querySelector(\"[role=columnheader]\") || this.eCell;\n    this.colsSpanning = colsSpanning;\n    this.beans = beans;\n  }\n  setColsSpanning(colsSpanning) {\n    this.colsSpanning = colsSpanning;\n    this.onLeftChanged();\n  }\n  getColumnOrGroup() {\n    if (this.beans.gos.get(\"enableRtl\") && this.colsSpanning) {\n      return last(this.colsSpanning);\n    }\n    return this.columnOrGroup;\n  }\n  postConstruct() {\n    this.addManagedListener(this.columnOrGroup, Column.EVENT_LEFT_CHANGED, this.onLeftChanged.bind(this));\n    this.setLeftFirstTime();\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onLeftChanged.bind(this));\n    this.addManagedPropertyListener(\"domLayout\", this.onLeftChanged.bind(this));\n  }\n  setLeftFirstTime() {\n    const suppressMoveAnimation = this.beans.gos.get(\"suppressColumnMoveAnimation\");\n    const oldLeftExists = exists(this.columnOrGroup.getOldLeft());\n    const animateColumnMove = this.beans.columnAnimationService.isActive() && oldLeftExists && !suppressMoveAnimation;\n    if (animateColumnMove) {\n      this.animateInLeft();\n    } else {\n      this.onLeftChanged();\n    }\n  }\n  animateInLeft() {\n    const colOrGroup = this.getColumnOrGroup();\n    const left = colOrGroup.getLeft();\n    const oldLeft = colOrGroup.getOldLeft();\n    const oldActualLeft = this.modifyLeftForPrintLayout(colOrGroup, oldLeft);\n    const actualLeft = this.modifyLeftForPrintLayout(colOrGroup, left);\n    this.setLeft(oldActualLeft);\n    this.actualLeft = actualLeft;\n    this.beans.columnAnimationService.executeNextVMTurn(() => {\n      if (this.actualLeft === actualLeft) {\n        this.setLeft(actualLeft);\n      }\n    });\n  }\n  onLeftChanged() {\n    const colOrGroup = this.getColumnOrGroup();\n    const left = colOrGroup.getLeft();\n    this.actualLeft = this.modifyLeftForPrintLayout(colOrGroup, left);\n    this.setLeft(this.actualLeft);\n  }\n  modifyLeftForPrintLayout(colOrGroup, leftPosition) {\n    const printLayout = this.beans.gos.isDomLayout(\"print\");\n    if (!printLayout) {\n      return leftPosition;\n    }\n    if (colOrGroup.getPinned() === \"left\") {\n      return leftPosition;\n    }\n    const leftWidth = this.beans.columnModel.getDisplayedColumnsLeftWidth();\n    if (colOrGroup.getPinned() === \"right\") {\n      const bodyWidth = this.beans.columnModel.getBodyContainerWidth();\n      return leftWidth + bodyWidth + leftPosition;\n    }\n    return leftWidth + leftPosition;\n  }\n  setLeft(value) {\n    if (exists(value)) {\n      this.eCell.style.left = `${value}px`;\n    }\n    let indexColumn;\n    if (this.columnOrGroup instanceof Column) {\n      indexColumn = this.columnOrGroup;\n    } else {\n      const columnGroup = this.columnOrGroup;\n      const children = columnGroup.getLeafColumns();\n      if (!children.length) {\n        return;\n      }\n      if (children.length > 1) {\n        setAriaColSpan(this.ariaEl, children.length);\n      }\n      indexColumn = children[0];\n    }\n  }\n};\n__decorateClass([\n  PostConstruct\n], SetLeftFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/headerRendering/cells/hoverFeature.ts\nvar HoverFeature = class extends BeanStub {\n  constructor(columns, element) {\n    super();\n    this.columns = columns;\n    this.element = element;\n  }\n  postConstruct() {\n    if (this.gos.get(\"columnHoverHighlight\")) {\n      this.addMouseHoverListeners();\n    }\n  }\n  addMouseHoverListeners() {\n    this.addManagedListener(this.element, \"mouseout\", this.onMouseOut.bind(this));\n    this.addManagedListener(this.element, \"mouseover\", this.onMouseOver.bind(this));\n  }\n  onMouseOut() {\n    this.columnHoverService.clearMouseOver();\n  }\n  onMouseOver() {\n    this.columnHoverService.setMouseOver(this.columns);\n  }\n};\n__decorateClass([\n  Autowired(\"columnHoverService\")\n], HoverFeature.prototype, \"columnHoverService\", 2);\n__decorateClass([\n  PostConstruct\n], HoverFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/headerRendering/cells/floatingFilter/headerFilterCellCtrl.ts\nvar HeaderFilterCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor(column, beans, parentRowCtrl) {\n    super(column, beans, parentRowCtrl);\n    this.iconCreated = false;\n    this.column = column;\n  }\n  setComp(comp, eGui, eButtonShowMainFilter, eFloatingFilterBody) {\n    this.comp = comp;\n    this.eButtonShowMainFilter = eButtonShowMainFilter;\n    this.eFloatingFilterBody = eFloatingFilterBody;\n    this.setGui(eGui);\n    this.setupActive();\n    this.setupWidth();\n    this.setupLeft();\n    this.setupHover();\n    this.setupFocus();\n    this.setupAria();\n    this.setupFilterButton();\n    this.setupUserComp();\n    this.setupSyncWithFilter();\n    this.setupUi();\n    this.addManagedListener(this.eButtonShowMainFilter, \"click\", this.showParentFilter.bind(this));\n    this.setupFilterChangedListener();\n    this.addManagedListener(this.column, Column.EVENT_COL_DEF_CHANGED, this.onColDefChanged.bind(this));\n  }\n  // empty abstract method\n  resizeHeader() {\n  }\n  // empty abstract method\n  moveHeader() {\n  }\n  setupActive() {\n    const colDef = this.column.getColDef();\n    const filterExists = !!colDef.filter;\n    const floatingFilterExists = !!colDef.floatingFilter;\n    this.active = filterExists && floatingFilterExists;\n  }\n  setupUi() {\n    this.comp.setButtonWrapperDisplayed(!this.suppressFilterButton && this.active);\n    this.comp.addOrRemoveBodyCssClass(\"ag-floating-filter-full-body\", this.suppressFilterButton);\n    this.comp.addOrRemoveBodyCssClass(\"ag-floating-filter-body\", !this.suppressFilterButton);\n    if (!this.active || this.iconCreated) {\n      return;\n    }\n    const eMenuIcon = createIconNoSpan(\"filter\", this.gos, this.column);\n    if (eMenuIcon) {\n      this.iconCreated = true;\n      this.eButtonShowMainFilter.appendChild(eMenuIcon);\n    }\n  }\n  setupFocus() {\n    this.createManagedBean(new ManagedFocusFeature(\n      this.eGui,\n      {\n        shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),\n        onTabKeyDown: this.onTabKeyDown.bind(this),\n        handleKeyDown: this.handleKeyDown.bind(this),\n        onFocusIn: this.onFocusIn.bind(this)\n      }\n    ));\n  }\n  setupAria() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    setAriaLabel(this.eButtonShowMainFilter, localeTextFunc(\"ariaFilterMenuOpen\", \"Open Filter Menu\"));\n  }\n  onTabKeyDown(e) {\n    const activeEl = this.gos.getActiveDomElement();\n    const wrapperHasFocus = activeEl === this.eGui;\n    if (wrapperHasFocus) {\n      return;\n    }\n    const nextFocusableEl = this.focusService.findNextFocusableElement(this.eGui, null, e.shiftKey);\n    if (nextFocusableEl) {\n      this.beans.headerNavigationService.scrollToColumn(this.column);\n      e.preventDefault();\n      nextFocusableEl.focus();\n      return;\n    }\n    const nextFocusableColumn = this.findNextColumnWithFloatingFilter(e.shiftKey);\n    if (!nextFocusableColumn) {\n      return;\n    }\n    if (this.focusService.focusHeaderPosition({\n      headerPosition: {\n        headerRowIndex: this.getParentRowCtrl().getRowIndex(),\n        column: nextFocusableColumn\n      },\n      event: e\n    })) {\n      e.preventDefault();\n    }\n  }\n  findNextColumnWithFloatingFilter(backwards) {\n    const columnModel = this.beans.columnModel;\n    let nextCol = this.column;\n    do {\n      nextCol = backwards ? columnModel.getDisplayedColBefore(nextCol) : columnModel.getDisplayedColAfter(nextCol);\n      if (!nextCol) {\n        break;\n      }\n    } while (!nextCol.getColDef().filter || !nextCol.getColDef().floatingFilter);\n    return nextCol;\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    const wrapperHasFocus = this.getWrapperHasFocus();\n    switch (e.key) {\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n        if (!wrapperHasFocus) {\n          e.preventDefault();\n        }\n      case KeyCode.LEFT:\n      case KeyCode.RIGHT:\n        if (wrapperHasFocus) {\n          return;\n        }\n        e.stopPropagation();\n      case KeyCode.ENTER:\n        if (wrapperHasFocus) {\n          if (this.focusService.focusInto(this.eGui)) {\n            e.preventDefault();\n          }\n        }\n        break;\n      case KeyCode.ESCAPE:\n        if (!wrapperHasFocus) {\n          this.eGui.focus();\n        }\n    }\n  }\n  onFocusIn(e) {\n    const isRelatedWithin = this.eGui.contains(e.relatedTarget);\n    if (isRelatedWithin) {\n      return;\n    }\n    const notFromHeaderWrapper = !!e.relatedTarget && !e.relatedTarget.classList.contains(\"ag-floating-filter\");\n    const fromWithinHeader = !!e.relatedTarget && isElementChildOfClass(e.relatedTarget, \"ag-floating-filter\");\n    if (notFromHeaderWrapper && fromWithinHeader && e.target === this.eGui) {\n      const lastFocusEvent = this.lastFocusEvent;\n      const fromTab = !!(lastFocusEvent && lastFocusEvent.key === KeyCode.TAB);\n      if (lastFocusEvent && fromTab) {\n        const shouldFocusLast = lastFocusEvent.shiftKey;\n        this.focusService.focusInto(this.eGui, shouldFocusLast);\n      }\n    }\n    const rowIndex = this.getRowIndex();\n    this.beans.focusService.setFocusedHeader(rowIndex, this.column);\n  }\n  setupHover() {\n    this.createManagedBean(new HoverFeature([this.column], this.eGui));\n    const listener = () => {\n      if (!this.gos.get(\"columnHoverHighlight\")) {\n        return;\n      }\n      const hovered = this.beans.columnHoverService.isHovered(this.column);\n      this.comp.addOrRemoveCssClass(\"ag-column-hover\", hovered);\n    };\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_HOVER_CHANGED, listener);\n    listener();\n  }\n  setupLeft() {\n    const setLeftFeature = new SetLeftFeature(this.column, this.eGui, this.beans);\n    this.createManagedBean(setLeftFeature);\n  }\n  setupFilterButton() {\n    this.suppressFilterButton = !this.menuService.isFloatingFilterButtonEnabled(this.column);\n    this.highlightFilterButtonWhenActive = !this.menuService.isLegacyMenuEnabled();\n  }\n  setupUserComp() {\n    if (!this.active) {\n      return;\n    }\n    const compDetails = this.beans.filterManager.getFloatingFilterCompDetails(\n      this.column,\n      () => this.showParentFilter()\n    );\n    if (compDetails) {\n      this.setCompDetails(compDetails);\n    }\n  }\n  setCompDetails(compDetails) {\n    this.userCompDetails = compDetails;\n    this.comp.setCompDetails(compDetails);\n  }\n  showParentFilter() {\n    const eventSource = this.suppressFilterButton ? this.eFloatingFilterBody : this.eButtonShowMainFilter;\n    this.menuService.showFilterMenu({\n      column: this.column,\n      buttonElement: eventSource,\n      containerType: \"floatingFilter\",\n      positionBy: \"button\"\n    });\n  }\n  setupSyncWithFilter() {\n    if (!this.active) {\n      return;\n    }\n    const { filterManager } = this.beans;\n    const syncWithFilter = (event) => {\n      if ((event == null ? void 0 : event.source) === \"filterDestroyed\" && this.context.isDestroyed()) {\n        return;\n      }\n      const compPromise = this.comp.getFloatingFilterComp();\n      if (!compPromise) {\n        return;\n      }\n      compPromise.then((comp) => {\n        var _a;\n        if (comp) {\n          const parentModel = filterManager.getCurrentFloatingFilterParentModel(this.column);\n          comp.onParentModelChanged(parentModel, event ? this.gos.addGridCommonParams({\n            columns: (_a = event.columns) != null ? _a : [],\n            type: Events.EVENT_FILTER_CHANGED,\n            source: event.source === \"api\" ? \"api\" : \"columnFilter\"\n          }) : null);\n        }\n      });\n    };\n    this.destroySyncListener = this.addManagedListener(this.column, Column.EVENT_FILTER_CHANGED, syncWithFilter);\n    if (filterManager.isFilterActive(this.column)) {\n      syncWithFilter(null);\n    }\n  }\n  setupWidth() {\n    const listener = () => {\n      const width = `${this.column.getActualWidth()}px`;\n      this.comp.setWidth(width);\n    };\n    this.addManagedListener(this.column, Column.EVENT_WIDTH_CHANGED, listener);\n    listener();\n  }\n  setupFilterChangedListener() {\n    if (this.active) {\n      this.destroyFilterChangedListener = this.addManagedListener(this.column, Column.EVENT_FILTER_CHANGED, this.updateFilterButton.bind(this));\n      this.updateFilterButton();\n    }\n  }\n  updateFilterButton() {\n    if (!this.suppressFilterButton && this.comp) {\n      const isFilterAllowed = this.beans.filterManager.isFilterAllowed(this.column);\n      this.comp.setButtonWrapperDisplayed(isFilterAllowed);\n      if (this.highlightFilterButtonWhenActive && isFilterAllowed) {\n        this.eButtonShowMainFilter.classList.toggle(\"ag-filter-active\", this.column.isFilterActive());\n      }\n    }\n  }\n  onColDefChanged() {\n    var _a, _b;\n    const wasActive = this.active;\n    this.setupActive();\n    const becomeActive = !wasActive && this.active;\n    if (wasActive && !this.active) {\n      (_a = this.destroySyncListener) == null ? void 0 : _a.call(this);\n      (_b = this.destroyFilterChangedListener) == null ? void 0 : _b.call(this);\n    }\n    const newCompDetails = this.active ? this.beans.filterManager.getFloatingFilterCompDetails(\n      this.column,\n      () => this.showParentFilter()\n    ) : null;\n    const compPromise = this.comp.getFloatingFilterComp();\n    if (!compPromise || !newCompDetails) {\n      this.updateCompDetails(newCompDetails, becomeActive);\n    } else {\n      compPromise.then((compInstance) => {\n        var _a2;\n        if (!compInstance || this.beans.filterManager.areFilterCompsDifferent((_a2 = this.userCompDetails) != null ? _a2 : null, newCompDetails)) {\n          this.updateCompDetails(newCompDetails, becomeActive);\n        } else {\n          this.updateFloatingFilterParams(newCompDetails);\n        }\n      });\n    }\n  }\n  updateCompDetails(compDetails, becomeActive) {\n    if (!this.isAlive()) {\n      return;\n    }\n    this.setCompDetails(compDetails);\n    this.setupFilterButton();\n    this.setupUi();\n    if (becomeActive) {\n      this.setupSyncWithFilter();\n      this.setupFilterChangedListener();\n    }\n  }\n  updateFloatingFilterParams(userCompDetails) {\n    var _a;\n    if (!userCompDetails) {\n      return;\n    }\n    const params = userCompDetails.params;\n    (_a = this.comp.getFloatingFilterComp()) == null ? void 0 : _a.then((floatingFilter) => {\n      let hasRefreshed = false;\n      if ((floatingFilter == null ? void 0 : floatingFilter.refresh) && typeof floatingFilter.refresh === \"function\") {\n        const result = floatingFilter.refresh(params);\n        if (result !== null) {\n          hasRefreshed = true;\n        }\n      }\n      if (!hasRefreshed && (floatingFilter == null ? void 0 : floatingFilter.onParamsUpdated) && typeof floatingFilter.onParamsUpdated === \"function\") {\n        const result = floatingFilter.onParamsUpdated(params);\n        if (result !== null) {\n          warnOnce(`Custom floating filter method 'onParamsUpdated' is deprecated. Use 'refresh' instead.`);\n        }\n      }\n    });\n  }\n  destroy() {\n    super.destroy();\n    this.eButtonShowMainFilter = null;\n    this.eFloatingFilterBody = null;\n    this.userCompDetails = null;\n    this.destroySyncListener = null;\n    this.destroyFilterChangedListener = null;\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/column/resizeFeature.ts\nvar ResizeFeature = class extends BeanStub {\n  constructor(pinned, column, eResize, comp, ctrl) {\n    super();\n    this.pinned = pinned;\n    this.column = column;\n    this.eResize = eResize;\n    this.comp = comp;\n    this.ctrl = ctrl;\n  }\n  postConstruct() {\n    const destroyResizeFuncs = [];\n    let canResize;\n    let canAutosize;\n    const addResize = () => {\n      setDisplayed(this.eResize, canResize);\n      if (!canResize) {\n        return;\n      }\n      const finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n        eResizeBar: this.eResize,\n        onResizeStart: this.onResizeStart.bind(this),\n        onResizing: this.onResizing.bind(this, false),\n        onResizeEnd: this.onResizing.bind(this, true)\n      });\n      destroyResizeFuncs.push(finishedWithResizeFunc);\n      if (canAutosize) {\n        const skipHeaderOnAutoSize = this.gos.get(\"skipHeaderOnAutoSize\");\n        const autoSizeColListener = () => {\n          this.columnModel.autoSizeColumn(this.column, \"uiColumnResized\", skipHeaderOnAutoSize);\n        };\n        this.eResize.addEventListener(\"dblclick\", autoSizeColListener);\n        const touchListener = new TouchListener(this.eResize);\n        touchListener.addEventListener(TouchListener.EVENT_DOUBLE_TAP, autoSizeColListener);\n        destroyResizeFuncs.push(() => {\n          this.eResize.removeEventListener(\"dblclick\", autoSizeColListener);\n          touchListener.removeEventListener(TouchListener.EVENT_DOUBLE_TAP, autoSizeColListener);\n          touchListener.destroy();\n        });\n      }\n    };\n    const removeResize = () => {\n      destroyResizeFuncs.forEach((f) => f());\n      destroyResizeFuncs.length = 0;\n    };\n    const refresh = () => {\n      const resize = this.column.isResizable();\n      const autoSize = !this.gos.get(\"suppressAutoSize\") && !this.column.getColDef().suppressAutoSize;\n      const propertyChange = resize !== canResize || autoSize !== canAutosize;\n      if (propertyChange) {\n        canResize = resize;\n        canAutosize = autoSize;\n        removeResize();\n        addResize();\n      }\n    };\n    refresh();\n    this.addDestroyFunc(removeResize);\n    this.ctrl.addRefreshFunction(refresh);\n  }\n  onResizing(finished, resizeAmount) {\n    const { column: key, lastResizeAmount, resizeStartWidth } = this;\n    const resizeAmountNormalised = this.normaliseResizeAmount(resizeAmount);\n    const newWidth = resizeStartWidth + resizeAmountNormalised;\n    const columnWidths = [{ key, newWidth }];\n    if (this.column.getPinned()) {\n      const leftWidth = this.pinnedWidthService.getPinnedLeftWidth();\n      const rightWidth = this.pinnedWidthService.getPinnedRightWidth();\n      const bodyWidth = getInnerWidth(this.ctrlsService.getGridBodyCtrl().getBodyViewportElement()) - 50;\n      if (leftWidth + rightWidth + (resizeAmountNormalised - lastResizeAmount) > bodyWidth) {\n        return;\n      }\n    }\n    this.lastResizeAmount = resizeAmountNormalised;\n    this.columnModel.setColumnWidths(columnWidths, this.resizeWithShiftKey, finished, \"uiColumnResized\");\n    if (finished) {\n      this.toggleColumnResizing(false);\n    }\n  }\n  onResizeStart(shiftKey) {\n    this.resizeStartWidth = this.column.getActualWidth();\n    this.lastResizeAmount = 0;\n    this.resizeWithShiftKey = shiftKey;\n    this.toggleColumnResizing(true);\n  }\n  toggleColumnResizing(resizing) {\n    this.comp.addOrRemoveCssClass(\"ag-column-resizing\", resizing);\n  }\n  // optionally inverts the drag, depending on pinned and RTL\n  // note - this method is duplicated in RenderedHeaderGroupCell - should refactor out?\n  normaliseResizeAmount(dragChange) {\n    let result = dragChange;\n    const notPinningLeft = this.pinned !== \"left\";\n    const pinningRight = this.pinned === \"right\";\n    if (this.gos.get(\"enableRtl\")) {\n      if (notPinningLeft) {\n        result *= -1;\n      }\n    } else {\n      if (pinningRight) {\n        result *= -1;\n      }\n    }\n    return result;\n  }\n};\n__decorateClass([\n  Autowired(\"horizontalResizeService\")\n], ResizeFeature.prototype, \"horizontalResizeService\", 2);\n__decorateClass([\n  Autowired(\"pinnedWidthService\")\n], ResizeFeature.prototype, \"pinnedWidthService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], ResizeFeature.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], ResizeFeature.prototype, \"columnModel\", 2);\n__decorateClass([\n  PostConstruct\n], ResizeFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/headerRendering/cells/column/selectAllFeature.ts\nvar SelectAllFeature = class extends BeanStub {\n  constructor(column) {\n    super();\n    this.cbSelectAllVisible = false;\n    this.processingEventFromCheckbox = false;\n    this.column = column;\n  }\n  onSpaceKeyDown(e) {\n    const checkbox = this.cbSelectAll;\n    if (checkbox.isDisplayed() && !checkbox.getGui().contains(this.gos.getActiveDomElement())) {\n      e.preventDefault();\n      checkbox.setValue(!checkbox.getValue());\n    }\n  }\n  getCheckboxGui() {\n    return this.cbSelectAll.getGui();\n  }\n  setComp(ctrl) {\n    this.headerCellCtrl = ctrl;\n    this.cbSelectAll = this.createManagedBean(new AgCheckbox());\n    this.cbSelectAll.addCssClass(\"ag-header-select-all\");\n    setAriaRole(this.cbSelectAll.getGui(), \"presentation\");\n    this.showOrHideSelectAll();\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_SELECTION_CHANGED, this.onSelectionChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_PAGINATION_CHANGED, this.onSelectionChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_MODEL_UPDATED, this.onModelChanged.bind(this));\n    this.addManagedListener(this.cbSelectAll, Events.EVENT_FIELD_VALUE_CHANGED, this.onCbSelectAll.bind(this));\n    setAriaHidden(this.cbSelectAll.getGui(), true);\n    this.cbSelectAll.getInputElement().setAttribute(\"tabindex\", \"-1\");\n    this.refreshSelectAllLabel();\n  }\n  onNewColumnsLoaded() {\n    this.showOrHideSelectAll();\n  }\n  onDisplayedColumnsChanged() {\n    if (!this.isAlive()) {\n      return;\n    }\n    this.showOrHideSelectAll();\n  }\n  showOrHideSelectAll() {\n    this.cbSelectAllVisible = this.isCheckboxSelection();\n    this.cbSelectAll.setDisplayed(this.cbSelectAllVisible, { skipAriaHidden: true });\n    if (this.cbSelectAllVisible) {\n      this.checkRightRowModelType(\"selectAllCheckbox\");\n      this.checkSelectionType(\"selectAllCheckbox\");\n      this.updateStateOfCheckbox();\n    }\n    this.refreshSelectAllLabel();\n  }\n  onModelChanged() {\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n    this.updateStateOfCheckbox();\n  }\n  onSelectionChanged() {\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n    this.updateStateOfCheckbox();\n  }\n  updateStateOfCheckbox() {\n    if (this.processingEventFromCheckbox) {\n      return;\n    }\n    this.processingEventFromCheckbox = true;\n    const allSelected = this.selectionService.getSelectAllState(\n      this.isFilteredOnly(),\n      this.isCurrentPageOnly()\n    );\n    this.cbSelectAll.setValue(allSelected);\n    const hasNodesToSelect = this.selectionService.hasNodesToSelect(this.isFilteredOnly(), this.isCurrentPageOnly());\n    this.cbSelectAll.setDisabled(!hasNodesToSelect);\n    this.refreshSelectAllLabel();\n    this.processingEventFromCheckbox = false;\n  }\n  refreshSelectAllLabel() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const checked = this.cbSelectAll.getValue();\n    const ariaStatus = checked ? translate(\"ariaChecked\", \"checked\") : translate(\"ariaUnchecked\", \"unchecked\");\n    const ariaLabel = translate(\"ariaRowSelectAll\", \"Press Space to toggle all rows selection\");\n    if (!this.cbSelectAllVisible) {\n      this.headerCellCtrl.setAriaDescriptionProperty(\"selectAll\", null);\n    } else {\n      this.headerCellCtrl.setAriaDescriptionProperty(\"selectAll\", `${ariaLabel} (${ariaStatus})`);\n    }\n    this.cbSelectAll.setInputAriaLabel(`${ariaLabel} (${ariaStatus})`);\n    this.headerCellCtrl.announceAriaDescription();\n  }\n  checkSelectionType(feature) {\n    const isMultiSelect = this.gos.get(\"rowSelection\") === \"multiple\";\n    if (!isMultiSelect) {\n      console.warn(`AG Grid: ${feature} is only available if using 'multiple' rowSelection.`);\n      return false;\n    }\n    return true;\n  }\n  checkRightRowModelType(feature) {\n    const rowModelType = this.rowModel.getType();\n    const rowModelMatches = rowModelType === \"clientSide\" || rowModelType === \"serverSide\";\n    if (!rowModelMatches) {\n      console.warn(`AG Grid: ${feature} is only available if using 'clientSide' or 'serverSide' rowModelType, you are using ${rowModelType}.`);\n      return false;\n    }\n    return true;\n  }\n  onCbSelectAll() {\n    if (this.processingEventFromCheckbox) {\n      return;\n    }\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n    const value = this.cbSelectAll.getValue();\n    const justFiltered = this.isFilteredOnly();\n    const justCurrentPage = this.isCurrentPageOnly();\n    let source = \"uiSelectAll\";\n    if (justCurrentPage) {\n      source = \"uiSelectAllCurrentPage\";\n    } else if (justFiltered) {\n      source = \"uiSelectAllFiltered\";\n    }\n    const params = {\n      source,\n      justFiltered,\n      justCurrentPage\n    };\n    if (value) {\n      this.selectionService.selectAllRowNodes(params);\n    } else {\n      this.selectionService.deselectAllRowNodes(params);\n    }\n  }\n  isCheckboxSelection() {\n    let result = this.column.getColDef().headerCheckboxSelection;\n    if (typeof result === \"function\") {\n      const func = result;\n      const params = this.gos.addGridCommonParams({\n        column: this.column,\n        colDef: this.column.getColDef()\n      });\n      result = func(params);\n    }\n    if (result) {\n      return this.checkRightRowModelType(\"headerCheckboxSelection\") && this.checkSelectionType(\"headerCheckboxSelection\");\n    }\n    return false;\n  }\n  isFilteredOnly() {\n    return !!this.column.getColDef().headerCheckboxSelectionFilteredOnly;\n  }\n  isCurrentPageOnly() {\n    return !!this.column.getColDef().headerCheckboxSelectionCurrentPageOnly;\n  }\n};\n__decorateClass([\n  Autowired(\"rowModel\")\n], SelectAllFeature.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"selectionService\")\n], SelectAllFeature.prototype, \"selectionService\", 2);\n\n// community-modules/core/src/headerRendering/cells/column/headerCellCtrl.ts\nvar HeaderCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor(column, beans, parentRowCtrl) {\n    super(column, beans, parentRowCtrl);\n    this.refreshFunctions = [];\n    this.userHeaderClasses = /* @__PURE__ */ new Set();\n    this.ariaDescriptionProperties = /* @__PURE__ */ new Map();\n    this.column = column;\n  }\n  setComp(comp, eGui, eResize, eHeaderCompWrapper) {\n    this.comp = comp;\n    this.setGui(eGui);\n    this.updateState();\n    this.setupWidth();\n    this.setupMovingCss();\n    this.setupMenuClass();\n    this.setupSortableClass();\n    this.setupWrapTextClass();\n    this.refreshSpanHeaderHeight();\n    this.setupAutoHeight(eHeaderCompWrapper);\n    this.addColumnHoverListener();\n    this.setupFilterClass();\n    this.setupClassesFromColDef();\n    this.setupTooltip();\n    this.addActiveHeaderMouseListeners();\n    this.setupSelectAll();\n    this.setupUserComp();\n    this.refreshAria();\n    this.resizeFeature = this.createManagedBean(new ResizeFeature(this.getPinned(), this.column, eResize, comp, this));\n    this.createManagedBean(new HoverFeature([this.column], eGui));\n    this.createManagedBean(new SetLeftFeature(this.column, eGui, this.beans));\n    this.createManagedBean(new ManagedFocusFeature(\n      eGui,\n      {\n        shouldStopEventPropagation: (e) => this.shouldStopEventPropagation(e),\n        onTabKeyDown: () => null,\n        handleKeyDown: this.handleKeyDown.bind(this),\n        onFocusIn: this.onFocusIn.bind(this),\n        onFocusOut: this.onFocusOut.bind(this)\n      }\n    ));\n    this.addResizeAndMoveKeyboardListeners();\n    this.addManagedPropertyListeners([\"suppressMovableColumns\", \"suppressMenuHide\", \"suppressAggFuncInHeader\"], this.refresh.bind(this));\n    this.addManagedListener(this.column, Column.EVENT_COL_DEF_CHANGED, this.refresh.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VALUE_CHANGED, this.onColumnValueChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onColumnRowGroupChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_CHANGED, this.onColumnPivotChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_HEADER_HEIGHT_CHANGED, this.onHeaderHeightChanged.bind(this));\n  }\n  resizeHeader(delta, shiftKey) {\n    var _a, _b;\n    if (!this.column.isResizable()) {\n      return;\n    }\n    const actualWidth = this.column.getActualWidth();\n    const minWidth = (_a = this.column.getMinWidth()) != null ? _a : 0;\n    const maxWidth = (_b = this.column.getMaxWidth()) != null ? _b : Number.MAX_SAFE_INTEGER;\n    const newWidth = Math.min(Math.max(actualWidth + delta, minWidth), maxWidth);\n    this.beans.columnModel.setColumnWidths([{ key: this.column, newWidth }], shiftKey, true, \"uiColumnResized\");\n  }\n  moveHeader(hDirection) {\n    const { eGui, column, gos, ctrlsService } = this;\n    const pinned = this.getPinned();\n    const left = eGui.getBoundingClientRect().left;\n    const width = column.getActualWidth();\n    const isRtl = gos.get(\"enableRtl\");\n    const isLeft = hDirection === 0 /* Left */ !== isRtl;\n    const xPosition = ColumnMoveHelper.normaliseX(\n      isLeft ? left - 20 : left + width + 20,\n      pinned,\n      true,\n      gos,\n      ctrlsService\n    );\n    ColumnMoveHelper.attemptMoveColumns({\n      allMovingColumns: [column],\n      isFromHeader: true,\n      hDirection,\n      xPosition,\n      pinned,\n      fromEnter: false,\n      fakeEvent: false,\n      gos,\n      columnModel: this.beans.columnModel\n    });\n    ctrlsService.getGridBodyCtrl().getScrollFeature().ensureColumnVisible(column, \"auto\");\n  }\n  setupUserComp() {\n    const compDetails = this.lookupUserCompDetails();\n    this.setCompDetails(compDetails);\n  }\n  setCompDetails(compDetails) {\n    this.userCompDetails = compDetails;\n    this.comp.setUserCompDetails(compDetails);\n  }\n  lookupUserCompDetails() {\n    const params = this.createParams();\n    const colDef = this.column.getColDef();\n    return this.userComponentFactory.getHeaderCompDetails(colDef, params);\n  }\n  createParams() {\n    const params = this.gos.addGridCommonParams({\n      column: this.column,\n      displayName: this.displayName,\n      enableSorting: this.column.isSortable(),\n      enableMenu: this.menuEnabled,\n      enableFilterButton: this.openFilterEnabled && this.menuService.isHeaderFilterButtonEnabled(this.column),\n      enableFilterIcon: !this.openFilterEnabled || this.menuService.isLegacyMenuEnabled(),\n      showColumnMenu: (buttonElement) => {\n        this.menuService.showColumnMenu({\n          column: this.column,\n          buttonElement,\n          positionBy: \"button\"\n        });\n      },\n      showColumnMenuAfterMouseClick: (mouseEvent) => {\n        this.menuService.showColumnMenu({\n          column: this.column,\n          mouseEvent,\n          positionBy: \"mouse\"\n        });\n      },\n      showFilter: (buttonElement) => {\n        this.menuService.showFilterMenu({\n          column: this.column,\n          buttonElement,\n          containerType: \"columnFilter\",\n          positionBy: \"button\"\n        });\n      },\n      progressSort: (multiSort) => {\n        this.beans.sortController.progressSort(this.column, !!multiSort, \"uiColumnSorted\");\n      },\n      setSort: (sort, multiSort) => {\n        this.beans.sortController.setSortForColumn(this.column, sort, !!multiSort, \"uiColumnSorted\");\n      },\n      eGridHeader: this.getGui(),\n      setTooltip: (value, shouldDisplayTooltip) => {\n        this.setupTooltip(value, shouldDisplayTooltip);\n      }\n    });\n    return params;\n  }\n  setupSelectAll() {\n    this.selectAllFeature = this.createManagedBean(new SelectAllFeature(this.column));\n    this.selectAllFeature.setComp(this);\n  }\n  getSelectAllGui() {\n    return this.selectAllFeature.getCheckboxGui();\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    if (e.key === KeyCode.SPACE) {\n      this.selectAllFeature.onSpaceKeyDown(e);\n    }\n    if (e.key === KeyCode.ENTER) {\n      this.onEnterKeyDown(e);\n    }\n    if (e.key === KeyCode.DOWN && e.altKey) {\n      this.showMenuOnKeyPress(e, false);\n    }\n  }\n  onEnterKeyDown(e) {\n    if (e.ctrlKey || e.metaKey) {\n      this.showMenuOnKeyPress(e, true);\n    } else if (this.sortable) {\n      const multiSort = e.shiftKey;\n      this.beans.sortController.progressSort(this.column, multiSort, \"uiColumnSorted\");\n    }\n  }\n  showMenuOnKeyPress(e, isFilterShortcut) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (!headerComp || !(headerComp instanceof HeaderComp)) {\n      return;\n    }\n    if (headerComp.onMenuKeyboardShortcut(isFilterShortcut)) {\n      e.preventDefault();\n    }\n  }\n  onFocusIn(e) {\n    if (!this.getGui().contains(e.relatedTarget)) {\n      const rowIndex = this.getRowIndex();\n      this.focusService.setFocusedHeader(rowIndex, this.column);\n      this.announceAriaDescription();\n    }\n    if (this.focusService.isKeyboardMode()) {\n      this.setActiveHeader(true);\n    }\n  }\n  onFocusOut(e) {\n    if (this.getGui().contains(e.relatedTarget)) {\n      return;\n    }\n    this.setActiveHeader(false);\n  }\n  setupTooltip(value, shouldDisplayTooltip) {\n    if (this.tooltipFeature) {\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    }\n    const isTooltipWhenTruncated = this.gos.get(\"tooltipShowMode\") === \"whenTruncated\";\n    const eGui = this.eGui;\n    const colDef = this.column.getColDef();\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !colDef.headerComponent) {\n      shouldDisplayTooltip = () => {\n        const textEl = eGui.querySelector(\".ag-header-cell-text\");\n        if (!textEl) {\n          return true;\n        }\n        return textEl.scrollWidth > textEl.clientWidth;\n      };\n    }\n    const tooltipCtrl = {\n      getColumn: () => this.column,\n      getColDef: () => this.column.getColDef(),\n      getGui: () => eGui,\n      getLocation: () => \"header\",\n      getTooltipValue: () => {\n        if (value != null) {\n          return value;\n        }\n        const res = this.column.getColDef().headerTooltip;\n        return res;\n      },\n      shouldDisplayTooltip\n    };\n    const tooltipFeature = this.createManagedBean(new TooltipFeature(tooltipCtrl));\n    this.refreshFunctions.push(() => tooltipFeature.refreshToolTip());\n  }\n  setupClassesFromColDef() {\n    const refreshHeaderClasses = () => {\n      const colDef = this.column.getColDef();\n      const classes = CssClassApplier.getHeaderClassesFromColDef(colDef, this.gos, this.column, null);\n      const oldClasses = this.userHeaderClasses;\n      this.userHeaderClasses = new Set(classes);\n      classes.forEach((c) => {\n        if (oldClasses.has(c)) {\n          oldClasses.delete(c);\n        } else {\n          this.comp.addOrRemoveCssClass(c, true);\n        }\n      });\n      oldClasses.forEach((c) => this.comp.addOrRemoveCssClass(c, false));\n    };\n    this.refreshFunctions.push(refreshHeaderClasses);\n    refreshHeaderClasses();\n  }\n  setDragSource(eSource) {\n    this.dragSourceElement = eSource;\n    this.removeDragSource();\n    if (!eSource || !this.draggable) {\n      return;\n    }\n    const { column, beans, displayName, dragAndDropService, gos } = this;\n    const { columnModel } = beans;\n    let hideColumnOnExit = !this.gos.get(\"suppressDragLeaveHidesColumns\");\n    const dragSource = this.dragSource = {\n      type: 1 /* HeaderCell */,\n      eElement: eSource,\n      getDefaultIconName: () => hideColumnOnExit ? DragAndDropService.ICON_HIDE : DragAndDropService.ICON_NOT_ALLOWED,\n      getDragItem: () => this.createDragItem(column),\n      dragItemName: displayName,\n      onDragStarted: () => {\n        hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\n        column.setMoving(true, \"uiColumnMoved\");\n      },\n      onDragStopped: () => column.setMoving(false, \"uiColumnMoved\"),\n      onGridEnter: (dragItem) => {\n        var _a;\n        if (hideColumnOnExit) {\n          const unlockedColumns = ((_a = dragItem == null ? void 0 : dragItem.columns) == null ? void 0 : _a.filter((col) => !col.getColDef().lockVisible)) || [];\n          columnModel.setColumnsVisible(unlockedColumns, true, \"uiColumnMoved\");\n        }\n      },\n      onGridExit: (dragItem) => {\n        var _a;\n        if (hideColumnOnExit) {\n          const unlockedColumns = ((_a = dragItem == null ? void 0 : dragItem.columns) == null ? void 0 : _a.filter((col) => !col.getColDef().lockVisible)) || [];\n          columnModel.setColumnsVisible(unlockedColumns, false, \"uiColumnMoved\");\n        }\n      }\n    };\n    dragAndDropService.addDragSource(dragSource, true);\n  }\n  createDragItem(column) {\n    const visibleState = {};\n    visibleState[column.getId()] = column.isVisible();\n    return {\n      columns: [column],\n      visibleState\n    };\n  }\n  updateState() {\n    this.menuEnabled = this.menuService.isColumnMenuInHeaderEnabled(this.column);\n    this.openFilterEnabled = this.menuService.isFilterMenuInHeaderEnabled(this.column);\n    this.sortable = this.column.isSortable();\n    this.displayName = this.calculateDisplayName();\n    this.draggable = this.workOutDraggable();\n  }\n  addRefreshFunction(func) {\n    this.refreshFunctions.push(func);\n  }\n  refresh() {\n    this.updateState();\n    this.refreshHeaderComp();\n    this.refreshAria();\n    this.refreshFunctions.forEach((f) => f());\n  }\n  refreshHeaderComp() {\n    const newCompDetails = this.lookupUserCompDetails();\n    const compInstance = this.comp.getUserCompInstance();\n    const attemptRefresh = compInstance != null && this.userCompDetails.componentClass == newCompDetails.componentClass;\n    const headerCompRefreshed = attemptRefresh ? this.attemptHeaderCompRefresh(newCompDetails.params) : false;\n    if (headerCompRefreshed) {\n      this.setDragSource(this.dragSourceElement);\n    } else {\n      this.setCompDetails(newCompDetails);\n    }\n  }\n  attemptHeaderCompRefresh(params) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (!headerComp) {\n      return false;\n    }\n    if (!headerComp.refresh) {\n      return false;\n    }\n    const res = headerComp.refresh(params);\n    return res;\n  }\n  calculateDisplayName() {\n    return this.beans.columnModel.getDisplayNameForColumn(this.column, \"header\", true);\n  }\n  checkDisplayName() {\n    if (this.displayName !== this.calculateDisplayName()) {\n      this.refresh();\n    }\n  }\n  workOutDraggable() {\n    const colDef = this.column.getColDef();\n    const isSuppressMovableColumns = this.gos.get(\"suppressMovableColumns\");\n    const colCanMove = !isSuppressMovableColumns && !colDef.suppressMovable && !colDef.lockPosition;\n    return !!colCanMove || !!colDef.enableRowGroup || !!colDef.enablePivot;\n  }\n  onColumnRowGroupChanged() {\n    this.checkDisplayName();\n  }\n  onColumnPivotChanged() {\n    this.checkDisplayName();\n  }\n  onColumnValueChanged() {\n    this.checkDisplayName();\n  }\n  setupWidth() {\n    const listener = () => {\n      const columnWidth = this.column.getActualWidth();\n      this.comp.setWidth(`${columnWidth}px`);\n    };\n    this.addManagedListener(this.column, Column.EVENT_WIDTH_CHANGED, listener);\n    listener();\n  }\n  setupMovingCss() {\n    const listener = () => {\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-moving\", this.column.isMoving());\n    };\n    this.addManagedListener(this.column, Column.EVENT_MOVING_CHANGED, listener);\n    listener();\n  }\n  setupMenuClass() {\n    const listener = () => {\n      this.comp.addOrRemoveCssClass(\"ag-column-menu-visible\", this.column.isMenuVisible());\n    };\n    this.addManagedListener(this.column, Column.EVENT_MENU_VISIBLE_CHANGED, listener);\n    listener();\n  }\n  setupSortableClass() {\n    const updateSortableCssClass = () => {\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-sortable\", !!this.sortable);\n    };\n    updateSortableCssClass();\n    this.addRefreshFunction(updateSortableCssClass);\n    this.addManagedListener(this.eventService, Column.EVENT_SORT_CHANGED, this.refreshAriaSort.bind(this));\n  }\n  setupFilterClass() {\n    const listener = () => {\n      const isFilterActive = this.column.isFilterActive();\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-filtered\", isFilterActive);\n      this.refreshAria();\n    };\n    this.addManagedListener(this.column, Column.EVENT_FILTER_ACTIVE_CHANGED, listener);\n    listener();\n  }\n  setupWrapTextClass() {\n    const listener = () => {\n      const wrapText = !!this.column.getColDef().wrapHeaderText;\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-wrap-text\", wrapText);\n    };\n    listener();\n    this.addRefreshFunction(listener);\n  }\n  onDisplayedColumnsChanged() {\n    super.onDisplayedColumnsChanged();\n    if (!this.isAlive()) {\n      return;\n    }\n    this.onHeaderHeightChanged();\n  }\n  onHeaderHeightChanged() {\n    this.refreshSpanHeaderHeight();\n  }\n  refreshSpanHeaderHeight() {\n    const { eGui, column, comp, beans } = this;\n    if (!column.isSpanHeaderHeight()) {\n      eGui.style.removeProperty(\"top\");\n      eGui.style.removeProperty(\"height\");\n      comp.addOrRemoveCssClass(\"ag-header-span-height\", false);\n      comp.addOrRemoveCssClass(\"ag-header-span-total\", false);\n      return;\n    }\n    const { numberOfParents, isSpanningTotal } = this.column.getColumnGroupPaddingInfo();\n    comp.addOrRemoveCssClass(\"ag-header-span-height\", numberOfParents > 0);\n    const { columnModel } = beans;\n    const headerHeight = columnModel.getColumnHeaderRowHeight();\n    if (numberOfParents === 0) {\n      comp.addOrRemoveCssClass(\"ag-header-span-total\", false);\n      eGui.style.setProperty(\"top\", `0px`);\n      eGui.style.setProperty(\"height\", `${headerHeight}px`);\n      return;\n    }\n    comp.addOrRemoveCssClass(\"ag-header-span-total\", isSpanningTotal);\n    const pivotMode = columnModel.isPivotMode();\n    const groupHeaderHeight = pivotMode ? columnModel.getPivotGroupHeaderHeight() : columnModel.getGroupHeaderHeight();\n    const extraHeight = numberOfParents * groupHeaderHeight;\n    eGui.style.setProperty(\"top\", `${-extraHeight}px`);\n    eGui.style.setProperty(\"height\", `${headerHeight + extraHeight}px`);\n  }\n  setupAutoHeight(wrapperElement) {\n    const { columnModel, resizeObserverService } = this.beans;\n    const measureHeight = (timesCalled) => {\n      if (!this.isAlive()) {\n        return;\n      }\n      const { paddingTop, paddingBottom, borderBottomWidth, borderTopWidth } = getElementSize(this.getGui());\n      const extraHeight = paddingTop + paddingBottom + borderBottomWidth + borderTopWidth;\n      const wrapperHeight = wrapperElement.offsetHeight;\n      const autoHeight = wrapperHeight + extraHeight;\n      if (timesCalled < 5) {\n        const doc = this.beans.gos.getDocument();\n        const notYetInDom = !doc || !doc.contains(wrapperElement);\n        const possiblyNoContentYet = autoHeight == 0;\n        if (notYetInDom || possiblyNoContentYet) {\n          window.setTimeout(() => measureHeight(timesCalled + 1), 0);\n          return;\n        }\n      }\n      columnModel.setColumnHeaderHeight(this.column, autoHeight);\n    };\n    let isMeasuring = false;\n    let stopResizeObserver;\n    const checkMeasuring = () => {\n      const newValue = this.column.isAutoHeaderHeight();\n      if (newValue && !isMeasuring) {\n        startMeasuring();\n      }\n      if (!newValue && isMeasuring) {\n        stopMeasuring();\n      }\n    };\n    const startMeasuring = () => {\n      isMeasuring = true;\n      measureHeight(0);\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-auto-height\", true);\n      stopResizeObserver = resizeObserverService.observeResize(wrapperElement, () => measureHeight(0));\n    };\n    const stopMeasuring = () => {\n      isMeasuring = false;\n      if (stopResizeObserver) {\n        stopResizeObserver();\n      }\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-auto-height\", false);\n      stopResizeObserver = void 0;\n    };\n    checkMeasuring();\n    this.addDestroyFunc(() => stopMeasuring());\n    this.addManagedListener(this.column, Column.EVENT_WIDTH_CHANGED, () => isMeasuring && measureHeight(0));\n    this.addManagedListener(this.eventService, Column.EVENT_SORT_CHANGED, () => {\n      if (isMeasuring) {\n        window.setTimeout(() => measureHeight(0));\n      }\n    });\n    this.addRefreshFunction(checkMeasuring);\n  }\n  refreshAriaSort() {\n    if (this.sortable) {\n      const translate = this.localeService.getLocaleTextFunc();\n      const sort = this.beans.sortController.getDisplaySortForColumn(this.column) || null;\n      this.comp.setAriaSort(getAriaSortState(sort));\n      this.setAriaDescriptionProperty(\"sort\", translate(\"ariaSortableColumn\", \"Press ENTER to sort\"));\n    } else {\n      this.comp.setAriaSort();\n      this.setAriaDescriptionProperty(\"sort\", null);\n    }\n  }\n  refreshAriaMenu() {\n    if (this.menuEnabled) {\n      const translate = this.localeService.getLocaleTextFunc();\n      this.setAriaDescriptionProperty(\"menu\", translate(\"ariaMenuColumn\", \"Press ALT DOWN to open column menu\"));\n    } else {\n      this.setAriaDescriptionProperty(\"menu\", null);\n    }\n  }\n  refreshAriaFilterButton() {\n    if (this.openFilterEnabled && !this.menuService.isLegacyMenuEnabled()) {\n      const translate = this.localeService.getLocaleTextFunc();\n      this.setAriaDescriptionProperty(\"filterButton\", translate(\"ariaFilterColumn\", \"Press CTRL ENTER to open filter\"));\n    } else {\n      this.setAriaDescriptionProperty(\"filterButton\", null);\n    }\n  }\n  refreshAriaFiltered() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const isFilterActive = this.column.isFilterActive();\n    if (isFilterActive) {\n      this.setAriaDescriptionProperty(\"filter\", translate(\"ariaColumnFiltered\", \"Column Filtered\"));\n    } else {\n      this.setAriaDescriptionProperty(\"filter\", null);\n    }\n  }\n  setAriaDescriptionProperty(property, value) {\n    if (value != null) {\n      this.ariaDescriptionProperties.set(property, value);\n    } else {\n      this.ariaDescriptionProperties.delete(property);\n    }\n  }\n  announceAriaDescription() {\n    if (!this.eGui.contains(this.beans.gos.getActiveDomElement())) {\n      return;\n    }\n    const ariaDescription = Array.from(this.ariaDescriptionProperties.keys()).sort((a, b) => a === \"filter\" ? -1 : b.charCodeAt(0) - a.charCodeAt(0)).map((key) => this.ariaDescriptionProperties.get(key)).join(\". \");\n    this.beans.ariaAnnouncementService.announceValue(ariaDescription);\n  }\n  refreshAria() {\n    this.refreshAriaSort();\n    this.refreshAriaMenu();\n    this.refreshAriaFilterButton();\n    this.refreshAriaFiltered();\n  }\n  addColumnHoverListener() {\n    const listener = () => {\n      if (!this.gos.get(\"columnHoverHighlight\")) {\n        return;\n      }\n      const isHovered = this.beans.columnHoverService.isHovered(this.column);\n      this.comp.addOrRemoveCssClass(\"ag-column-hover\", isHovered);\n    };\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_HOVER_CHANGED, listener);\n    listener();\n  }\n  getColId() {\n    return this.column.getColId();\n  }\n  addActiveHeaderMouseListeners() {\n    const listener = (e) => this.handleMouseOverChange(e.type === \"mouseenter\");\n    const clickListener = () => this.dispatchColumnMouseEvent(Events.EVENT_COLUMN_HEADER_CLICKED, this.column);\n    const contextMenuListener = (event) => this.handleContextMenuMouseEvent(event, void 0, this.column);\n    this.addManagedListener(this.getGui(), \"mouseenter\", listener);\n    this.addManagedListener(this.getGui(), \"mouseleave\", listener);\n    this.addManagedListener(this.getGui(), \"click\", clickListener);\n    this.addManagedListener(this.getGui(), \"contextmenu\", contextMenuListener);\n  }\n  handleMouseOverChange(isMouseOver) {\n    this.setActiveHeader(isMouseOver);\n    const eventType = isMouseOver ? Events.EVENT_COLUMN_HEADER_MOUSE_OVER : Events.EVENT_COLUMN_HEADER_MOUSE_LEAVE;\n    const event = {\n      type: eventType,\n      column: this.column\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  setActiveHeader(active) {\n    this.comp.addOrRemoveCssClass(\"ag-header-active\", active);\n  }\n  getAnchorElementForMenu(isFilter) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (headerComp instanceof HeaderComp) {\n      return headerComp.getAnchorElementForMenu(isFilter);\n    }\n    return this.getGui();\n  }\n  destroy() {\n    super.destroy();\n    this.refreshFunctions = null;\n    this.selectAllFeature = null;\n    this.dragSourceElement = null;\n    this.userCompDetails = null;\n    this.userHeaderClasses = null;\n    this.ariaDescriptionProperties = null;\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/columnGroup/groupResizeFeature.ts\nvar GroupResizeFeature = class extends BeanStub {\n  constructor(comp, eResize, pinned, columnGroup) {\n    super();\n    this.eResize = eResize;\n    this.comp = comp;\n    this.pinned = pinned;\n    this.columnGroup = columnGroup;\n  }\n  postConstruct() {\n    if (!this.columnGroup.isResizable()) {\n      this.comp.setResizableDisplayed(false);\n      return;\n    }\n    const finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n      eResizeBar: this.eResize,\n      onResizeStart: this.onResizeStart.bind(this),\n      onResizing: this.onResizing.bind(this, false),\n      onResizeEnd: this.onResizing.bind(this, true)\n    });\n    this.addDestroyFunc(finishedWithResizeFunc);\n    if (!this.gos.get(\"suppressAutoSize\")) {\n      const skipHeaderOnAutoSize = this.gos.get(\"skipHeaderOnAutoSize\");\n      this.eResize.addEventListener(\"dblclick\", () => {\n        const keys2 = [];\n        const leafCols = this.columnGroup.getDisplayedLeafColumns();\n        leafCols.forEach((column) => {\n          if (!column.getColDef().suppressAutoSize) {\n            keys2.push(column.getColId());\n          }\n        });\n        if (keys2.length > 0) {\n          this.columnModel.autoSizeColumns({\n            columns: keys2,\n            skipHeader: skipHeaderOnAutoSize,\n            stopAtGroup: this.columnGroup,\n            source: \"uiColumnResized\"\n          });\n        }\n        this.resizeLeafColumnsToFit(\"uiColumnResized\");\n      });\n    }\n  }\n  onResizeStart(shiftKey) {\n    const initialValues = this.getInitialValues(shiftKey);\n    this.storeLocalValues(initialValues);\n    this.toggleColumnResizing(true);\n  }\n  onResizing(finished, resizeAmount, source = \"uiColumnResized\") {\n    const resizeAmountNormalised = this.normaliseDragChange(resizeAmount);\n    const width = this.resizeStartWidth + resizeAmountNormalised;\n    this.resizeColumnsFromLocalValues(width, source, finished);\n  }\n  getInitialValues(shiftKey) {\n    const columnsToResize = this.getColumnsToResize();\n    const resizeStartWidth = this.getInitialSizeOfColumns(columnsToResize);\n    const resizeRatios = this.getSizeRatiosOfColumns(columnsToResize, resizeStartWidth);\n    const columnSizeAndRatios = {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios\n    };\n    let groupAfter = null;\n    if (shiftKey) {\n      groupAfter = this.columnModel.getDisplayedGroupAtDirection(this.columnGroup, \"After\");\n    }\n    if (groupAfter) {\n      const takeFromLeafCols = groupAfter.getDisplayedLeafColumns();\n      const groupAfterColumns = columnSizeAndRatios.groupAfterColumns = takeFromLeafCols.filter((col) => col.isResizable());\n      const groupAfterStartWidth = columnSizeAndRatios.groupAfterStartWidth = this.getInitialSizeOfColumns(groupAfterColumns);\n      columnSizeAndRatios.groupAfterRatios = this.getSizeRatiosOfColumns(groupAfterColumns, groupAfterStartWidth);\n    } else {\n      columnSizeAndRatios.groupAfterColumns = void 0;\n      columnSizeAndRatios.groupAfterStartWidth = void 0;\n      columnSizeAndRatios.groupAfterRatios = void 0;\n    }\n    return columnSizeAndRatios;\n  }\n  storeLocalValues(initialValues) {\n    const {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios,\n      groupAfterColumns,\n      groupAfterStartWidth,\n      groupAfterRatios\n    } = initialValues;\n    this.resizeCols = columnsToResize;\n    this.resizeStartWidth = resizeStartWidth;\n    this.resizeRatios = resizeRatios;\n    this.resizeTakeFromCols = groupAfterColumns;\n    this.resizeTakeFromStartWidth = groupAfterStartWidth;\n    this.resizeTakeFromRatios = groupAfterRatios;\n  }\n  clearLocalValues() {\n    this.resizeCols = void 0;\n    this.resizeRatios = void 0;\n    this.resizeTakeFromCols = void 0;\n    this.resizeTakeFromRatios = void 0;\n  }\n  resizeLeafColumnsToFit(source) {\n    const preferredSize = this.autoWidthCalculator.getPreferredWidthForColumnGroup(this.columnGroup);\n    const initialValues = this.getInitialValues();\n    if (preferredSize > initialValues.resizeStartWidth) {\n      this.resizeColumns(initialValues, preferredSize, source, true);\n    }\n  }\n  resizeColumnsFromLocalValues(totalWidth, source, finished = true) {\n    var _a, _b, _c;\n    if (!this.resizeCols || !this.resizeRatios) {\n      return;\n    }\n    const initialValues = {\n      columnsToResize: this.resizeCols,\n      resizeStartWidth: this.resizeStartWidth,\n      resizeRatios: this.resizeRatios,\n      groupAfterColumns: (_a = this.resizeTakeFromCols) != null ? _a : void 0,\n      groupAfterStartWidth: (_b = this.resizeTakeFromStartWidth) != null ? _b : void 0,\n      groupAfterRatios: (_c = this.resizeTakeFromRatios) != null ? _c : void 0\n    };\n    this.resizeColumns(initialValues, totalWidth, source, finished);\n  }\n  resizeColumns(initialValues, totalWidth, source, finished = true) {\n    const {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios,\n      groupAfterColumns,\n      groupAfterStartWidth,\n      groupAfterRatios\n    } = initialValues;\n    const resizeSets = [];\n    resizeSets.push({\n      columns: columnsToResize,\n      ratios: resizeRatios,\n      width: totalWidth\n    });\n    if (groupAfterColumns) {\n      const diff = totalWidth - resizeStartWidth;\n      resizeSets.push({\n        columns: groupAfterColumns,\n        ratios: groupAfterRatios,\n        width: groupAfterStartWidth - diff\n      });\n    }\n    this.columnModel.resizeColumnSets({\n      resizeSets,\n      finished,\n      source\n    });\n    if (finished) {\n      this.toggleColumnResizing(false);\n    }\n  }\n  toggleColumnResizing(resizing) {\n    this.comp.addOrRemoveCssClass(\"ag-column-resizing\", resizing);\n  }\n  getColumnsToResize() {\n    const leafCols = this.columnGroup.getDisplayedLeafColumns();\n    return leafCols.filter((col) => col.isResizable());\n  }\n  getInitialSizeOfColumns(columns) {\n    return columns.reduce(\n      (totalWidth, column) => totalWidth + column.getActualWidth(),\n      0\n    );\n  }\n  getSizeRatiosOfColumns(columns, initialSizeOfColumns) {\n    return columns.map((column) => column.getActualWidth() / initialSizeOfColumns);\n  }\n  // optionally inverts the drag, depending on pinned and RTL\n  // note - this method is duplicated in RenderedHeaderCell - should refactor out?\n  normaliseDragChange(dragChange) {\n    let result = dragChange;\n    if (this.gos.get(\"enableRtl\")) {\n      if (this.pinned !== \"left\") {\n        result *= -1;\n      }\n    } else if (this.pinned === \"right\") {\n      result *= -1;\n    }\n    return result;\n  }\n  destroy() {\n    super.destroy();\n    this.clearLocalValues();\n  }\n};\n__decorateClass([\n  Autowired(\"horizontalResizeService\")\n], GroupResizeFeature.prototype, \"horizontalResizeService\", 2);\n__decorateClass([\n  Autowired(\"autoWidthCalculator\")\n], GroupResizeFeature.prototype, \"autoWidthCalculator\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], GroupResizeFeature.prototype, \"columnModel\", 2);\n__decorateClass([\n  PostConstruct\n], GroupResizeFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/headerRendering/cells/columnGroup/groupWidthFeature.ts\nvar GroupWidthFeature = class extends BeanStub {\n  constructor(comp, columnGroup) {\n    super();\n    // the children can change, we keep destroy functions related to listening to the children here\n    this.removeChildListenersFuncs = [];\n    this.columnGroup = columnGroup;\n    this.comp = comp;\n  }\n  postConstruct() {\n    this.addListenersToChildrenColumns();\n    this.addManagedListener(this.columnGroup, ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED, this.onDisplayedChildrenChanged.bind(this));\n    this.onWidthChanged();\n    this.addDestroyFunc(this.removeListenersOnChildrenColumns.bind(this));\n  }\n  addListenersToChildrenColumns() {\n    this.removeListenersOnChildrenColumns();\n    const widthChangedListener = this.onWidthChanged.bind(this);\n    this.columnGroup.getLeafColumns().forEach((column) => {\n      column.addEventListener(\"widthChanged\", widthChangedListener);\n      column.addEventListener(\"visibleChanged\", widthChangedListener);\n      this.removeChildListenersFuncs.push(() => {\n        column.removeEventListener(\"widthChanged\", widthChangedListener);\n        column.removeEventListener(\"visibleChanged\", widthChangedListener);\n      });\n    });\n  }\n  removeListenersOnChildrenColumns() {\n    this.removeChildListenersFuncs.forEach((func) => func());\n    this.removeChildListenersFuncs = [];\n  }\n  onDisplayedChildrenChanged() {\n    this.addListenersToChildrenColumns();\n    this.onWidthChanged();\n  }\n  onWidthChanged() {\n    const columnWidth = this.columnGroup.getActualWidth();\n    this.comp.setWidth(`${columnWidth}px`);\n    this.comp.addOrRemoveCssClass(\"ag-hidden\", columnWidth === 0);\n  }\n};\n__decorateClass([\n  PostConstruct\n], GroupWidthFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/headerRendering/cells/columnGroup/headerGroupCellCtrl.ts\nvar HeaderGroupCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor(columnGroup, beans, parentRowCtrl) {\n    super(columnGroup, beans, parentRowCtrl);\n    this.onSuppressColMoveChange = () => {\n      if (!this.isAlive() || this.isSuppressMoving()) {\n        this.removeDragSource();\n      } else {\n        if (!this.dragSource) {\n          const eGui = this.getGui();\n          this.setDragSource(eGui);\n        }\n      }\n    };\n    this.column = columnGroup;\n  }\n  setComp(comp, eGui, eResize) {\n    this.comp = comp;\n    this.setGui(eGui);\n    this.displayName = this.beans.columnModel.getDisplayNameForColumnGroup(this.column, \"header\");\n    this.addClasses();\n    this.setupMovingCss();\n    this.setupExpandable();\n    this.setupTooltip();\n    this.addDestroyFunc(() => {\n      if (this.tooltipFeature) {\n        this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n      }\n    });\n    this.setupUserComp();\n    this.addHeaderMouseListeners();\n    const pinned = this.getParentRowCtrl().getPinned();\n    const leafCols = this.column.getProvidedColumnGroup().getLeafColumns();\n    this.createManagedBean(new HoverFeature(leafCols, eGui));\n    this.createManagedBean(new SetLeftFeature(this.column, eGui, this.beans));\n    this.createManagedBean(new GroupWidthFeature(comp, this.column));\n    this.resizeFeature = this.createManagedBean(new GroupResizeFeature(comp, eResize, pinned, this.column));\n    this.createManagedBean(new ManagedFocusFeature(\n      eGui,\n      {\n        shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),\n        onTabKeyDown: () => void 0,\n        handleKeyDown: this.handleKeyDown.bind(this),\n        onFocusIn: this.onFocusIn.bind(this)\n      }\n    ));\n    this.addManagedPropertyListener(Events.EVENT_SUPPRESS_COLUMN_MOVE_CHANGED, this.onSuppressColMoveChange);\n    this.addResizeAndMoveKeyboardListeners();\n  }\n  resizeHeader(delta, shiftKey) {\n    if (!this.resizeFeature) {\n      return;\n    }\n    const initialValues = this.resizeFeature.getInitialValues(shiftKey);\n    this.resizeFeature.resizeColumns(initialValues, initialValues.resizeStartWidth + delta, \"uiColumnResized\", true);\n  }\n  moveHeader(hDirection) {\n    const { beans, eGui, column, gos, ctrlsService } = this;\n    const isRtl = gos.get(\"enableRtl\");\n    const isLeft = hDirection === 0 /* Left */;\n    const pinned = this.getPinned();\n    const rect = eGui.getBoundingClientRect();\n    const left = rect.left;\n    const width = rect.width;\n    const xPosition = ColumnMoveHelper.normaliseX(\n      isLeft !== isRtl ? left - 20 : left + width + 20,\n      pinned,\n      true,\n      gos,\n      ctrlsService\n    );\n    const id = column.getGroupId();\n    const headerPosition = this.focusService.getFocusedHeader();\n    ColumnMoveHelper.attemptMoveColumns({\n      allMovingColumns: this.column.getLeafColumns(),\n      isFromHeader: true,\n      hDirection,\n      xPosition,\n      pinned,\n      fromEnter: false,\n      fakeEvent: false,\n      gos,\n      columnModel: beans.columnModel\n    });\n    const displayedLeafColumns = column.getDisplayedLeafColumns();\n    const targetColumn = isLeft ? displayedLeafColumns[0] : last(displayedLeafColumns);\n    this.ctrlsService.getGridBodyCtrl().getScrollFeature().ensureColumnVisible(targetColumn, \"auto\");\n    if (!this.isAlive() && headerPosition) {\n      this.restoreFocus(id, column, headerPosition);\n    }\n  }\n  restoreFocus(groupId, previousColumnGroup, previousPosition) {\n    const leafCols = previousColumnGroup.getLeafColumns();\n    if (!leafCols.length) {\n      return;\n    }\n    const parent = leafCols[0].getParent();\n    if (!parent) {\n      return;\n    }\n    const newColumnGroup = this.findGroupWidthId(parent, groupId);\n    if (newColumnGroup) {\n      this.focusService.focusHeaderPosition({\n        headerPosition: __spreadProps(__spreadValues({}, previousPosition), {\n          column: newColumnGroup\n        })\n      });\n    }\n  }\n  findGroupWidthId(columnGroup, id) {\n    while (columnGroup) {\n      if (columnGroup.getGroupId() === id) {\n        return columnGroup;\n      }\n      columnGroup = columnGroup.getParent();\n    }\n    return null;\n  }\n  resizeLeafColumnsToFit(source) {\n    if (!this.resizeFeature) {\n      return;\n    }\n    this.resizeFeature.resizeLeafColumnsToFit(source);\n  }\n  setupUserComp() {\n    const params = this.gos.addGridCommonParams({\n      displayName: this.displayName,\n      columnGroup: this.column,\n      setExpanded: (expanded) => {\n        this.beans.columnModel.setColumnGroupOpened(this.column.getProvidedColumnGroup(), expanded, \"gridInitializing\");\n      },\n      setTooltip: (value, shouldDisplayTooltip) => {\n        this.setupTooltip(value, shouldDisplayTooltip);\n      }\n    });\n    const compDetails = this.userComponentFactory.getHeaderGroupCompDetails(params);\n    this.comp.setUserCompDetails(compDetails);\n  }\n  addHeaderMouseListeners() {\n    const listener = (e) => this.handleMouseOverChange(e.type === \"mouseenter\");\n    const clickListener = () => this.dispatchColumnMouseEvent(Events.EVENT_COLUMN_HEADER_CLICKED, this.column.getProvidedColumnGroup());\n    const contextMenuListener = (event) => this.handleContextMenuMouseEvent(event, void 0, this.column.getProvidedColumnGroup());\n    this.addManagedListener(this.getGui(), \"mouseenter\", listener);\n    this.addManagedListener(this.getGui(), \"mouseleave\", listener);\n    this.addManagedListener(this.getGui(), \"click\", clickListener);\n    this.addManagedListener(this.getGui(), \"contextmenu\", contextMenuListener);\n  }\n  handleMouseOverChange(isMouseOver) {\n    const eventType = isMouseOver ? Events.EVENT_COLUMN_HEADER_MOUSE_OVER : Events.EVENT_COLUMN_HEADER_MOUSE_LEAVE;\n    const event = {\n      type: eventType,\n      column: this.column.getProvidedColumnGroup()\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  setupTooltip(value, shouldDisplayTooltip) {\n    if (this.tooltipFeature) {\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    }\n    const colGroupDef = this.column.getColGroupDef();\n    const isTooltipWhenTruncated = this.gos.get(\"tooltipShowMode\") === \"whenTruncated\";\n    const eGui = this.eGui;\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !(colGroupDef == null ? void 0 : colGroupDef.headerGroupComponent)) {\n      shouldDisplayTooltip = () => {\n        const textEl = eGui.querySelector(\".ag-header-group-text\");\n        if (!textEl) {\n          return true;\n        }\n        return textEl.scrollWidth > textEl.clientWidth;\n      };\n    }\n    const tooltipCtrl = {\n      getColumn: () => this.column,\n      getGui: () => eGui,\n      getLocation: () => \"headerGroup\",\n      getTooltipValue: () => value != null ? value : colGroupDef && colGroupDef.headerTooltip,\n      shouldDisplayTooltip\n    };\n    if (colGroupDef) {\n      tooltipCtrl.getColDef = () => colGroupDef;\n    }\n    this.createBean(new TooltipFeature(tooltipCtrl));\n  }\n  setupExpandable() {\n    const providedColGroup = this.column.getProvidedColumnGroup();\n    this.refreshExpanded();\n    this.addManagedListener(providedColGroup, ProvidedColumnGroup.EVENT_EXPANDABLE_CHANGED, this.refreshExpanded.bind(this));\n    this.addManagedListener(providedColGroup, ProvidedColumnGroup.EVENT_EXPANDED_CHANGED, this.refreshExpanded.bind(this));\n  }\n  refreshExpanded() {\n    const column = this.column;\n    this.expandable = column.isExpandable();\n    const expanded = column.isExpanded();\n    if (this.expandable) {\n      this.comp.setAriaExpanded(expanded ? \"true\" : \"false\");\n    } else {\n      this.comp.setAriaExpanded(void 0);\n    }\n  }\n  getColId() {\n    return this.column.getUniqueId();\n  }\n  addClasses() {\n    const colGroupDef = this.column.getColGroupDef();\n    const classes = CssClassApplier.getHeaderClassesFromColDef(colGroupDef, this.gos, null, this.column);\n    if (this.column.isPadding()) {\n      classes.push(\"ag-header-group-cell-no-group\");\n      const leafCols = this.column.getLeafColumns();\n      if (leafCols.every((col) => col.isSpanHeaderHeight())) {\n        classes.push(\"ag-header-span-height\");\n      }\n    } else {\n      classes.push(\"ag-header-group-cell-with-group\");\n    }\n    classes.forEach((c) => this.comp.addOrRemoveCssClass(c, true));\n  }\n  setupMovingCss() {\n    const providedColumnGroup = this.column.getProvidedColumnGroup();\n    const leafColumns = providedColumnGroup.getLeafColumns();\n    const listener = () => this.comp.addOrRemoveCssClass(\"ag-header-cell-moving\", this.column.isMoving());\n    leafColumns.forEach((col) => {\n      this.addManagedListener(col, Column.EVENT_MOVING_CHANGED, listener);\n    });\n    listener();\n  }\n  onFocusIn(e) {\n    if (!this.eGui.contains(e.relatedTarget)) {\n      const rowIndex = this.getRowIndex();\n      this.beans.focusService.setFocusedHeader(rowIndex, this.column);\n    }\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    const wrapperHasFocus = this.getWrapperHasFocus();\n    if (!this.expandable || !wrapperHasFocus) {\n      return;\n    }\n    if (e.key === KeyCode.ENTER) {\n      const column = this.column;\n      const newExpandedValue = !column.isExpanded();\n      this.beans.columnModel.setColumnGroupOpened(column.getProvidedColumnGroup(), newExpandedValue, \"uiColumnExpanded\");\n    }\n  }\n  // unlike columns, this will only get called once, as we don't react on props on column groups\n  // (we will always destroy and recreate this comp if something changes)\n  setDragSource(eHeaderGroup) {\n    if (!this.isAlive() || this.isSuppressMoving()) {\n      return;\n    }\n    this.removeDragSource();\n    if (!eHeaderGroup) {\n      return;\n    }\n    const { beans, column, displayName, gos, dragAndDropService } = this;\n    const { columnModel } = beans;\n    const allLeafColumns = column.getProvidedColumnGroup().getLeafColumns();\n    let hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\n    const dragSource = this.dragSource = {\n      type: 1 /* HeaderCell */,\n      eElement: eHeaderGroup,\n      getDefaultIconName: () => hideColumnOnExit ? DragAndDropService.ICON_HIDE : DragAndDropService.ICON_NOT_ALLOWED,\n      dragItemName: displayName,\n      // we add in the original group leaf columns, so we move both visible and non-visible items\n      getDragItem: () => this.getDragItemForGroup(column),\n      onDragStarted: () => {\n        hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\n        allLeafColumns.forEach((col) => col.setMoving(true, \"uiColumnDragged\"));\n      },\n      onDragStopped: () => allLeafColumns.forEach((col) => col.setMoving(false, \"uiColumnDragged\")),\n      onGridEnter: (dragItem) => {\n        var _a;\n        if (hideColumnOnExit) {\n          const unlockedColumns = ((_a = dragItem == null ? void 0 : dragItem.columns) == null ? void 0 : _a.filter((col) => !col.getColDef().lockVisible)) || [];\n          columnModel.setColumnsVisible(unlockedColumns, true, \"uiColumnMoved\");\n        }\n      },\n      onGridExit: (dragItem) => {\n        var _a;\n        if (hideColumnOnExit) {\n          const unlockedColumns = ((_a = dragItem == null ? void 0 : dragItem.columns) == null ? void 0 : _a.filter((col) => !col.getColDef().lockVisible)) || [];\n          columnModel.setColumnsVisible(unlockedColumns, false, \"uiColumnMoved\");\n        }\n      }\n    };\n    dragAndDropService.addDragSource(dragSource, true);\n  }\n  // when moving the columns, we want to move all the columns (contained within the DragItem) in this group in one go,\n  // and in the order they are currently in the screen.\n  getDragItemForGroup(columnGroup) {\n    const allColumnsOriginalOrder = columnGroup.getProvidedColumnGroup().getLeafColumns();\n    const visibleState = {};\n    allColumnsOriginalOrder.forEach((column) => visibleState[column.getId()] = column.isVisible());\n    const allColumnsCurrentOrder = [];\n    this.beans.columnModel.getAllDisplayedColumns().forEach((column) => {\n      if (allColumnsOriginalOrder.indexOf(column) >= 0) {\n        allColumnsCurrentOrder.push(column);\n        removeFromArray(allColumnsOriginalOrder, column);\n      }\n    });\n    allColumnsOriginalOrder.forEach((column) => allColumnsCurrentOrder.push(column));\n    return {\n      columns: allColumnsCurrentOrder,\n      visibleState\n    };\n  }\n  isSuppressMoving() {\n    let childSuppressesMoving = false;\n    this.column.getLeafColumns().forEach((column) => {\n      if (column.getColDef().suppressMovable || column.getColDef().lockPosition) {\n        childSuppressesMoving = true;\n      }\n    });\n    const result = childSuppressesMoving || this.gos.get(\"suppressMovableColumns\");\n    return result;\n  }\n};\n\n// community-modules/core/src/headerRendering/row/headerRowCtrl.ts\nvar instanceIdSequence5 = 0;\nvar HeaderRowCtrl = class extends BeanStub {\n  constructor(rowIndex, pinned, type) {\n    super();\n    this.instanceId = instanceIdSequence5++;\n    this.rowIndex = rowIndex;\n    this.pinned = pinned;\n    this.type = type;\n    const typeClass = type == \"group\" /* COLUMN_GROUP */ ? `ag-header-row-column-group` : type == \"filter\" /* FLOATING_FILTER */ ? `ag-header-row-column-filter` : `ag-header-row-column`;\n    this.headerRowClass = `ag-header-row ${typeClass}`;\n  }\n  postConstruct() {\n    this.isPrintLayout = this.gos.isDomLayout(\"print\");\n    this.isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  /**\n   * \n   * @param comp Proxy to the actual component\n   * @param initCompState Should the component be initialised with the current state of the controller. Default: true\n   */\n  setComp(comp, initCompState = true) {\n    this.comp = comp;\n    if (initCompState) {\n      this.onRowHeightChanged();\n      this.onVirtualColumnsChanged();\n    }\n    this.setWidth();\n    this.addEventListeners();\n  }\n  getHeaderRowClass() {\n    return this.headerRowClass;\n  }\n  getAriaRowIndex() {\n    return this.rowIndex + 1;\n  }\n  addEventListeners() {\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, (params) => this.onVirtualColumnsChanged(params.afterScroll));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_HEADER_HEIGHT_CHANGED, this.onRowHeightChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_GRID_STYLES_CHANGED, this.onRowHeightChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_ADVANCED_FILTER_ENABLED_CHANGED, this.onRowHeightChanged.bind(this));\n    this.addManagedPropertyListener(\"domLayout\", this.onDisplayedColumnsChanged.bind(this));\n    this.addManagedPropertyListener(\"ensureDomOrder\", (e) => this.isEnsureDomOrder = e.currentValue);\n    this.addManagedPropertyListener(\"headerHeight\", this.onRowHeightChanged.bind(this));\n    this.addManagedPropertyListener(\"pivotHeaderHeight\", this.onRowHeightChanged.bind(this));\n    this.addManagedPropertyListener(\"groupHeaderHeight\", this.onRowHeightChanged.bind(this));\n    this.addManagedPropertyListener(\"pivotGroupHeaderHeight\", this.onRowHeightChanged.bind(this));\n    this.addManagedPropertyListener(\"floatingFiltersHeight\", this.onRowHeightChanged.bind(this));\n  }\n  getHeaderCellCtrl(column) {\n    if (!this.headerCellCtrls) {\n      return;\n    }\n    return values(this.headerCellCtrls).find((cellCtrl) => cellCtrl.getColumnGroupChild() === column);\n  }\n  onDisplayedColumnsChanged() {\n    this.isPrintLayout = this.gos.isDomLayout(\"print\");\n    this.onVirtualColumnsChanged();\n    this.setWidth();\n    this.onRowHeightChanged();\n  }\n  getType() {\n    return this.type;\n  }\n  onColumnResized() {\n    this.setWidth();\n  }\n  setWidth() {\n    const width = this.getWidthForRow();\n    this.comp.setWidth(`${width}px`);\n  }\n  getWidthForRow() {\n    const { columnModel } = this.beans;\n    if (this.isPrintLayout) {\n      const pinned = this.pinned != null;\n      if (pinned) {\n        return 0;\n      }\n      return columnModel.getContainerWidth(\"right\") + columnModel.getContainerWidth(\"left\") + columnModel.getContainerWidth(null);\n    }\n    return columnModel.getContainerWidth(this.pinned);\n  }\n  onRowHeightChanged() {\n    var { topOffset, rowHeight } = this.getTopAndHeight();\n    this.comp.setTop(topOffset + \"px\");\n    this.comp.setHeight(rowHeight + \"px\");\n  }\n  getTopAndHeight() {\n    const { columnModel, filterManager } = this.beans;\n    let headerRowCount = columnModel.getHeaderRowCount();\n    const sizes = [];\n    let numberOfFloating = 0;\n    if (filterManager.hasFloatingFilters()) {\n      headerRowCount++;\n      numberOfFloating = 1;\n    }\n    const groupHeight = columnModel.getColumnGroupHeaderRowHeight();\n    const headerHeight = columnModel.getColumnHeaderRowHeight();\n    const numberOfNonGroups = 1 + numberOfFloating;\n    const numberOfGroups = headerRowCount - numberOfNonGroups;\n    for (let i = 0; i < numberOfGroups; i++) {\n      sizes.push(groupHeight);\n    }\n    sizes.push(headerHeight);\n    for (let i = 0; i < numberOfFloating; i++) {\n      sizes.push(columnModel.getFloatingFiltersHeight());\n    }\n    let topOffset = 0;\n    for (let i = 0; i < this.rowIndex; i++) {\n      topOffset += sizes[i];\n    }\n    const rowHeight = sizes[this.rowIndex];\n    return { topOffset, rowHeight };\n  }\n  getPinned() {\n    return this.pinned;\n  }\n  getRowIndex() {\n    return this.rowIndex;\n  }\n  onVirtualColumnsChanged(afterScroll = false) {\n    const ctrlsToDisplay = this.getHeaderCtrls();\n    const forceOrder = this.isEnsureDomOrder || this.isPrintLayout;\n    this.comp.setHeaderCtrls(ctrlsToDisplay, forceOrder, afterScroll);\n  }\n  getHeaderCtrls() {\n    const oldCtrls = this.headerCellCtrls;\n    this.headerCellCtrls = /* @__PURE__ */ new Map();\n    const columns = this.getColumnsInViewport();\n    for (const child of columns) {\n      this.recycleAndCreateHeaderCtrls(child, oldCtrls);\n    }\n    const isFocusedAndDisplayed = (ctrl) => {\n      const { focusService, columnModel } = this.beans;\n      const isFocused = focusService.isHeaderWrapperFocused(ctrl);\n      if (!isFocused) {\n        return false;\n      }\n      const isDisplayed = columnModel.isDisplayed(ctrl.getColumnGroupChild());\n      return isDisplayed;\n    };\n    if (oldCtrls) {\n      for (const [id, oldCtrl] of oldCtrls) {\n        const keepCtrl = isFocusedAndDisplayed(oldCtrl);\n        if (keepCtrl) {\n          this.headerCellCtrls.set(id, oldCtrl);\n        } else {\n          this.destroyBean(oldCtrl);\n        }\n      }\n    }\n    const ctrlsToDisplay = Array.from(this.headerCellCtrls.values());\n    return ctrlsToDisplay;\n  }\n  recycleAndCreateHeaderCtrls(headerColumn, oldCtrls) {\n    if (!this.headerCellCtrls) {\n      return;\n    }\n    if (headerColumn.isEmptyGroup()) {\n      return;\n    }\n    const idOfChild = headerColumn.getUniqueId();\n    let headerCtrl;\n    if (oldCtrls) {\n      headerCtrl = oldCtrls.get(idOfChild);\n      oldCtrls.delete(idOfChild);\n    }\n    const forOldColumn = headerCtrl && headerCtrl.getColumnGroupChild() != headerColumn;\n    if (forOldColumn) {\n      this.destroyBean(headerCtrl);\n      headerCtrl = void 0;\n    }\n    if (headerCtrl == null) {\n      switch (this.type) {\n        case \"filter\" /* FLOATING_FILTER */:\n          headerCtrl = this.createBean(new HeaderFilterCellCtrl(headerColumn, this.beans, this));\n          break;\n        case \"group\" /* COLUMN_GROUP */:\n          headerCtrl = this.createBean(new HeaderGroupCellCtrl(headerColumn, this.beans, this));\n          break;\n        default:\n          headerCtrl = this.createBean(new HeaderCellCtrl(headerColumn, this.beans, this));\n          break;\n      }\n    }\n    this.headerCellCtrls.set(idOfChild, headerCtrl);\n  }\n  getColumnsInViewport() {\n    return this.isPrintLayout ? this.getColumnsInViewportPrintLayout() : this.getColumnsInViewportNormalLayout();\n  }\n  getColumnsInViewportPrintLayout() {\n    if (this.pinned != null) {\n      return [];\n    }\n    let viewportColumns = [];\n    const actualDepth = this.getActualDepth();\n    const { columnModel } = this.beans;\n    [\"left\", null, \"right\"].forEach((pinned) => {\n      const items = columnModel.getVirtualHeaderGroupRow(pinned, actualDepth);\n      viewportColumns = viewportColumns.concat(items);\n    });\n    return viewportColumns;\n  }\n  getActualDepth() {\n    return this.type == \"filter\" /* FLOATING_FILTER */ ? this.rowIndex - 1 : this.rowIndex;\n  }\n  getColumnsInViewportNormalLayout() {\n    return this.beans.columnModel.getVirtualHeaderGroupRow(this.pinned, this.getActualDepth());\n  }\n  focusHeader(column, event) {\n    if (!this.headerCellCtrls) {\n      return false;\n    }\n    const allCtrls = Array.from(this.headerCellCtrls.values());\n    const ctrl = allCtrls.find((ctrl2) => ctrl2.getColumnGroupChild() == column);\n    if (!ctrl) {\n      return false;\n    }\n    return ctrl.focus(event);\n  }\n  destroy() {\n    if (this.headerCellCtrls) {\n      this.headerCellCtrls.forEach((ctrl) => {\n        this.destroyBean(ctrl);\n      });\n    }\n    this.headerCellCtrls = void 0;\n    super.destroy();\n  }\n};\n__decorateClass([\n  Autowired(\"beans\")\n], HeaderRowCtrl.prototype, \"beans\", 2);\n__decorateClass([\n  PostConstruct\n], HeaderRowCtrl.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/headerRendering/rowContainer/headerRowContainerCtrl.ts\nvar HeaderRowContainerCtrl = class extends BeanStub {\n  constructor(pinned) {\n    super();\n    this.hidden = false;\n    this.includeFloatingFilter = false;\n    this.groupsRowCtrls = [];\n    this.pinned = pinned;\n  }\n  setComp(comp, eGui) {\n    this.comp = comp;\n    this.eViewport = eGui;\n    this.setupCenterWidth();\n    this.setupPinnedWidth();\n    this.setupDragAndDrop(this.eViewport);\n    this.addManagedListener(this.eventService, Events.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_ADVANCED_FILTER_ENABLED_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    this.ctrlsService.registerHeaderContainer(this, this.pinned);\n    if (this.columnModel.isReady()) {\n      this.refresh();\n    }\n  }\n  setupDragAndDrop(dropContainer) {\n    const bodyDropTarget = new BodyDropTarget(this.pinned, dropContainer);\n    this.createManagedBean(bodyDropTarget);\n  }\n  refresh(keepColumns = false) {\n    const sequence = new NumberSequence();\n    const focusedHeaderPosition = this.focusService.getFocusHeaderToUseAfterRefresh();\n    const refreshColumnGroups = () => {\n      const groupRowCount = this.columnModel.getHeaderRowCount() - 1;\n      this.groupsRowCtrls = this.destroyBeans(this.groupsRowCtrls);\n      for (let i = 0; i < groupRowCount; i++) {\n        const ctrl = this.createBean(new HeaderRowCtrl(sequence.next(), this.pinned, \"group\" /* COLUMN_GROUP */));\n        this.groupsRowCtrls.push(ctrl);\n      }\n    };\n    const refreshColumns = () => {\n      const rowIndex = sequence.next();\n      const needNewInstance = !this.hidden && (this.columnsRowCtrl == null || !keepColumns || this.columnsRowCtrl.getRowIndex() !== rowIndex);\n      const shouldDestroyInstance = needNewInstance || this.hidden;\n      if (shouldDestroyInstance) {\n        this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl);\n      }\n      if (needNewInstance) {\n        this.columnsRowCtrl = this.createBean(new HeaderRowCtrl(rowIndex, this.pinned, \"column\" /* COLUMN */));\n      }\n    };\n    const refreshFilters = () => {\n      this.includeFloatingFilter = this.filterManager.hasFloatingFilters() && !this.hidden;\n      const destroyPreviousComp = () => {\n        this.filtersRowCtrl = this.destroyBean(this.filtersRowCtrl);\n      };\n      if (!this.includeFloatingFilter) {\n        destroyPreviousComp();\n        return;\n      }\n      const rowIndex = sequence.next();\n      if (this.filtersRowCtrl) {\n        const rowIndexMismatch = this.filtersRowCtrl.getRowIndex() !== rowIndex;\n        if (!keepColumns || rowIndexMismatch) {\n          destroyPreviousComp();\n        }\n      }\n      if (!this.filtersRowCtrl) {\n        this.filtersRowCtrl = this.createBean(new HeaderRowCtrl(rowIndex, this.pinned, \"filter\" /* FLOATING_FILTER */));\n      }\n    };\n    refreshColumnGroups();\n    refreshColumns();\n    refreshFilters();\n    const allCtrls = this.getAllCtrls();\n    this.comp.setCtrls(allCtrls);\n    this.restoreFocusOnHeader(focusedHeaderPosition);\n  }\n  restoreFocusOnHeader(position) {\n    if (position == null || position.column.getPinned() != this.pinned) {\n      return;\n    }\n    this.focusService.focusHeaderPosition({ headerPosition: position });\n  }\n  getAllCtrls() {\n    const res = [...this.groupsRowCtrls];\n    if (this.columnsRowCtrl) {\n      res.push(this.columnsRowCtrl);\n    }\n    if (this.filtersRowCtrl) {\n      res.push(this.filtersRowCtrl);\n    }\n    return res;\n  }\n  // grid cols have changed - this also means the number of rows in the header can have\n  // changed. so we remove all the old rows and insert new ones for a complete refresh\n  onGridColumnsChanged() {\n    this.refresh(true);\n  }\n  onDisplayedColumnsChanged() {\n    const includeFloatingFilter = this.filterManager.hasFloatingFilters() && !this.hidden;\n    if (this.includeFloatingFilter !== includeFloatingFilter) {\n      this.refresh(true);\n    }\n  }\n  setupCenterWidth() {\n    if (this.pinned != null) {\n      return;\n    }\n    this.createManagedBean(new CenterWidthFeature((width) => this.comp.setCenterWidth(`${width}px`), true));\n  }\n  setHorizontalScroll(offset) {\n    this.comp.setViewportScrollLeft(offset);\n  }\n  setupPinnedWidth() {\n    if (this.pinned == null) {\n      return;\n    }\n    const pinningLeft = this.pinned === \"left\";\n    const pinningRight = this.pinned === \"right\";\n    this.hidden = true;\n    const listener = () => {\n      const width = pinningLeft ? this.pinnedWidthService.getPinnedLeftWidth() : this.pinnedWidthService.getPinnedRightWidth();\n      if (width == null) {\n        return;\n      }\n      const hidden = width == 0;\n      const hiddenChanged = this.hidden !== hidden;\n      const isRtl = this.gos.get(\"enableRtl\");\n      const scrollbarWidth = this.gos.getScrollbarWidth();\n      const addPaddingForScrollbar = this.scrollVisibleService.isVerticalScrollShowing() && (isRtl && pinningLeft || !isRtl && pinningRight);\n      const widthWithPadding = addPaddingForScrollbar ? width + scrollbarWidth : width;\n      this.comp.setPinnedContainerWidth(`${widthWithPadding}px`);\n      this.comp.setDisplayed(!hidden);\n      if (hiddenChanged) {\n        this.hidden = hidden;\n        this.refresh();\n      }\n    };\n    this.addManagedListener(this.eventService, Events.EVENT_LEFT_PINNED_WIDTH_CHANGED, listener);\n    this.addManagedListener(this.eventService, Events.EVENT_RIGHT_PINNED_WIDTH_CHANGED, listener);\n    this.addManagedListener(this.eventService, Events.EVENT_SCROLL_VISIBILITY_CHANGED, listener);\n    this.addManagedListener(this.eventService, Events.EVENT_SCROLLBAR_WIDTH_CHANGED, listener);\n  }\n  getHeaderCtrlForColumn(column) {\n    if (column instanceof Column) {\n      if (!this.columnsRowCtrl) {\n        return;\n      }\n      return this.columnsRowCtrl.getHeaderCellCtrl(column);\n    }\n    if (this.groupsRowCtrls.length === 0) {\n      return;\n    }\n    for (let i = 0; i < this.groupsRowCtrls.length; i++) {\n      const ctrl = this.groupsRowCtrls[i].getHeaderCellCtrl(column);\n      if (ctrl) {\n        return ctrl;\n      }\n    }\n  }\n  getHtmlElementForColumnHeader(column) {\n    const cellCtrl = this.getHeaderCtrlForColumn(column);\n    if (!cellCtrl) {\n      return null;\n    }\n    return cellCtrl.getGui();\n  }\n  getRowType(rowIndex) {\n    const allCtrls = this.getAllCtrls();\n    const ctrl = allCtrls[rowIndex];\n    return ctrl ? ctrl.getType() : void 0;\n  }\n  focusHeader(rowIndex, column, event) {\n    const allCtrls = this.getAllCtrls();\n    const ctrl = allCtrls[rowIndex];\n    if (!ctrl) {\n      return false;\n    }\n    return ctrl.focusHeader(column, event);\n  }\n  getViewport() {\n    return this.eViewport;\n  }\n  getRowCount() {\n    return this.groupsRowCtrls.length + (this.columnsRowCtrl ? 1 : 0) + (this.filtersRowCtrl ? 1 : 0);\n  }\n  destroy() {\n    if (this.filtersRowCtrl) {\n      this.filtersRowCtrl = this.destroyBean(this.filtersRowCtrl);\n    }\n    if (this.columnsRowCtrl) {\n      this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl);\n    }\n    if (this.groupsRowCtrls && this.groupsRowCtrls.length) {\n      this.groupsRowCtrls = this.destroyBeans(this.groupsRowCtrls);\n    }\n    super.destroy();\n  }\n};\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], HeaderRowContainerCtrl.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"scrollVisibleService\")\n], HeaderRowContainerCtrl.prototype, \"scrollVisibleService\", 2);\n__decorateClass([\n  Autowired(\"pinnedWidthService\")\n], HeaderRowContainerCtrl.prototype, \"pinnedWidthService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], HeaderRowContainerCtrl.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"focusService\")\n], HeaderRowContainerCtrl.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"filterManager\")\n], HeaderRowContainerCtrl.prototype, \"filterManager\", 2);\n\n// community-modules/core/src/headerRendering/rowContainer/headerRowContainerComp.ts\nvar _HeaderRowContainerComp = class _HeaderRowContainerComp extends Component {\n  constructor(pinned) {\n    super();\n    this.headerRowComps = {};\n    this.rowCompsList = [];\n    this.pinned = pinned;\n  }\n  init() {\n    this.selectAndSetTemplate();\n    const compProxy = {\n      setDisplayed: (displayed) => this.setDisplayed(displayed),\n      setCtrls: (ctrls) => this.setCtrls(ctrls),\n      // only gets called for center section\n      setCenterWidth: (width) => this.eCenterContainer.style.width = width,\n      setViewportScrollLeft: (left) => this.getGui().scrollLeft = left,\n      // only gets called for pinned sections\n      setPinnedContainerWidth: (width) => {\n        const eGui = this.getGui();\n        eGui.style.width = width;\n        eGui.style.maxWidth = width;\n        eGui.style.minWidth = width;\n      }\n    };\n    const ctrl = this.createManagedBean(new HeaderRowContainerCtrl(this.pinned));\n    ctrl.setComp(compProxy, this.getGui());\n  }\n  selectAndSetTemplate() {\n    const pinnedLeft = this.pinned == \"left\";\n    const pinnedRight = this.pinned == \"right\";\n    const template = pinnedLeft ? _HeaderRowContainerComp.PINNED_LEFT_TEMPLATE : pinnedRight ? _HeaderRowContainerComp.PINNED_RIGHT_TEMPLATE : _HeaderRowContainerComp.CENTER_TEMPLATE;\n    this.setTemplate(template);\n    this.eRowContainer = this.eCenterContainer ? this.eCenterContainer : this.getGui();\n  }\n  destroyRowComps() {\n    this.setCtrls([]);\n  }\n  destroyRowComp(rowComp) {\n    this.destroyBean(rowComp);\n    this.eRowContainer.removeChild(rowComp.getGui());\n  }\n  setCtrls(ctrls) {\n    const oldRowComps = this.headerRowComps;\n    this.headerRowComps = {};\n    this.rowCompsList = [];\n    let prevGui;\n    const appendEnsuringDomOrder = (rowComp) => {\n      const eGui = rowComp.getGui();\n      const notAlreadyIn = eGui.parentElement != this.eRowContainer;\n      if (notAlreadyIn) {\n        this.eRowContainer.appendChild(eGui);\n      }\n      if (prevGui) {\n        ensureDomOrder(this.eRowContainer, eGui, prevGui);\n      }\n      prevGui = eGui;\n    };\n    ctrls.forEach((ctrl) => {\n      const ctrlId = ctrl.getInstanceId();\n      const existingComp = oldRowComps[ctrlId];\n      delete oldRowComps[ctrlId];\n      const rowComp = existingComp ? existingComp : this.createBean(new HeaderRowComp(ctrl));\n      this.headerRowComps[ctrlId] = rowComp;\n      this.rowCompsList.push(rowComp);\n      appendEnsuringDomOrder(rowComp);\n    });\n    getAllValuesInObject(oldRowComps).forEach((c) => this.destroyRowComp(c));\n  }\n};\n_HeaderRowContainerComp.PINNED_LEFT_TEMPLATE = /* html */\n`<div class=\"ag-pinned-left-header\" role=\"rowgroup\"></div>`;\n_HeaderRowContainerComp.PINNED_RIGHT_TEMPLATE = /* html */\n`<div class=\"ag-pinned-right-header\" role=\"rowgroup\"></div>`;\n_HeaderRowContainerComp.CENTER_TEMPLATE = /* html */\n`<div class=\"ag-header-viewport\" role=\"presentation\">\n            <div class=\"ag-header-container\" ref=\"eCenterContainer\" role=\"rowgroup\"></div>\n        </div>`;\n__decorateClass([\n  RefSelector(\"eCenterContainer\")\n], _HeaderRowContainerComp.prototype, \"eCenterContainer\", 2);\n__decorateClass([\n  PostConstruct\n], _HeaderRowContainerComp.prototype, \"init\", 1);\n__decorateClass([\n  PreDestroy\n], _HeaderRowContainerComp.prototype, \"destroyRowComps\", 1);\nvar HeaderRowContainerComp = _HeaderRowContainerComp;\n\n// community-modules/core/src/headerRendering/common/headerNavigationService.ts\nvar HeaderNavigationDirection = /* @__PURE__ */ ((HeaderNavigationDirection2) => {\n  HeaderNavigationDirection2[HeaderNavigationDirection2[\"UP\"] = 0] = \"UP\";\n  HeaderNavigationDirection2[HeaderNavigationDirection2[\"DOWN\"] = 1] = \"DOWN\";\n  HeaderNavigationDirection2[HeaderNavigationDirection2[\"LEFT\"] = 2] = \"LEFT\";\n  HeaderNavigationDirection2[HeaderNavigationDirection2[\"RIGHT\"] = 3] = \"RIGHT\";\n  return HeaderNavigationDirection2;\n})(HeaderNavigationDirection || {});\nvar HeaderNavigationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.currentHeaderRowWithoutSpan = -1;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n    const eDocument = this.gos.getDocument();\n    this.addManagedListener(eDocument, \"mousedown\", () => this.setCurrentHeaderRowWithoutSpan(-1));\n  }\n  getHeaderRowCount() {\n    const centerHeaderContainer = this.ctrlsService.getHeaderRowContainerCtrl();\n    return centerHeaderContainer ? centerHeaderContainer.getRowCount() : 0;\n  }\n  /*\n   * This method navigates grid header vertically\n   * @return {boolean} true to preventDefault on the event that caused this navigation.\n   */\n  navigateVertically(direction, fromHeader, event) {\n    if (!fromHeader) {\n      fromHeader = this.focusService.getFocusedHeader();\n    }\n    if (!fromHeader) {\n      return false;\n    }\n    const { headerRowIndex, column } = fromHeader;\n    const rowLen = this.getHeaderRowCount();\n    const isUp = direction === 0 /* UP */;\n    let { headerRowIndex: nextRow, column: nextFocusColumn, headerRowIndexWithoutSpan } = isUp ? this.headerPositionUtils.getColumnVisibleParent(column, headerRowIndex) : this.headerPositionUtils.getColumnVisibleChild(column, headerRowIndex);\n    let skipColumn = false;\n    if (nextRow < 0) {\n      nextRow = 0;\n      nextFocusColumn = column;\n      skipColumn = true;\n    }\n    if (nextRow >= rowLen) {\n      nextRow = -1;\n      this.setCurrentHeaderRowWithoutSpan(-1);\n    } else if (headerRowIndexWithoutSpan !== void 0) {\n      this.currentHeaderRowWithoutSpan = headerRowIndexWithoutSpan;\n    }\n    if (!skipColumn && !nextFocusColumn) {\n      return false;\n    }\n    return this.focusService.focusHeaderPosition({\n      headerPosition: { headerRowIndex: nextRow, column: nextFocusColumn },\n      allowUserOverride: true,\n      event\n    });\n  }\n  setCurrentHeaderRowWithoutSpan(row) {\n    this.currentHeaderRowWithoutSpan = row;\n  }\n  /*\n   * This method navigates grid header horizontally\n   * @return {boolean} true to preventDefault on the event that caused this navigation.\n   */\n  navigateHorizontally(direction, fromTab = false, event) {\n    const focusedHeader = this.focusService.getFocusedHeader();\n    const isLeft = direction === 2 /* LEFT */;\n    const isRtl = this.gos.get(\"enableRtl\");\n    let nextHeader;\n    let normalisedDirection;\n    if (this.currentHeaderRowWithoutSpan !== -1) {\n      focusedHeader.headerRowIndex = this.currentHeaderRowWithoutSpan;\n    } else {\n      this.currentHeaderRowWithoutSpan = focusedHeader.headerRowIndex;\n    }\n    if (isLeft !== isRtl) {\n      normalisedDirection = \"Before\";\n      nextHeader = this.headerPositionUtils.findHeader(focusedHeader, normalisedDirection);\n    } else {\n      normalisedDirection = \"After\";\n      nextHeader = this.headerPositionUtils.findHeader(focusedHeader, normalisedDirection);\n    }\n    if (nextHeader || !fromTab) {\n      return this.focusService.focusHeaderPosition({\n        headerPosition: nextHeader,\n        direction: normalisedDirection,\n        fromTab,\n        allowUserOverride: true,\n        event\n      });\n    } else if (fromTab) {\n      const userFunc = this.gos.getCallback(\"tabToNextHeader\");\n      if (userFunc) {\n        return this.focusService.focusHeaderPositionFromUserFunc({\n          userFunc,\n          headerPosition: nextHeader,\n          direction: normalisedDirection\n        });\n      }\n    }\n    return this.focusNextHeaderRow(focusedHeader, normalisedDirection, event);\n  }\n  focusNextHeaderRow(focusedHeader, direction, event) {\n    const currentIndex = focusedHeader.headerRowIndex;\n    let nextPosition = null;\n    let nextRowIndex;\n    if (direction === \"Before\") {\n      if (currentIndex > 0) {\n        nextRowIndex = currentIndex - 1;\n        this.currentHeaderRowWithoutSpan -= 1;\n        nextPosition = this.headerPositionUtils.findColAtEdgeForHeaderRow(nextRowIndex, \"end\");\n      }\n    } else {\n      nextRowIndex = currentIndex + 1;\n      if (this.currentHeaderRowWithoutSpan < this.getHeaderRowCount()) {\n        this.currentHeaderRowWithoutSpan += 1;\n      } else {\n        this.setCurrentHeaderRowWithoutSpan(-1);\n      }\n      nextPosition = this.headerPositionUtils.findColAtEdgeForHeaderRow(nextRowIndex, \"start\");\n    }\n    if (!nextPosition) {\n      return false;\n    }\n    const { column, headerRowIndex } = this.headerPositionUtils.getHeaderIndexToFocus(nextPosition.column, nextPosition == null ? void 0 : nextPosition.headerRowIndex);\n    return this.focusService.focusHeaderPosition({\n      headerPosition: { column, headerRowIndex },\n      direction,\n      fromTab: true,\n      allowUserOverride: true,\n      event\n    });\n  }\n  scrollToColumn(column, direction = \"After\") {\n    if (column.getPinned()) {\n      return;\n    }\n    let columnToScrollTo;\n    if (column instanceof ColumnGroup) {\n      const columns = column.getDisplayedLeafColumns();\n      columnToScrollTo = direction === \"Before\" ? last(columns) : columns[0];\n    } else {\n      columnToScrollTo = column;\n    }\n    this.gridBodyCon.getScrollFeature().ensureColumnVisible(columnToScrollTo);\n  }\n};\n__decorateClass([\n  Autowired(\"focusService\")\n], HeaderNavigationService.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"headerPositionUtils\")\n], HeaderNavigationService.prototype, \"headerPositionUtils\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], HeaderNavigationService.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  PostConstruct\n], HeaderNavigationService.prototype, \"postConstruct\", 1);\nHeaderNavigationService = __decorateClass([\n  Bean(\"headerNavigationService\")\n], HeaderNavigationService);\n\n// community-modules/core/src/headerRendering/gridHeaderCtrl.ts\nvar GridHeaderCtrl = class extends BeanStub {\n  setComp(comp, eGui, eFocusableElement) {\n    this.comp = comp;\n    this.eGui = eGui;\n    this.createManagedBean(new ManagedFocusFeature(\n      eFocusableElement,\n      {\n        onTabKeyDown: this.onTabKeyDown.bind(this),\n        handleKeyDown: this.handleKeyDown.bind(this),\n        onFocusOut: this.onFocusOut.bind(this)\n      }\n    ));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onPivotModeChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    this.onPivotModeChanged();\n    this.setupHeaderHeight();\n    const listener = this.onHeaderContextMenu.bind(this);\n    this.addManagedListener(this.eGui, \"contextmenu\", listener);\n    this.mockContextMenuForIPad(listener);\n    this.ctrlsService.register(\"gridHeaderCtrl\", this);\n  }\n  setupHeaderHeight() {\n    const listener = this.setHeaderHeight.bind(this);\n    listener();\n    this.addManagedPropertyListener(\"headerHeight\", listener);\n    this.addManagedPropertyListener(\"pivotHeaderHeight\", listener);\n    this.addManagedPropertyListener(\"groupHeaderHeight\", listener);\n    this.addManagedPropertyListener(\"pivotGroupHeaderHeight\", listener);\n    this.addManagedPropertyListener(\"floatingFiltersHeight\", listener);\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, listener);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_HEADER_HEIGHT_CHANGED, listener);\n    this.addManagedListener(this.eventService, Events.EVENT_GRID_STYLES_CHANGED, listener);\n    this.addManagedListener(this.eventService, Events.EVENT_ADVANCED_FILTER_ENABLED_CHANGED, listener);\n  }\n  getHeaderHeight() {\n    return this.headerHeight;\n  }\n  setHeaderHeight() {\n    const { columnModel } = this;\n    let numberOfFloating = 0;\n    let headerRowCount = columnModel.getHeaderRowCount();\n    let totalHeaderHeight;\n    const hasFloatingFilters = this.filterManager.hasFloatingFilters();\n    if (hasFloatingFilters) {\n      headerRowCount++;\n      numberOfFloating = 1;\n    }\n    const groupHeight = this.columnModel.getColumnGroupHeaderRowHeight();\n    const headerHeight = this.columnModel.getColumnHeaderRowHeight();\n    const numberOfNonGroups = 1 + numberOfFloating;\n    const numberOfGroups = headerRowCount - numberOfNonGroups;\n    totalHeaderHeight = numberOfFloating * columnModel.getFloatingFiltersHeight();\n    totalHeaderHeight += numberOfGroups * groupHeight;\n    totalHeaderHeight += headerHeight;\n    if (this.headerHeight === totalHeaderHeight) {\n      return;\n    }\n    this.headerHeight = totalHeaderHeight;\n    const px = `${totalHeaderHeight + 1}px`;\n    this.comp.setHeightAndMinHeight(px);\n    this.eventService.dispatchEvent({\n      type: Events.EVENT_HEADER_HEIGHT_CHANGED\n    });\n  }\n  onPivotModeChanged() {\n    const pivotMode = this.columnModel.isPivotMode();\n    this.comp.addOrRemoveCssClass(\"ag-pivot-on\", pivotMode);\n    this.comp.addOrRemoveCssClass(\"ag-pivot-off\", !pivotMode);\n  }\n  onDisplayedColumnsChanged() {\n    const columns = this.columnModel.getAllDisplayedColumns();\n    const shouldAllowOverflow = columns.some((col) => col.isSpanHeaderHeight());\n    this.comp.addOrRemoveCssClass(\"ag-header-allow-overflow\", shouldAllowOverflow);\n  }\n  onTabKeyDown(e) {\n    const isRtl = this.gos.get(\"enableRtl\");\n    const direction = e.shiftKey !== isRtl ? 2 /* LEFT */ : 3 /* RIGHT */;\n    if (this.headerNavigationService.navigateHorizontally(direction, true, e) || this.focusService.focusNextGridCoreContainer(e.shiftKey)) {\n      e.preventDefault();\n    }\n  }\n  handleKeyDown(e) {\n    let direction = null;\n    switch (e.key) {\n      case KeyCode.LEFT:\n        direction = 2 /* LEFT */;\n      case KeyCode.RIGHT:\n        if (!exists(direction)) {\n          direction = 3 /* RIGHT */;\n        }\n        this.headerNavigationService.navigateHorizontally(direction, false, e);\n        break;\n      case KeyCode.UP:\n        direction = 0 /* UP */;\n      case KeyCode.DOWN:\n        if (!exists(direction)) {\n          direction = 1 /* DOWN */;\n        }\n        if (this.headerNavigationService.navigateVertically(direction, null, e)) {\n          e.preventDefault();\n        }\n        break;\n      default:\n        return;\n    }\n  }\n  onFocusOut(e) {\n    const { relatedTarget } = e;\n    if (!relatedTarget && this.eGui.contains(this.gos.getActiveDomElement())) {\n      return;\n    }\n    if (!this.eGui.contains(relatedTarget)) {\n      this.focusService.clearFocusedHeader();\n    }\n  }\n  onHeaderContextMenu(mouseEvent, touch, touchEvent) {\n    if (!mouseEvent && !touchEvent || !this.menuService.isHeaderContextMenuEnabled()) {\n      return;\n    }\n    const { target } = mouseEvent != null ? mouseEvent : touch;\n    if (target === this.eGui || target === this.ctrlsService.getHeaderRowContainerCtrl().getViewport()) {\n      this.menuService.showHeaderContextMenu(void 0, mouseEvent, touchEvent);\n    }\n  }\n  mockContextMenuForIPad(listener) {\n    if (!isIOSUserAgent()) {\n      return;\n    }\n    const touchListener = new TouchListener(this.eGui);\n    const longTapListener = (event) => {\n      listener(void 0, event.touchStart, event.touchEvent);\n    };\n    this.addManagedListener(touchListener, TouchListener.EVENT_LONG_TAP, longTapListener);\n    this.addDestroyFunc(() => touchListener.destroy());\n  }\n};\n__decorateClass([\n  Autowired(\"headerNavigationService\")\n], GridHeaderCtrl.prototype, \"headerNavigationService\", 2);\n__decorateClass([\n  Autowired(\"focusService\")\n], GridHeaderCtrl.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], GridHeaderCtrl.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], GridHeaderCtrl.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"filterManager\")\n], GridHeaderCtrl.prototype, \"filterManager\", 2);\n__decorateClass([\n  Autowired(\"menuService\")\n], GridHeaderCtrl.prototype, \"menuService\", 2);\n\n// community-modules/core/src/headerRendering/gridHeaderComp.ts\nvar _GridHeaderComp = class _GridHeaderComp extends Component {\n  constructor() {\n    super(_GridHeaderComp.TEMPLATE);\n  }\n  postConstruct() {\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setHeightAndMinHeight: (height) => {\n        this.getGui().style.height = height;\n        this.getGui().style.minHeight = height;\n      }\n    };\n    const ctrl = this.createManagedBean(new GridHeaderCtrl());\n    ctrl.setComp(compProxy, this.getGui(), this.getFocusableElement());\n    const addContainer = (container) => {\n      this.createManagedBean(container);\n      this.appendChild(container);\n    };\n    addContainer(new HeaderRowContainerComp(\"left\"));\n    addContainer(new HeaderRowContainerComp(null));\n    addContainer(new HeaderRowContainerComp(\"right\"));\n  }\n};\n_GridHeaderComp.TEMPLATE = /* html */\n`<div class=\"ag-header\" role=\"presentation\"/>`;\n__decorateClass([\n  PostConstruct\n], _GridHeaderComp.prototype, \"postConstruct\", 1);\nvar GridHeaderComp = _GridHeaderComp;\n\n// community-modules/core/src/headerRendering/common/horizontalResizeService.ts\nvar HorizontalResizeService = class extends BeanStub {\n  addResizeBar(params) {\n    const dragSource = {\n      dragStartPixels: params.dragStartPixels || 0,\n      eElement: params.eResizeBar,\n      onDragStart: this.onDragStart.bind(this, params),\n      onDragStop: this.onDragStop.bind(this, params),\n      onDragging: this.onDragging.bind(this, params),\n      includeTouch: true,\n      stopPropagationForTouch: true\n    };\n    this.dragService.addDragSource(dragSource);\n    const finishedWithResizeFunc = () => this.dragService.removeDragSource(dragSource);\n    return finishedWithResizeFunc;\n  }\n  onDragStart(params, mouseEvent) {\n    this.dragStartX = mouseEvent.clientX;\n    this.setResizeIcons();\n    const shiftKey = mouseEvent instanceof MouseEvent && mouseEvent.shiftKey === true;\n    params.onResizeStart(shiftKey);\n  }\n  setResizeIcons() {\n    const ctrl = this.ctrlsService.get(\"gridCtrl\");\n    ctrl.setResizeCursor(true);\n    ctrl.disableUserSelect(true);\n  }\n  onDragStop(params, mouseEvent) {\n    params.onResizeEnd(this.resizeAmount);\n    this.resetIcons();\n  }\n  resetIcons() {\n    const ctrl = this.ctrlsService.get(\"gridCtrl\");\n    ctrl.setResizeCursor(false);\n    ctrl.disableUserSelect(false);\n  }\n  onDragging(params, mouseEvent) {\n    this.resizeAmount = mouseEvent.clientX - this.dragStartX;\n    params.onResizing(this.resizeAmount);\n  }\n};\n__decorateClass([\n  Autowired(\"dragService\")\n], HorizontalResizeService.prototype, \"dragService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], HorizontalResizeService.prototype, \"ctrlsService\", 2);\nHorizontalResizeService = __decorateClass([\n  Bean(\"horizontalResizeService\")\n], HorizontalResizeService);\n\n// community-modules/core/src/headerRendering/cells/column/standardMenu.ts\nvar StandardMenuFactory = class extends BeanStub {\n  hideActiveMenu() {\n    if (this.hidePopup) {\n      this.hidePopup();\n    }\n  }\n  showMenuAfterMouseEvent(column, mouseEvent, containerType) {\n    this.showPopup(column, (eMenu) => {\n      this.popupService.positionPopupUnderMouseEvent({\n        column,\n        type: containerType,\n        mouseEvent,\n        ePopup: eMenu\n      });\n    }, containerType, mouseEvent.target, this.menuService.isLegacyMenuEnabled());\n  }\n  showMenuAfterButtonClick(column, eventSource, containerType) {\n    let multiplier = -1;\n    let alignSide = \"left\";\n    const isLegacyMenuEnabled = this.menuService.isLegacyMenuEnabled();\n    if (!isLegacyMenuEnabled && this.gos.get(\"enableRtl\")) {\n      multiplier = 1;\n      alignSide = \"right\";\n    }\n    let nudgeX = isLegacyMenuEnabled ? void 0 : 4 * multiplier;\n    let nudgeY = isLegacyMenuEnabled ? void 0 : 4;\n    this.showPopup(column, (eMenu) => {\n      this.popupService.positionPopupByComponent({\n        type: containerType,\n        eventSource,\n        ePopup: eMenu,\n        nudgeX,\n        nudgeY,\n        alignSide,\n        keepWithinBounds: true,\n        position: \"under\",\n        column\n      });\n    }, containerType, eventSource, isLegacyMenuEnabled);\n  }\n  showPopup(column, positionCallback, containerType, eventSource, isLegacyMenuEnabled) {\n    const comp = column ? this.createBean(new FilterWrapperComp(column, \"COLUMN_MENU\")) : void 0;\n    this.activeMenu = comp;\n    if (!(comp == null ? void 0 : comp.hasFilter()) || !column) {\n      throw new Error(\"AG Grid - unable to show popup filter, filter instantiation failed\");\n    }\n    const eMenu = document.createElement(\"div\");\n    setAriaRole(eMenu, \"presentation\");\n    eMenu.classList.add(\"ag-menu\");\n    if (!isLegacyMenuEnabled) {\n      eMenu.classList.add(\"ag-filter-menu\");\n    }\n    this.tabListener = this.addManagedListener(eMenu, \"keydown\", (e) => this.trapFocusWithin(e, eMenu));\n    eMenu.appendChild(comp == null ? void 0 : comp.getGui());\n    let hidePopup;\n    const afterGuiDetached = () => comp == null ? void 0 : comp.afterGuiDetached();\n    const anchorToElement = this.menuService.isColumnMenuAnchoringEnabled() ? eventSource != null ? eventSource : this.ctrlsService.getGridBodyCtrl().getGui() : void 0;\n    const closedCallback = (e) => {\n      column.setMenuVisible(false, \"contextMenu\");\n      const isKeyboardEvent = e instanceof KeyboardEvent;\n      if (this.tabListener) {\n        this.tabListener = this.tabListener();\n      }\n      if (isKeyboardEvent && eventSource && isVisible(eventSource)) {\n        const focusableEl = this.focusService.findTabbableParent(eventSource);\n        if (focusableEl) {\n          focusableEl.focus();\n        }\n      }\n      afterGuiDetached();\n      this.destroyBean(this.activeMenu);\n      this.dispatchVisibleChangedEvent(false, containerType, column);\n    };\n    const translate = this.localeService.getLocaleTextFunc();\n    const ariaLabel = isLegacyMenuEnabled && containerType !== \"columnFilter\" ? translate(\"ariaLabelColumnMenu\", \"Column Menu\") : translate(\"ariaLabelColumnFilter\", \"Column Filter\");\n    const addPopupRes = this.popupService.addPopup({\n      modal: true,\n      eChild: eMenu,\n      closeOnEsc: true,\n      closedCallback,\n      positionCallback: () => positionCallback(eMenu),\n      anchorToElement,\n      ariaLabel\n    });\n    if (addPopupRes) {\n      this.hidePopup = hidePopup = addPopupRes.hideFunc;\n    }\n    comp.afterInit().then(() => {\n      positionCallback(eMenu);\n      comp.afterGuiAttached({ container: containerType, hidePopup });\n    });\n    column.setMenuVisible(true, \"contextMenu\");\n    this.dispatchVisibleChangedEvent(true, containerType, column);\n  }\n  trapFocusWithin(e, menu) {\n    if (e.key !== KeyCode.TAB || e.defaultPrevented || this.focusService.findNextFocusableElement(menu, false, e.shiftKey)) {\n      return;\n    }\n    e.preventDefault();\n    this.focusService.focusInto(menu, e.shiftKey);\n  }\n  dispatchVisibleChangedEvent(visible, containerType, column) {\n    const displayedEvent = {\n      type: Events.EVENT_COLUMN_MENU_VISIBLE_CHANGED,\n      visible,\n      switchingTab: false,\n      key: containerType,\n      column: column != null ? column : null\n    };\n    this.eventService.dispatchEvent(displayedEvent);\n  }\n  isMenuEnabled(column) {\n    var _a;\n    return column.isFilterAllowed() && ((_a = column.getColDef().menuTabs) != null ? _a : [\"filterMenuTab\"]).includes(\"filterMenuTab\");\n  }\n  showMenuAfterContextMenuEvent() {\n  }\n  destroy() {\n    this.destroyBean(this.activeMenu);\n    super.destroy();\n  }\n};\n__decorateClass([\n  Autowired(\"filterManager\")\n], StandardMenuFactory.prototype, \"filterManager\", 2);\n__decorateClass([\n  Autowired(\"popupService\")\n], StandardMenuFactory.prototype, \"popupService\", 2);\n__decorateClass([\n  Autowired(\"focusService\")\n], StandardMenuFactory.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], StandardMenuFactory.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"menuService\")\n], StandardMenuFactory.prototype, \"menuService\", 2);\nStandardMenuFactory = __decorateClass([\n  Bean(\"filterMenuFactory\")\n], StandardMenuFactory);\n\n// community-modules/core/src/widgets/tabGuardCtrl.ts\nvar TabGuardClassNames = /* @__PURE__ */ ((TabGuardClassNames2) => {\n  TabGuardClassNames2[\"TAB_GUARD\"] = \"ag-tab-guard\";\n  TabGuardClassNames2[\"TAB_GUARD_TOP\"] = \"ag-tab-guard-top\";\n  TabGuardClassNames2[\"TAB_GUARD_BOTTOM\"] = \"ag-tab-guard-bottom\";\n  return TabGuardClassNames2;\n})(TabGuardClassNames || {});\nvar TabGuardCtrl = class extends BeanStub {\n  constructor(params) {\n    super();\n    this.skipTabGuardFocus = false;\n    this.forcingFocusOut = false;\n    const {\n      comp,\n      eTopGuard,\n      eBottomGuard,\n      focusTrapActive,\n      forceFocusOutWhenTabGuardsAreEmpty,\n      focusInnerElement,\n      onFocusIn,\n      onFocusOut,\n      shouldStopEventPropagation,\n      onTabKeyDown,\n      handleKeyDown,\n      eFocusableElement\n    } = params;\n    this.comp = comp;\n    this.eTopGuard = eTopGuard;\n    this.eBottomGuard = eBottomGuard;\n    this.providedFocusInnerElement = focusInnerElement;\n    this.eFocusableElement = eFocusableElement;\n    this.focusTrapActive = !!focusTrapActive;\n    this.forceFocusOutWhenTabGuardsAreEmpty = !!forceFocusOutWhenTabGuardsAreEmpty;\n    this.providedFocusIn = onFocusIn;\n    this.providedFocusOut = onFocusOut;\n    this.providedShouldStopEventPropagation = shouldStopEventPropagation;\n    this.providedOnTabKeyDown = onTabKeyDown;\n    this.providedHandleKeyDown = handleKeyDown;\n  }\n  postConstruct() {\n    this.createManagedBean(new ManagedFocusFeature(\n      this.eFocusableElement,\n      {\n        shouldStopEventPropagation: () => this.shouldStopEventPropagation(),\n        onTabKeyDown: (e) => this.onTabKeyDown(e),\n        handleKeyDown: (e) => this.handleKeyDown(e),\n        onFocusIn: (e) => this.onFocusIn(e),\n        onFocusOut: (e) => this.onFocusOut(e)\n      }\n    ));\n    this.activateTabGuards();\n    [this.eTopGuard, this.eBottomGuard].forEach(\n      (guard) => this.addManagedListener(guard, \"focus\", this.onFocus.bind(this))\n    );\n  }\n  handleKeyDown(e) {\n    if (this.providedHandleKeyDown) {\n      this.providedHandleKeyDown(e);\n    }\n  }\n  tabGuardsAreActive() {\n    return !!this.eTopGuard && this.eTopGuard.hasAttribute(\"tabIndex\");\n  }\n  shouldStopEventPropagation() {\n    if (this.providedShouldStopEventPropagation) {\n      return this.providedShouldStopEventPropagation();\n    }\n    return false;\n  }\n  activateTabGuards() {\n    if (this.forcingFocusOut) {\n      return;\n    }\n    const tabIndex = this.gos.get(\"tabIndex\");\n    this.comp.setTabIndex(tabIndex.toString());\n  }\n  deactivateTabGuards() {\n    this.comp.setTabIndex();\n  }\n  onFocus(e) {\n    if (this.skipTabGuardFocus) {\n      this.skipTabGuardFocus = false;\n      return;\n    }\n    if (this.forceFocusOutWhenTabGuardsAreEmpty) {\n      const isEmpty = this.focusService.findFocusableElements(this.eFocusableElement, \".ag-tab-guard\").length === 0;\n      if (isEmpty) {\n        this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);\n        return;\n      }\n    }\n    const fromBottom = e.target === this.eBottomGuard;\n    if (this.providedFocusInnerElement) {\n      this.providedFocusInnerElement(fromBottom);\n    } else {\n      this.focusInnerElement(fromBottom);\n    }\n  }\n  findNextElementOutsideAndFocus(up) {\n    const eDocument = this.gos.getDocument();\n    const focusableEls = this.focusService.findFocusableElements(eDocument.body, null, true);\n    const index = focusableEls.indexOf(up ? this.eTopGuard : this.eBottomGuard);\n    if (index === -1) {\n      return;\n    }\n    let start;\n    let end;\n    if (up) {\n      start = 0;\n      end = index;\n    } else {\n      start = index + 1;\n      end = focusableEls.length;\n    }\n    const focusableRange = focusableEls.slice(start, end);\n    const targetTabIndex = this.gos.get(\"tabIndex\");\n    focusableRange.sort((a, b) => {\n      const indexA = parseInt(a.getAttribute(\"tabindex\") || \"0\");\n      const indexB = parseInt(b.getAttribute(\"tabindex\") || \"0\");\n      if (indexB === targetTabIndex) {\n        return 1;\n      }\n      if (indexA === targetTabIndex) {\n        return -1;\n      }\n      if (indexA === 0) {\n        return 1;\n      }\n      if (indexB === 0) {\n        return -1;\n      }\n      return indexA - indexB;\n    });\n    focusableRange[up ? focusableRange.length - 1 : 0].focus();\n  }\n  onFocusIn(e) {\n    if (this.focusTrapActive) {\n      return;\n    }\n    if (this.providedFocusIn) {\n      this.providedFocusIn(e);\n    }\n    this.deactivateTabGuards();\n  }\n  onFocusOut(e) {\n    if (this.focusTrapActive) {\n      return;\n    }\n    if (this.providedFocusOut) {\n      this.providedFocusOut(e);\n    }\n    if (!this.eFocusableElement.contains(e.relatedTarget)) {\n      this.activateTabGuards();\n    }\n  }\n  onTabKeyDown(e) {\n    if (this.providedOnTabKeyDown) {\n      this.providedOnTabKeyDown(e);\n      return;\n    }\n    if (this.focusTrapActive) {\n      return;\n    }\n    if (e.defaultPrevented) {\n      return;\n    }\n    const tabGuardsAreActive = this.tabGuardsAreActive();\n    if (tabGuardsAreActive) {\n      this.deactivateTabGuards();\n    }\n    const nextRoot = this.getNextFocusableElement(e.shiftKey);\n    if (tabGuardsAreActive) {\n      setTimeout(() => this.activateTabGuards(), 0);\n    }\n    if (!nextRoot) {\n      return;\n    }\n    nextRoot.focus();\n    e.preventDefault();\n  }\n  focusInnerElement(fromBottom = false) {\n    const focusable = this.focusService.findFocusableElements(this.eFocusableElement);\n    if (this.tabGuardsAreActive()) {\n      focusable.splice(0, 1);\n      focusable.splice(focusable.length - 1, 1);\n    }\n    if (!focusable.length) {\n      return;\n    }\n    focusable[fromBottom ? focusable.length - 1 : 0].focus({ preventScroll: true });\n  }\n  getNextFocusableElement(backwards) {\n    return this.focusService.findNextFocusableElement(this.eFocusableElement, false, backwards);\n  }\n  forceFocusOutOfContainer(up = false) {\n    if (this.forcingFocusOut) {\n      return;\n    }\n    const tabGuardToFocus = up ? this.eTopGuard : this.eBottomGuard;\n    this.activateTabGuards();\n    this.skipTabGuardFocus = true;\n    this.forcingFocusOut = true;\n    tabGuardToFocus.focus();\n    window.setTimeout(() => {\n      this.forcingFocusOut = false;\n      this.activateTabGuards();\n    });\n  }\n  isTabGuard(element) {\n    return element === this.eTopGuard || element === this.eBottomGuard;\n  }\n};\n__decorateClass([\n  Autowired(\"focusService\")\n], TabGuardCtrl.prototype, \"focusService\", 2);\n__decorateClass([\n  PostConstruct\n], TabGuardCtrl.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/widgets/tabGuardComp.ts\nvar TabGuardComp = class extends Component {\n  initialiseTabGuard(params) {\n    this.eTopGuard = this.createTabGuard(\"top\");\n    this.eBottomGuard = this.createTabGuard(\"bottom\");\n    this.eFocusableElement = this.getFocusableElement();\n    const tabGuards = [this.eTopGuard, this.eBottomGuard];\n    const compProxy = {\n      setTabIndex: (tabIndex) => {\n        tabGuards.forEach((tabGuard) => tabIndex != null ? tabGuard.setAttribute(\"tabindex\", tabIndex) : tabGuard.removeAttribute(\"tabindex\"));\n      }\n    };\n    this.addTabGuards(this.eTopGuard, this.eBottomGuard);\n    this.tabGuardCtrl = this.createManagedBean(new TabGuardCtrl({\n      comp: compProxy,\n      focusTrapActive: !!params.focusTrapActive,\n      eTopGuard: this.eTopGuard,\n      eBottomGuard: this.eBottomGuard,\n      eFocusableElement: this.eFocusableElement,\n      onFocusIn: params.onFocusIn,\n      onFocusOut: params.onFocusOut,\n      focusInnerElement: params.focusInnerElement,\n      handleKeyDown: params.handleKeyDown,\n      onTabKeyDown: params.onTabKeyDown,\n      shouldStopEventPropagation: params.shouldStopEventPropagation,\n      forceFocusOutWhenTabGuardsAreEmpty: params.forceFocusOutWhenTabGuardsAreEmpty\n    }));\n  }\n  createTabGuard(side) {\n    const tabGuard = document.createElement(\"div\");\n    const cls = side === \"top\" ? \"ag-tab-guard-top\" /* TAB_GUARD_TOP */ : \"ag-tab-guard-bottom\" /* TAB_GUARD_BOTTOM */;\n    tabGuard.classList.add(\"ag-tab-guard\" /* TAB_GUARD */, cls);\n    setAriaRole(tabGuard, \"presentation\");\n    return tabGuard;\n  }\n  addTabGuards(topTabGuard, bottomTabGuard) {\n    this.eFocusableElement.insertAdjacentElement(\"afterbegin\", topTabGuard);\n    this.eFocusableElement.insertAdjacentElement(\"beforeend\", bottomTabGuard);\n  }\n  removeAllChildrenExceptTabGuards() {\n    const tabGuards = [this.eTopGuard, this.eBottomGuard];\n    clearElement(this.getFocusableElement());\n    this.addTabGuards(...tabGuards);\n  }\n  forceFocusOutOfContainer(up = false) {\n    this.tabGuardCtrl.forceFocusOutOfContainer(up);\n  }\n  appendChild(newChild, container) {\n    if (!isNodeOrElement(newChild)) {\n      newChild = newChild.getGui();\n    }\n    const { eBottomGuard: bottomTabGuard } = this;\n    if (bottomTabGuard) {\n      bottomTabGuard.insertAdjacentElement(\"beforebegin\", newChild);\n    } else {\n      super.appendChild(newChild, container);\n    }\n  }\n};\n\n// community-modules/core/src/layout/tabbedLayout.ts\nvar _TabbedLayout = class _TabbedLayout extends TabGuardComp {\n  constructor(params) {\n    super(_TabbedLayout.getTemplate(params.cssClass));\n    this.items = [];\n    this.tabbedItemScrollMap = /* @__PURE__ */ new Map();\n    this.params = params;\n  }\n  postConstruct() {\n    this.setupHeader();\n    if (this.params.items) {\n      this.params.items.forEach((item) => this.addItem(item));\n    }\n    this.initialiseTabGuard({\n      onTabKeyDown: this.onTabKeyDown.bind(this),\n      handleKeyDown: this.handleKeyDown.bind(this),\n      focusInnerElement: this.focusInnerElement.bind(this),\n      focusTrapActive: true\n    });\n    this.addDestroyFunc(() => {\n      var _a, _b, _c;\n      return (_c = (_b = (_a = this.activeItem) == null ? void 0 : _a.tabbedItem) == null ? void 0 : _b.afterDetachedCallback) == null ? void 0 : _c.call(_b);\n    });\n  }\n  static getTemplate(cssClass) {\n    return (\n      /* html */\n      `<div class=\"ag-tabs ${cssClass}\">\n            <div ref=\"eHeader\"></div>\n            <div ref=\"eBody\" role=\"presentation\" class=\"ag-tabs-body ${cssClass ? `${cssClass}-body` : \"\"}\"></div>\n        </div>`\n    );\n  }\n  setupHeader() {\n    const { enableCloseButton, cssClass } = this.params;\n    const addCssClasses = (el, suffix) => {\n      el.classList.add(`ag-tabs-${suffix}`);\n      if (cssClass) {\n        el.classList.add(`${cssClass}-${suffix}`);\n      }\n    };\n    if (enableCloseButton) {\n      this.setupCloseButton(addCssClasses);\n      this.eTabHeader = this.gos.getDocument().createElement(\"div\");\n      addCssClasses(this.eHeader, \"header-wrapper\");\n      setAriaRole(this.eHeader, \"presentation\");\n      this.eHeader.appendChild(this.eTabHeader);\n    } else {\n      this.eTabHeader = this.eHeader;\n    }\n    setAriaRole(this.eTabHeader, \"tablist\");\n    addCssClasses(this.eTabHeader, \"header\");\n  }\n  setupCloseButton(addCssClasses) {\n    const eDocument = this.gos.getDocument();\n    const eCloseButton = eDocument.createElement(\"button\");\n    addCssClasses(eCloseButton, \"close-button\");\n    const eIcon = createIconNoSpan(\n      \"close\",\n      this.gos,\n      void 0,\n      true\n    );\n    setAriaLabel(eCloseButton, this.params.closeButtonAriaLabel);\n    eCloseButton.appendChild(eIcon);\n    this.addManagedListener(eCloseButton, \"click\", () => {\n      var _a, _b;\n      return (_b = (_a = this.params).onCloseClicked) == null ? void 0 : _b.call(_a);\n    });\n    const eCloseButtonWrapper = eDocument.createElement(\"div\");\n    addCssClasses(eCloseButtonWrapper, \"close-button-wrapper\");\n    setAriaRole(eCloseButtonWrapper, \"presentation\");\n    eCloseButtonWrapper.appendChild(eCloseButton);\n    this.eHeader.appendChild(eCloseButtonWrapper);\n    this.eCloseButton = eCloseButton;\n  }\n  handleKeyDown(e) {\n    switch (e.key) {\n      case KeyCode.RIGHT:\n      case KeyCode.LEFT:\n        if (!this.eTabHeader.contains(this.gos.getActiveDomElement())) {\n          return;\n        }\n        const isRightKey = e.key === KeyCode.RIGHT;\n        const isRtl = this.gos.get(\"enableRtl\");\n        const currentPosition = this.items.indexOf(this.activeItem);\n        const nextPosition = isRightKey !== isRtl ? Math.min(currentPosition + 1, this.items.length - 1) : Math.max(currentPosition - 1, 0);\n        if (currentPosition === nextPosition) {\n          return;\n        }\n        e.preventDefault();\n        const nextItem = this.items[nextPosition];\n        this.showItemWrapper(nextItem);\n        nextItem.eHeaderButton.focus();\n        break;\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n        e.stopPropagation();\n        break;\n    }\n  }\n  onTabKeyDown(e) {\n    var _a, _b, _c, _d;\n    if (e.defaultPrevented) {\n      return;\n    }\n    const { focusService, eHeader, eBody, activeItem, params } = this;\n    const { suppressTrapFocus, enableCloseButton } = params;\n    const activeElement = this.gos.getActiveDomElement();\n    const target = e.target;\n    const backwards = e.shiftKey;\n    if (eHeader.contains(activeElement)) {\n      e.preventDefault();\n      if (enableCloseButton && backwards && !((_a = this.eCloseButton) == null ? void 0 : _a.contains(activeElement))) {\n        (_b = this.eCloseButton) == null ? void 0 : _b.focus();\n      } else if (suppressTrapFocus && backwards) {\n        (_c = this.focusService.findFocusableElementBeforeTabGuard(this.gos.getDocument().body, target)) == null ? void 0 : _c.focus();\n      } else {\n        this.focusBody(e.shiftKey);\n      }\n      return;\n    }\n    let nextEl = null;\n    if (focusService.isTargetUnderManagedComponent(eBody, target)) {\n      if (backwards) {\n        nextEl = this.focusService.findFocusableElementBeforeTabGuard(eBody, target);\n      }\n      if (!nextEl && !suppressTrapFocus) {\n        nextEl = activeItem.eHeaderButton;\n      }\n    }\n    if (!nextEl && eBody.contains(activeElement)) {\n      nextEl = focusService.findNextFocusableElement(eBody, false, backwards);\n      if (!nextEl) {\n        e.preventDefault();\n        if (suppressTrapFocus && !backwards) {\n          this.forceFocusOutOfContainer(backwards);\n        } else if (enableCloseButton && !backwards) {\n          (_d = this.eCloseButton) == null ? void 0 : _d.focus();\n        } else {\n          this.focusHeader();\n        }\n        return;\n      }\n    }\n    if (nextEl) {\n      e.preventDefault();\n      nextEl.focus();\n    }\n  }\n  focusInnerElement(fromBottom) {\n    if (fromBottom) {\n      this.focusHeader();\n    } else {\n      this.focusBody(true);\n    }\n  }\n  focusHeader(preventScroll) {\n    this.activeItem.eHeaderButton.focus({ preventScroll });\n  }\n  focusBody(fromBottom) {\n    this.focusService.focusInto(this.eBody, fromBottom);\n  }\n  setAfterAttachedParams(params) {\n    this.afterAttachedParams = params;\n  }\n  showFirstItem() {\n    if (this.items.length > 0) {\n      this.showItemWrapper(this.items[0]);\n    }\n  }\n  addItem(item) {\n    const eHeaderButton = document.createElement(\"span\");\n    setAriaRole(eHeaderButton, \"tab\");\n    eHeaderButton.setAttribute(\"tabindex\", \"-1\");\n    eHeaderButton.appendChild(item.title);\n    eHeaderButton.classList.add(\"ag-tab\");\n    this.eTabHeader.appendChild(eHeaderButton);\n    setAriaLabel(eHeaderButton, item.titleLabel);\n    const wrapper = {\n      tabbedItem: item,\n      eHeaderButton\n    };\n    this.items.push(wrapper);\n    eHeaderButton.addEventListener(\"click\", this.showItemWrapper.bind(this, wrapper));\n  }\n  showItem(tabbedItem) {\n    const itemWrapper = this.items.find((wrapper) => wrapper.tabbedItem === tabbedItem);\n    if (itemWrapper) {\n      this.showItemWrapper(itemWrapper);\n    }\n  }\n  showItemWrapper(wrapper) {\n    var _a, _b, _c, _d, _e, _f;\n    const { tabbedItem, eHeaderButton } = wrapper;\n    (_b = (_a = this.params).onItemClicked) == null ? void 0 : _b.call(_a, { item: tabbedItem });\n    if (this.activeItem === wrapper) {\n      (_d = (_c = this.params).onActiveItemClicked) == null ? void 0 : _d.call(_c);\n      return;\n    }\n    if (this.lastScrollListener) {\n      this.lastScrollListener = this.lastScrollListener();\n    }\n    clearElement(this.eBody);\n    tabbedItem.bodyPromise.then((body) => {\n      this.eBody.appendChild(body);\n      const onlyUnmanaged = !this.focusService.isKeyboardMode();\n      if (!this.params.suppressFocusBodyOnOpen) {\n        this.focusService.focusInto(this.eBody, false, onlyUnmanaged);\n      }\n      if (tabbedItem.afterAttachedCallback) {\n        tabbedItem.afterAttachedCallback(this.afterAttachedParams);\n      }\n      if (this.params.keepScrollPosition) {\n        const scrollableContainer = tabbedItem.getScrollableContainer && tabbedItem.getScrollableContainer() || body;\n        this.lastScrollListener = this.addManagedListener(scrollableContainer, \"scroll\", () => {\n          this.tabbedItemScrollMap.set(tabbedItem.name, scrollableContainer.scrollTop);\n        });\n        const scrollPosition = this.tabbedItemScrollMap.get(tabbedItem.name);\n        if (scrollPosition !== void 0) {\n          setTimeout(() => {\n            scrollableContainer.scrollTop = scrollPosition;\n          }, 0);\n        }\n      }\n    });\n    if (this.activeItem) {\n      this.activeItem.eHeaderButton.classList.remove(\"ag-tab-selected\");\n      (_f = (_e = this.activeItem.tabbedItem).afterDetachedCallback) == null ? void 0 : _f.call(_e);\n    }\n    eHeaderButton.classList.add(\"ag-tab-selected\");\n    this.activeItem = wrapper;\n  }\n};\n__decorateClass([\n  Autowired(\"focusService\")\n], _TabbedLayout.prototype, \"focusService\", 2);\n__decorateClass([\n  RefSelector(\"eHeader\")\n], _TabbedLayout.prototype, \"eHeader\", 2);\n__decorateClass([\n  RefSelector(\"eBody\")\n], _TabbedLayout.prototype, \"eBody\", 2);\n__decorateClass([\n  PostConstruct\n], _TabbedLayout.prototype, \"postConstruct\", 1);\nvar TabbedLayout = _TabbedLayout;\n\n// community-modules/core/src/misc/resizeObserverService.ts\nvar DEBOUNCE_DELAY = 50;\nvar ResizeObserverService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.polyfillFunctions = [];\n  }\n  observeResize(element, callback) {\n    const win = this.gos.getWindow();\n    const useBrowserResizeObserver = () => {\n      const resizeObserver = new win.ResizeObserver(callback);\n      resizeObserver.observe(element);\n      return () => resizeObserver.disconnect();\n    };\n    const usePolyfill = () => {\n      var _a, _b;\n      let widthLastTime = (_a = element == null ? void 0 : element.clientWidth) != null ? _a : 0;\n      let heightLastTime = (_b = element == null ? void 0 : element.clientHeight) != null ? _b : 0;\n      let running = true;\n      const periodicallyCheckWidthAndHeight = () => {\n        var _a2, _b2;\n        if (running) {\n          const newWidth = (_a2 = element == null ? void 0 : element.clientWidth) != null ? _a2 : 0;\n          const newHeight = (_b2 = element == null ? void 0 : element.clientHeight) != null ? _b2 : 0;\n          const changed = newWidth !== widthLastTime || newHeight !== heightLastTime;\n          if (changed) {\n            widthLastTime = newWidth;\n            heightLastTime = newHeight;\n            callback();\n          }\n          this.doNextPolyfillTurn(periodicallyCheckWidthAndHeight);\n        }\n      };\n      periodicallyCheckWidthAndHeight();\n      return () => running = false;\n    };\n    const suppressResize = this.gos.get(\"suppressBrowserResizeObserver\");\n    const resizeObserverExists = !!win.ResizeObserver;\n    if (resizeObserverExists && !suppressResize) {\n      return useBrowserResizeObserver();\n    }\n    return this.getFrameworkOverrides().wrapIncoming(() => usePolyfill(), \"resize-observer\");\n  }\n  doNextPolyfillTurn(func) {\n    this.polyfillFunctions.push(func);\n    this.schedulePolyfill();\n  }\n  schedulePolyfill() {\n    if (this.polyfillScheduled) {\n      return;\n    }\n    const executeAllFuncs = () => {\n      const funcs = this.polyfillFunctions;\n      this.polyfillScheduled = false;\n      this.polyfillFunctions = [];\n      funcs.forEach((f) => f());\n    };\n    this.polyfillScheduled = true;\n    window.setTimeout(executeAllFuncs, DEBOUNCE_DELAY);\n  }\n};\nResizeObserverService = __decorateClass([\n  Bean(\"resizeObserverService\")\n], ResizeObserverService);\n\n// community-modules/core/src/misc/animationFrameService.ts\nvar AnimationFrameService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    // p1 and p2 are create tasks are to do with row and cell creation.\n    // for them we want to execute according to row order, so we use\n    // TaskItem so we know what index the item is for.\n    this.createTasksP1 = { list: [], sorted: false };\n    // eg drawing back-ground of rows\n    this.createTasksP2 = { list: [], sorted: false };\n    // eg cell renderers, adding hover functionality\n    // destroy tasks are to do with row removal. they are done after row creation as the user will need to see new\n    // rows first (as blank is scrolled into view), when we remove the old rows (no longer in view) is not as\n    // important.\n    this.destroyTasks = [];\n    this.ticking = false;\n    // we need to know direction of scroll, to build up rows in the direction of\n    // the scroll. eg if user scrolls down, we extend the rows by building down.\n    this.scrollGoingDown = true;\n    this.lastPage = 0;\n    this.lastScrollTop = 0;\n    this.taskCount = 0;\n    this.cancelledTasks = /* @__PURE__ */ new Set();\n  }\n  setScrollTop(scrollTop) {\n    const isPaginationActive = this.gos.get(\"pagination\");\n    this.scrollGoingDown = scrollTop >= this.lastScrollTop;\n    if (isPaginationActive && scrollTop === 0) {\n      const currentPage = this.paginationProxy.getCurrentPage();\n      if (currentPage !== this.lastPage) {\n        this.lastPage = currentPage;\n        this.scrollGoingDown = true;\n      }\n    }\n    this.lastScrollTop = scrollTop;\n  }\n  init() {\n    this.useAnimationFrame = !this.gos.get(\"suppressAnimationFrame\");\n  }\n  isOn() {\n    return this.useAnimationFrame;\n  }\n  // this method is for our AG Grid sanity only - if animation frames are turned off,\n  // then no place in the code should be looking to add any work to be done in animation\n  // frames. this stops bugs - where some code is asking for a frame to be executed\n  // when it should not.\n  verifyAnimationFrameOn(methodName) {\n    if (this.useAnimationFrame === false) {\n      console.warn(`AG Grid: AnimationFrameService.${methodName} called but animation frames are off`);\n    }\n  }\n  createTask(task, index, list) {\n    this.verifyAnimationFrameOn(list);\n    const taskItem = { task, index, createOrder: ++this.taskCount };\n    this.addTaskToList(this[list], taskItem);\n    this.schedule();\n  }\n  cancelTask(task) {\n    this.cancelledTasks.add(task);\n  }\n  addTaskToList(taskList, task) {\n    taskList.list.push(task);\n    taskList.sorted = false;\n  }\n  sortTaskList(taskList) {\n    if (taskList.sorted) {\n      return;\n    }\n    const sortDirection = this.scrollGoingDown ? 1 : -1;\n    taskList.list.sort((a, b) => a.index !== b.index ? sortDirection * (b.index - a.index) : b.createOrder - a.createOrder);\n    taskList.sorted = true;\n  }\n  addDestroyTask(task) {\n    this.verifyAnimationFrameOn(\"createTasksP3\");\n    this.destroyTasks.push(task);\n    this.schedule();\n  }\n  executeFrame(millis) {\n    this.verifyAnimationFrameOn(\"executeFrame\");\n    const p1TaskList = this.createTasksP1;\n    const p1Tasks = p1TaskList.list;\n    const p2TaskList = this.createTasksP2;\n    const p2Tasks = p2TaskList.list;\n    const destroyTasks = this.destroyTasks;\n    const frameStart = (/* @__PURE__ */ new Date()).getTime();\n    let duration = (/* @__PURE__ */ new Date()).getTime() - frameStart;\n    const noMaxMillis = millis <= 0;\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    while (noMaxMillis || duration < millis) {\n      const gridBodyDidSomething = gridBodyCon.getScrollFeature().scrollGridIfNeeded();\n      if (!gridBodyDidSomething) {\n        let task;\n        if (p1Tasks.length) {\n          this.sortTaskList(p1TaskList);\n          task = p1Tasks.pop().task;\n        } else if (p2Tasks.length) {\n          this.sortTaskList(p2TaskList);\n          task = p2Tasks.pop().task;\n        } else if (destroyTasks.length) {\n          task = destroyTasks.pop();\n        } else {\n          this.cancelledTasks.clear();\n          break;\n        }\n        if (!this.cancelledTasks.has(task)) {\n          task();\n        }\n      }\n      duration = (/* @__PURE__ */ new Date()).getTime() - frameStart;\n    }\n    if (p1Tasks.length || p2Tasks.length || destroyTasks.length) {\n      this.requestFrame();\n    } else {\n      this.stopTicking();\n    }\n  }\n  stopTicking() {\n    this.ticking = false;\n  }\n  flushAllFrames() {\n    if (!this.useAnimationFrame) {\n      return;\n    }\n    this.executeFrame(-1);\n  }\n  schedule() {\n    if (!this.useAnimationFrame) {\n      return;\n    }\n    if (!this.ticking) {\n      this.ticking = true;\n      this.requestFrame();\n    }\n  }\n  requestFrame() {\n    const callback = this.executeFrame.bind(this, 60);\n    this.requestAnimationFrame(callback);\n  }\n  requestAnimationFrame(callback) {\n    const win = this.gos.getWindow();\n    if (win.requestAnimationFrame) {\n      win.requestAnimationFrame(callback);\n    } else if (win.webkitRequestAnimationFrame) {\n      win.webkitRequestAnimationFrame(callback);\n    } else {\n      win.setTimeout(callback, 0);\n    }\n  }\n  isQueueEmpty() {\n    return !this.ticking;\n  }\n  // a debounce utility used for parts of the app involved with rendering.\n  // the advantage over normal debounce is the client can call flushAllFrames()\n  // to make sure all rendering is complete. we don't wait any milliseconds,\n  // as this is intended to batch calls in one VM turn.\n  debounce(func) {\n    let pending = false;\n    return () => {\n      if (!this.isOn()) {\n        window.setTimeout(func, 0);\n        return;\n      }\n      if (pending) {\n        return;\n      }\n      pending = true;\n      this.addDestroyTask(() => {\n        pending = false;\n        func();\n      });\n    };\n  }\n};\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], AnimationFrameService.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], AnimationFrameService.prototype, \"paginationProxy\", 2);\n__decorateClass([\n  PostConstruct\n], AnimationFrameService.prototype, \"init\", 1);\nAnimationFrameService = __decorateClass([\n  Bean(\"animationFrameService\")\n], AnimationFrameService);\n\n// community-modules/core/src/interfaces/iClientSideRowModel.ts\nvar ClientSideRowModelSteps = /* @__PURE__ */ ((ClientSideRowModelSteps2) => {\n  ClientSideRowModelSteps2[\"EVERYTHING\"] = \"group\";\n  ClientSideRowModelSteps2[\"FILTER\"] = \"filter\";\n  ClientSideRowModelSteps2[\"SORT\"] = \"sort\";\n  ClientSideRowModelSteps2[\"MAP\"] = \"map\";\n  ClientSideRowModelSteps2[\"AGGREGATE\"] = \"aggregate\";\n  ClientSideRowModelSteps2[\"FILTER_AGGREGATES\"] = \"filter_aggregates\";\n  ClientSideRowModelSteps2[\"PIVOT\"] = \"pivot\";\n  ClientSideRowModelSteps2[\"NOTHING\"] = \"nothing\";\n  return ClientSideRowModelSteps2;\n})(ClientSideRowModelSteps || {});\n\n// community-modules/core/src/misc/expansionService.ts\nvar ExpansionService = class extends BeanStub {\n  postConstruct() {\n    this.isClientSideRowModel = this.rowModel.getType() === \"clientSide\";\n  }\n  expandRows(rowIds) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    const rowIdSet = new Set(rowIds);\n    this.rowModel.forEachNode((node) => {\n      if (node.id && rowIdSet.has(node.id)) {\n        node.expanded = true;\n      }\n    });\n    this.onGroupExpandedOrCollapsed();\n  }\n  getExpandedRows() {\n    const expandedRows = [];\n    this.rowModel.forEachNode(({ expanded, id }) => {\n      if (expanded && id) {\n        expandedRows.push(id);\n      }\n    });\n    return expandedRows;\n  }\n  expandAll(value) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    this.rowModel.expandOrCollapseAll(value);\n  }\n  setRowNodeExpanded(rowNode, expanded, expandParents, forceSync) {\n    if (rowNode) {\n      if (expandParents && rowNode.parent && rowNode.parent.level !== -1) {\n        this.setRowNodeExpanded(rowNode.parent, expanded, expandParents, forceSync);\n      }\n      rowNode.setExpanded(expanded, void 0, forceSync);\n    }\n  }\n  onGroupExpandedOrCollapsed() {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    this.rowModel.refreshModel({ step: \"map\" /* MAP */ });\n  }\n};\n__decorateClass([\n  Autowired(\"rowModel\")\n], ExpansionService.prototype, \"rowModel\", 2);\n__decorateClass([\n  PostConstruct\n], ExpansionService.prototype, \"postConstruct\", 1);\nExpansionService = __decorateClass([\n  Bean(\"expansionService\")\n], ExpansionService);\n\n// community-modules/core/src/misc/menuService.ts\nvar MenuService = class extends BeanStub {\n  postConstruct() {\n    var _a;\n    this.activeMenuFactory = (_a = this.enterpriseMenuFactory) != null ? _a : this.filterMenuFactory;\n  }\n  showColumnMenu(params) {\n    this.showColumnMenuCommon(this.activeMenuFactory, params, \"columnMenu\");\n  }\n  showFilterMenu(params) {\n    const menuFactory = this.enterpriseMenuFactory && this.isLegacyMenuEnabled() ? this.enterpriseMenuFactory : this.filterMenuFactory;\n    this.showColumnMenuCommon(menuFactory, params, params.containerType, true);\n  }\n  showHeaderContextMenu(column, mouseEvent, touchEvent) {\n    this.activeMenuFactory.showMenuAfterContextMenuEvent(column, mouseEvent, touchEvent);\n  }\n  getContextMenuPosition(rowNode, column) {\n    const rowCtrl = this.getRowCtrl(rowNode);\n    const eGui = this.getCellGui(rowCtrl, column);\n    if (!eGui) {\n      if (rowCtrl) {\n        return { x: 0, y: rowCtrl.getRowYPosition() };\n      }\n      return { x: 0, y: 0 };\n    }\n    const rect = eGui.getBoundingClientRect();\n    return {\n      x: rect.x + rect.width / 2,\n      y: rect.y + rect.height / 2\n    };\n  }\n  showContextMenu(params) {\n    var _a, _b, _c;\n    const { column, rowNode } = params;\n    let { anchorToElement, value } = params;\n    if (rowNode && column && value == null) {\n      value = rowNode.getValueFromValueService(column);\n    }\n    if (anchorToElement == null) {\n      anchorToElement = this.getContextMenuAnchorElement(rowNode, column);\n    }\n    (_c = this.contextMenuFactory) == null ? void 0 : _c.onContextMenu(\n      (_a = params.mouseEvent) != null ? _a : null,\n      (_b = params.touchEvent) != null ? _b : null,\n      rowNode != null ? rowNode : null,\n      column != null ? column : null,\n      value,\n      anchorToElement\n    );\n  }\n  showColumnChooser(params) {\n    var _a;\n    (_a = this.columnChooserFactory) == null ? void 0 : _a.showColumnChooser(params);\n  }\n  hidePopupMenu() {\n    var _a;\n    (_a = this.contextMenuFactory) == null ? void 0 : _a.hideActiveMenu();\n    this.activeMenuFactory.hideActiveMenu();\n  }\n  hideColumnChooser() {\n    var _a;\n    (_a = this.columnChooserFactory) == null ? void 0 : _a.hideActiveColumnChooser();\n  }\n  isColumnMenuInHeaderEnabled(column) {\n    const { suppressMenu, suppressHeaderMenuButton } = column.getColDef();\n    const isSuppressMenuButton = suppressHeaderMenuButton != null ? suppressHeaderMenuButton : suppressMenu;\n    return !isSuppressMenuButton && this.activeMenuFactory.isMenuEnabled(column) && (this.isLegacyMenuEnabled() || !!this.enterpriseMenuFactory);\n  }\n  isFilterMenuInHeaderEnabled(column) {\n    return !column.getColDef().suppressHeaderFilterButton && this.filterManager.isFilterAllowed(column);\n  }\n  isHeaderContextMenuEnabled(column) {\n    return !(column == null ? void 0 : column.getColDef().suppressHeaderContextMenu) && this.getColumnMenuType() === \"new\";\n  }\n  isHeaderMenuButtonAlwaysShowEnabled() {\n    return this.isSuppressMenuHide();\n  }\n  isHeaderMenuButtonEnabled() {\n    const menuHides = !this.isSuppressMenuHide();\n    const onIpadAndMenuHides = isIOSUserAgent() && menuHides;\n    return !onIpadAndMenuHides;\n  }\n  isHeaderFilterButtonEnabled(column) {\n    return this.isFilterMenuInHeaderEnabled(column) && !this.isLegacyMenuEnabled() && !this.isFloatingFilterButtonDisplayed(column);\n  }\n  isFilterMenuItemEnabled(column) {\n    return this.filterManager.isFilterAllowed(column) && !this.isLegacyMenuEnabled() && !this.isFilterMenuInHeaderEnabled(column) && !this.isFloatingFilterButtonDisplayed(column);\n  }\n  isColumnMenuAnchoringEnabled() {\n    return !this.isLegacyMenuEnabled();\n  }\n  areAdditionalColumnMenuItemsEnabled() {\n    return this.getColumnMenuType() === \"new\";\n  }\n  isLegacyMenuEnabled() {\n    return this.getColumnMenuType() === \"legacy\";\n  }\n  isFloatingFilterButtonEnabled(column) {\n    var _a;\n    const colDef = column.getColDef();\n    const legacySuppressFilterButton = (_a = colDef.floatingFilterComponentParams) == null ? void 0 : _a.suppressFilterButton;\n    if (legacySuppressFilterButton != null) {\n      warnOnce(`As of v31.1, 'colDef.floatingFilterComponentParams.suppressFilterButton' is deprecated. Use 'colDef.suppressFloatingFilterButton' instead.`);\n    }\n    return colDef.suppressFloatingFilterButton == null ? !legacySuppressFilterButton : !colDef.suppressFloatingFilterButton;\n  }\n  getColumnMenuType() {\n    var _a;\n    return (_a = this.gos.get(\"columnMenu\")) != null ? _a : \"legacy\";\n  }\n  isFloatingFilterButtonDisplayed(column) {\n    return !!column.getColDef().floatingFilter && this.isFloatingFilterButtonEnabled(column);\n  }\n  isSuppressMenuHide() {\n    const suppressMenuHide = this.gos.get(\"suppressMenuHide\");\n    if (this.isLegacyMenuEnabled()) {\n      return suppressMenuHide;\n    } else {\n      return this.gos.exists(\"suppressMenuHide\") ? suppressMenuHide : true;\n    }\n  }\n  showColumnMenuCommon(menuFactory, params, containerType, filtersOnly) {\n    const { column, positionBy } = params;\n    if (positionBy === \"button\") {\n      const { buttonElement } = params;\n      menuFactory.showMenuAfterButtonClick(column, buttonElement, containerType, filtersOnly);\n    } else if (positionBy === \"mouse\") {\n      const { mouseEvent } = params;\n      menuFactory.showMenuAfterMouseEvent(column, mouseEvent, containerType, filtersOnly);\n    } else if (column) {\n      this.ctrlsService.getGridBodyCtrl().getScrollFeature().ensureColumnVisible(column, \"auto\");\n      this.animationFrameService.requestAnimationFrame(() => {\n        const headerCellCtrl = this.ctrlsService.getHeaderRowContainerCtrl(column.getPinned()).getHeaderCtrlForColumn(column);\n        menuFactory.showMenuAfterButtonClick(column, headerCellCtrl.getAnchorElementForMenu(filtersOnly), containerType, true);\n      });\n    }\n  }\n  getRowCtrl(rowNode) {\n    const { rowIndex, rowPinned } = rowNode || {};\n    if (rowIndex == null) {\n      return;\n    }\n    return this.rowRenderer.getRowByPosition({ rowIndex, rowPinned }) || void 0;\n  }\n  getCellGui(rowCtrl, column) {\n    if (!rowCtrl || !column) {\n      return;\n    }\n    const cellCtrl = rowCtrl.getCellCtrl(column);\n    return (cellCtrl == null ? void 0 : cellCtrl.getGui()) || void 0;\n  }\n  getContextMenuAnchorElement(rowNode, column) {\n    const gridBodyEl = this.ctrlsService.getGridBodyCtrl().getGridBodyElement();\n    const rowCtrl = this.getRowCtrl(rowNode);\n    if (!rowCtrl) {\n      return gridBodyEl;\n    }\n    const cellGui = this.getCellGui(rowCtrl, column);\n    if (cellGui) {\n      return cellGui;\n    }\n    if (rowCtrl.isFullWidth()) {\n      return rowCtrl.getFullWidthElement();\n    }\n    return gridBodyEl;\n  }\n};\n__decorateClass([\n  Autowired(\"filterMenuFactory\")\n], MenuService.prototype, \"filterMenuFactory\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], MenuService.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"animationFrameService\")\n], MenuService.prototype, \"animationFrameService\", 2);\n__decorateClass([\n  Autowired(\"filterManager\")\n], MenuService.prototype, \"filterManager\", 2);\n__decorateClass([\n  Autowired(\"rowRenderer\")\n], MenuService.prototype, \"rowRenderer\", 2);\n__decorateClass([\n  Optional(\"columnChooserFactory\")\n], MenuService.prototype, \"columnChooserFactory\", 2);\n__decorateClass([\n  Optional(\"contextMenuFactory\")\n], MenuService.prototype, \"contextMenuFactory\", 2);\n__decorateClass([\n  Optional(\"enterpriseMenuFactory\")\n], MenuService.prototype, \"enterpriseMenuFactory\", 2);\n__decorateClass([\n  PostConstruct\n], MenuService.prototype, \"postConstruct\", 1);\nMenuService = __decorateClass([\n  Bean(\"menuService\")\n], MenuService);\n\n// community-modules/core/src/rendering/autoWidthCalculator.ts\nvar AutoWidthCalculator = class extends BeanStub {\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.centerRowContainerCtrl = p.center;\n    });\n  }\n  // this is the trick: we create a dummy container and clone all the cells\n  // into the dummy, then check the dummy's width. then destroy the dummy\n  // as we don't need it any more.\n  // drawback: only the cells visible on the screen are considered\n  getPreferredWidthForColumn(column, skipHeader) {\n    const eHeaderCell = this.getHeaderCellForColumn(column);\n    if (!eHeaderCell) {\n      return -1;\n    }\n    const elements = this.rowRenderer.getAllCellsForColumn(column);\n    if (!skipHeader) {\n      elements.push(eHeaderCell);\n    }\n    return this.addElementsToContainerAndGetWidth(elements);\n  }\n  getPreferredWidthForColumnGroup(columnGroup) {\n    const eHeaderCell = this.getHeaderCellForColumn(columnGroup);\n    if (!eHeaderCell) {\n      return -1;\n    }\n    return this.addElementsToContainerAndGetWidth([eHeaderCell]);\n  }\n  addElementsToContainerAndGetWidth(elements) {\n    const eDummyContainer = document.createElement(\"form\");\n    eDummyContainer.style.position = \"fixed\";\n    const eBodyContainer = this.centerRowContainerCtrl.getContainerElement();\n    elements.forEach((el) => this.cloneItemIntoDummy(el, eDummyContainer));\n    eBodyContainer.appendChild(eDummyContainer);\n    const dummyContainerWidth = eDummyContainer.offsetWidth;\n    eBodyContainer.removeChild(eDummyContainer);\n    const autoSizePadding = this.getAutoSizePadding();\n    return dummyContainerWidth + autoSizePadding;\n  }\n  getAutoSizePadding() {\n    return this.gos.get(\"autoSizePadding\");\n  }\n  getHeaderCellForColumn(column) {\n    let element = null;\n    this.ctrlsService.getHeaderRowContainerCtrls().forEach(\n      (container) => {\n        const res = container.getHtmlElementForColumnHeader(column);\n        if (res != null) {\n          element = res;\n        }\n      }\n    );\n    return element;\n  }\n  cloneItemIntoDummy(eCell, eDummyContainer) {\n    const eCellClone = eCell.cloneNode(true);\n    eCellClone.style.width = \"\";\n    eCellClone.style.position = \"static\";\n    eCellClone.style.left = \"\";\n    const eCloneParent = document.createElement(\"div\");\n    const eCloneParentClassList = eCloneParent.classList;\n    const isHeader = [\"ag-header-cell\", \"ag-header-group-cell\"].some(\n      (cls) => eCellClone.classList.contains(cls)\n    );\n    if (isHeader) {\n      eCloneParentClassList.add(\"ag-header\", \"ag-header-row\");\n      eCloneParent.style.position = \"static\";\n    } else {\n      eCloneParentClassList.add(\"ag-row\");\n    }\n    let pointer = eCell.parentElement;\n    while (pointer) {\n      const isRow = [\"ag-header-row\", \"ag-row\"].some(\n        (cls) => pointer.classList.contains(cls)\n      );\n      if (isRow) {\n        for (let i = 0; i < pointer.classList.length; i++) {\n          const item = pointer.classList[i];\n          if (item != \"ag-row-position-absolute\") {\n            eCloneParentClassList.add(item);\n          }\n        }\n        break;\n      }\n      pointer = pointer.parentElement;\n    }\n    eCloneParent.appendChild(eCellClone);\n    eDummyContainer.appendChild(eCloneParent);\n  }\n};\n__decorateClass([\n  Autowired(\"rowRenderer\")\n], AutoWidthCalculator.prototype, \"rowRenderer\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], AutoWidthCalculator.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"rowCssClassCalculator\")\n], AutoWidthCalculator.prototype, \"rowCssClassCalculator\", 2);\n__decorateClass([\n  PostConstruct\n], AutoWidthCalculator.prototype, \"postConstruct\", 1);\nAutoWidthCalculator = __decorateClass([\n  Bean(\"autoWidthCalculator\")\n], AutoWidthCalculator);\n\n// community-modules/core/src/rendering/features/stickyRowFeature.ts\nvar StickyRowFeature = class extends BeanStub {\n  constructor(createRowCon, destroyRowCtrls) {\n    super();\n    this.createRowCon = createRowCon;\n    this.destroyRowCtrls = destroyRowCtrls;\n    this.stickyTopRowCtrls = [];\n    this.stickyBottomRowCtrls = [];\n    this.topContainerHeight = 0;\n    this.bottomContainerHeight = 0;\n  }\n  postConstruct() {\n    this.isClientSide = this.rowModel.getType() === \"clientSide\";\n    this.ctrlsService.whenReady((params) => {\n      this.gridBodyCtrl = params.gridBodyCtrl;\n    });\n  }\n  getStickyTopRowCtrls() {\n    return this.stickyTopRowCtrls;\n  }\n  getStickyBottomRowCtrls() {\n    return this.stickyBottomRowCtrls;\n  }\n  /**\n   * Get the last pixel of the group, this pixel is used to push the sticky node up out of the viewport.\n   */\n  getLastPixelOfGroup(row) {\n    return this.isClientSide ? this.getClientSideLastPixelOfGroup(row) : this.getServerSideLastPixelOfGroup(row);\n  }\n  /**\n   * Get the first pixel of the group, this pixel is used to push the sticky node down out of the viewport\n   */\n  getFirstPixelOfGroup(row) {\n    if (row.footer) {\n      return row.sibling.rowTop + row.sibling.rowHeight - 1;\n    }\n    if (row.hasChildren()) {\n      return row.rowTop - 1;\n    }\n    return 0;\n  }\n  getServerSideLastPixelOfGroup(row) {\n    var _a, _b, _c, _d;\n    if (this.isClientSide) {\n      throw new Error(\"This func should only be called in server side row model.\");\n    }\n    if (row.isExpandable() || row.footer) {\n      if (row.master) {\n        return row.detailNode.rowTop + row.detailNode.rowHeight;\n      }\n      const noOrContiguousSiblings = !row.sibling || Math.abs(row.sibling.rowIndex - row.rowIndex) === 1;\n      if (noOrContiguousSiblings) {\n        let storeBounds = (_a = row.childStore) == null ? void 0 : _a.getStoreBounds();\n        if (row.footer) {\n          storeBounds = (_b = row.sibling.childStore) == null ? void 0 : _b.getStoreBounds();\n        }\n        return ((_c = storeBounds == null ? void 0 : storeBounds.heightPx) != null ? _c : 0) + ((_d = storeBounds == null ? void 0 : storeBounds.topPx) != null ? _d : 0);\n      }\n      if (row.footer) {\n        return row.rowTop + row.rowHeight;\n      }\n      return row.sibling.rowTop + row.sibling.rowHeight;\n    }\n    return Number.MAX_SAFE_INTEGER;\n  }\n  getClientSideLastPixelOfGroup(row) {\n    if (!this.isClientSide) {\n      throw new Error(\"This func should only be called in client side row model.\");\n    }\n    if (row.isExpandable() || row.footer) {\n      const grandTotalAtTop = row.footer && row.rowIndex === 0;\n      const noOrContiguousSiblings = !row.sibling || Math.abs(row.sibling.rowIndex - row.rowIndex) === 1;\n      if (grandTotalAtTop || noOrContiguousSiblings) {\n        let lastAncestor = row.footer ? row.sibling : row;\n        while (lastAncestor.isExpandable() && lastAncestor.expanded) {\n          if (lastAncestor.master) {\n            lastAncestor = lastAncestor.detailNode;\n          } else if (lastAncestor.childrenAfterSort) {\n            if (lastAncestor.childrenAfterSort.length === 0) {\n              break;\n            }\n            lastAncestor = last(lastAncestor.childrenAfterSort);\n          }\n        }\n        return lastAncestor.rowTop + lastAncestor.rowHeight;\n      }\n      if (row.footer) {\n        return row.rowTop + row.rowHeight;\n      }\n      return row.sibling.rowTop + row.sibling.rowHeight;\n    }\n    return Number.MAX_SAFE_INTEGER;\n  }\n  updateStickyRows(container) {\n    const isTop = container === \"top\";\n    let newStickyContainerHeight = 0;\n    if (!this.canRowsBeSticky()) {\n      return this.refreshNodesAndContainerHeight(container, /* @__PURE__ */ new Set(), newStickyContainerHeight);\n    }\n    const pixelAtContainerBoundary = isTop ? this.rowRenderer.getFirstVisibleVerticalPixel() : this.rowRenderer.getLastVisibleVerticalPixel();\n    const newStickyRows = /* @__PURE__ */ new Set();\n    const addStickyRow = (stickyRow) => {\n      newStickyRows.add(stickyRow);\n      if (isTop) {\n        const lastChildBottom = this.getLastPixelOfGroup(stickyRow);\n        const stickRowBottom = pixelAtContainerBoundary + newStickyContainerHeight + stickyRow.rowHeight;\n        if (lastChildBottom < stickRowBottom) {\n          stickyRow.stickyRowTop = newStickyContainerHeight + (lastChildBottom - stickRowBottom);\n        } else {\n          stickyRow.stickyRowTop = newStickyContainerHeight;\n        }\n      } else {\n        const lastChildBottom = this.getFirstPixelOfGroup(stickyRow);\n        const stickRowTop = pixelAtContainerBoundary - (newStickyContainerHeight + stickyRow.rowHeight);\n        if (lastChildBottom > stickRowTop) {\n          stickyRow.stickyRowTop = newStickyContainerHeight - (lastChildBottom - stickRowTop);\n        } else {\n          stickyRow.stickyRowTop = newStickyContainerHeight;\n        }\n      }\n      newStickyContainerHeight = 0;\n      newStickyRows.forEach((rowNode) => {\n        const thisRowLastPx = rowNode.stickyRowTop + rowNode.rowHeight;\n        if (newStickyContainerHeight < thisRowLastPx) {\n          newStickyContainerHeight = thisRowLastPx;\n        }\n      });\n    };\n    const suppressFootersSticky = this.areFooterRowsStickySuppressed();\n    const suppressGroupsSticky = this.gos.get(\"suppressGroupRowsSticky\");\n    const isRowSticky = (row) => {\n      if (!row.displayed) {\n        return false;\n      }\n      if (row.footer) {\n        if (suppressFootersSticky === true) {\n          return false;\n        }\n        if (suppressFootersSticky === \"grand\" && row.level === -1) {\n          return false;\n        }\n        ;\n        if (suppressFootersSticky === \"group\" && row.level > -1) {\n          return false;\n        }\n        ;\n        const alreadySticking = newStickyRows.has(row);\n        return !alreadySticking;\n      }\n      if (row.isExpandable()) {\n        if (suppressGroupsSticky === true) {\n          return false;\n        }\n        ;\n        const alreadySticking = newStickyRows.has(row);\n        return !alreadySticking && row.expanded;\n      }\n      return false;\n    };\n    for (let i = 0; i < 100; i++) {\n      let firstPixelAfterStickyRows = pixelAtContainerBoundary + newStickyContainerHeight;\n      if (!isTop) {\n        firstPixelAfterStickyRows = pixelAtContainerBoundary - newStickyContainerHeight;\n      }\n      const firstIndex = this.rowModel.getRowIndexAtPixel(firstPixelAfterStickyRows);\n      const firstRow = this.rowModel.getRow(firstIndex);\n      if (firstRow == null) {\n        break;\n      }\n      const ancestors = this.getStickyAncestors(firstRow);\n      const firstMissingParent = ancestors.find(\n        (parent) => (isTop ? parent.rowIndex < firstIndex : parent.rowIndex > firstIndex) && isRowSticky(parent)\n      );\n      if (firstMissingParent) {\n        addStickyRow(firstMissingParent);\n        continue;\n      }\n      const isFirstRowOutsideViewport = isTop ? firstRow.rowTop < firstPixelAfterStickyRows : firstRow.rowTop + firstRow.rowHeight > firstPixelAfterStickyRows;\n      if (isFirstRowOutsideViewport && isRowSticky(firstRow)) {\n        addStickyRow(firstRow);\n        continue;\n      }\n      break;\n    }\n    if (!isTop) {\n      newStickyRows.forEach((rowNode) => {\n        rowNode.stickyRowTop = newStickyContainerHeight - (rowNode.stickyRowTop + rowNode.rowHeight);\n      });\n    }\n    return this.refreshNodesAndContainerHeight(container, newStickyRows, newStickyContainerHeight);\n  }\n  areFooterRowsStickySuppressed() {\n    const suppressFootersSticky = this.gos.get(\"suppressStickyTotalRow\");\n    if (suppressFootersSticky === true) {\n      return true;\n    }\n    const suppressGroupRows = !!this.gos.get(\"groupIncludeFooter\") || suppressFootersSticky === \"group\";\n    const suppressGrandRows = !!this.gos.get(\"groupIncludeTotalFooter\") || suppressFootersSticky === \"grand\";\n    if (suppressGroupRows && suppressGrandRows) {\n      return true;\n    }\n    if (suppressGrandRows) {\n      return \"grand\";\n    }\n    if (suppressGroupRows) {\n      return \"group\";\n    }\n    return false;\n  }\n  canRowsBeSticky() {\n    const isStickyEnabled = this.gos.isGroupRowsSticky();\n    const suppressFootersSticky = this.areFooterRowsStickySuppressed();\n    const suppressGroupsSticky = this.gos.get(\"suppressGroupRowsSticky\");\n    return isStickyEnabled && (!suppressFootersSticky || !suppressGroupsSticky);\n  }\n  getStickyAncestors(rowNode) {\n    const ancestors = [];\n    let p = rowNode.footer ? rowNode.sibling : rowNode.parent;\n    while (p) {\n      if (p.sibling) {\n        ancestors.push(p.sibling);\n      }\n      ancestors.push(p);\n      p = p.parent;\n    }\n    return ancestors.reverse();\n  }\n  checkStickyRows() {\n    const hasTopUpdated = this.updateStickyRows(\"top\");\n    const hasBottomUpdated = this.updateStickyRows(\"bottom\");\n    return hasTopUpdated || hasBottomUpdated;\n  }\n  destroyStickyCtrls() {\n    this.refreshNodesAndContainerHeight(\"top\", /* @__PURE__ */ new Set(), 0);\n    this.refreshNodesAndContainerHeight(\"bottom\", /* @__PURE__ */ new Set(), 0);\n  }\n  refreshStickyNode(stickRowNode) {\n    const allStickyNodes = /* @__PURE__ */ new Set();\n    if (this.stickyTopRowCtrls.some((ctrl) => ctrl.getRowNode() === stickRowNode)) {\n      for (let i = 0; i < this.stickyTopRowCtrls.length; i++) {\n        const currentNode = this.stickyTopRowCtrls[i].getRowNode();\n        if (currentNode !== stickRowNode) {\n          allStickyNodes.add(currentNode);\n        }\n      }\n      if (this.refreshNodesAndContainerHeight(\"top\", allStickyNodes, this.topContainerHeight)) {\n        this.checkStickyRows();\n      }\n      return;\n    }\n    for (let i = 0; i < this.stickyBottomRowCtrls.length; i++) {\n      const currentNode = this.stickyBottomRowCtrls[i].getRowNode();\n      if (currentNode !== stickRowNode) {\n        allStickyNodes.add(currentNode);\n      }\n    }\n    if (this.refreshNodesAndContainerHeight(\"bottom\", allStickyNodes, this.bottomContainerHeight)) {\n      this.checkStickyRows();\n    }\n  }\n  /**\n   * Destroy old ctrls and create new ctrls where necessary.\n   */\n  refreshNodesAndContainerHeight(container, newStickyNodes, height) {\n    const isTop = container === \"top\";\n    const previousCtrls = isTop ? this.stickyTopRowCtrls : this.stickyBottomRowCtrls;\n    const removedCtrlsMap = {};\n    const remainingCtrls = [];\n    for (let i = 0; i < previousCtrls.length; i++) {\n      const node = previousCtrls[i].getRowNode();\n      const hasBeenRemoved = !newStickyNodes.has(node);\n      if (hasBeenRemoved) {\n        removedCtrlsMap[node.id] = previousCtrls[i];\n        node.sticky = false;\n        continue;\n      }\n      remainingCtrls.push(previousCtrls[i]);\n    }\n    const existingNodes = /* @__PURE__ */ new Set();\n    for (let i = 0; i < remainingCtrls.length; i++) {\n      existingNodes.add(remainingCtrls[i].getRowNode());\n    }\n    const newCtrls = [];\n    newStickyNodes.forEach((node) => {\n      if (existingNodes.has(node)) {\n        return;\n      }\n      node.sticky = true;\n      newCtrls.push(this.createRowCon(node, false, false));\n    });\n    let hasSomethingChanged = !!newCtrls.length || remainingCtrls.length !== previousCtrls.length;\n    if (isTop) {\n      if (this.topContainerHeight !== height) {\n        this.topContainerHeight = height;\n        this.gridBodyCtrl.setStickyTopHeight(height);\n        hasSomethingChanged = true;\n      }\n    } else {\n      if (this.bottomContainerHeight !== height) {\n        this.bottomContainerHeight = height;\n        this.gridBodyCtrl.setStickyBottomHeight(height);\n        hasSomethingChanged = true;\n      }\n    }\n    this.destroyRowCtrls(removedCtrlsMap, false);\n    const newCtrlsList = [...remainingCtrls, ...newCtrls];\n    newCtrlsList.sort((a, b) => b.getRowNode().rowIndex - a.getRowNode().rowIndex);\n    if (!isTop) {\n      newCtrlsList.reverse();\n    }\n    newCtrlsList.forEach((ctrl) => ctrl.setRowTop(ctrl.getRowNode().stickyRowTop));\n    if (!hasSomethingChanged) {\n      return false;\n    }\n    if (isTop) {\n      this.stickyTopRowCtrls = newCtrlsList;\n    } else {\n      this.stickyBottomRowCtrls = newCtrlsList;\n    }\n    return true;\n  }\n};\n__decorateClass([\n  Autowired(\"rowModel\")\n], StickyRowFeature.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"rowRenderer\")\n], StickyRowFeature.prototype, \"rowRenderer\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], StickyRowFeature.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  PostConstruct\n], StickyRowFeature.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/rendering/rowRenderer.ts\nvar RowRenderer = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.destroyFuncsForColumnListeners = [];\n    // map of row ids to row objects. keeps track of which elements\n    // are rendered for which rows in the dom.\n    this.rowCtrlsByRowIndex = {};\n    this.zombieRowCtrls = {};\n    this.allRowCtrls = [];\n    this.topRowCtrls = [];\n    this.bottomRowCtrls = [];\n    // we only allow one refresh at a time, otherwise the internal memory structure here\n    // will get messed up. this can happen if the user has a cellRenderer, and inside the\n    // renderer they call an API method that results in another pass of the refresh,\n    // then it will be trying to draw rows in the middle of a refresh.\n    this.refreshInProgress = false;\n    this.dataFirstRenderedFired = false;\n    this.setupRangeSelectionListeners = () => {\n      const onRangeSelectionChanged = () => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onRangeSelectionChanged());\n      };\n      const onColumnMovedPinnedVisible = () => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.updateRangeBordersIfRangeCount());\n      };\n      const addRangeSelectionListeners = () => {\n        this.eventService.addEventListener(Events.EVENT_RANGE_SELECTION_CHANGED, onRangeSelectionChanged);\n        this.eventService.addEventListener(Events.EVENT_COLUMN_MOVED, onColumnMovedPinnedVisible);\n        this.eventService.addEventListener(Events.EVENT_COLUMN_PINNED, onColumnMovedPinnedVisible);\n        this.eventService.addEventListener(Events.EVENT_COLUMN_VISIBLE, onColumnMovedPinnedVisible);\n      };\n      const removeRangeSelectionListeners = () => {\n        this.eventService.removeEventListener(Events.EVENT_RANGE_SELECTION_CHANGED, onRangeSelectionChanged);\n        this.eventService.removeEventListener(Events.EVENT_COLUMN_MOVED, onColumnMovedPinnedVisible);\n        this.eventService.removeEventListener(Events.EVENT_COLUMN_PINNED, onColumnMovedPinnedVisible);\n        this.eventService.removeEventListener(Events.EVENT_COLUMN_VISIBLE, onColumnMovedPinnedVisible);\n      };\n      this.addDestroyFunc(() => removeRangeSelectionListeners());\n      this.addManagedPropertyListener(\"enableRangeSelection\", (params) => {\n        const isEnabled = params.currentValue;\n        if (isEnabled) {\n          addRangeSelectionListeners();\n        } else {\n          removeRangeSelectionListeners();\n        }\n      });\n      const rangeSelectionEnabled = this.gos.get(\"enableRangeSelection\");\n      if (rangeSelectionEnabled) {\n        addRangeSelectionListeners();\n      }\n    };\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n      this.initialise();\n    });\n  }\n  initialise() {\n    this.addManagedListener(this.eventService, Events.EVENT_PAGINATION_CHANGED, this.onPageLoaded.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_PINNED_ROW_DATA_CHANGED, this.onPinnedRowDataChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_BODY_SCROLL, this.onBodyScroll.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_BODY_HEIGHT_CHANGED, this.redraw.bind(this));\n    this.addManagedPropertyListeners([\"domLayout\", \"embedFullWidthRows\"], () => this.onDomLayoutChanged());\n    this.addManagedPropertyListeners([\"suppressMaxRenderedRowRestriction\", \"rowBuffer\"], () => this.redraw());\n    this.addManagedPropertyListeners([\n      \"suppressCellFocus\",\n      \"getBusinessKeyForNode\",\n      \"fullWidthCellRenderer\",\n      \"fullWidthCellRendererParams\",\n      \"rowStyle\",\n      \"getRowStyle\",\n      \"rowClass\",\n      \"getRowClass\",\n      \"rowClassRules\",\n      \"suppressStickyTotalRow\",\n      \"groupRowRenderer\",\n      \"groupRowRendererParams\",\n      // maybe only needs to refresh FW rows...\n      \"loadingCellRenderer\",\n      \"loadingCellRendererParams\",\n      \"detailCellRenderer\",\n      \"detailCellRendererParams\",\n      \"enableRangeSelection\",\n      \"enableCellTextSelection\"\n    ], () => this.redrawRows());\n    if (this.gos.isGroupRowsSticky()) {\n      const rowModelType = this.rowModel.getType();\n      if (rowModelType === \"clientSide\" || rowModelType === \"serverSide\") {\n        this.stickyRowFeature = this.createManagedBean(new StickyRowFeature(\n          this.createRowCon.bind(this),\n          this.destroyRowCtrls.bind(this)\n        ));\n      }\n    }\n    this.registerCellEventListeners();\n    this.initialiseCache();\n    this.printLayout = this.gos.isDomLayout(\"print\");\n    this.embedFullWidthRows = this.printLayout || this.gos.get(\"embedFullWidthRows\");\n    this.redrawAfterModelUpdate();\n  }\n  initialiseCache() {\n    if (this.gos.get(\"keepDetailRows\")) {\n      const countProp = this.getKeepDetailRowsCount();\n      const count = countProp != null ? countProp : 3;\n      this.cachedRowCtrls = new RowCtrlCache(count);\n    }\n  }\n  getKeepDetailRowsCount() {\n    return this.gos.get(\"keepDetailRowsCount\");\n  }\n  getStickyTopRowCtrls() {\n    if (!this.stickyRowFeature) {\n      return [];\n    }\n    return this.stickyRowFeature.getStickyTopRowCtrls();\n  }\n  getStickyBottomRowCtrls() {\n    if (!this.stickyRowFeature) {\n      return [];\n    }\n    return this.stickyRowFeature.getStickyBottomRowCtrls();\n  }\n  updateAllRowCtrls() {\n    const liveList = getAllValuesInObject(this.rowCtrlsByRowIndex);\n    const zombieList = getAllValuesInObject(this.zombieRowCtrls);\n    const cachedList = this.cachedRowCtrls ? this.cachedRowCtrls.getEntries() : [];\n    if (zombieList.length > 0 || cachedList.length > 0) {\n      this.allRowCtrls = [...liveList, ...zombieList, ...cachedList];\n    } else {\n      this.allRowCtrls = liveList;\n    }\n  }\n  onCellFocusChanged(event) {\n    this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onCellFocused(event));\n    this.getFullWidthRowCtrls().forEach((rowCtrl) => rowCtrl.onFullWidthRowFocused(event));\n  }\n  // in a clean design, each cell would register for each of these events. however when scrolling, all the cells\n  // registering and de-registering for events is a performance bottleneck. so we register here once and inform\n  // all active cells.\n  registerCellEventListeners() {\n    this.addManagedListener(this.eventService, Events.EVENT_CELL_FOCUSED, (event) => {\n      this.onCellFocusChanged(event);\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_CELL_FOCUS_CLEARED, () => {\n      this.onCellFocusChanged();\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_FLASH_CELLS, (event) => {\n      this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onFlashCells(event));\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_HOVER_CHANGED, () => {\n      this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onColumnHover());\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, () => {\n      this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onDisplayedColumnsChanged());\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, () => {\n      if (this.printLayout) {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onLeftChanged());\n      }\n    });\n    this.setupRangeSelectionListeners();\n    this.refreshListenersToColumnsForCellComps();\n    this.addManagedListener(this.eventService, Events.EVENT_GRID_COLUMNS_CHANGED, this.refreshListenersToColumnsForCellComps.bind(this));\n    this.addDestroyFunc(this.removeGridColumnListeners.bind(this));\n  }\n  // executes all functions in destroyFuncsForColumnListeners and then clears the list\n  removeGridColumnListeners() {\n    this.destroyFuncsForColumnListeners.forEach((func) => func());\n    this.destroyFuncsForColumnListeners.length = 0;\n  }\n  // this function adds listeners onto all the grid columns, which are the column that we could have cellComps for.\n  // when the grid columns change, we add listeners again. in an ideal design, each CellComp would just register to\n  // the column it belongs to on creation, however this was a bottleneck with the number of cells, so do it here\n  // once instead.\n  refreshListenersToColumnsForCellComps() {\n    this.removeGridColumnListeners();\n    const cols = this.columnModel.getAllGridColumns();\n    cols.forEach((col) => {\n      const forEachCellWithThisCol = (callback) => {\n        this.getAllCellCtrls().forEach((cellCtrl) => {\n          if (cellCtrl.getColumn() === col) {\n            callback(cellCtrl);\n          }\n        });\n      };\n      const leftChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onLeftChanged());\n      };\n      const widthChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onWidthChanged());\n      };\n      const firstRightPinnedChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onFirstRightPinnedChanged());\n      };\n      const lastLeftPinnedChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onLastLeftPinnedChanged());\n      };\n      const colDefChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onColDefChanged());\n      };\n      col.addEventListener(\"leftChanged\", leftChangedListener);\n      col.addEventListener(\"widthChanged\", widthChangedListener);\n      col.addEventListener(\"firstRightPinnedChanged\", firstRightPinnedChangedListener);\n      col.addEventListener(\"lastLeftPinnedChanged\", lastLeftPinnedChangedListener);\n      col.addEventListener(\"colDefChanged\", colDefChangedListener);\n      this.destroyFuncsForColumnListeners.push(() => {\n        col.removeEventListener(\"leftChanged\", leftChangedListener);\n        col.removeEventListener(\"widthChanged\", widthChangedListener);\n        col.removeEventListener(\"firstRightPinnedChanged\", firstRightPinnedChangedListener);\n        col.removeEventListener(\"lastLeftPinnedChanged\", lastLeftPinnedChangedListener);\n        col.removeEventListener(\"colDefChanged\", colDefChangedListener);\n      });\n    });\n  }\n  onDomLayoutChanged() {\n    const printLayout = this.gos.isDomLayout(\"print\");\n    const embedFullWidthRows = printLayout || this.gos.get(\"embedFullWidthRows\");\n    const destroyRows = embedFullWidthRows !== this.embedFullWidthRows || this.printLayout !== printLayout;\n    this.printLayout = printLayout;\n    this.embedFullWidthRows = embedFullWidthRows;\n    if (destroyRows) {\n      this.redrawAfterModelUpdate({ domLayoutChanged: true });\n    }\n  }\n  // for row models that have datasources, when we update the datasource, we need to force the rowRenderer\n  // to redraw all rows. otherwise the old rows from the old datasource will stay displayed.\n  datasourceChanged() {\n    this.firstRenderedRow = 0;\n    this.lastRenderedRow = -1;\n    const rowIndexesToRemove = Object.keys(this.rowCtrlsByRowIndex);\n    this.removeRowCtrls(rowIndexesToRemove);\n  }\n  onPageLoaded(event) {\n    const params = {\n      recycleRows: event.keepRenderedRows,\n      animate: event.animate,\n      newData: event.newData,\n      newPage: event.newPage,\n      // because this is a model updated event (not pinned rows), we\n      // can skip updating the pinned rows. this is needed so that if user\n      // is doing transaction updates, the pinned rows are not getting constantly\n      // trashed - or editing cells in pinned rows are not refreshed and put into read mode\n      onlyBody: true\n    };\n    this.redrawAfterModelUpdate(params);\n  }\n  getAllCellsForColumn(column) {\n    const res = [];\n    this.getAllRowCtrls().forEach((rowCtrl) => {\n      const eCell = rowCtrl.getCellElement(column);\n      if (eCell) {\n        res.push(eCell);\n      }\n    });\n    return res;\n  }\n  refreshFloatingRowComps() {\n    this.refreshFloatingRows(\n      this.topRowCtrls,\n      this.pinnedRowModel.getPinnedTopRowData()\n    );\n    this.refreshFloatingRows(\n      this.bottomRowCtrls,\n      this.pinnedRowModel.getPinnedBottomRowData()\n    );\n  }\n  getTopRowCtrls() {\n    return this.topRowCtrls;\n  }\n  getCentreRowCtrls() {\n    return this.allRowCtrls;\n  }\n  getBottomRowCtrls() {\n    return this.bottomRowCtrls;\n  }\n  refreshFloatingRows(rowComps, rowNodes) {\n    rowComps.forEach((row) => {\n      row.destroyFirstPass();\n      row.destroySecondPass();\n    });\n    rowComps.length = 0;\n    if (!rowNodes) {\n      return;\n    }\n    rowNodes.forEach((rowNode) => {\n      const rowCtrl = new RowCtrl(\n        rowNode,\n        this.beans,\n        false,\n        false,\n        this.printLayout\n      );\n      rowComps.push(rowCtrl);\n    });\n  }\n  onPinnedRowDataChanged() {\n    const params = {\n      recycleRows: true\n    };\n    this.redrawAfterModelUpdate(params);\n  }\n  redrawRow(rowNode, suppressEvent = false) {\n    var _a;\n    if (rowNode.sticky) {\n      this.stickyRowFeature.refreshStickyNode(rowNode);\n    } else if ((_a = this.cachedRowCtrls) == null ? void 0 : _a.has(rowNode)) {\n      this.cachedRowCtrls.removeRow(rowNode);\n      return;\n    } else {\n      const destroyAndRecreateCtrl = (dataStruct) => {\n        const ctrl = dataStruct[rowNode.rowIndex];\n        if (!ctrl) {\n          return;\n        }\n        if (ctrl.getRowNode() !== rowNode) {\n          return;\n        }\n        ctrl.destroyFirstPass();\n        ctrl.destroySecondPass();\n        dataStruct[rowNode.rowIndex] = this.createRowCon(rowNode, false, false);\n      };\n      switch (rowNode.rowPinned) {\n        case \"top\":\n          destroyAndRecreateCtrl(this.topRowCtrls);\n          break;\n        case \"bottom\":\n          destroyAndRecreateCtrl(this.bottomRowCtrls);\n          break;\n        default:\n          destroyAndRecreateCtrl(this.rowCtrlsByRowIndex);\n          this.updateAllRowCtrls();\n      }\n    }\n    if (!suppressEvent) {\n      this.dispatchDisplayedRowsChanged(false);\n    }\n  }\n  redrawRows(rowNodes) {\n    const partialRefresh = rowNodes != null;\n    if (partialRefresh) {\n      rowNodes == null ? void 0 : rowNodes.forEach((node) => this.redrawRow(node, true));\n      this.dispatchDisplayedRowsChanged(false);\n      return;\n    }\n    this.redrawAfterModelUpdate();\n  }\n  getCellToRestoreFocusToAfterRefresh(params) {\n    const focusedCell = (params == null ? void 0 : params.suppressKeepFocus) ? null : this.focusService.getFocusCellToUseAfterRefresh();\n    if (focusedCell == null) {\n      return null;\n    }\n    const activeElement = this.gos.getActiveDomElement();\n    const cellDomData = this.gos.getDomData(activeElement, CellCtrl.DOM_DATA_KEY_CELL_CTRL);\n    const rowDomData = this.gos.getDomData(activeElement, RowCtrl.DOM_DATA_KEY_ROW_CTRL);\n    const gridElementFocused = cellDomData || rowDomData;\n    return gridElementFocused ? focusedCell : null;\n  }\n  // gets called from:\n  // +) initialisation (in registerGridComp) params = null\n  // +) onDomLayoutChanged, params = null\n  // +) onPageLoaded, recycleRows, animate, newData, newPage from event, onlyBody=true\n  // +) onPinnedRowDataChanged, recycleRows = true\n  // +) redrawRows (from Grid API), recycleRows = true/false\n  redrawAfterModelUpdate(params = {}) {\n    this.getLockOnRefresh();\n    const focusedCell = this.getCellToRestoreFocusToAfterRefresh(params);\n    this.updateContainerHeights();\n    this.scrollToTopIfNewData(params);\n    const recycleRows = !params.domLayoutChanged && !!params.recycleRows;\n    const animate = params.animate && this.gos.isAnimateRows();\n    const rowsToRecycle = recycleRows ? this.getRowsToRecycle() : null;\n    if (!recycleRows) {\n      this.removeAllRowComps();\n    }\n    this.workOutFirstAndLastRowsToRender();\n    if (this.stickyRowFeature) {\n      this.stickyRowFeature.checkStickyRows();\n    }\n    this.recycleRows(rowsToRecycle, animate);\n    this.gridBodyCtrl.updateRowCount();\n    if (!params.onlyBody) {\n      this.refreshFloatingRowComps();\n    }\n    this.dispatchDisplayedRowsChanged();\n    if (focusedCell != null) {\n      this.restoreFocusedCell(focusedCell);\n    }\n    this.releaseLockOnRefresh();\n  }\n  scrollToTopIfNewData(params) {\n    const scrollToTop = params.newData || params.newPage;\n    const suppressScrollToTop = this.gos.get(\"suppressScrollOnNewData\");\n    if (scrollToTop && !suppressScrollToTop) {\n      this.gridBodyCtrl.getScrollFeature().scrollToTop();\n    }\n  }\n  updateContainerHeights() {\n    if (this.printLayout) {\n      this.rowContainerHeightService.setModelHeight(null);\n      return;\n    }\n    let containerHeight = this.paginationProxy.getCurrentPageHeight();\n    if (containerHeight === 0) {\n      containerHeight = 1;\n    }\n    this.rowContainerHeightService.setModelHeight(containerHeight);\n  }\n  getLockOnRefresh() {\n    if (this.refreshInProgress) {\n      throw new Error(\n        \"AG Grid: cannot get grid to draw rows when it is in the middle of drawing rows. Your code probably called a grid API method while the grid was in the render stage. To overcome this, put the API call into a timeout, e.g. instead of api.redrawRows(), call setTimeout(function() { api.redrawRows(); }, 0). To see what part of your code that caused the refresh check this stacktrace.\"\n      );\n    }\n    this.refreshInProgress = true;\n  }\n  releaseLockOnRefresh() {\n    this.refreshInProgress = false;\n  }\n  isRefreshInProgress() {\n    return this.refreshInProgress;\n  }\n  // sets the focus to the provided cell, if the cell is provided. this way, the user can call refresh without\n  // worry about the focus been lost. this is important when the user is using keyboard navigation to do edits\n  // and the cellEditor is calling 'refresh' to get other cells to update (as other cells might depend on the\n  // edited cell).\n  restoreFocusedCell(cellPosition) {\n    if (cellPosition) {\n      this.focusService.setRestoreFocusedCell(cellPosition);\n      this.onCellFocusChanged(this.beans.gos.addGridCommonParams({\n        rowIndex: cellPosition.rowIndex,\n        column: cellPosition.column,\n        rowPinned: cellPosition.rowPinned,\n        forceBrowserFocus: true,\n        preventScrollOnBrowserFocus: true,\n        type: \"mock\"\n      }));\n    }\n  }\n  stopEditing(cancel = false) {\n    this.getAllRowCtrls().forEach((rowCtrl) => {\n      rowCtrl.stopEditing(cancel);\n    });\n  }\n  getAllCellCtrls() {\n    const res = [];\n    const rowCtrls = this.getAllRowCtrls();\n    const rowCtrlsLength = rowCtrls.length;\n    for (let i = 0; i < rowCtrlsLength; i++) {\n      const cellCtrls = rowCtrls[i].getAllCellCtrls();\n      const cellCtrlsLength = cellCtrls.length;\n      for (let j = 0; j < cellCtrlsLength; j++) {\n        res.push(cellCtrls[j]);\n      }\n    }\n    return res;\n  }\n  getAllRowCtrls() {\n    const stickyTopRowCtrls = this.stickyRowFeature && this.stickyRowFeature.getStickyTopRowCtrls() || [];\n    const stickyBottomRowCtrls = this.stickyRowFeature && this.stickyRowFeature.getStickyBottomRowCtrls() || [];\n    const res = [...this.topRowCtrls, ...this.bottomRowCtrls, ...stickyTopRowCtrls, ...stickyBottomRowCtrls];\n    for (const key in this.rowCtrlsByRowIndex) {\n      res.push(this.rowCtrlsByRowIndex[key]);\n    }\n    return res;\n  }\n  addRenderedRowListener(eventName, rowIndex, callback) {\n    const rowComp = this.rowCtrlsByRowIndex[rowIndex];\n    if (rowComp) {\n      rowComp.addEventListener(eventName, callback);\n    }\n  }\n  flashCells(params = {}) {\n    this.getCellCtrls(params.rowNodes, params.columns).forEach((cellCtrl) => cellCtrl.flashCell(params));\n  }\n  refreshCells(params = {}) {\n    const refreshCellParams = {\n      forceRefresh: params.force,\n      newData: false,\n      suppressFlash: params.suppressFlash\n    };\n    this.getCellCtrls(params.rowNodes, params.columns).forEach((cellCtrl) => cellCtrl.refreshOrDestroyCell(refreshCellParams));\n    if (params.rowNodes) {\n      this.getRowCtrls(params.rowNodes).forEach((rowCtrl) => {\n        if (!rowCtrl.isFullWidth()) {\n          return;\n        }\n        const refreshed = rowCtrl.refreshFullWidth();\n        if (!refreshed) {\n          this.redrawRow(rowCtrl.getRowNode(), true);\n        }\n      });\n      this.dispatchDisplayedRowsChanged(false);\n    }\n  }\n  getCellRendererInstances(params) {\n    var _a;\n    const cellRenderers = this.getCellCtrls(params.rowNodes, params.columns).map((cellCtrl) => cellCtrl.getCellRenderer()).filter((renderer) => renderer != null);\n    if ((_a = params.columns) == null ? void 0 : _a.length) {\n      return cellRenderers;\n    }\n    const fullWidthRenderers = [];\n    const rowIdMap = this.mapRowNodes(params.rowNodes);\n    this.getAllRowCtrls().forEach((rowCtrl) => {\n      if (rowIdMap && !this.isRowInMap(rowCtrl.getRowNode(), rowIdMap)) {\n        return;\n      }\n      if (!rowCtrl.isFullWidth()) {\n        return;\n      }\n      const renderers = rowCtrl.getFullWidthCellRenderers();\n      for (let i = 0; i < renderers.length; i++) {\n        const renderer = renderers[i];\n        if (renderer != null) {\n          fullWidthRenderers.push(renderer);\n        }\n      }\n    });\n    return [...fullWidthRenderers, ...cellRenderers];\n  }\n  getCellEditorInstances(params) {\n    const res = [];\n    this.getCellCtrls(params.rowNodes, params.columns).forEach((cellCtrl) => {\n      const cellEditor = cellCtrl.getCellEditor();\n      if (cellEditor) {\n        res.push(cellEditor);\n      }\n    });\n    return res;\n  }\n  getEditingCells() {\n    const res = [];\n    this.getAllCellCtrls().forEach((cellCtrl) => {\n      if (cellCtrl.isEditing()) {\n        const cellPosition = cellCtrl.getCellPosition();\n        res.push(cellPosition);\n      }\n    });\n    return res;\n  }\n  mapRowNodes(rowNodes) {\n    if (!rowNodes) {\n      return;\n    }\n    const res = {\n      top: {},\n      bottom: {},\n      normal: {}\n    };\n    rowNodes.forEach((rowNode) => {\n      const id = rowNode.id;\n      switch (rowNode.rowPinned) {\n        case \"top\":\n          res.top[id] = rowNode;\n          break;\n        case \"bottom\":\n          res.bottom[id] = rowNode;\n          break;\n        default:\n          res.normal[id] = rowNode;\n          break;\n      }\n    });\n    return res;\n  }\n  isRowInMap(rowNode, rowIdsMap) {\n    const id = rowNode.id;\n    const floating = rowNode.rowPinned;\n    switch (floating) {\n      case \"top\":\n        return rowIdsMap.top[id] != null;\n      case \"bottom\":\n        return rowIdsMap.bottom[id] != null;\n      default:\n        return rowIdsMap.normal[id] != null;\n    }\n  }\n  /**\n   * @param rowNodes if provided, returns the RowCtrls for the provided rowNodes. otherwise returns all RowCtrls.\n   */\n  getRowCtrls(rowNodes) {\n    const rowIdsMap = this.mapRowNodes(rowNodes);\n    const allRowCtrls = this.getAllRowCtrls();\n    if (!rowNodes || !rowIdsMap) {\n      return allRowCtrls;\n    }\n    return allRowCtrls.filter((rowCtrl) => {\n      const rowNode = rowCtrl.getRowNode();\n      return this.isRowInMap(rowNode, rowIdsMap);\n    });\n  }\n  // returns CellCtrl's that match the provided rowNodes and columns. eg if one row node\n  // and two columns provided, that identifies 4 cells, so 4 CellCtrl's returned.\n  getCellCtrls(rowNodes, columns) {\n    let colIdsMap;\n    if (exists(columns)) {\n      colIdsMap = {};\n      columns.forEach((colKey) => {\n        const column = this.columnModel.getGridColumn(colKey);\n        if (exists(column)) {\n          colIdsMap[column.getId()] = true;\n        }\n      });\n    }\n    const res = [];\n    this.getRowCtrls(rowNodes).forEach((rowCtrl) => {\n      rowCtrl.getAllCellCtrls().forEach((cellCtrl) => {\n        const colId = cellCtrl.getColumn().getId();\n        const excludeColFromRefresh = colIdsMap && !colIdsMap[colId];\n        if (excludeColFromRefresh) {\n          return;\n        }\n        res.push(cellCtrl);\n      });\n    });\n    return res;\n  }\n  destroy() {\n    this.removeAllRowComps();\n    super.destroy();\n  }\n  removeAllRowComps() {\n    const rowIndexesToRemove = Object.keys(this.rowCtrlsByRowIndex);\n    this.removeRowCtrls(rowIndexesToRemove);\n    if (this.stickyRowFeature) {\n      this.stickyRowFeature.destroyStickyCtrls();\n    }\n  }\n  getRowsToRecycle() {\n    const stubNodeIndexes = [];\n    iterateObject(this.rowCtrlsByRowIndex, (index, rowCtrl) => {\n      const stubNode = rowCtrl.getRowNode().id == null;\n      if (stubNode) {\n        stubNodeIndexes.push(index);\n      }\n    });\n    this.removeRowCtrls(stubNodeIndexes);\n    const ctrlsByIdMap = {};\n    iterateObject(this.rowCtrlsByRowIndex, (index, rowCtrl) => {\n      const rowNode = rowCtrl.getRowNode();\n      ctrlsByIdMap[rowNode.id] = rowCtrl;\n    });\n    this.rowCtrlsByRowIndex = {};\n    return ctrlsByIdMap;\n  }\n  // takes array of row indexes\n  removeRowCtrls(rowsToRemove, suppressAnimation = false) {\n    rowsToRemove.forEach((indexToRemove) => {\n      const rowCtrl = this.rowCtrlsByRowIndex[indexToRemove];\n      if (rowCtrl) {\n        rowCtrl.destroyFirstPass(suppressAnimation);\n        rowCtrl.destroySecondPass();\n      }\n      delete this.rowCtrlsByRowIndex[indexToRemove];\n    });\n  }\n  onBodyScroll(e) {\n    if (e.direction !== \"vertical\") {\n      return;\n    }\n    this.redraw({ afterScroll: true });\n  }\n  // gets called when rows don't change, but viewport does, so after:\n  // 1) height of grid body changes, ie number of displayed rows has changed\n  // 2) grid scrolled to new position\n  // 3) ensure index visible (which is a scroll)\n  redraw(params = {}) {\n    const { afterScroll } = params;\n    let cellFocused;\n    if (this.stickyRowFeature && browserSupportsPreventScroll()) {\n      cellFocused = this.getCellToRestoreFocusToAfterRefresh() || void 0;\n    }\n    const oldFirstRow = this.firstRenderedRow;\n    const oldLastRow = this.lastRenderedRow;\n    this.workOutFirstAndLastRowsToRender();\n    let hasStickyRowChanges = false;\n    if (this.stickyRowFeature) {\n      hasStickyRowChanges = this.stickyRowFeature.checkStickyRows();\n    }\n    const rangeChanged = this.firstRenderedRow !== oldFirstRow || this.lastRenderedRow !== oldLastRow;\n    if (afterScroll && !hasStickyRowChanges && !rangeChanged) {\n      return;\n    }\n    this.getLockOnRefresh();\n    this.recycleRows(null, false, afterScroll);\n    this.releaseLockOnRefresh();\n    this.dispatchDisplayedRowsChanged(afterScroll && !hasStickyRowChanges);\n    if (cellFocused != null) {\n      const newFocusedCell = this.getCellToRestoreFocusToAfterRefresh();\n      if (cellFocused != null && newFocusedCell == null) {\n        this.animationFrameService.flushAllFrames();\n        this.restoreFocusedCell(cellFocused);\n      }\n    }\n  }\n  removeRowCompsNotToDraw(indexesToDraw, suppressAnimation) {\n    const indexesToDrawMap = {};\n    indexesToDraw.forEach((index) => indexesToDrawMap[index] = true);\n    const existingIndexes = Object.keys(this.rowCtrlsByRowIndex);\n    const indexesNotToDraw = existingIndexes.filter((index) => !indexesToDrawMap[index]);\n    this.removeRowCtrls(indexesNotToDraw, suppressAnimation);\n  }\n  calculateIndexesToDraw(rowsToRecycle) {\n    let indexesToDraw = createArrayOfNumbers(this.firstRenderedRow, this.lastRenderedRow);\n    const checkRowToDraw = (indexStr, rowComp) => {\n      const index = rowComp.getRowNode().rowIndex;\n      if (index == null) {\n        return;\n      }\n      if (index < this.firstRenderedRow || index > this.lastRenderedRow) {\n        if (this.doNotUnVirtualiseRow(rowComp)) {\n          indexesToDraw.push(index);\n        }\n      }\n    };\n    iterateObject(this.rowCtrlsByRowIndex, checkRowToDraw);\n    iterateObject(rowsToRecycle, checkRowToDraw);\n    indexesToDraw.sort((a, b) => a - b);\n    const ret = [];\n    for (let i = 0; i < indexesToDraw.length; i++) {\n      const currRow = indexesToDraw[i];\n      const rowNode = this.paginationProxy.getRow(currRow);\n      if (rowNode && !rowNode.sticky) {\n        ret.push(currRow);\n      }\n    }\n    return ret;\n  }\n  recycleRows(rowsToRecycle, animate = false, afterScroll = false) {\n    const indexesToDraw = this.calculateIndexesToDraw(rowsToRecycle);\n    if (this.printLayout || afterScroll) {\n      animate = false;\n    }\n    this.removeRowCompsNotToDraw(indexesToDraw, !animate);\n    const rowCtrls = [];\n    indexesToDraw.forEach((rowIndex) => {\n      const rowCtrl = this.createOrUpdateRowCtrl(rowIndex, rowsToRecycle, animate, afterScroll);\n      if (exists(rowCtrl)) {\n        rowCtrls.push(rowCtrl);\n      }\n    });\n    if (rowsToRecycle) {\n      const useAnimationFrame = afterScroll && !this.gos.get(\"suppressAnimationFrame\") && !this.printLayout;\n      if (useAnimationFrame) {\n        this.beans.animationFrameService.addDestroyTask(() => {\n          this.destroyRowCtrls(rowsToRecycle, animate);\n          this.updateAllRowCtrls();\n          this.dispatchDisplayedRowsChanged();\n        });\n      } else {\n        this.destroyRowCtrls(rowsToRecycle, animate);\n      }\n    }\n    this.updateAllRowCtrls();\n  }\n  dispatchDisplayedRowsChanged(afterScroll = false) {\n    const event = { type: Events.EVENT_DISPLAYED_ROWS_CHANGED, afterScroll };\n    this.eventService.dispatchEvent(event);\n  }\n  onDisplayedColumnsChanged() {\n    const pinningLeft = this.columnModel.isPinningLeft();\n    const pinningRight = this.columnModel.isPinningRight();\n    const atLeastOneChanged = this.pinningLeft !== pinningLeft || pinningRight !== this.pinningRight;\n    if (atLeastOneChanged) {\n      this.pinningLeft = pinningLeft;\n      this.pinningRight = pinningRight;\n      if (this.embedFullWidthRows) {\n        this.redrawFullWidthEmbeddedRows();\n      }\n    }\n  }\n  // when embedding, what gets showed in each section depends on what is pinned. eg if embedding group expand / collapse,\n  // then it should go into the pinned left area if pinning left, or the center area if not pinning.\n  redrawFullWidthEmbeddedRows() {\n    const rowsToRemove = [];\n    this.getFullWidthRowCtrls().forEach((fullWidthCtrl) => {\n      const rowIndex = fullWidthCtrl.getRowNode().rowIndex;\n      rowsToRemove.push(rowIndex.toString());\n    });\n    this.refreshFloatingRowComps();\n    this.removeRowCtrls(rowsToRemove);\n    this.redraw({ afterScroll: true });\n  }\n  getFullWidthRowCtrls(rowNodes) {\n    const rowNodesMap = this.mapRowNodes(rowNodes);\n    return this.getAllRowCtrls().filter((rowCtrl) => {\n      if (!rowCtrl.isFullWidth()) {\n        return false;\n      }\n      const rowNode = rowCtrl.getRowNode();\n      if (rowNodesMap != null && !this.isRowInMap(rowNode, rowNodesMap)) {\n        return false;\n      }\n      return true;\n    });\n  }\n  createOrUpdateRowCtrl(rowIndex, rowsToRecycle, animate, afterScroll) {\n    let rowNode;\n    let rowCtrl = this.rowCtrlsByRowIndex[rowIndex];\n    if (!rowCtrl) {\n      rowNode = this.paginationProxy.getRow(rowIndex);\n      if (exists(rowNode) && exists(rowsToRecycle) && rowsToRecycle[rowNode.id] && rowNode.alreadyRendered) {\n        rowCtrl = rowsToRecycle[rowNode.id];\n        rowsToRecycle[rowNode.id] = null;\n      }\n    }\n    const creatingNewRowCtrl = !rowCtrl;\n    if (creatingNewRowCtrl) {\n      if (!rowNode) {\n        rowNode = this.paginationProxy.getRow(rowIndex);\n      }\n      if (exists(rowNode)) {\n        rowCtrl = this.createRowCon(rowNode, animate, afterScroll);\n      } else {\n        return;\n      }\n    }\n    if (rowNode) {\n      rowNode.alreadyRendered = true;\n    }\n    this.rowCtrlsByRowIndex[rowIndex] = rowCtrl;\n    return rowCtrl;\n  }\n  destroyRowCtrls(rowCtrlsMap, animate) {\n    const executeInAWhileFuncs = [];\n    iterateObject(rowCtrlsMap, (nodeId, rowCtrl) => {\n      if (!rowCtrl) {\n        return;\n      }\n      if (this.cachedRowCtrls && rowCtrl.isCacheable()) {\n        this.cachedRowCtrls.addRow(rowCtrl);\n        return;\n      }\n      rowCtrl.destroyFirstPass(!animate);\n      if (animate) {\n        this.zombieRowCtrls[rowCtrl.getInstanceId()] = rowCtrl;\n        executeInAWhileFuncs.push(() => {\n          rowCtrl.destroySecondPass();\n          delete this.zombieRowCtrls[rowCtrl.getInstanceId()];\n        });\n      } else {\n        rowCtrl.destroySecondPass();\n      }\n    });\n    if (animate) {\n      executeInAWhileFuncs.push(() => {\n        this.updateAllRowCtrls();\n        this.dispatchDisplayedRowsChanged();\n      });\n      executeInAWhile(executeInAWhileFuncs);\n    }\n  }\n  getRowBuffer() {\n    return this.gos.get(\"rowBuffer\");\n  }\n  getRowBufferInPixels() {\n    const rowsToBuffer = this.getRowBuffer();\n    const defaultRowHeight = this.gos.getRowHeightAsNumber();\n    return rowsToBuffer * defaultRowHeight;\n  }\n  workOutFirstAndLastRowsToRender() {\n    this.rowContainerHeightService.updateOffset();\n    let newFirst;\n    let newLast;\n    if (!this.paginationProxy.isRowsToRender()) {\n      newFirst = 0;\n      newLast = -1;\n    } else if (this.printLayout) {\n      this.environment.refreshRowHeightVariable();\n      newFirst = this.paginationProxy.getPageFirstRow();\n      newLast = this.paginationProxy.getPageLastRow();\n    } else {\n      const bufferPixels = this.getRowBufferInPixels();\n      const gridBodyCtrl = this.ctrlsService.getGridBodyCtrl();\n      const suppressRowVirtualisation = this.gos.get(\"suppressRowVirtualisation\");\n      let rowHeightsChanged = false;\n      let firstPixel;\n      let lastPixel;\n      do {\n        const paginationOffset = this.paginationProxy.getPixelOffset();\n        const { pageFirstPixel, pageLastPixel } = this.paginationProxy.getCurrentPagePixelRange();\n        const divStretchOffset = this.rowContainerHeightService.getDivStretchOffset();\n        const bodyVRange = gridBodyCtrl.getScrollFeature().getVScrollPosition();\n        const bodyTopPixel = bodyVRange.top;\n        const bodyBottomPixel = bodyVRange.bottom;\n        if (suppressRowVirtualisation) {\n          firstPixel = pageFirstPixel + divStretchOffset;\n          lastPixel = pageLastPixel + divStretchOffset;\n        } else {\n          firstPixel = Math.max(bodyTopPixel + paginationOffset - bufferPixels, pageFirstPixel) + divStretchOffset;\n          lastPixel = Math.min(bodyBottomPixel + paginationOffset + bufferPixels, pageLastPixel) + divStretchOffset;\n        }\n        this.firstVisibleVPixel = Math.max(bodyTopPixel + paginationOffset, pageFirstPixel) + divStretchOffset;\n        this.lastVisibleVPixel = Math.min(bodyBottomPixel + paginationOffset, pageLastPixel) + divStretchOffset;\n        rowHeightsChanged = this.ensureAllRowsInRangeHaveHeightsCalculated(firstPixel, lastPixel);\n      } while (rowHeightsChanged);\n      let firstRowIndex = this.paginationProxy.getRowIndexAtPixel(firstPixel);\n      let lastRowIndex = this.paginationProxy.getRowIndexAtPixel(lastPixel);\n      const pageFirstRow = this.paginationProxy.getPageFirstRow();\n      const pageLastRow = this.paginationProxy.getPageLastRow();\n      if (firstRowIndex < pageFirstRow) {\n        firstRowIndex = pageFirstRow;\n      }\n      if (lastRowIndex > pageLastRow) {\n        lastRowIndex = pageLastRow;\n      }\n      newFirst = firstRowIndex;\n      newLast = lastRowIndex;\n    }\n    const rowLayoutNormal = this.gos.isDomLayout(\"normal\");\n    const suppressRowCountRestriction = this.gos.get(\"suppressMaxRenderedRowRestriction\");\n    const rowBufferMaxSize = Math.max(this.getRowBuffer(), 500);\n    if (rowLayoutNormal && !suppressRowCountRestriction) {\n      if (newLast - newFirst > rowBufferMaxSize) {\n        newLast = newFirst + rowBufferMaxSize;\n      }\n    }\n    const firstDiffers = newFirst !== this.firstRenderedRow;\n    const lastDiffers = newLast !== this.lastRenderedRow;\n    if (firstDiffers || lastDiffers) {\n      this.firstRenderedRow = newFirst;\n      this.lastRenderedRow = newLast;\n      const event = {\n        type: Events.EVENT_VIEWPORT_CHANGED,\n        firstRow: newFirst,\n        lastRow: newLast\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  /**\n   * This event will only be fired once, and is queued until after the browser next renders.\n   * This allows us to fire an event during the start of the render cycle, when we first see data being rendered\n   * but not execute the event until all of the data has finished being rendered to the dom.\n   */\n  dispatchFirstDataRenderedEvent() {\n    if (this.dataFirstRenderedFired) {\n      return;\n    }\n    this.dataFirstRenderedFired = true;\n    const event = {\n      type: Events.EVENT_FIRST_DATA_RENDERED,\n      firstRow: this.firstRenderedRow,\n      lastRow: this.lastRenderedRow\n    };\n    window.requestAnimationFrame(() => {\n      this.beans.eventService.dispatchEvent(event);\n    });\n  }\n  ensureAllRowsInRangeHaveHeightsCalculated(topPixel, bottomPixel) {\n    const res = this.paginationProxy.ensureRowHeightsValid(topPixel, bottomPixel, -1, -1);\n    if (res) {\n      this.updateContainerHeights();\n    }\n    return res;\n  }\n  getFirstVisibleVerticalPixel() {\n    return this.firstVisibleVPixel;\n  }\n  getLastVisibleVerticalPixel() {\n    return this.lastVisibleVPixel;\n  }\n  getFirstVirtualRenderedRow() {\n    return this.firstRenderedRow;\n  }\n  getLastVirtualRenderedRow() {\n    return this.lastRenderedRow;\n  }\n  // check that none of the rows to remove are editing or focused as:\n  // a) if editing, we want to keep them, otherwise the user will loose the context of the edit,\n  //    eg user starts editing, enters some text, then scrolls down and then up, next time row rendered\n  //    the edit is reset - so we want to keep it rendered.\n  // b) if focused, we want ot keep keyboard focus, so if user ctrl+c, it goes to clipboard,\n  //    otherwise the user can range select and drag (with focus cell going out of the viewport)\n  //    and then ctrl+c, nothing will happen if cell is removed from dom.\n  // c) if detail record of master detail, as users complained that the context of detail rows\n  //    was getting lost when detail row out of view. eg user expands to show detail row,\n  //    then manipulates the detail panel (eg sorts the detail grid), then context is lost\n  //    after detail panel is scrolled out of / into view.\n  doNotUnVirtualiseRow(rowComp) {\n    const REMOVE_ROW = false;\n    const KEEP_ROW = true;\n    const rowNode = rowComp.getRowNode();\n    const rowHasFocus = this.focusService.isRowNodeFocused(rowNode);\n    const rowIsEditing = rowComp.isEditing();\n    const rowIsDetail = rowNode.detail;\n    const mightWantToKeepRow = rowHasFocus || rowIsEditing || rowIsDetail;\n    if (!mightWantToKeepRow) {\n      return REMOVE_ROW;\n    }\n    const rowNodePresent = this.paginationProxy.isRowPresent(rowNode);\n    return rowNodePresent ? KEEP_ROW : REMOVE_ROW;\n  }\n  createRowCon(rowNode, animate, afterScroll) {\n    const rowCtrlFromCache = this.cachedRowCtrls ? this.cachedRowCtrls.getRow(rowNode) : null;\n    if (rowCtrlFromCache) {\n      return rowCtrlFromCache;\n    }\n    const suppressAnimationFrame = this.gos.get(\"suppressAnimationFrame\");\n    const useAnimationFrameForCreate = afterScroll && !suppressAnimationFrame && !this.printLayout;\n    const res = new RowCtrl(\n      rowNode,\n      this.beans,\n      animate,\n      useAnimationFrameForCreate,\n      this.printLayout\n    );\n    return res;\n  }\n  getRenderedNodes() {\n    const renderedRows = this.rowCtrlsByRowIndex;\n    return Object.values(renderedRows).map((rowCtrl) => rowCtrl.getRowNode());\n  }\n  getRowByPosition(rowPosition) {\n    let rowCtrl;\n    const { rowIndex } = rowPosition;\n    switch (rowPosition.rowPinned) {\n      case \"top\":\n        rowCtrl = this.topRowCtrls[rowIndex];\n        break;\n      case \"bottom\":\n        rowCtrl = this.bottomRowCtrls[rowIndex];\n        break;\n      default:\n        rowCtrl = this.rowCtrlsByRowIndex[rowIndex];\n        if (!rowCtrl) {\n          rowCtrl = this.getStickyTopRowCtrls().find((ctrl) => ctrl.getRowNode().rowIndex === rowIndex) || null;\n          if (!rowCtrl) {\n            rowCtrl = this.getStickyBottomRowCtrls().find((ctrl) => ctrl.getRowNode().rowIndex === rowIndex) || null;\n          }\n        }\n        break;\n    }\n    return rowCtrl;\n  }\n  // returns true if any row between startIndex and endIndex is rendered. used by\n  // SSRM or IRM, as they don't want to purge visible blocks from cache.\n  isRangeInRenderedViewport(startIndex, endIndex) {\n    const parentClosed = startIndex == null || endIndex == null;\n    if (parentClosed) {\n      return false;\n    }\n    const blockAfterViewport = startIndex > this.lastRenderedRow;\n    const blockBeforeViewport = endIndex < this.firstRenderedRow;\n    const blockInsideViewport = !blockBeforeViewport && !blockAfterViewport;\n    return blockInsideViewport;\n  }\n};\n__decorateClass([\n  Autowired(\"animationFrameService\")\n], RowRenderer.prototype, \"animationFrameService\", 2);\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], RowRenderer.prototype, \"paginationProxy\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], RowRenderer.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"pinnedRowModel\")\n], RowRenderer.prototype, \"pinnedRowModel\", 2);\n__decorateClass([\n  Autowired(\"rowModel\")\n], RowRenderer.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"focusService\")\n], RowRenderer.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"beans\")\n], RowRenderer.prototype, \"beans\", 2);\n__decorateClass([\n  Autowired(\"rowContainerHeightService\")\n], RowRenderer.prototype, \"rowContainerHeightService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], RowRenderer.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  PostConstruct\n], RowRenderer.prototype, \"postConstruct\", 1);\nRowRenderer = __decorateClass([\n  Bean(\"rowRenderer\")\n], RowRenderer);\nvar RowCtrlCache = class {\n  constructor(maxCount) {\n    // map for fast access\n    this.entriesMap = {};\n    // list for keeping order\n    this.entriesList = [];\n    this.maxCount = maxCount;\n  }\n  addRow(rowCtrl) {\n    this.entriesMap[rowCtrl.getRowNode().id] = rowCtrl;\n    this.entriesList.push(rowCtrl);\n    rowCtrl.setCached(true);\n    if (this.entriesList.length > this.maxCount) {\n      const rowCtrlToDestroy = this.entriesList[0];\n      rowCtrlToDestroy.destroyFirstPass();\n      rowCtrlToDestroy.destroySecondPass();\n      this.removeFromCache(rowCtrlToDestroy);\n    }\n  }\n  getRow(rowNode) {\n    if (rowNode == null || rowNode.id == null) {\n      return null;\n    }\n    const res = this.entriesMap[rowNode.id];\n    if (!res) {\n      return null;\n    }\n    this.removeFromCache(res);\n    res.setCached(false);\n    const rowNodeMismatch = res.getRowNode() != rowNode;\n    return rowNodeMismatch ? null : res;\n  }\n  has(rowNode) {\n    return this.entriesMap[rowNode.id] != null;\n  }\n  removeRow(rowNode) {\n    const rowNodeId = rowNode.id;\n    const ctrl = this.entriesMap[rowNodeId];\n    delete this.entriesMap[rowNodeId];\n    removeFromArray(this.entriesList, ctrl);\n  }\n  removeFromCache(rowCtrl) {\n    const rowNodeId = rowCtrl.getRowNode().id;\n    delete this.entriesMap[rowNodeId];\n    removeFromArray(this.entriesList, rowCtrl);\n  }\n  getEntries() {\n    return this.entriesList;\n  }\n};\n\n// community-modules/core/src/pinnedRowModel/pinnedRowModel.ts\nvar PinnedRowModel = class extends BeanStub {\n  init() {\n    this.setPinnedTopRowData();\n    this.setPinnedBottomRowData();\n    this.addManagedPropertyListener(\"pinnedTopRowData\", () => this.setPinnedTopRowData());\n    this.addManagedPropertyListener(\"pinnedBottomRowData\", () => this.setPinnedBottomRowData());\n  }\n  isEmpty(floating) {\n    const rows = floating === \"top\" ? this.pinnedTopRows : this.pinnedBottomRows;\n    return missingOrEmpty(rows);\n  }\n  isRowsToRender(floating) {\n    return !this.isEmpty(floating);\n  }\n  getRowAtPixel(pixel, floating) {\n    const rows = floating === \"top\" ? this.pinnedTopRows : this.pinnedBottomRows;\n    if (missingOrEmpty(rows)) {\n      return 0;\n    }\n    for (let i = 0; i < rows.length; i++) {\n      const rowNode = rows[i];\n      const rowTopPixel = rowNode.rowTop + rowNode.rowHeight - 1;\n      if (rowTopPixel >= pixel) {\n        return i;\n      }\n    }\n    return rows.length - 1;\n  }\n  setPinnedTopRowData() {\n    const rowData = this.gos.get(\"pinnedTopRowData\");\n    this.pinnedTopRows = this.createNodesFromData(rowData, true);\n    const event = {\n      type: Events.EVENT_PINNED_ROW_DATA_CHANGED\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  setPinnedBottomRowData() {\n    const rowData = this.gos.get(\"pinnedBottomRowData\");\n    this.pinnedBottomRows = this.createNodesFromData(rowData, false);\n    const event = {\n      type: Events.EVENT_PINNED_ROW_DATA_CHANGED\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  createNodesFromData(allData, isTop) {\n    const rowNodes = [];\n    if (allData) {\n      let nextRowTop = 0;\n      allData.forEach((dataItem, index) => {\n        const rowNode = new RowNode(this.beans);\n        rowNode.data = dataItem;\n        const idPrefix = isTop ? RowNode.ID_PREFIX_TOP_PINNED : RowNode.ID_PREFIX_BOTTOM_PINNED;\n        rowNode.id = idPrefix + index;\n        rowNode.rowPinned = isTop ? \"top\" : \"bottom\";\n        rowNode.setRowTop(nextRowTop);\n        rowNode.setRowHeight(this.gos.getRowHeightForNode(rowNode).height);\n        rowNode.setRowIndex(index);\n        nextRowTop += rowNode.rowHeight;\n        rowNodes.push(rowNode);\n      });\n    }\n    return rowNodes;\n  }\n  getPinnedTopRowData() {\n    return this.pinnedTopRows;\n  }\n  getPinnedBottomRowData() {\n    return this.pinnedBottomRows;\n  }\n  getPinnedTopTotalHeight() {\n    return this.getTotalHeight(this.pinnedTopRows);\n  }\n  getPinnedTopRowCount() {\n    return this.pinnedTopRows ? this.pinnedTopRows.length : 0;\n  }\n  getPinnedBottomRowCount() {\n    return this.pinnedBottomRows ? this.pinnedBottomRows.length : 0;\n  }\n  getPinnedTopRow(index) {\n    return this.pinnedTopRows[index];\n  }\n  getPinnedBottomRow(index) {\n    return this.pinnedBottomRows[index];\n  }\n  forEachPinnedTopRow(callback) {\n    if (missingOrEmpty(this.pinnedTopRows)) {\n      return;\n    }\n    this.pinnedTopRows.forEach(callback);\n  }\n  forEachPinnedBottomRow(callback) {\n    if (missingOrEmpty(this.pinnedBottomRows)) {\n      return;\n    }\n    this.pinnedBottomRows.forEach(callback);\n  }\n  getPinnedBottomTotalHeight() {\n    return this.getTotalHeight(this.pinnedBottomRows);\n  }\n  getTotalHeight(rowNodes) {\n    if (!rowNodes || rowNodes.length === 0) {\n      return 0;\n    }\n    const lastNode = last(rowNodes);\n    return lastNode.rowTop + lastNode.rowHeight;\n  }\n};\n__decorateClass([\n  Autowired(\"beans\")\n], PinnedRowModel.prototype, \"beans\", 2);\n__decorateClass([\n  PostConstruct\n], PinnedRowModel.prototype, \"init\", 1);\nPinnedRowModel = __decorateClass([\n  Bean(\"pinnedRowModel\")\n], PinnedRowModel);\n\n// community-modules/core/src/interfaces/serverSideTransaction.ts\nvar ServerSideTransactionResultStatus = /* @__PURE__ */ ((ServerSideTransactionResultStatus2) => {\n  ServerSideTransactionResultStatus2[\"Applied\"] = \"Applied\";\n  ServerSideTransactionResultStatus2[\"StoreNotFound\"] = \"StoreNotFound\";\n  ServerSideTransactionResultStatus2[\"StoreLoading\"] = \"StoreLoading\";\n  ServerSideTransactionResultStatus2[\"StoreWaitingToLoad\"] = \"StoreWaitingToLoad\";\n  ServerSideTransactionResultStatus2[\"StoreLoadingFailed\"] = \"StoreLoadingFailed\";\n  ServerSideTransactionResultStatus2[\"StoreWrongType\"] = \"StoreWrongType\";\n  ServerSideTransactionResultStatus2[\"Cancelled\"] = \"Cancelled\";\n  ServerSideTransactionResultStatus2[\"StoreNotStarted\"] = \"StoreNotStarted\";\n  return ServerSideTransactionResultStatus2;\n})(ServerSideTransactionResultStatus || {});\n\n// community-modules/core/src/utils/changedPath.ts\nvar ChangedPath = class {\n  constructor(keepingColumns, rootNode) {\n    // whether changed path is active of not. it is active when a) doing\n    // a transaction update or b) doing change detection. if we are doing\n    // a CSRM refresh for other reasons (after sort or filter, or user calling\n    // setRowData() without delta mode) then we are not active. we are also\n    // marked as not active if secondary columns change in pivot (as this impacts\n    // aggregations)\n    this.active = true;\n    // for each node in the change path, we also store which columns need\n    // to be re-aggregated.\n    this.nodeIdsToColumns = {};\n    // for quick lookup, all items in the change path are mapped by nodeId\n    this.mapToItems = {};\n    this.keepingColumns = keepingColumns;\n    this.pathRoot = {\n      rowNode: rootNode,\n      children: null\n    };\n    this.mapToItems[rootNode.id] = this.pathRoot;\n  }\n  // can be set inactive by:\n  // a) ClientSideRowModel, if no transactions or\n  // b) PivotService, if secondary columns changed\n  setInactive() {\n    this.active = false;\n  }\n  isActive() {\n    return this.active;\n  }\n  depthFirstSearchChangedPath(pathItem, callback) {\n    if (pathItem.children) {\n      for (let i = 0; i < pathItem.children.length; i++) {\n        this.depthFirstSearchChangedPath(pathItem.children[i], callback);\n      }\n    }\n    callback(pathItem.rowNode);\n  }\n  depthFirstSearchEverything(rowNode, callback, traverseEverything) {\n    if (rowNode.childrenAfterGroup) {\n      for (let i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n        const childNode = rowNode.childrenAfterGroup[i];\n        if (childNode.childrenAfterGroup) {\n          this.depthFirstSearchEverything(rowNode.childrenAfterGroup[i], callback, traverseEverything);\n        } else if (traverseEverything) {\n          callback(childNode);\n        }\n      }\n    }\n    callback(rowNode);\n  }\n  // traverseLeafNodes -> used when NOT doing changed path, ie traversing everything. the callback\n  // will be called for child nodes in addition to parent nodes.\n  forEachChangedNodeDepthFirst(callback, traverseLeafNodes = false, includeUnchangedNodes = false) {\n    if (this.active && !includeUnchangedNodes) {\n      this.depthFirstSearchChangedPath(this.pathRoot, callback);\n    } else {\n      this.depthFirstSearchEverything(this.pathRoot.rowNode, callback, traverseLeafNodes);\n    }\n  }\n  executeFromRootNode(callback) {\n    callback(this.pathRoot.rowNode);\n  }\n  createPathItems(rowNode) {\n    let pointer = rowNode;\n    let newEntryCount = 0;\n    while (!this.mapToItems[pointer.id]) {\n      const newEntry = {\n        rowNode: pointer,\n        children: null\n      };\n      this.mapToItems[pointer.id] = newEntry;\n      newEntryCount++;\n      pointer = pointer.parent;\n    }\n    return newEntryCount;\n  }\n  populateColumnsMap(rowNode, columns) {\n    if (!this.keepingColumns || !columns) {\n      return;\n    }\n    let pointer = rowNode;\n    while (pointer) {\n      if (!this.nodeIdsToColumns[pointer.id]) {\n        this.nodeIdsToColumns[pointer.id] = {};\n      }\n      columns.forEach((col) => this.nodeIdsToColumns[pointer.id][col.getId()] = true);\n      pointer = pointer.parent;\n    }\n  }\n  linkPathItems(rowNode, newEntryCount) {\n    let pointer = rowNode;\n    for (let i = 0; i < newEntryCount; i++) {\n      const thisItem = this.mapToItems[pointer.id];\n      const parentItem = this.mapToItems[pointer.parent.id];\n      if (!parentItem.children) {\n        parentItem.children = [];\n      }\n      parentItem.children.push(thisItem);\n      pointer = pointer.parent;\n    }\n  }\n  // called by\n  // 1) change detection (provides cols) and\n  // 2) groupStage if doing transaction update (doesn't provide cols)\n  addParentNode(rowNode, columns) {\n    if (!rowNode || rowNode.isRowPinned()) {\n      return;\n    }\n    const newEntryCount = this.createPathItems(rowNode);\n    this.linkPathItems(rowNode, newEntryCount);\n    this.populateColumnsMap(rowNode, columns);\n  }\n  canSkip(rowNode) {\n    return this.active && !this.mapToItems[rowNode.id];\n  }\n  getValueColumnsForNode(rowNode, valueColumns) {\n    if (!this.keepingColumns) {\n      return valueColumns;\n    }\n    const colsForThisNode = this.nodeIdsToColumns[rowNode.id];\n    const result = valueColumns.filter((col) => colsForThisNode[col.getId()]);\n    return result;\n  }\n  getNotValueColumnsForNode(rowNode, valueColumns) {\n    if (!this.keepingColumns) {\n      return null;\n    }\n    const colsForThisNode = this.nodeIdsToColumns[rowNode.id];\n    const result = valueColumns.filter((col) => !colsForThisNode[col.getId()]);\n    return result;\n  }\n};\n\n// community-modules/core/src/rowNodeCache/rowNodeBlock.ts\nvar _RowNodeBlock = class _RowNodeBlock extends BeanStub {\n  constructor(id) {\n    super();\n    this.state = _RowNodeBlock.STATE_WAITING_TO_LOAD;\n    this.version = 0;\n    this.id = id;\n  }\n  getId() {\n    return this.id;\n  }\n  load() {\n    this.state = _RowNodeBlock.STATE_LOADING;\n    this.loadFromDatasource();\n  }\n  getVersion() {\n    return this.version;\n  }\n  setStateWaitingToLoad() {\n    this.version++;\n    this.state = _RowNodeBlock.STATE_WAITING_TO_LOAD;\n  }\n  getState() {\n    return this.state;\n  }\n  pageLoadFailed(version) {\n    const requestMostRecentAndLive = this.isRequestMostRecentAndLive(version);\n    if (requestMostRecentAndLive) {\n      this.state = _RowNodeBlock.STATE_FAILED;\n      this.processServerFail();\n    }\n    this.dispatchLoadCompleted(false);\n  }\n  success(version, params) {\n    this.successCommon(version, params);\n  }\n  pageLoaded(version, rows, lastRow) {\n    this.successCommon(version, { rowData: rows, rowCount: lastRow });\n  }\n  isRequestMostRecentAndLive(version) {\n    const thisIsMostRecentRequest = version === this.version;\n    const weAreNotDestroyed = this.isAlive();\n    return thisIsMostRecentRequest && weAreNotDestroyed;\n  }\n  successCommon(version, params) {\n    this.dispatchLoadCompleted();\n    const requestMostRecentAndLive = this.isRequestMostRecentAndLive(version);\n    if (requestMostRecentAndLive) {\n      this.state = _RowNodeBlock.STATE_LOADED;\n      this.processServerResult(params);\n    }\n  }\n  dispatchLoadCompleted(success = true) {\n    const event = {\n      type: _RowNodeBlock.EVENT_LOAD_COMPLETE,\n      success,\n      block: this\n    };\n    this.dispatchEvent(event);\n  }\n};\n_RowNodeBlock.EVENT_LOAD_COMPLETE = \"loadComplete\";\n_RowNodeBlock.STATE_WAITING_TO_LOAD = \"needsLoading\";\n_RowNodeBlock.STATE_LOADING = \"loading\";\n_RowNodeBlock.STATE_LOADED = \"loaded\";\n_RowNodeBlock.STATE_FAILED = \"failed\";\nvar RowNodeBlock = _RowNodeBlock;\n\n// community-modules/core/src/rowNodeCache/rowNodeBlockLoader.ts\nvar RowNodeBlockLoader = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.activeBlockLoadsCount = 0;\n    this.blocks = [];\n    this.active = true;\n  }\n  postConstruct() {\n    this.maxConcurrentRequests = this.getMaxConcurrentDatasourceRequests();\n    const blockLoadDebounceMillis = this.gos.get(\"blockLoadDebounceMillis\");\n    if (blockLoadDebounceMillis && blockLoadDebounceMillis > 0) {\n      this.checkBlockToLoadDebounce = _.debounce(this.performCheckBlocksToLoad.bind(this), blockLoadDebounceMillis);\n    }\n  }\n  setBeans(loggerFactory) {\n    this.logger = loggerFactory.create(\"RowNodeBlockLoader\");\n  }\n  getMaxConcurrentDatasourceRequests() {\n    const res = this.gos.get(\"maxConcurrentDatasourceRequests\");\n    if (res == null) {\n      return 2;\n    }\n    if (res <= 0) {\n      return;\n    }\n    return res;\n  }\n  addBlock(block) {\n    this.blocks.push(block);\n    block.addEventListener(RowNodeBlock.EVENT_LOAD_COMPLETE, this.loadComplete.bind(this));\n    this.checkBlockToLoad();\n  }\n  removeBlock(block) {\n    _.removeFromArray(this.blocks, block);\n  }\n  destroy() {\n    super.destroy();\n    this.active = false;\n  }\n  loadComplete() {\n    this.activeBlockLoadsCount--;\n    this.checkBlockToLoad();\n    this.dispatchEvent({ type: RowNodeBlockLoader.BLOCK_LOADED_EVENT });\n    if (this.activeBlockLoadsCount == 0) {\n      this.dispatchEvent({ type: RowNodeBlockLoader.BLOCK_LOADER_FINISHED_EVENT });\n    }\n  }\n  checkBlockToLoad() {\n    if (this.checkBlockToLoadDebounce) {\n      this.checkBlockToLoadDebounce();\n    } else {\n      this.performCheckBlocksToLoad();\n    }\n  }\n  performCheckBlocksToLoad() {\n    if (!this.active) {\n      return;\n    }\n    this.printCacheStatus();\n    if (this.maxConcurrentRequests != null && this.activeBlockLoadsCount >= this.maxConcurrentRequests) {\n      this.logger.log(`checkBlockToLoad: max loads exceeded`);\n      return;\n    }\n    const loadAvailability = this.getAvailableLoadingCount();\n    const blocksToLoad = this.blocks.filter((block) => block.getState() === RowNodeBlock.STATE_WAITING_TO_LOAD).slice(0, loadAvailability);\n    this.registerLoads(blocksToLoad.length);\n    blocksToLoad.forEach((block) => block.load());\n    this.printCacheStatus();\n  }\n  getBlockState() {\n    if (this.gos.isRowModelType(\"serverSide\")) {\n      const ssrm = this.rowModel;\n      return ssrm.getBlockStates();\n    }\n    const result = {};\n    this.blocks.forEach((block) => {\n      const { id, state } = block.getBlockStateJson();\n      result[id] = state;\n    });\n    return result;\n  }\n  printCacheStatus() {\n    if (this.logger.isLogging()) {\n      this.logger.log(`printCacheStatus: activePageLoadsCount = ${this.activeBlockLoadsCount}, blocks = ${JSON.stringify(this.getBlockState())}`);\n    }\n  }\n  isLoading() {\n    return this.activeBlockLoadsCount > 0;\n  }\n  registerLoads(count) {\n    this.activeBlockLoadsCount += count;\n  }\n  getAvailableLoadingCount() {\n    return this.maxConcurrentRequests !== void 0 ? this.maxConcurrentRequests - this.activeBlockLoadsCount : void 0;\n  }\n};\nRowNodeBlockLoader.BLOCK_LOADED_EVENT = \"blockLoaded\";\nRowNodeBlockLoader.BLOCK_LOADER_FINISHED_EVENT = \"blockLoaderFinished\";\n__decorateClass([\n  Autowired(\"rowModel\")\n], RowNodeBlockLoader.prototype, \"rowModel\", 2);\n__decorateClass([\n  PostConstruct\n], RowNodeBlockLoader.prototype, \"postConstruct\", 1);\n__decorateClass([\n  __decorateParam(0, Qualifier(\"loggerFactory\"))\n], RowNodeBlockLoader.prototype, \"setBeans\", 1);\nRowNodeBlockLoader = __decorateClass([\n  Bean(\"rowNodeBlockLoader\")\n], RowNodeBlockLoader);\n\n// community-modules/core/src/pagination/paginationProxy.ts\nvar PaginationProxy = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.currentPage = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = 0;\n    this.pixelOffset = 0;\n    this.masterRowCount = 0;\n  }\n  postConstruct() {\n    this.active = this.gos.get(\"pagination\");\n    this.pageSizeFromGridOptions = this.gos.get(\"paginationPageSize\");\n    this.paginateChildRows = this.isPaginateChildRows();\n    this.addManagedListener(this.eventService, Events.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this));\n    this.addManagedPropertyListener(\"pagination\", this.onPaginationGridOptionChanged.bind(this));\n    this.addManagedPropertyListener(\"paginationPageSize\", this.onPageSizeGridOptionChanged.bind(this));\n    this.onModelUpdated();\n  }\n  ensureRowHeightsValid(startPixel, endPixel, startLimitIndex, endLimitIndex) {\n    const res = this.rowModel.ensureRowHeightsValid(startPixel, endPixel, this.getPageFirstRow(), this.getPageLastRow());\n    if (res) {\n      this.calculatePages();\n    }\n    return res;\n  }\n  isPaginateChildRows() {\n    const shouldPaginate = this.gos.get(\"groupRemoveSingleChildren\") || this.gos.get(\"groupRemoveLowestSingleChildren\");\n    if (shouldPaginate) {\n      return true;\n    }\n    return this.gos.get(\"paginateChildRows\");\n  }\n  onModelUpdated(modelUpdatedEvent) {\n    this.calculatePages();\n    const paginationChangedEvent = {\n      type: Events.EVENT_PAGINATION_CHANGED,\n      animate: modelUpdatedEvent ? modelUpdatedEvent.animate : false,\n      newData: modelUpdatedEvent ? modelUpdatedEvent.newData : false,\n      newPage: modelUpdatedEvent ? modelUpdatedEvent.newPage : false,\n      newPageSize: modelUpdatedEvent ? modelUpdatedEvent.newPageSize : false,\n      keepRenderedRows: modelUpdatedEvent ? modelUpdatedEvent.keepRenderedRows : false\n    };\n    this.eventService.dispatchEvent(paginationChangedEvent);\n  }\n  onPaginationGridOptionChanged() {\n    this.active = this.gos.get(\"pagination\");\n    this.calculatePages();\n    const paginationChangedEvent = {\n      type: Events.EVENT_PAGINATION_CHANGED,\n      animate: false,\n      newData: false,\n      newPage: false,\n      newPageSize: false,\n      // important to keep rendered rows, otherwise every time grid is resized,\n      // we would destroy all the rows.\n      keepRenderedRows: true\n    };\n    this.eventService.dispatchEvent(paginationChangedEvent);\n  }\n  onPageSizeGridOptionChanged() {\n    this.setPageSize(this.gos.get(\"paginationPageSize\"), \"gridOptions\");\n  }\n  goToPage(page) {\n    if (!this.active || this.currentPage === page || typeof this.currentPage !== \"number\") {\n      return;\n    }\n    this.currentPage = page;\n    this.calculatePages();\n    const paginationChangedEvent = {\n      type: Events.EVENT_PAGINATION_CHANGED,\n      animate: false,\n      newData: false,\n      newPage: true,\n      newPageSize: false,\n      keepRenderedRows: false\n    };\n    this.eventService.dispatchEvent(paginationChangedEvent);\n  }\n  getPixelOffset() {\n    return this.pixelOffset;\n  }\n  getRow(index) {\n    return this.rowModel.getRow(index);\n  }\n  getRowNode(id) {\n    return this.rowModel.getRowNode(id);\n  }\n  getRowIndexAtPixel(pixel) {\n    return this.rowModel.getRowIndexAtPixel(pixel);\n  }\n  getCurrentPageHeight() {\n    if (missing(this.topRowBounds) || missing(this.bottomRowBounds)) {\n      return 0;\n    }\n    return Math.max(this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight - this.topRowBounds.rowTop, 0);\n  }\n  getCurrentPagePixelRange() {\n    const pageFirstPixel = this.topRowBounds ? this.topRowBounds.rowTop : 0;\n    const pageLastPixel = this.bottomRowBounds ? this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight : 0;\n    return { pageFirstPixel, pageLastPixel };\n  }\n  isRowPresent(rowNode) {\n    if (!this.rowModel.isRowPresent(rowNode)) {\n      return false;\n    }\n    const nodeIsInPage = rowNode.rowIndex >= this.topDisplayedRowIndex && rowNode.rowIndex <= this.bottomDisplayedRowIndex;\n    return nodeIsInPage;\n  }\n  isEmpty() {\n    return this.rowModel.isEmpty();\n  }\n  isRowsToRender() {\n    return this.rowModel.isRowsToRender();\n  }\n  forEachNode(callback) {\n    return this.rowModel.forEachNode(callback);\n  }\n  forEachNodeOnPage(callback) {\n    const firstRow = this.getPageFirstRow();\n    const lastRow = this.getPageLastRow();\n    for (let i = firstRow; i <= lastRow; i++) {\n      const node = this.getRow(i);\n      if (node) {\n        callback(node);\n      }\n    }\n  }\n  getType() {\n    return this.rowModel.getType();\n  }\n  getRowBounds(index) {\n    const res = this.rowModel.getRowBounds(index);\n    res.rowIndex = index;\n    return res;\n  }\n  getPageFirstRow() {\n    return this.topRowBounds ? this.topRowBounds.rowIndex : -1;\n  }\n  getPageLastRow() {\n    return this.bottomRowBounds ? this.bottomRowBounds.rowIndex : -1;\n  }\n  getRowCount() {\n    return this.rowModel.getRowCount();\n  }\n  getPageForIndex(index) {\n    return Math.floor(index / this.pageSize);\n  }\n  goToPageWithIndex(index) {\n    if (!this.active) {\n      return;\n    }\n    const pageNumber = this.getPageForIndex(index);\n    this.goToPage(pageNumber);\n  }\n  isRowInPage(row) {\n    if (!this.active) {\n      return true;\n    }\n    const rowPage = this.getPageForIndex(row.rowIndex);\n    return rowPage === this.currentPage;\n  }\n  isLastPageFound() {\n    return this.rowModel.isLastRowIndexKnown();\n  }\n  getCurrentPage() {\n    return this.currentPage;\n  }\n  goToNextPage() {\n    this.goToPage(this.currentPage + 1);\n  }\n  goToPreviousPage() {\n    this.goToPage(this.currentPage - 1);\n  }\n  goToFirstPage() {\n    this.goToPage(0);\n  }\n  goToLastPage() {\n    const rowCount = this.rowModel.getRowCount();\n    const lastPage = Math.floor(rowCount / this.pageSize);\n    this.goToPage(lastPage);\n  }\n  getPageSize() {\n    return this.pageSize;\n  }\n  getTotalPages() {\n    return this.totalPages;\n  }\n  /** This is only for state setting before data has been loaded */\n  setPage(page) {\n    this.currentPage = page;\n  }\n  get pageSize() {\n    if (exists(this.pageSizeAutoCalculated)) {\n      return this.pageSizeAutoCalculated;\n    }\n    if (exists(this.pageSizeFromPageSizeSelector)) {\n      return this.pageSizeFromPageSizeSelector;\n    }\n    if (exists(this.pageSizeFromInitialState)) {\n      return this.pageSizeFromInitialState;\n    }\n    if (exists(this.pageSizeFromGridOptions)) {\n      return this.pageSizeFromGridOptions;\n    }\n    return this.defaultPageSize;\n  }\n  unsetAutoCalculatedPageSize() {\n    if (this.pageSizeAutoCalculated === void 0) {\n      return;\n    }\n    const oldPageSize = this.pageSizeAutoCalculated;\n    this.pageSizeAutoCalculated = void 0;\n    if (this.pageSize === oldPageSize) {\n      return;\n    }\n    this.calculatePages();\n    const paginationChangedEvent = {\n      type: Events.EVENT_PAGINATION_CHANGED,\n      animate: false,\n      newData: false,\n      newPage: false,\n      newPageSize: true,\n      keepRenderedRows: false\n    };\n    this.eventService.dispatchEvent(paginationChangedEvent);\n  }\n  setPageSize(size, source) {\n    const currentSize = this.pageSize;\n    switch (source) {\n      case \"autoCalculated\":\n        this.pageSizeAutoCalculated = size;\n        break;\n      case \"pageSizeSelector\":\n        this.pageSizeFromPageSizeSelector = size;\n        if (this.currentPage !== 0) {\n          this.goToFirstPage();\n        }\n        break;\n      case \"initialState\":\n        this.pageSizeFromInitialState = size;\n        break;\n      case \"gridOptions\":\n        this.pageSizeFromGridOptions = size;\n        this.pageSizeFromInitialState = void 0;\n        this.pageSizeFromPageSizeSelector = void 0;\n        if (this.currentPage !== 0) {\n          this.goToFirstPage();\n        }\n        break;\n    }\n    if (currentSize !== this.pageSize) {\n      this.calculatePages();\n      const paginationChangedEvent = {\n        type: Events.EVENT_PAGINATION_CHANGED,\n        animate: false,\n        newData: false,\n        newPage: false,\n        newPageSize: true,\n        keepRenderedRows: true\n      };\n      this.eventService.dispatchEvent(paginationChangedEvent);\n    }\n  }\n  calculatePages() {\n    if (this.active) {\n      if (this.paginateChildRows) {\n        this.calculatePagesAllRows();\n      } else {\n        this.calculatePagesMasterRowsOnly();\n      }\n    } else {\n      this.calculatedPagesNotActive();\n    }\n    this.topRowBounds = this.rowModel.getRowBounds(this.topDisplayedRowIndex);\n    if (this.topRowBounds) {\n      this.topRowBounds.rowIndex = this.topDisplayedRowIndex;\n    }\n    this.bottomRowBounds = this.rowModel.getRowBounds(this.bottomDisplayedRowIndex);\n    if (this.bottomRowBounds) {\n      this.bottomRowBounds.rowIndex = this.bottomDisplayedRowIndex;\n    }\n    this.setPixelOffset(exists(this.topRowBounds) ? this.topRowBounds.rowTop : 0);\n  }\n  setPixelOffset(value) {\n    if (this.pixelOffset === value) {\n      return;\n    }\n    this.pixelOffset = value;\n    this.eventService.dispatchEvent({ type: Events.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED });\n  }\n  setZeroRows() {\n    this.masterRowCount = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = -1;\n    this.currentPage = 0;\n    this.totalPages = 0;\n  }\n  adjustCurrentPageIfInvalid() {\n    if (this.currentPage >= this.totalPages) {\n      this.currentPage = this.totalPages - 1;\n    }\n    if (!isFinite(this.currentPage) || isNaN(this.currentPage) || this.currentPage < 0) {\n      this.currentPage = 0;\n    }\n  }\n  calculatePagesMasterRowsOnly() {\n    this.masterRowCount = this.rowModel.getTopLevelRowCount();\n    if (this.masterRowCount <= 0) {\n      this.setZeroRows();\n      return;\n    }\n    const masterLastRowIndex = this.masterRowCount - 1;\n    this.totalPages = Math.floor(masterLastRowIndex / this.pageSize) + 1;\n    this.adjustCurrentPageIfInvalid();\n    const masterPageStartIndex = this.pageSize * this.currentPage;\n    let masterPageEndIndex = this.pageSize * (this.currentPage + 1) - 1;\n    if (masterPageEndIndex > masterLastRowIndex) {\n      masterPageEndIndex = masterLastRowIndex;\n    }\n    this.topDisplayedRowIndex = this.rowModel.getTopLevelRowDisplayedIndex(masterPageStartIndex);\n    if (masterPageEndIndex === masterLastRowIndex) {\n      this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;\n    } else {\n      const firstIndexNotToShow = this.rowModel.getTopLevelRowDisplayedIndex(masterPageEndIndex + 1);\n      this.bottomDisplayedRowIndex = firstIndexNotToShow - 1;\n    }\n  }\n  getMasterRowCount() {\n    return this.masterRowCount;\n  }\n  calculatePagesAllRows() {\n    this.masterRowCount = this.rowModel.getRowCount();\n    if (this.masterRowCount === 0) {\n      this.setZeroRows();\n      return;\n    }\n    const maxRowIndex = this.masterRowCount - 1;\n    this.totalPages = Math.floor(maxRowIndex / this.pageSize) + 1;\n    this.adjustCurrentPageIfInvalid();\n    this.topDisplayedRowIndex = this.pageSize * this.currentPage;\n    this.bottomDisplayedRowIndex = this.pageSize * (this.currentPage + 1) - 1;\n    if (this.bottomDisplayedRowIndex > maxRowIndex) {\n      this.bottomDisplayedRowIndex = maxRowIndex;\n    }\n  }\n  calculatedPagesNotActive() {\n    this.setPageSize(void 0, \"autoCalculated\");\n    this.totalPages = 1;\n    this.currentPage = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;\n  }\n};\n__decorateClass([\n  Autowired(\"rowModel\")\n], PaginationProxy.prototype, \"rowModel\", 2);\n__decorateClass([\n  PostConstruct\n], PaginationProxy.prototype, \"postConstruct\", 1);\nPaginationProxy = __decorateClass([\n  Bean(\"paginationProxy\")\n], PaginationProxy);\n\n// community-modules/core/src/styling/stylingService.ts\nvar StylingService = class extends BeanStub {\n  processAllCellClasses(colDef, params, onApplicableClass, onNotApplicableClass) {\n    this.processClassRules(void 0, colDef.cellClassRules, params, onApplicableClass, onNotApplicableClass);\n    this.processStaticCellClasses(colDef, params, onApplicableClass);\n  }\n  processClassRules(previousClassRules, classRules, params, onApplicableClass, onNotApplicableClass) {\n    if (classRules == null && previousClassRules == null) {\n      return;\n    }\n    const classesToApply = {};\n    const classesToRemove = {};\n    const forEachSingleClass = (className, callback) => {\n      className.split(\" \").forEach((singleClass) => {\n        if (singleClass.trim() == \"\")\n          return;\n        callback(singleClass);\n      });\n    };\n    if (classRules) {\n      const classNames = Object.keys(classRules);\n      for (let i = 0; i < classNames.length; i++) {\n        const className = classNames[i];\n        const rule = classRules[className];\n        let resultOfRule;\n        if (typeof rule === \"string\") {\n          resultOfRule = this.expressionService.evaluate(rule, params);\n        } else if (typeof rule === \"function\") {\n          resultOfRule = rule(params);\n        }\n        forEachSingleClass(className, (singleClass) => {\n          resultOfRule ? classesToApply[singleClass] = true : classesToRemove[singleClass] = true;\n        });\n      }\n    }\n    if (previousClassRules && onNotApplicableClass) {\n      Object.keys(previousClassRules).forEach((className) => forEachSingleClass(className, (singleClass) => {\n        if (!classesToApply[singleClass]) {\n          classesToRemove[singleClass] = true;\n        }\n      }));\n    }\n    if (onNotApplicableClass) {\n      Object.keys(classesToRemove).forEach(onNotApplicableClass);\n    }\n    Object.keys(classesToApply).forEach(onApplicableClass);\n  }\n  getStaticCellClasses(colDef, params) {\n    const { cellClass } = colDef;\n    if (!cellClass) {\n      return [];\n    }\n    let classOrClasses;\n    if (typeof cellClass === \"function\") {\n      const cellClassFunc = cellClass;\n      classOrClasses = cellClassFunc(params);\n    } else {\n      classOrClasses = cellClass;\n    }\n    if (typeof classOrClasses === \"string\") {\n      classOrClasses = [classOrClasses];\n    }\n    return classOrClasses || [];\n  }\n  processStaticCellClasses(colDef, params, onApplicableClass) {\n    const classOrClasses = this.getStaticCellClasses(colDef, params);\n    classOrClasses.forEach((cssClassItem) => {\n      onApplicableClass(cssClassItem);\n    });\n  }\n};\n__decorateClass([\n  Autowired(\"expressionService\")\n], StylingService.prototype, \"expressionService\", 2);\nStylingService = __decorateClass([\n  Bean(\"stylingService\")\n], StylingService);\n\n// community-modules/core/src/widgets/agToggleButton.ts\nvar AgToggleButton = class extends AgCheckbox {\n  constructor(config) {\n    super(config, \"ag-toggle-button\");\n  }\n  setValue(value, silent) {\n    super.setValue(value, silent);\n    this.addOrRemoveCssClass(\"ag-selected\", this.getValue());\n    return this;\n  }\n};\n\n// community-modules/core/src/widgets/agInputTextArea.ts\nvar AgInputTextArea = class extends AgAbstractInputField {\n  constructor(config) {\n    super(config, \"ag-text-area\", null, \"textarea\");\n  }\n  setValue(value, silent) {\n    const ret = super.setValue(value, silent);\n    this.eInput.value = value;\n    return ret;\n  }\n  setCols(cols) {\n    this.eInput.cols = cols;\n    return this;\n  }\n  setRows(rows) {\n    this.eInput.rows = rows;\n    return this;\n  }\n};\n\n// community-modules/core/src/widgets/agInputDateField.ts\nvar AgInputDateField = class extends AgInputTextField {\n  constructor(config) {\n    super(config, \"ag-date-field\", \"date\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.addManagedListener(this.eInput, \"wheel\", this.onWheel.bind(this));\n    const usingSafari = isBrowserSafari();\n    this.addManagedListener(this.eInput, \"mousedown\", () => {\n      if (this.isDisabled() || usingSafari) {\n        return;\n      }\n      this.eInput.focus();\n    });\n    this.eInput.step = \"any\";\n  }\n  onWheel(e) {\n    if (this.gos.getActiveDomElement() === this.eInput) {\n      e.preventDefault();\n    }\n  }\n  setMin(minDate) {\n    var _a;\n    const min = minDate instanceof Date ? (_a = serialiseDate(minDate != null ? minDate : null, false)) != null ? _a : void 0 : minDate;\n    if (this.min === min) {\n      return this;\n    }\n    this.min = min;\n    addOrRemoveAttribute(this.eInput, \"min\", min);\n    return this;\n  }\n  setMax(maxDate) {\n    var _a;\n    const max = maxDate instanceof Date ? (_a = serialiseDate(maxDate != null ? maxDate : null, false)) != null ? _a : void 0 : maxDate;\n    if (this.max === max) {\n      return this;\n    }\n    this.max = max;\n    addOrRemoveAttribute(this.eInput, \"max\", max);\n    return this;\n  }\n  setStep(step) {\n    if (this.step === step) {\n      return this;\n    }\n    this.step = step;\n    addOrRemoveAttribute(this.eInput, \"step\", step);\n    return this;\n  }\n  getDate() {\n    var _a;\n    if (!this.eInput.validity.valid) {\n      return void 0;\n    }\n    return (_a = parseDateTimeFromString(this.getValue())) != null ? _a : void 0;\n  }\n  setDate(date, silent) {\n    this.setValue(serialiseDate(date != null ? date : null, false), silent);\n  }\n};\n\n// community-modules/core/src/widgets/agInputRange.ts\nvar AgInputRange = class extends AgAbstractInputField {\n  constructor(config) {\n    super(config, \"ag-range-field\", \"range\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    const { min, max, step } = this.config;\n    if (min != null) {\n      this.setMinValue(min);\n    }\n    if (max != null) {\n      this.setMaxValue(max);\n    }\n    this.setStep(step || 1);\n  }\n  addInputListeners() {\n    this.addManagedListener(this.eInput, \"input\", (e) => {\n      const value = e.target.value;\n      this.setValue(value);\n    });\n  }\n  setMinValue(value) {\n    this.min = value;\n    this.eInput.setAttribute(\"min\", value.toString());\n    return this;\n  }\n  setMaxValue(value) {\n    this.max = value;\n    this.eInput.setAttribute(\"max\", value.toString());\n    return this;\n  }\n  setStep(value) {\n    this.eInput.setAttribute(\"step\", value.toString());\n    return this;\n  }\n  setValue(value, silent) {\n    if (this.min != null) {\n      value = Math.max(parseFloat(value), this.min).toString();\n    }\n    if (this.max != null) {\n      value = Math.min(parseFloat(value), this.max).toString();\n    }\n    const ret = super.setValue(value, silent);\n    this.eInput.value = value;\n    return ret;\n  }\n};\n\n// community-modules/core/src/widgets/agRichSelectRow.ts\nvar RichSelectRow = class extends Component {\n  constructor(params, wrapperEl) {\n    super(\n      /* html */\n      `<div class=\"ag-rich-select-row\" role=\"presentation\"></div>`\n    );\n    this.params = params;\n    this.wrapperEl = wrapperEl;\n  }\n  postConstruct() {\n    this.addManagedListener(this.getGui(), \"click\", this.onClick.bind(this));\n  }\n  setState(value) {\n    let formattedValue = \"\";\n    if (this.params.valueFormatter) {\n      formattedValue = this.params.valueFormatter(value);\n    }\n    const rendererSuccessful = this.populateWithRenderer(value, formattedValue);\n    if (!rendererSuccessful) {\n      this.populateWithoutRenderer(value, formattedValue);\n    }\n    this.value = value;\n  }\n  highlightString(matchString) {\n    const { parsedValue } = this;\n    if (this.params.cellRenderer || !exists(parsedValue)) {\n      return;\n    }\n    let hasMatch = exists(matchString);\n    if (hasMatch) {\n      const index = parsedValue == null ? void 0 : parsedValue.toLocaleLowerCase().indexOf(matchString.toLocaleLowerCase());\n      if (index >= 0) {\n        const highlightEndIndex = index + matchString.length;\n        const startPart = escapeString(parsedValue.slice(0, index), true);\n        const highlightedPart = escapeString(parsedValue.slice(index, highlightEndIndex), true);\n        const endPart = escapeString(parsedValue.slice(highlightEndIndex));\n        this.renderValueWithoutRenderer(`${startPart}<span class=\"ag-rich-select-row-text-highlight\">${highlightedPart}</span>${endPart}`);\n      } else {\n        hasMatch = false;\n      }\n    }\n    if (!hasMatch) {\n      this.renderValueWithoutRenderer(parsedValue);\n    }\n  }\n  updateHighlighted(highlighted) {\n    var _a;\n    const eGui = this.getGui();\n    const parentId = `ag-rich-select-row-${this.getCompId()}`;\n    (_a = eGui.parentElement) == null ? void 0 : _a.setAttribute(\"id\", parentId);\n    if (highlighted) {\n      const parentAriaEl = this.getParentComponent().getAriaElement();\n      setAriaActiveDescendant(parentAriaEl, parentId);\n      this.wrapperEl.setAttribute(\"data-active-option\", parentId);\n    }\n    setAriaSelected(eGui.parentElement, highlighted);\n    this.addOrRemoveCssClass(\"ag-rich-select-row-selected\", highlighted);\n  }\n  populateWithoutRenderer(value, valueFormatted) {\n    const eDocument = this.gos.getDocument();\n    const eGui = this.getGui();\n    const span = eDocument.createElement(\"span\");\n    span.style.overflow = \"hidden\";\n    span.style.textOverflow = \"ellipsis\";\n    const parsedValue = escapeString(exists(valueFormatted) ? valueFormatted : value, true);\n    this.parsedValue = exists(parsedValue) ? parsedValue : null;\n    eGui.appendChild(span);\n    this.renderValueWithoutRenderer(parsedValue);\n    this.setTooltip({\n      newTooltipText: this.parsedValue,\n      shouldDisplayTooltip: () => span.scrollWidth > span.clientWidth\n    });\n  }\n  renderValueWithoutRenderer(value) {\n    const span = this.getGui().querySelector(\"span\");\n    if (!span) {\n      return;\n    }\n    span.innerHTML = exists(value) ? value : \"&nbsp;\";\n  }\n  populateWithRenderer(value, valueFormatted) {\n    let cellRendererPromise;\n    let userCompDetails;\n    if (this.params.cellRenderer) {\n      userCompDetails = this.userComponentFactory.getCellRendererDetails(this.params, {\n        value,\n        valueFormatted,\n        setTooltip: (value2, shouldDisplayTooltip) => {\n          this.setTooltip({ newTooltipText: value2, shouldDisplayTooltip });\n        }\n      });\n    }\n    if (userCompDetails) {\n      cellRendererPromise = userCompDetails.newAgStackInstance();\n    }\n    if (cellRendererPromise) {\n      bindCellRendererToHtmlElement(cellRendererPromise, this.getGui());\n    }\n    if (cellRendererPromise) {\n      cellRendererPromise.then((childComponent) => {\n        this.addDestroyFunc(() => {\n          this.getContext().destroyBean(childComponent);\n        });\n      });\n      return true;\n    }\n    return false;\n  }\n  onClick() {\n    const parent = this.getParentComponent();\n    const event = {\n      type: Events.EVENT_FIELD_PICKER_VALUE_SELECTED,\n      fromEnterKey: false,\n      value: this.value\n    };\n    parent == null ? void 0 : parent.dispatchEvent(event);\n  }\n};\n__decorateClass([\n  Autowired(\"userComponentFactory\")\n], RichSelectRow.prototype, \"userComponentFactory\", 2);\n__decorateClass([\n  PostConstruct\n], RichSelectRow.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/widgets/virtualList.ts\nvar _VirtualList = class _VirtualList extends TabGuardComp {\n  constructor(params) {\n    super(_VirtualList.getTemplate((params == null ? void 0 : params.cssIdentifier) || \"default\"));\n    this.renderedRows = /* @__PURE__ */ new Map();\n    this.rowHeight = 20;\n    this.pageSize = -1;\n    this.isScrolling = false;\n    this.isHeightFromTheme = true;\n    const { cssIdentifier = \"default\", ariaRole = \"listbox\", listName } = params || {};\n    this.cssIdentifier = cssIdentifier;\n    this.ariaRole = ariaRole;\n    this.listName = listName;\n  }\n  postConstruct() {\n    this.addScrollListener();\n    this.rowHeight = this.getItemHeight();\n    this.addResizeObserver();\n    this.initialiseTabGuard({\n      onFocusIn: (e) => this.onFocusIn(e),\n      onFocusOut: (e) => this.onFocusOut(e),\n      focusInnerElement: (fromBottom) => this.focusInnerElement(fromBottom),\n      onTabKeyDown: (e) => this.onTabKeyDown(e),\n      handleKeyDown: (e) => this.handleKeyDown(e)\n    });\n    this.setAriaProperties();\n    this.addManagedListener(this.eventService, Events.EVENT_GRID_STYLES_CHANGED, this.onGridStylesChanged.bind(this));\n  }\n  onGridStylesChanged() {\n    this.rowHeight = this.getItemHeight();\n    this.refresh();\n  }\n  setAriaProperties() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const listName = translate(\"ariaDefaultListName\", this.listName || \"List\");\n    const ariaEl = this.eContainer;\n    setAriaRole(ariaEl, this.ariaRole);\n    setAriaLabel(ariaEl, listName);\n  }\n  addResizeObserver() {\n    const listener = () => this.animationFrameService.requestAnimationFrame(() => this.drawVirtualRows());\n    const destroyObserver = this.resizeObserverService.observeResize(this.getGui(), listener);\n    this.addDestroyFunc(destroyObserver);\n  }\n  focusInnerElement(fromBottom) {\n    this.focusRow(fromBottom ? this.model.getRowCount() - 1 : 0);\n  }\n  onFocusIn(e) {\n    const target = e.target;\n    if (target.classList.contains(\"ag-virtual-list-item\")) {\n      this.lastFocusedRowIndex = getAriaPosInSet(target) - 1;\n    }\n  }\n  onFocusOut(e) {\n    if (!this.getFocusableElement().contains(e.relatedTarget)) {\n      this.lastFocusedRowIndex = null;\n    }\n  }\n  handleKeyDown(e) {\n    switch (e.key) {\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n        if (this.navigate(e.key === KeyCode.UP)) {\n          e.preventDefault();\n        }\n        break;\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_DOWN:\n        if (this.navigateToPage(e.key) !== null) {\n          e.preventDefault();\n        }\n        break;\n    }\n  }\n  onTabKeyDown(e) {\n    if (this.navigate(e.shiftKey)) {\n      e.preventDefault();\n    } else {\n      stopPropagationForAgGrid(e);\n      this.forceFocusOutOfContainer(e.shiftKey);\n    }\n  }\n  navigate(up) {\n    if (this.lastFocusedRowIndex == null) {\n      return false;\n    }\n    const nextRow = this.lastFocusedRowIndex + (up ? -1 : 1);\n    if (nextRow < 0 || nextRow >= this.model.getRowCount()) {\n      return false;\n    }\n    this.focusRow(nextRow);\n    return true;\n  }\n  navigateToPage(key, fromItem = \"focused\") {\n    let hasFocus = false;\n    if (fromItem === \"focused\") {\n      fromItem = this.getLastFocusedRow();\n      hasFocus = true;\n    }\n    const rowCount = this.model.getRowCount() - 1;\n    let newIndex = -1;\n    if (key === KeyCode.PAGE_HOME) {\n      newIndex = 0;\n    } else if (key === KeyCode.PAGE_END) {\n      newIndex = rowCount;\n    } else if (key === KeyCode.PAGE_DOWN) {\n      newIndex = Math.min(fromItem + this.pageSize, rowCount);\n    } else if (key === KeyCode.PAGE_UP) {\n      newIndex = Math.max(fromItem - this.pageSize, 0);\n    }\n    if (newIndex === -1) {\n      return null;\n    }\n    if (hasFocus) {\n      this.focusRow(newIndex);\n    } else {\n      this.ensureIndexVisible(newIndex);\n    }\n    return newIndex;\n  }\n  getLastFocusedRow() {\n    return this.lastFocusedRowIndex;\n  }\n  focusRow(rowNumber) {\n    if (this.isScrolling) {\n      return;\n    }\n    this.isScrolling = true;\n    this.ensureIndexVisible(rowNumber);\n    this.animationFrameService.requestAnimationFrame(() => {\n      this.isScrolling = false;\n      if (!this.isAlive()) {\n        return;\n      }\n      const renderedRow = this.renderedRows.get(rowNumber);\n      if (renderedRow) {\n        renderedRow.eDiv.focus();\n      }\n    });\n  }\n  getComponentAt(rowIndex) {\n    const comp = this.renderedRows.get(rowIndex);\n    return comp && comp.rowComponent;\n  }\n  forEachRenderedRow(func) {\n    this.renderedRows.forEach((value, key) => func(value.rowComponent, key));\n  }\n  static getTemplate(cssIdentifier) {\n    return (\n      /* html */\n      `<div class=\"ag-virtual-list-viewport ag-${cssIdentifier}-virtual-list-viewport\" role=\"presentation\">\n                <div class=\"ag-virtual-list-container ag-${cssIdentifier}-virtual-list-container\" ref=\"eContainer\"></div>\n            </div>`\n    );\n  }\n  getItemHeight() {\n    if (!this.isHeightFromTheme) {\n      return this.rowHeight;\n    }\n    return this.environment.getListItemHeight();\n  }\n  /**\n   * Returns true if the view had to be scrolled, otherwise, false.\n   */\n  ensureIndexVisible(index, scrollPartialIntoView = true) {\n    const lastRow = this.model.getRowCount();\n    if (typeof index !== \"number\" || index < 0 || index >= lastRow) {\n      console.warn(\"AG Grid: invalid row index for ensureIndexVisible: \" + index);\n      return false;\n    }\n    const rowTopPixel = index * this.rowHeight;\n    const rowBottomPixel = rowTopPixel + this.rowHeight;\n    const eGui = this.getGui();\n    const viewportTopPixel = eGui.scrollTop;\n    const viewportHeight = eGui.offsetHeight;\n    const viewportBottomPixel = viewportTopPixel + viewportHeight;\n    const diff = scrollPartialIntoView ? 0 : this.rowHeight;\n    const viewportScrolledPastRow = viewportTopPixel > rowTopPixel + diff;\n    const viewportScrolledBeforeRow = viewportBottomPixel < rowBottomPixel - diff;\n    if (viewportScrolledPastRow) {\n      eGui.scrollTop = rowTopPixel;\n      return true;\n    }\n    if (viewportScrolledBeforeRow) {\n      const newScrollPosition = rowBottomPixel - viewportHeight;\n      eGui.scrollTop = newScrollPosition;\n      return true;\n    }\n    return false;\n  }\n  setComponentCreator(componentCreator) {\n    this.componentCreator = componentCreator;\n  }\n  setComponentUpdater(componentUpdater) {\n    this.componentUpdater = componentUpdater;\n  }\n  getRowHeight() {\n    return this.rowHeight;\n  }\n  getScrollTop() {\n    return this.getGui().scrollTop;\n  }\n  setRowHeight(rowHeight) {\n    this.isHeightFromTheme = false;\n    this.rowHeight = rowHeight;\n    this.refresh();\n  }\n  refresh(softRefresh) {\n    if (this.model == null || !this.isAlive()) {\n      return;\n    }\n    const rowCount = this.model.getRowCount();\n    this.eContainer.style.height = `${rowCount * this.rowHeight}px`;\n    waitUntil(\n      () => this.eContainer.clientHeight >= rowCount * this.rowHeight,\n      () => {\n        if (!this.isAlive()) {\n          return;\n        }\n        if (this.canSoftRefresh(softRefresh)) {\n          this.drawVirtualRows(true);\n        } else {\n          this.clearVirtualRows();\n          this.drawVirtualRows();\n        }\n      }\n    );\n  }\n  canSoftRefresh(softRefresh) {\n    return !!(softRefresh && this.renderedRows.size && typeof this.model.areRowsEqual === \"function\" && this.componentUpdater);\n  }\n  clearVirtualRows() {\n    this.renderedRows.forEach((_2, rowIndex) => this.removeRow(rowIndex));\n  }\n  drawVirtualRows(softRefresh) {\n    if (!this.isAlive() || !this.model) {\n      return;\n    }\n    const gui = this.getGui();\n    const topPixel = gui.scrollTop;\n    const bottomPixel = topPixel + gui.offsetHeight;\n    const firstRow = Math.floor(topPixel / this.rowHeight);\n    const lastRow = Math.floor(bottomPixel / this.rowHeight);\n    this.pageSize = Math.floor((bottomPixel - topPixel) / this.rowHeight);\n    this.ensureRowsRendered(firstRow, lastRow, softRefresh);\n  }\n  ensureRowsRendered(start, finish, softRefresh) {\n    this.renderedRows.forEach((_2, rowIndex) => {\n      if ((rowIndex < start || rowIndex > finish) && rowIndex !== this.lastFocusedRowIndex) {\n        this.removeRow(rowIndex);\n      }\n    });\n    if (softRefresh) {\n      this.refreshRows();\n    }\n    for (let rowIndex = start; rowIndex <= finish; rowIndex++) {\n      if (this.renderedRows.has(rowIndex)) {\n        continue;\n      }\n      if (rowIndex < this.model.getRowCount()) {\n        this.insertRow(rowIndex);\n      }\n    }\n  }\n  insertRow(rowIndex) {\n    const value = this.model.getRow(rowIndex);\n    const eDiv = document.createElement(\"div\");\n    eDiv.classList.add(\"ag-virtual-list-item\", `ag-${this.cssIdentifier}-virtual-list-item`);\n    setAriaRole(eDiv, this.ariaRole === \"tree\" ? \"treeitem\" : \"option\");\n    setAriaSetSize(eDiv, this.model.getRowCount());\n    setAriaPosInSet(eDiv, rowIndex + 1);\n    eDiv.setAttribute(\"tabindex\", \"-1\");\n    eDiv.style.height = `${this.rowHeight}px`;\n    eDiv.style.top = `${this.rowHeight * rowIndex}px`;\n    const rowComponent = this.componentCreator(value, eDiv);\n    rowComponent.addGuiEventListener(\"focusin\", () => this.lastFocusedRowIndex = rowIndex);\n    eDiv.appendChild(rowComponent.getGui());\n    if (this.renderedRows.has(rowIndex - 1)) {\n      this.renderedRows.get(rowIndex - 1).eDiv.insertAdjacentElement(\"afterend\", eDiv);\n    } else if (this.renderedRows.has(rowIndex + 1)) {\n      this.renderedRows.get(rowIndex + 1).eDiv.insertAdjacentElement(\"beforebegin\", eDiv);\n    } else {\n      this.eContainer.appendChild(eDiv);\n    }\n    this.renderedRows.set(rowIndex, { rowComponent, eDiv, value });\n  }\n  removeRow(rowIndex) {\n    const component = this.renderedRows.get(rowIndex);\n    this.eContainer.removeChild(component.eDiv);\n    this.destroyBean(component.rowComponent);\n    this.renderedRows.delete(rowIndex);\n  }\n  refreshRows() {\n    const rowCount = this.model.getRowCount();\n    this.renderedRows.forEach((row, rowIndex) => {\n      var _a, _b;\n      if (rowIndex >= rowCount) {\n        this.removeRow(rowIndex);\n      } else {\n        const newValue = this.model.getRow(rowIndex);\n        if ((_b = (_a = this.model).areRowsEqual) == null ? void 0 : _b.call(_a, row.value, newValue)) {\n          this.componentUpdater(newValue, row.rowComponent);\n        } else {\n          this.removeRow(rowIndex);\n        }\n      }\n    });\n  }\n  addScrollListener() {\n    this.addGuiEventListener(\"scroll\", () => this.drawVirtualRows(), { passive: true });\n  }\n  setModel(model) {\n    this.model = model;\n  }\n  getAriaElement() {\n    return this.eContainer;\n  }\n  destroy() {\n    if (!this.isAlive()) {\n      return;\n    }\n    this.clearVirtualRows();\n    super.destroy();\n  }\n};\n__decorateClass([\n  Autowired(\"resizeObserverService\")\n], _VirtualList.prototype, \"resizeObserverService\", 2);\n__decorateClass([\n  Autowired(\"animationFrameService\")\n], _VirtualList.prototype, \"animationFrameService\", 2);\n__decorateClass([\n  RefSelector(\"eContainer\")\n], _VirtualList.prototype, \"eContainer\", 2);\n__decorateClass([\n  PostConstruct\n], _VirtualList.prototype, \"postConstruct\", 1);\nvar VirtualList = _VirtualList;\n\n// community-modules/core/src/widgets/agRichSelect.ts\nvar TEMPLATE2 = (\n  /* html */\n  `\n    <div class=\"ag-picker-field\" role=\"presentation\">\n        <div ref=\"eLabel\"></div>\n            <div ref=\"eWrapper\" class=\"ag-wrapper ag-picker-field-wrapper ag-rich-select-value ag-picker-collapsed\">\n            <div ref=\"eDisplayField\" class=\"ag-picker-field-display\"></div>\n            <ag-input-text-field ref=\"eInput\" class=\"ag-rich-select-field-input\"></ag-input-text-field>\n            <div ref=\"eIcon\" class=\"ag-picker-field-icon\" aria-hidden=\"true\"></div>\n        </div>\n    </div>`\n);\nvar AgRichSelect = class extends AgPickerField {\n  constructor(config) {\n    var _a, _b;\n    super(__spreadProps(__spreadValues({\n      pickerAriaLabelKey: \"ariaLabelRichSelectField\",\n      pickerAriaLabelValue: \"Rich Select Field\",\n      pickerType: \"ag-list\",\n      className: \"ag-rich-select\",\n      pickerIcon: \"smallDown\",\n      ariaRole: \"combobox\",\n      template: (_a = config == null ? void 0 : config.template) != null ? _a : TEMPLATE2,\n      modalPicker: false\n    }, config), {\n      // maxPickerHeight needs to be set after expanding `config`\n      maxPickerHeight: (_b = config == null ? void 0 : config.maxPickerHeight) != null ? _b : \"calc(var(--ag-row-height) * 6.5)\"\n    }));\n    this.searchString = \"\";\n    this.highlightedItem = -1;\n    this.lastRowHovered = -1;\n    this.searchStringCreator = null;\n    const { cellRowHeight, value, valueList, searchStringCreator } = config || {};\n    if (cellRowHeight != null) {\n      this.cellRowHeight = cellRowHeight;\n    }\n    if (value !== void 0) {\n      this.value = value;\n    }\n    if (valueList != null) {\n      this.values = valueList;\n    }\n    if (searchStringCreator) {\n      this.searchStringCreator = searchStringCreator;\n    }\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.createLoadingElement();\n    this.createListComponent();\n    const { allowTyping, placeholder } = this.config;\n    if (allowTyping) {\n      this.eInput.setAutoComplete(false).setInputPlaceholder(placeholder);\n      this.eDisplayField.classList.add(\"ag-hidden\");\n    } else {\n      this.eInput.setDisplayed(false);\n    }\n    this.eWrapper.tabIndex = this.gos.get(\"tabIndex\");\n    const { searchDebounceDelay = 300 } = this.config;\n    this.clearSearchString = debounce(this.clearSearchString, searchDebounceDelay);\n    this.renderSelectedValue();\n    if (allowTyping) {\n      this.eInput.onValueChange((value) => this.searchTextFromString(value));\n      this.addManagedListener(this.eWrapper, \"focus\", this.onWrapperFocus.bind(this));\n    }\n    this.addManagedListener(this.eWrapper, \"focusout\", this.onWrapperFocusOut.bind(this));\n  }\n  createLoadingElement() {\n    const eDocument = this.gos.getDocument();\n    const translate = this.localeService.getLocaleTextFunc();\n    const el = eDocument.createElement(\"div\");\n    el.classList.add(\"ag-loading-text\");\n    el.innerText = translate(\"loadingOoo\", \"Loading...\");\n    this.eLoading = el;\n  }\n  createListComponent() {\n    this.listComponent = this.createBean(new VirtualList({ cssIdentifier: \"rich-select\" }));\n    this.listComponent.setComponentCreator(this.createRowComponent.bind(this));\n    const componentUpdater = (item, component) => {\n    };\n    this.listComponent.setComponentUpdater(componentUpdater);\n    this.listComponent.setParentComponent(this);\n    this.addManagedListener(this.listComponent, Events.EVENT_FIELD_PICKER_VALUE_SELECTED, (e) => {\n      this.onListValueSelected(e.value, e.fromEnterKey);\n    });\n    const { cellRowHeight } = this;\n    if (cellRowHeight) {\n      this.listComponent.setRowHeight(cellRowHeight);\n    }\n    const eListGui = this.listComponent.getGui();\n    const eListAriaEl = this.listComponent.getAriaElement();\n    this.addManagedListener(eListGui, \"mousemove\", this.onPickerMouseMove.bind(this));\n    this.addManagedListener(eListGui, \"mousedown\", (e) => e.preventDefault());\n    eListGui.classList.add(\"ag-rich-select-list\");\n    const listId = `ag-rich-select-list-${this.listComponent.getCompId()}`;\n    eListAriaEl.setAttribute(\"id\", listId);\n    const translate = this.localeService.getLocaleTextFunc();\n    const ariaLabel = translate(this.config.pickerAriaLabelKey, this.config.pickerAriaLabelValue);\n    setAriaLabel(eListAriaEl, ariaLabel);\n    setAriaControls(this.eWrapper, eListAriaEl);\n  }\n  renderSelectedValue() {\n    const { value, eDisplayField, config } = this;\n    const { allowTyping, initialInputValue } = this.config;\n    const valueFormatted = this.config.valueFormatter ? this.config.valueFormatter(value) : value;\n    if (allowTyping) {\n      this.eInput.setValue(initialInputValue != null ? initialInputValue : valueFormatted);\n      return;\n    }\n    let userCompDetails;\n    if (config.cellRenderer) {\n      userCompDetails = this.userComponentFactory.getCellRendererDetails(this.config, {\n        value,\n        valueFormatted\n      });\n    }\n    let userCompDetailsPromise;\n    if (userCompDetails) {\n      userCompDetailsPromise = userCompDetails.newAgStackInstance();\n    }\n    if (userCompDetailsPromise) {\n      clearElement(eDisplayField);\n      bindCellRendererToHtmlElement(userCompDetailsPromise, eDisplayField);\n      userCompDetailsPromise.then((renderer) => {\n        this.addDestroyFunc(() => this.getContext().destroyBean(renderer));\n      });\n    } else {\n      if (exists(this.value)) {\n        eDisplayField.innerText = valueFormatted;\n        eDisplayField.classList.remove(\"ag-display-as-placeholder\");\n      } else {\n        const { placeholder } = config;\n        if (exists(placeholder)) {\n          eDisplayField.innerHTML = `${escapeString(placeholder)}`;\n          eDisplayField.classList.add(\"ag-display-as-placeholder\");\n        } else {\n          clearElement(eDisplayField);\n        }\n      }\n      this.setTooltip({\n        newTooltipText: valueFormatted != null ? valueFormatted : null,\n        shouldDisplayTooltip: () => this.eDisplayField.scrollWidth > this.eDisplayField.clientWidth\n      });\n    }\n  }\n  getCurrentValueIndex() {\n    const { currentList, value } = this;\n    if (value == null || !currentList) {\n      return -1;\n    }\n    for (let i = 0; i < currentList.length; i++) {\n      if (currentList[i] === value) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  highlightFilterMatch() {\n    var _a;\n    (_a = this.listComponent) == null ? void 0 : _a.forEachRenderedRow((cmp, idx) => {\n      cmp.highlightString(this.searchString);\n    });\n  }\n  highlightSelectedValue(index) {\n    var _a;\n    if (index == null) {\n      index = this.getCurrentValueIndex();\n    }\n    this.highlightedItem = index;\n    (_a = this.listComponent) == null ? void 0 : _a.forEachRenderedRow((cmp, idx) => {\n      const highlighted = index === -1 ? false : this.highlightedItem === idx;\n      cmp.updateHighlighted(highlighted);\n    });\n  }\n  setRowHeight(height) {\n    if (height !== this.cellRowHeight) {\n      this.cellRowHeight = height;\n    }\n    if (this.listComponent) {\n      this.listComponent.setRowHeight(height);\n    }\n  }\n  createPickerComponent() {\n    const { values: values2 } = this;\n    if (values2) {\n      this.setValueList({ valueList: values2 });\n    }\n    return this.listComponent;\n  }\n  setSearchStringCreator(searchStringFn) {\n    this.searchStringCreator = searchStringFn;\n  }\n  setValueList(params) {\n    const { valueList, refresh } = params;\n    if (!this.listComponent) {\n      return;\n    }\n    if (this.currentList === valueList) {\n      return;\n    }\n    this.currentList = valueList;\n    this.listComponent.setModel({\n      getRowCount: () => valueList.length,\n      getRow: (index) => valueList[index],\n      areRowsEqual: (oldRow, newRow) => oldRow === newRow\n    });\n    if (refresh) {\n      if (!this.values) {\n        this.values = valueList;\n        if (this.isPickerDisplayed) {\n          this.showCurrentValueInPicker();\n        }\n      } else {\n        this.listComponent.refresh(true);\n      }\n    }\n  }\n  showPicker() {\n    super.showPicker();\n    this.showCurrentValueInPicker();\n    this.displayOrHidePicker();\n  }\n  showCurrentValueInPicker() {\n    var _a, _b;\n    if (!this.listComponent) {\n      return;\n    }\n    if (!this.currentList) {\n      if (this.isPickerDisplayed && this.eLoading) {\n        this.listComponent.appendChild(this.eLoading);\n      }\n      return;\n    }\n    if ((_a = this.eLoading) == null ? void 0 : _a.offsetParent) {\n      (_b = this.eLoading.parentElement) == null ? void 0 : _b.removeChild(this.eLoading);\n    }\n    const currentValueIndex = this.getCurrentValueIndex();\n    if (currentValueIndex !== -1) {\n      this.listComponent.refresh();\n      this.listComponent.ensureIndexVisible(currentValueIndex);\n      this.listComponent.refresh(true);\n      this.highlightSelectedValue(currentValueIndex);\n    } else {\n      this.listComponent.refresh();\n    }\n  }\n  beforeHidePicker() {\n    this.highlightedItem = -1;\n    super.beforeHidePicker();\n  }\n  onWrapperFocus() {\n    if (!this.eInput) {\n      return;\n    }\n    const focusableEl = this.eInput.getFocusableElement();\n    focusableEl.focus();\n    focusableEl.select();\n  }\n  onWrapperFocusOut(e) {\n    if (!this.eWrapper.contains(e.relatedTarget)) {\n      this.hidePicker();\n    }\n  }\n  buildSearchStringFromKeyboardEvent(searchKey) {\n    let { key } = searchKey;\n    if (key === KeyCode.BACKSPACE) {\n      this.searchString = this.searchString.slice(0, -1);\n      key = \"\";\n    } else if (!isEventFromPrintableCharacter(searchKey)) {\n      return;\n    }\n    searchKey.preventDefault();\n    this.searchTextFromCharacter(key);\n  }\n  searchTextFromCharacter(char) {\n    this.searchString += char;\n    this.runSearch();\n    this.clearSearchString();\n  }\n  searchTextFromString(str) {\n    if (str == null) {\n      str = \"\";\n    }\n    this.searchString = str;\n    this.runSearch();\n  }\n  buildSearchStrings(values2) {\n    const { valueFormatter = (value) => value } = this.config;\n    let searchStrings;\n    if (typeof values2[0] === \"number\" || typeof values2[0] === \"string\") {\n      searchStrings = values2.map((v) => valueFormatter(v));\n    } else if (typeof values2[0] === \"object\" && this.searchStringCreator) {\n      searchStrings = this.searchStringCreator(values2);\n    }\n    return searchStrings;\n  }\n  getSuggestionsAndFilteredValues(searchValue, valueList) {\n    let suggestions = [];\n    let filteredValues = [];\n    if (!searchValue.length) {\n      return { suggestions, filteredValues };\n    }\n    ;\n    const { searchType = \"fuzzy\", filterList } = this.config;\n    if (searchType === \"fuzzy\") {\n      const fuzzySearchResult = fuzzySuggestions(this.searchString, valueList, true);\n      suggestions = fuzzySearchResult.values;\n      const indices = fuzzySearchResult.indices;\n      if (filterList && indices.length) {\n        for (let i = 0; i < indices.length; i++) {\n          filteredValues.push(this.values[indices[i]]);\n        }\n      }\n    } else {\n      suggestions = valueList.filter((val, idx) => {\n        const currentValue = val.toLocaleLowerCase();\n        const valueToMatch = this.searchString.toLocaleLowerCase();\n        const isMatch = searchType === \"match\" ? currentValue.startsWith(valueToMatch) : currentValue.indexOf(valueToMatch) !== -1;\n        if (filterList && isMatch) {\n          filteredValues.push(this.values[idx]);\n        }\n        return isMatch;\n      });\n    }\n    return { suggestions, filteredValues };\n  }\n  filterListModel(filteredValues) {\n    const { filterList } = this.config;\n    if (!filterList) {\n      return;\n    }\n    this.setValueList({ valueList: filteredValues, refresh: true });\n    this.alignPickerToComponent();\n  }\n  runSearch() {\n    var _a, _b;\n    const { values: values2 } = this;\n    const searchStrings = this.buildSearchStrings(values2);\n    if (!searchStrings) {\n      this.highlightSelectedValue(-1);\n      return;\n    }\n    const { suggestions, filteredValues } = this.getSuggestionsAndFilteredValues(this.searchString, searchStrings);\n    const { filterList, highlightMatch, searchType = \"fuzzy\" } = this.config;\n    const filterValueLen = filteredValues.length;\n    const shouldFilter = !!(filterList && this.searchString !== \"\");\n    this.filterListModel(shouldFilter ? filteredValues : values2);\n    if (suggestions.length) {\n      const topSuggestionIndex = shouldFilter ? 0 : searchStrings.indexOf(suggestions[0]);\n      this.selectListItem(topSuggestionIndex);\n    } else {\n      this.highlightSelectedValue(-1);\n      if (!shouldFilter || filterValueLen) {\n        (_a = this.listComponent) == null ? void 0 : _a.ensureIndexVisible(0);\n      } else if (shouldFilter) {\n        this.getAriaElement().removeAttribute(\"data-active-option\");\n        const eListAriaEl = (_b = this.listComponent) == null ? void 0 : _b.getAriaElement();\n        if (eListAriaEl) {\n          setAriaActiveDescendant(eListAriaEl, null);\n        }\n      }\n    }\n    if (highlightMatch && searchType !== \"fuzzy\") {\n      this.highlightFilterMatch();\n    }\n    this.displayOrHidePicker();\n  }\n  displayOrHidePicker() {\n    var _a;\n    const eListGui = (_a = this.listComponent) == null ? void 0 : _a.getGui();\n    const toggleValue = this.currentList ? this.currentList.length === 0 : false;\n    eListGui == null ? void 0 : eListGui.classList.toggle(\"ag-hidden\", toggleValue);\n  }\n  clearSearchString() {\n    this.searchString = \"\";\n  }\n  selectListItem(index, preventUnnecessaryScroll) {\n    if (!this.isPickerDisplayed || !this.currentList || !this.listComponent || index < 0 || index >= this.currentList.length) {\n      return;\n    }\n    const wasScrolled = this.listComponent.ensureIndexVisible(index, !preventUnnecessaryScroll);\n    if (wasScrolled && !preventUnnecessaryScroll) {\n      this.listComponent.refresh(true);\n    }\n    this.highlightSelectedValue(index);\n  }\n  setValue(value, silent, fromPicker) {\n    const index = this.currentList ? this.currentList.indexOf(value) : -1;\n    if (index === -1) {\n      return this;\n    }\n    this.value = value;\n    if (!fromPicker) {\n      this.selectListItem(index);\n    }\n    this.renderSelectedValue();\n    return super.setValue(value, silent);\n  }\n  createRowComponent(value) {\n    const row = new RichSelectRow(this.config, this.eWrapper);\n    row.setParentComponent(this.listComponent);\n    this.getContext().createBean(row);\n    row.setState(value);\n    const { highlightMatch, searchType = \"fuzzy\" } = this.config;\n    if (highlightMatch && searchType !== \"fuzzy\") {\n      row.highlightString(this.searchString);\n    }\n    return row;\n  }\n  getRowForMouseEvent(e) {\n    const { listComponent } = this;\n    if (!listComponent) {\n      return -1;\n    }\n    const eGui = listComponent == null ? void 0 : listComponent.getGui();\n    const rect = eGui.getBoundingClientRect();\n    const scrollTop = listComponent.getScrollTop();\n    const mouseY = e.clientY - rect.top + scrollTop;\n    return Math.floor(mouseY / listComponent.getRowHeight());\n  }\n  onPickerMouseMove(e) {\n    if (!this.listComponent) {\n      return;\n    }\n    const row = this.getRowForMouseEvent(e);\n    if (row !== -1 && row != this.lastRowHovered) {\n      this.lastRowHovered = row;\n      this.selectListItem(row, true);\n    }\n  }\n  onNavigationKeyDown(event, key) {\n    event.preventDefault();\n    const isDown = key === KeyCode.DOWN;\n    if (!this.isPickerDisplayed && isDown) {\n      this.showPicker();\n      return;\n    }\n    const oldIndex = this.highlightedItem;\n    const diff = isDown ? 1 : -1;\n    const newIndex = oldIndex === -1 ? 0 : oldIndex + diff;\n    this.selectListItem(newIndex);\n  }\n  onPageNavigation(key) {\n    var _a;\n    if (!this.isPickerDisplayed) {\n      return;\n    }\n    const newIndex = (_a = this.listComponent) == null ? void 0 : _a.navigateToPage(key, this.highlightedItem);\n    if (newIndex != null) {\n      this.animationFrameService.requestAnimationFrame(() => {\n        if (!this.isAlive()) {\n          return null;\n        }\n        this.highlightSelectedValue(newIndex);\n      });\n    }\n  }\n  onEnterKeyDown(e) {\n    if (!this.isPickerDisplayed) {\n      return;\n    }\n    e.preventDefault();\n    if (this.currentList) {\n      this.onListValueSelected(this.currentList[this.highlightedItem], true);\n    }\n  }\n  onTabKeyDown() {\n    if (!this.isPickerDisplayed || !this.currentList) {\n      return;\n    }\n    this.setValue(this.currentList[this.highlightedItem], false, true);\n  }\n  onListValueSelected(value, fromEnterKey) {\n    this.setValue(value, false, true);\n    this.dispatchPickerEvent(value, fromEnterKey);\n    this.hidePicker();\n  }\n  dispatchPickerEvent(value, fromEnterKey) {\n    const event = {\n      type: Events.EVENT_FIELD_PICKER_VALUE_SELECTED,\n      fromEnterKey,\n      value\n    };\n    this.dispatchEvent(event);\n  }\n  getFocusableElement() {\n    const { allowTyping } = this.config;\n    if (allowTyping) {\n      return this.eInput.getFocusableElement();\n    }\n    return super.getFocusableElement();\n  }\n  onKeyDown(event) {\n    const key = event.key;\n    const { allowTyping } = this.config;\n    switch (key) {\n      case KeyCode.LEFT:\n      case KeyCode.RIGHT:\n        if (!allowTyping) {\n          event.preventDefault();\n        }\n        break;\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        if (allowTyping) {\n          event.preventDefault();\n          const inputEl = this.eInput.getInputElement();\n          const target = key === KeyCode.PAGE_HOME ? 0 : inputEl.value.length;\n          inputEl.setSelectionRange(target, target);\n          break;\n        }\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_DOWN:\n        event.preventDefault();\n        this.onPageNavigation(key);\n        break;\n      case KeyCode.DOWN:\n      case KeyCode.UP:\n        this.onNavigationKeyDown(event, key);\n        break;\n      case KeyCode.ESCAPE:\n        if (this.isPickerDisplayed) {\n          if (isVisible(this.listComponent.getGui())) {\n            event.preventDefault();\n            stopPropagationForAgGrid(event);\n          }\n          this.hidePicker();\n        }\n        break;\n      case KeyCode.ENTER:\n        this.onEnterKeyDown(event);\n        break;\n      case KeyCode.TAB:\n        this.onTabKeyDown();\n        break;\n      default:\n        if (!allowTyping) {\n          this.buildSearchStringFromKeyboardEvent(event);\n        }\n    }\n  }\n  destroy() {\n    if (this.listComponent) {\n      this.destroyBean(this.listComponent);\n      this.listComponent = void 0;\n    }\n    this.eLoading = void 0;\n    super.destroy();\n  }\n};\n__decorateClass([\n  Autowired(\"userComponentFactory\")\n], AgRichSelect.prototype, \"userComponentFactory\", 2);\n__decorateClass([\n  Autowired(\"animationFrameService\")\n], AgRichSelect.prototype, \"animationFrameService\", 2);\n__decorateClass([\n  RefSelector(\"eInput\")\n], AgRichSelect.prototype, \"eInput\", 2);\n\n// community-modules/core/src/widgets/agSlider.ts\nvar _AgSlider = class _AgSlider extends AgAbstractLabel {\n  constructor(config) {\n    super(config, _AgSlider.TEMPLATE);\n    this.labelAlignment = \"top\";\n  }\n  init() {\n    this.eSlider.addCssClass(\"ag-slider-field\");\n    const { minValue, maxValue, textFieldWidth, step, value, onValueChange } = this.config;\n    if (minValue != null) {\n      this.setMinValue(minValue);\n    }\n    if (maxValue != null) {\n      this.setMaxValue(maxValue);\n    }\n    if (textFieldWidth != null) {\n      this.setTextFieldWidth(textFieldWidth);\n    }\n    if (step != null) {\n      this.setStep(step);\n    }\n    if (value != null) {\n      this.setValue(value);\n    }\n    if (onValueChange != null) {\n      this.onValueChange(onValueChange);\n    }\n  }\n  onValueChange(callbackFn) {\n    const eventChanged = Events.EVENT_FIELD_VALUE_CHANGED;\n    this.addManagedListener(this.eText, eventChanged, () => {\n      const textValue = parseFloat(this.eText.getValue());\n      this.eSlider.setValue(textValue.toString(), true);\n      callbackFn(textValue || 0);\n    });\n    this.addManagedListener(this.eSlider, eventChanged, () => {\n      const sliderValue = this.eSlider.getValue();\n      this.eText.setValue(sliderValue, true);\n      callbackFn(parseFloat(sliderValue));\n    });\n    return this;\n  }\n  setSliderWidth(width) {\n    this.eSlider.setWidth(width);\n    return this;\n  }\n  setTextFieldWidth(width) {\n    this.eText.setWidth(width);\n    return this;\n  }\n  setMinValue(minValue) {\n    this.eSlider.setMinValue(minValue);\n    this.eText.setMin(minValue);\n    return this;\n  }\n  setMaxValue(maxValue) {\n    this.eSlider.setMaxValue(maxValue);\n    this.eText.setMax(maxValue);\n    return this;\n  }\n  getValue() {\n    return this.eText.getValue();\n  }\n  setValue(value, silent) {\n    if (this.getValue() === value) {\n      return this;\n    }\n    this.eText.setValue(value, true);\n    this.eSlider.setValue(value, true);\n    if (!silent) {\n      this.dispatchEvent({ type: Events.EVENT_FIELD_VALUE_CHANGED });\n    }\n    return this;\n  }\n  setStep(step) {\n    this.eSlider.setStep(step);\n    this.eText.setStep(step);\n    return this;\n  }\n};\n_AgSlider.TEMPLATE = /* html */\n`<div class=\"ag-slider\">\n            <label ref=\"eLabel\"></label>\n            <div class=\"ag-wrapper ag-slider-wrapper\">\n                <ag-input-range ref=\"eSlider\"></ag-input-range>\n                <ag-input-number-field ref=\"eText\"></ag-input-number-field>\n            </div>\n        </div>`;\n__decorateClass([\n  RefSelector(\"eLabel\")\n], _AgSlider.prototype, \"eLabel\", 2);\n__decorateClass([\n  RefSelector(\"eSlider\")\n], _AgSlider.prototype, \"eSlider\", 2);\n__decorateClass([\n  RefSelector(\"eText\")\n], _AgSlider.prototype, \"eText\", 2);\n__decorateClass([\n  PostConstruct\n], _AgSlider.prototype, \"init\", 1);\nvar AgSlider = _AgSlider;\n\n// community-modules/core/src/widgets/agGroupComponent.ts\nvar _AgGroupComponent = class _AgGroupComponent extends Component {\n  constructor(params = {}) {\n    super(_AgGroupComponent.getTemplate(params));\n    this.params = params;\n    this.suppressEnabledCheckbox = true;\n    this.suppressToggleExpandOnEnableChange = false;\n    const {\n      enabled,\n      items,\n      suppressEnabledCheckbox,\n      expanded,\n      suppressToggleExpandOnEnableChange,\n      useToggle: toggleMode\n    } = params;\n    this.cssIdentifier = params.cssIdentifier || \"default\";\n    this.enabled = enabled != null ? enabled : true;\n    this.items = items || [];\n    this.useToggle = toggleMode != null ? toggleMode : false;\n    this.alignItems = params.alignItems || \"center\";\n    this.expanded = expanded == null ? true : expanded;\n    if (suppressEnabledCheckbox != null) {\n      this.suppressEnabledCheckbox = suppressEnabledCheckbox;\n    }\n    if (suppressToggleExpandOnEnableChange != null) {\n      this.suppressToggleExpandOnEnableChange = suppressToggleExpandOnEnableChange;\n    }\n  }\n  static getTemplate(params) {\n    const cssIdentifier = params.cssIdentifier || \"default\";\n    const direction = params.direction || \"vertical\";\n    return (\n      /* html */\n      `\n            <div class=\"ag-group ag-${cssIdentifier}-group\" role=\"presentation\">\n                <div ref=\"eToolbar\" class=\"ag-group-toolbar ag-${cssIdentifier}-group-toolbar\">\n                    <ag-checkbox ref=\"cbGroupEnabled\"></ag-checkbox>\n                </div>\n                <div ref=\"eContainer\" class=\"ag-group-container ag-group-container-${direction} ag-${cssIdentifier}-group-container\"></div>\n            </div>\n        `\n    );\n  }\n  postConstruct() {\n    this.setupTitleBar();\n    if (this.items.length) {\n      const initialItems = this.items;\n      this.items = [];\n      this.addItems(initialItems);\n    }\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    this.cbGroupEnabled.setLabel(localeTextFunc(\"enabled\", \"Enabled\"));\n    if (this.enabled) {\n      this.setEnabled(this.enabled, void 0, true);\n    }\n    this.setAlignItems(this.alignItems);\n    const { onEnableChange, suppressOpenCloseIcons } = this.params;\n    this.hideEnabledCheckbox(this.suppressEnabledCheckbox);\n    this.hideOpenCloseIcons(suppressOpenCloseIcons != null ? suppressOpenCloseIcons : false);\n    this.refreshChildDisplay();\n    setDisplayed(this.eContainer, this.expanded);\n    this.cbGroupEnabled.onValueChange((newSelection) => {\n      this.setEnabled(newSelection, true, this.suppressToggleExpandOnEnableChange);\n      this.dispatchEnableChangeEvent(newSelection);\n    });\n    if (onEnableChange != null) {\n      this.onEnableChange(onEnableChange);\n    }\n  }\n  refreshChildDisplay() {\n    var _a;\n    setDisplayed(this.eToolbar, this.expanded && !this.suppressEnabledCheckbox);\n    (_a = this.eTitleBar) == null ? void 0 : _a.refreshOnExpand(this.expanded);\n  }\n  isExpanded() {\n    return this.expanded;\n  }\n  setAlignItems(alignment) {\n    if (this.alignItems !== alignment) {\n      this.removeCssClass(`ag-group-item-alignment-${this.alignItems}`);\n    }\n    this.alignItems = alignment;\n    const newCls = `ag-group-item-alignment-${this.alignItems}`;\n    this.addCssClass(newCls);\n    return this;\n  }\n  toggleGroupExpand(expanded) {\n    var _a;\n    let silent = false;\n    if (((_a = this.eTitleBar) == null ? void 0 : _a.isSuppressCollapse()) && !this.useToggle) {\n      expanded = true;\n      silent = true;\n    } else {\n      expanded = expanded != null ? expanded : !this.expanded;\n      if (this.expanded === expanded) {\n        return this;\n      }\n    }\n    this.expanded = expanded;\n    this.refreshChildDisplay();\n    setDisplayed(this.eContainer, expanded);\n    if (!silent) {\n      this.dispatchEvent({ type: expanded ? _AgGroupComponent.EVENT_EXPANDED : _AgGroupComponent.EVENT_COLLAPSED });\n    }\n    return this;\n  }\n  addItems(items) {\n    items.forEach((item) => this.addItem(item));\n  }\n  prependItem(item) {\n    this.insertItem(item, true);\n  }\n  addItem(item) {\n    this.insertItem(item, false);\n  }\n  insertItem(item, prepend) {\n    const container = this.eContainer;\n    const el = item instanceof Component ? item.getGui() : item;\n    el.classList.add(\"ag-group-item\", `ag-${this.cssIdentifier}-group-item`);\n    if (prepend) {\n      container.insertAdjacentElement(\"afterbegin\", el);\n      this.items.unshift(el);\n    } else {\n      container.appendChild(el);\n      this.items.push(el);\n    }\n  }\n  hideItem(hide, index) {\n    const itemToHide = this.items[index];\n    setDisplayed(itemToHide, !hide);\n  }\n  getItemIndex(item) {\n    const el = item instanceof Component ? item.getGui() : item;\n    return this.items.indexOf(el);\n  }\n  setTitle(title) {\n    var _a;\n    (_a = this.eTitleBar) == null ? void 0 : _a.setTitle(title);\n    return this;\n  }\n  addTitleBarWidget(el) {\n    var _a;\n    (_a = this.eTitleBar) == null ? void 0 : _a.addWidget(el);\n    return this;\n  }\n  addCssClassToTitleBar(cssClass) {\n    var _a;\n    (_a = this.eTitleBar) == null ? void 0 : _a.addCssClass(cssClass);\n  }\n  dispatchEnableChangeEvent(enabled) {\n    const event = {\n      type: _AgGroupComponent.EVENT_ENABLE_CHANGE,\n      enabled\n    };\n    this.dispatchEvent(event);\n  }\n  setEnabled(enabled, skipToggle, skipExpand) {\n    var _a;\n    this.enabled = enabled;\n    this.refreshDisabledStyles();\n    if (!skipExpand) {\n      this.toggleGroupExpand(enabled);\n    }\n    if (!skipToggle) {\n      this.cbGroupEnabled.setValue(enabled);\n      (_a = this.eToggle) == null ? void 0 : _a.setValue(enabled);\n    }\n    return this;\n  }\n  isEnabled() {\n    return this.enabled;\n  }\n  onEnableChange(callbackFn) {\n    this.addManagedListener(this, _AgGroupComponent.EVENT_ENABLE_CHANGE, (event) => callbackFn(event.enabled));\n    return this;\n  }\n  hideEnabledCheckbox(hide) {\n    this.suppressEnabledCheckbox = hide;\n    this.refreshChildDisplay();\n    this.refreshDisabledStyles();\n    return this;\n  }\n  hideOpenCloseIcons(hide) {\n    var _a;\n    (_a = this.eTitleBar) == null ? void 0 : _a.hideOpenCloseIcons(hide);\n    return this;\n  }\n  refreshDisabledStyles() {\n    var _a;\n    const disabled = !this.enabled;\n    this.eContainer.classList.toggle(\"ag-disabled\", disabled);\n    (_a = this.eTitleBar) == null ? void 0 : _a.refreshDisabledStyles(this.suppressEnabledCheckbox && disabled);\n    this.eContainer.classList.toggle(\"ag-disabled-group-container\", disabled);\n  }\n  setupTitleBar() {\n    const titleBar = this.useToggle ? this.createToggleTitleBar() : this.createDefaultTitleBar();\n    this.eToolbar.insertAdjacentElement(\"beforebegin\", titleBar.getGui());\n  }\n  createDefaultTitleBar() {\n    const titleBar = this.createManagedBean(new DefaultTitleBar(this.params));\n    this.eTitleBar = titleBar;\n    titleBar.refreshOnExpand(this.expanded);\n    this.addManagedListener(titleBar, DefaultTitleBar.EVENT_EXPAND_CHANGED, (event) => this.toggleGroupExpand(event.expanded));\n    return titleBar;\n  }\n  createToggleTitleBar() {\n    var _a;\n    const eToggle = this.createManagedBean(new AgToggleButton({\n      value: this.enabled,\n      label: this.params.title,\n      labelAlignment: \"left\",\n      labelWidth: \"flex\",\n      onValueChange: (enabled) => {\n        this.setEnabled(enabled, true);\n        this.dispatchEnableChangeEvent(enabled);\n      }\n    }));\n    eToggle.addCssClass(\"ag-group-title-bar\");\n    eToggle.addCssClass(`ag-${(_a = this.params.cssIdentifier) != null ? _a : \"default\"}-group-title-bar ag-unselectable`);\n    this.eToggle = eToggle;\n    this.toggleGroupExpand(this.enabled);\n    return eToggle;\n  }\n};\n_AgGroupComponent.EVENT_EXPANDED = \"expanded\";\n_AgGroupComponent.EVENT_COLLAPSED = \"collapsed\";\n_AgGroupComponent.EVENT_ENABLE_CHANGE = \"enableChange\";\n__decorateClass([\n  RefSelector(\"eToolbar\")\n], _AgGroupComponent.prototype, \"eToolbar\", 2);\n__decorateClass([\n  RefSelector(\"cbGroupEnabled\")\n], _AgGroupComponent.prototype, \"cbGroupEnabled\", 2);\n__decorateClass([\n  RefSelector(\"eContainer\")\n], _AgGroupComponent.prototype, \"eContainer\", 2);\n__decorateClass([\n  PostConstruct\n], _AgGroupComponent.prototype, \"postConstruct\", 1);\nvar AgGroupComponent = _AgGroupComponent;\nvar TITLE_BAR_DISABLED_CLASS = \"ag-disabled-group-title-bar\";\nvar _DefaultTitleBar = class _DefaultTitleBar extends Component {\n  constructor(params = {}) {\n    super(_DefaultTitleBar.getTemplate(params));\n    this.suppressOpenCloseIcons = false;\n    const { title, suppressOpenCloseIcons } = params;\n    if (!!title && title.length > 0) {\n      this.title = title;\n    }\n    if (suppressOpenCloseIcons != null) {\n      this.suppressOpenCloseIcons = suppressOpenCloseIcons;\n    }\n  }\n  static getTemplate(params) {\n    var _a;\n    const cssIdentifier = (_a = params.cssIdentifier) != null ? _a : \"default\";\n    return (\n      /* html */\n      `\n            <div class=\"ag-group-title-bar ag-${cssIdentifier}-group-title-bar ag-unselectable\" role=\"button\">\n                <span class=\"ag-group-title-bar-icon ag-${cssIdentifier}-group-title-bar-icon\" ref=\"eGroupOpenedIcon\" role=\"presentation\"></span>\n                <span class=\"ag-group-title-bar-icon ag-${cssIdentifier}-group-title-bar-icon\" ref=\"eGroupClosedIcon\" role=\"presentation\"></span>\n                <span ref=\"eTitle\" class=\"ag-group-title ag-${cssIdentifier}-group-title\"></span>\n            </div>\n        `\n    );\n  }\n  postConstruct() {\n    this.setTitle(this.title);\n    this.hideOpenCloseIcons(this.suppressOpenCloseIcons);\n    this.setupExpandContract();\n  }\n  setupExpandContract() {\n    this.eGroupClosedIcon.appendChild(createIcon(\"columnSelectClosed\", this.gos, null));\n    this.eGroupOpenedIcon.appendChild(createIcon(\"columnSelectOpen\", this.gos, null));\n    this.addManagedListener(this.getGui(), \"click\", () => this.dispatchExpandChanged());\n    this.addManagedListener(this.getGui(), \"keydown\", (e) => {\n      switch (e.key) {\n        case KeyCode.ENTER:\n        case KeyCode.SPACE:\n          e.preventDefault();\n          this.dispatchExpandChanged();\n          break;\n        case KeyCode.RIGHT:\n        case KeyCode.LEFT:\n          e.preventDefault();\n          this.dispatchExpandChanged(e.key === KeyCode.RIGHT);\n          break;\n      }\n    });\n  }\n  refreshOnExpand(expanded) {\n    this.refreshAriaStatus(expanded);\n    this.refreshOpenCloseIcons(expanded);\n  }\n  refreshAriaStatus(expanded) {\n    if (!this.suppressOpenCloseIcons) {\n      setAriaExpanded(this.getGui(), expanded);\n    }\n  }\n  refreshOpenCloseIcons(expanded) {\n    const showIcon = !this.suppressOpenCloseIcons;\n    setDisplayed(this.eGroupOpenedIcon, showIcon && expanded);\n    setDisplayed(this.eGroupClosedIcon, showIcon && !expanded);\n  }\n  isSuppressCollapse() {\n    return this.suppressOpenCloseIcons;\n  }\n  dispatchExpandChanged(expanded) {\n    const event = {\n      type: _DefaultTitleBar.EVENT_EXPAND_CHANGED,\n      expanded\n    };\n    this.dispatchEvent(event);\n  }\n  setTitle(title) {\n    const eGui = this.getGui();\n    const hasTitle = !!title && title.length > 0;\n    title = hasTitle ? title : void 0;\n    this.eTitle.textContent = title != null ? title : \"\";\n    setDisplayed(eGui, hasTitle);\n    if (title !== this.title) {\n      this.title = title;\n    }\n    const disabled = eGui.classList.contains(TITLE_BAR_DISABLED_CLASS);\n    this.refreshDisabledStyles(disabled);\n    return this;\n  }\n  addWidget(el) {\n    this.getGui().appendChild(el);\n    return this;\n  }\n  hideOpenCloseIcons(hide) {\n    this.suppressOpenCloseIcons = hide;\n    if (hide) {\n      this.dispatchExpandChanged(true);\n    }\n    return this;\n  }\n  refreshDisabledStyles(disabled) {\n    const eGui = this.getGui();\n    if (disabled) {\n      eGui.classList.add(TITLE_BAR_DISABLED_CLASS);\n      eGui.removeAttribute(\"tabindex\");\n    } else {\n      eGui.classList.remove(TITLE_BAR_DISABLED_CLASS);\n      if (typeof this.title === \"string\") {\n        eGui.setAttribute(\"tabindex\", \"0\");\n      } else {\n        eGui.removeAttribute(\"tabindex\");\n      }\n    }\n  }\n};\n_DefaultTitleBar.EVENT_EXPAND_CHANGED = \"expandedChanged\";\n__decorateClass([\n  RefSelector(\"eGroupOpenedIcon\")\n], _DefaultTitleBar.prototype, \"eGroupOpenedIcon\", 2);\n__decorateClass([\n  RefSelector(\"eGroupClosedIcon\")\n], _DefaultTitleBar.prototype, \"eGroupClosedIcon\", 2);\n__decorateClass([\n  RefSelector(\"eTitle\")\n], _DefaultTitleBar.prototype, \"eTitle\", 2);\n__decorateClass([\n  PostConstruct\n], _DefaultTitleBar.prototype, \"postConstruct\", 1);\nvar DefaultTitleBar = _DefaultTitleBar;\n\n// community-modules/core/src/widgets/agMenuList.ts\nvar AgMenuList = class extends TabGuardComp {\n  constructor(level = 0, params) {\n    super(\n      /* html */\n      `<div class=\"ag-menu-list\" role=\"tree\"></div>`\n    );\n    this.level = level;\n    this.menuItems = [];\n    this.params = params != null ? params : {\n      column: null,\n      node: null,\n      value: null\n    };\n  }\n  postConstruct() {\n    this.initialiseTabGuard({\n      onTabKeyDown: (e) => this.onTabKeyDown(e),\n      handleKeyDown: (e) => this.handleKeyDown(e),\n      onFocusIn: (e) => this.handleFocusIn(e),\n      onFocusOut: (e) => this.handleFocusOut(e)\n    });\n  }\n  onTabKeyDown(e) {\n    const parent = this.getParentComponent();\n    const parentGui = parent && parent.getGui();\n    const isManaged = parentGui && parentGui.classList.contains(\"ag-focus-managed\");\n    if (!isManaged) {\n      e.preventDefault();\n    }\n    if (e.shiftKey) {\n      this.closeIfIsChild(e);\n    }\n  }\n  handleKeyDown(e) {\n    switch (e.key) {\n      case KeyCode.UP:\n      case KeyCode.RIGHT:\n      case KeyCode.DOWN:\n      case KeyCode.LEFT:\n        e.preventDefault();\n        this.handleNavKey(e.key);\n        break;\n      case KeyCode.ESCAPE:\n        if (this.closeIfIsChild()) {\n          stopPropagationForAgGrid(e);\n        }\n        break;\n    }\n  }\n  handleFocusIn(e) {\n    var _a, _b;\n    const oldFocusedElement = e.relatedTarget;\n    if (!this.tabGuardCtrl.isTabGuard(oldFocusedElement) && (this.getGui().contains(oldFocusedElement) || ((_b = (_a = this.activeMenuItem) == null ? void 0 : _a.getSubMenuGui()) == null ? void 0 : _b.contains(oldFocusedElement)))) {\n      return;\n    }\n    if (this.activeMenuItem) {\n      this.activeMenuItem.activate();\n    } else {\n      this.activateFirstItem();\n    }\n  }\n  handleFocusOut(e) {\n    var _a;\n    const newFocusedElement = e.relatedTarget;\n    if (!this.activeMenuItem || this.getGui().contains(newFocusedElement) || ((_a = this.activeMenuItem.getSubMenuGui()) == null ? void 0 : _a.contains(newFocusedElement))) {\n      return;\n    }\n    if (!this.activeMenuItem.isSubMenuOpening()) {\n      this.activeMenuItem.deactivate();\n    }\n  }\n  clearActiveItem() {\n    if (this.activeMenuItem) {\n      this.activeMenuItem.deactivate();\n      this.activeMenuItem = null;\n    }\n  }\n  addMenuItems(menuItems) {\n    if (menuItems == null) {\n      return;\n    }\n    AgPromise.all(menuItems.map((menuItemOrString) => {\n      if (menuItemOrString === \"separator\") {\n        return AgPromise.resolve({ eGui: this.createSeparator() });\n      } else if (typeof menuItemOrString === \"string\") {\n        console.warn(`AG Grid: unrecognised menu item ${menuItemOrString}`);\n        return AgPromise.resolve({ eGui: null });\n      } else {\n        return this.addItem(menuItemOrString);\n      }\n    })).then((elements) => {\n      elements.forEach((element) => {\n        if (element == null ? void 0 : element.eGui) {\n          this.appendChild(element.eGui);\n          if (element.comp) {\n            this.menuItems.push(element.comp);\n          }\n        }\n      });\n    });\n  }\n  addItem(menuItemDef) {\n    const menuItem = this.createManagedBean(new AgMenuItemComponent());\n    return menuItem.init({\n      menuItemDef,\n      isAnotherSubMenuOpen: () => this.menuItems.some((m) => m.isSubMenuOpen()),\n      level: this.level,\n      contextParams: this.params\n    }).then(() => {\n      menuItem.setParentComponent(this);\n      this.addManagedListener(menuItem, AgMenuItemComponent.EVENT_CLOSE_MENU, (event) => {\n        this.dispatchEvent(event);\n      });\n      this.addManagedListener(menuItem, AgMenuItemComponent.EVENT_MENU_ITEM_ACTIVATED, (event) => {\n        if (this.activeMenuItem && this.activeMenuItem !== event.menuItem) {\n          this.activeMenuItem.deactivate();\n        }\n        this.activeMenuItem = event.menuItem;\n      });\n      return {\n        comp: menuItem,\n        eGui: menuItem.getGui()\n      };\n    });\n  }\n  activateFirstItem() {\n    const item = this.menuItems.filter((currentItem) => !currentItem.isDisabled())[0];\n    if (!item) {\n      return;\n    }\n    item.activate();\n  }\n  createSeparator() {\n    const separatorHtml = (\n      /* html */\n      `\n            <div class=\"ag-menu-separator\" aria-hidden=\"true\">\n                <div class=\"ag-menu-separator-part\"></div>\n                <div class=\"ag-menu-separator-part\"></div>\n                <div class=\"ag-menu-separator-part\"></div>\n                <div class=\"ag-menu-separator-part\"></div>\n            </div>`\n    );\n    return loadTemplate(separatorHtml);\n  }\n  handleNavKey(key) {\n    switch (key) {\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n        const nextItem = this.findNextItem(key === KeyCode.UP);\n        if (nextItem && nextItem !== this.activeMenuItem) {\n          nextItem.activate();\n        }\n        return;\n    }\n    const left = this.gos.get(\"enableRtl\") ? KeyCode.RIGHT : KeyCode.LEFT;\n    if (key === left) {\n      this.closeIfIsChild();\n    } else {\n      this.openChild();\n    }\n  }\n  closeIfIsChild(e) {\n    const parentItem = this.getParentComponent();\n    if (parentItem && parentItem instanceof AgMenuItemComponent) {\n      if (e) {\n        e.preventDefault();\n      }\n      parentItem.closeSubMenu();\n      parentItem.getGui().focus();\n      return true;\n    }\n    return false;\n  }\n  openChild() {\n    if (this.activeMenuItem) {\n      this.activeMenuItem.openSubMenu(true);\n    }\n  }\n  findNextItem(up) {\n    const items = this.menuItems.filter((item) => !item.isDisabled());\n    if (!items.length) {\n      return;\n    }\n    if (!this.activeMenuItem) {\n      return up ? last(items) : items[0];\n    }\n    if (up) {\n      items.reverse();\n    }\n    let nextItem;\n    let foundCurrent = false;\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      if (!foundCurrent) {\n        if (item === this.activeMenuItem) {\n          foundCurrent = true;\n        }\n        continue;\n      }\n      nextItem = item;\n      break;\n    }\n    if (foundCurrent && !nextItem) {\n      return items[0];\n    }\n    return nextItem || this.activeMenuItem;\n  }\n  destroy() {\n    this.clearActiveItem();\n    super.destroy();\n  }\n};\n__decorateClass([\n  Autowired(\"focusService\")\n], AgMenuList.prototype, \"focusService\", 2);\n__decorateClass([\n  PostConstruct\n], AgMenuList.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/widgets/agMenuPanel.ts\nvar AgMenuPanel = class extends TabGuardComp {\n  constructor(wrappedComponent) {\n    super();\n    this.wrappedComponent = wrappedComponent;\n    this.setTemplateFromElement(wrappedComponent.getGui());\n  }\n  postConstruct() {\n    this.initialiseTabGuard({\n      onTabKeyDown: (e) => this.onTabKeyDown(e),\n      handleKeyDown: (e) => this.handleKeyDown(e)\n    });\n  }\n  handleKeyDown(e) {\n    if (e.key === KeyCode.ESCAPE) {\n      this.closePanel();\n    }\n  }\n  onTabKeyDown(e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n    this.closePanel();\n    e.preventDefault();\n  }\n  closePanel() {\n    const menuItem = this.parentComponent;\n    menuItem.closeSubMenu();\n    setTimeout(() => menuItem.getGui().focus(), 0);\n  }\n};\n__decorateClass([\n  PostConstruct\n], AgMenuPanel.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/widgets/agMenuItemComponent.ts\nvar _AgMenuItemComponent = class _AgMenuItemComponent extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.isActive = false;\n    this.subMenuIsOpen = false;\n    this.subMenuIsOpening = false;\n    this.suppressRootStyles = true;\n    this.suppressAria = true;\n    this.suppressFocus = true;\n  }\n  init(params) {\n    var _a, _b;\n    const { menuItemDef, isAnotherSubMenuOpen, level, childComponent, contextParams } = params;\n    this.params = params.menuItemDef;\n    this.level = level;\n    this.isAnotherSubMenuOpen = isAnotherSubMenuOpen;\n    this.childComponent = childComponent;\n    this.contextParams = contextParams;\n    this.cssClassPrefix = (_b = (_a = this.params.menuItemParams) == null ? void 0 : _a.cssClassPrefix) != null ? _b : \"ag-menu-option\";\n    const compDetails = this.userComponentFactory.getMenuItemCompDetails(this.params, __spreadProps(__spreadValues({}, menuItemDef), {\n      level,\n      isAnotherSubMenuOpen,\n      openSubMenu: (activateFirstItem) => this.openSubMenu(activateFirstItem),\n      closeSubMenu: () => this.closeSubMenu(),\n      closeMenu: (event) => this.closeMenu(event),\n      updateTooltip: (tooltip, shouldDisplayTooltip) => this.refreshTooltip(tooltip, shouldDisplayTooltip),\n      onItemActivated: () => this.onItemActivated()\n    }));\n    return compDetails.newAgStackInstance().then((comp) => {\n      var _a2;\n      this.menuItemComp = comp;\n      const configureDefaults = (_a2 = comp.configureDefaults) == null ? void 0 : _a2.call(comp);\n      if (configureDefaults) {\n        this.configureDefaults(configureDefaults === true ? void 0 : configureDefaults);\n      }\n    });\n  }\n  addListeners(eGui, params) {\n    if (!(params == null ? void 0 : params.suppressClick)) {\n      this.addManagedListener(eGui, \"click\", (e) => this.onItemSelected(e));\n    }\n    if (!(params == null ? void 0 : params.suppressKeyboardSelect)) {\n      this.addManagedListener(eGui, \"keydown\", (e) => {\n        if (e.key === KeyCode.ENTER || e.key === KeyCode.SPACE) {\n          e.preventDefault();\n          this.onItemSelected(e);\n        }\n      });\n    }\n    if (!(params == null ? void 0 : params.suppressMouseDown)) {\n      this.addManagedListener(eGui, \"mousedown\", (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n    if (!(params == null ? void 0 : params.suppressMouseOver)) {\n      this.addManagedListener(eGui, \"mouseenter\", () => this.onMouseEnter());\n      this.addManagedListener(eGui, \"mouseleave\", () => this.onMouseLeave());\n    }\n  }\n  isDisabled() {\n    return !!this.params.disabled;\n  }\n  openSubMenu(activateFirstItem = false) {\n    var _a, _b;\n    this.closeSubMenu();\n    if (!this.params.subMenu) {\n      return;\n    }\n    this.subMenuIsOpening = true;\n    const ePopup = loadTemplate(\n      /* html */\n      `<div class=\"ag-menu\" role=\"presentation\"></div>`\n    );\n    this.eSubMenuGui = ePopup;\n    let destroySubMenu;\n    let afterGuiAttached = () => {\n      this.subMenuIsOpening = false;\n    };\n    if (this.childComponent) {\n      const menuPanel = this.createBean(new AgMenuPanel(this.childComponent));\n      menuPanel.setParentComponent(this);\n      const subMenuGui = menuPanel.getGui();\n      const mouseEvent = \"mouseenter\";\n      const mouseEnterListener = () => this.cancelDeactivate();\n      subMenuGui.addEventListener(mouseEvent, mouseEnterListener);\n      destroySubMenu = () => subMenuGui.removeEventListener(mouseEvent, mouseEnterListener);\n      ePopup.appendChild(subMenuGui);\n      if (this.childComponent.afterGuiAttached) {\n        afterGuiAttached = () => {\n          this.childComponent.afterGuiAttached();\n          this.subMenuIsOpening = false;\n        };\n      }\n    } else if (this.params.subMenu) {\n      const childMenu = this.createBean(new AgMenuList(this.level + 1, this.contextParams));\n      childMenu.setParentComponent(this);\n      childMenu.addMenuItems(this.params.subMenu);\n      ePopup.appendChild(childMenu.getGui());\n      this.addManagedListener(childMenu, _AgMenuItemComponent.EVENT_CLOSE_MENU, (e) => this.dispatchEvent(e));\n      childMenu.addGuiEventListener(\"mouseenter\", () => this.cancelDeactivate());\n      destroySubMenu = () => this.destroyBean(childMenu);\n      if (activateFirstItem) {\n        afterGuiAttached = () => {\n          childMenu.activateFirstItem();\n          this.subMenuIsOpening = false;\n        };\n      }\n    }\n    const positionCallback = this.popupService.positionPopupForMenu.bind(\n      this.popupService,\n      { eventSource: this.eGui, ePopup }\n    );\n    const translate = this.localeService.getLocaleTextFunc();\n    const addPopupRes = this.popupService.addPopup({\n      modal: true,\n      eChild: ePopup,\n      positionCallback,\n      anchorToElement: this.eGui,\n      ariaLabel: translate(\"ariaLabelSubMenu\", \"SubMenu\"),\n      afterGuiAttached\n    });\n    this.subMenuIsOpen = true;\n    this.setAriaExpanded(true);\n    this.hideSubMenu = () => {\n      var _a2, _b2;\n      if (addPopupRes) {\n        addPopupRes.hideFunc();\n      }\n      this.subMenuIsOpen = false;\n      this.setAriaExpanded(false);\n      destroySubMenu();\n      (_b2 = (_a2 = this.menuItemComp).setExpanded) == null ? void 0 : _b2.call(_a2, false);\n      this.eSubMenuGui = void 0;\n    };\n    (_b = (_a = this.menuItemComp).setExpanded) == null ? void 0 : _b.call(_a, true);\n  }\n  setAriaExpanded(expanded) {\n    if (!this.suppressAria) {\n      setAriaExpanded(this.eGui, expanded);\n    }\n  }\n  closeSubMenu() {\n    if (!this.hideSubMenu) {\n      return;\n    }\n    this.hideSubMenu();\n    this.hideSubMenu = null;\n    this.setAriaExpanded(false);\n  }\n  isSubMenuOpen() {\n    return this.subMenuIsOpen;\n  }\n  isSubMenuOpening() {\n    return this.subMenuIsOpening;\n  }\n  activate(openSubMenu) {\n    var _a, _b;\n    this.cancelActivate();\n    if (this.params.disabled) {\n      return;\n    }\n    this.isActive = true;\n    if (!this.suppressRootStyles) {\n      this.eGui.classList.add(`${this.cssClassPrefix}-active`);\n    }\n    (_b = (_a = this.menuItemComp).setActive) == null ? void 0 : _b.call(_a, true);\n    if (!this.suppressFocus) {\n      this.eGui.focus({ preventScroll: true });\n    }\n    if (openSubMenu && this.params.subMenu) {\n      window.setTimeout(() => {\n        if (this.isAlive() && this.isActive) {\n          this.openSubMenu();\n        }\n      }, 300);\n    }\n    this.onItemActivated();\n  }\n  deactivate() {\n    var _a, _b;\n    this.cancelDeactivate();\n    if (!this.suppressRootStyles) {\n      this.eGui.classList.remove(`${this.cssClassPrefix}-active`);\n    }\n    (_b = (_a = this.menuItemComp).setActive) == null ? void 0 : _b.call(_a, false);\n    this.isActive = false;\n    if (this.subMenuIsOpen) {\n      this.hideSubMenu();\n    }\n  }\n  getGui() {\n    return this.menuItemComp.getGui();\n  }\n  getParentComponent() {\n    return this.parentComponent;\n  }\n  setParentComponent(component) {\n    this.parentComponent = component;\n  }\n  getSubMenuGui() {\n    return this.eSubMenuGui;\n  }\n  onItemSelected(event) {\n    var _a, _b;\n    (_b = (_a = this.menuItemComp).select) == null ? void 0 : _b.call(_a);\n    if (this.params.action) {\n      this.getFrameworkOverrides().wrapOutgoing(() => this.params.action(this.gos.addGridCommonParams(__spreadValues({}, this.contextParams))));\n    } else {\n      this.openSubMenu(event && event.type === \"keydown\");\n    }\n    if (this.params.subMenu && !this.params.action || this.params.suppressCloseOnSelect) {\n      return;\n    }\n    this.closeMenu(event);\n  }\n  closeMenu(event) {\n    const e = {\n      type: _AgMenuItemComponent.EVENT_CLOSE_MENU\n    };\n    if (event) {\n      if (event instanceof MouseEvent) {\n        e.mouseEvent = event;\n      } else {\n        e.keyboardEvent = event;\n      }\n    }\n    this.dispatchEvent(e);\n  }\n  onItemActivated() {\n    const event = {\n      type: _AgMenuItemComponent.EVENT_MENU_ITEM_ACTIVATED,\n      menuItem: this\n    };\n    this.dispatchEvent(event);\n  }\n  cancelActivate() {\n    if (this.activateTimeoutId) {\n      window.clearTimeout(this.activateTimeoutId);\n      this.activateTimeoutId = 0;\n    }\n  }\n  cancelDeactivate() {\n    if (this.deactivateTimeoutId) {\n      window.clearTimeout(this.deactivateTimeoutId);\n      this.deactivateTimeoutId = 0;\n    }\n  }\n  onMouseEnter() {\n    this.cancelDeactivate();\n    if (this.isAnotherSubMenuOpen()) {\n      this.activateTimeoutId = window.setTimeout(() => this.activate(true), _AgMenuItemComponent.ACTIVATION_DELAY);\n    } else {\n      this.activate(true);\n    }\n  }\n  onMouseLeave() {\n    this.cancelActivate();\n    if (this.isSubMenuOpen()) {\n      this.deactivateTimeoutId = window.setTimeout(() => this.deactivate(), _AgMenuItemComponent.ACTIVATION_DELAY);\n    } else {\n      this.deactivate();\n    }\n  }\n  configureDefaults(params) {\n    var _a, _b, _c;\n    if (!this.menuItemComp) {\n      setTimeout(() => this.configureDefaults(params));\n      return;\n    }\n    let eGui = this.menuItemComp.getGui();\n    const rootElement = (_b = (_a = this.menuItemComp).getRootElement) == null ? void 0 : _b.call(_a);\n    if (rootElement) {\n      if (!(params == null ? void 0 : params.suppressRootStyles)) {\n        eGui.classList.add(\"ag-menu-option-custom\");\n      }\n      eGui = rootElement;\n    }\n    this.eGui = eGui;\n    this.suppressRootStyles = !!(params == null ? void 0 : params.suppressRootStyles);\n    if (!this.suppressRootStyles) {\n      eGui.classList.add(this.cssClassPrefix);\n      (_c = this.params.cssClasses) == null ? void 0 : _c.forEach((it) => eGui.classList.add(it));\n      if (this.params.disabled) {\n        eGui.classList.add(`${this.cssClassPrefix}-disabled`);\n      }\n    }\n    if (!(params == null ? void 0 : params.suppressTooltip)) {\n      this.refreshTooltip(this.params.tooltip);\n    }\n    this.suppressAria = !!(params == null ? void 0 : params.suppressAria);\n    if (!this.suppressAria) {\n      setAriaRole(eGui, \"treeitem\");\n      setAriaLevel(eGui, this.level + 1);\n      if (this.params.disabled) {\n        setAriaDisabled(eGui, true);\n      }\n    }\n    if (!(params == null ? void 0 : params.suppressTabIndex)) {\n      eGui.setAttribute(\"tabindex\", \"-1\");\n    }\n    if (!this.params.disabled) {\n      this.addListeners(eGui, params);\n    }\n    this.suppressFocus = !!(params == null ? void 0 : params.suppressFocus);\n  }\n  refreshTooltip(tooltip, shouldDisplayTooltip) {\n    this.tooltip = tooltip;\n    if (this.tooltipFeature) {\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    }\n    if (!tooltip || !this.menuItemComp) {\n      return;\n    }\n    this.tooltipFeature = this.createBean(new TooltipFeature({\n      getGui: () => this.getGui(),\n      getTooltipValue: () => this.tooltip,\n      getLocation: () => \"menu\",\n      shouldDisplayTooltip\n    }));\n  }\n  destroy() {\n    if (this.tooltipFeature) {\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    }\n    super.destroy();\n  }\n};\n_AgMenuItemComponent.EVENT_CLOSE_MENU = \"closeMenu\";\n_AgMenuItemComponent.EVENT_MENU_ITEM_ACTIVATED = \"menuItemActivated\";\n_AgMenuItemComponent.ACTIVATION_DELAY = 80;\n__decorateClass([\n  Autowired(\"popupService\")\n], _AgMenuItemComponent.prototype, \"popupService\", 2);\n__decorateClass([\n  Autowired(\"userComponentFactory\")\n], _AgMenuItemComponent.prototype, \"userComponentFactory\", 2);\nvar AgMenuItemComponent = _AgMenuItemComponent;\n\n// community-modules/core/src/widgets/agPanel.ts\nvar _AgPanel = class _AgPanel extends Component {\n  constructor(config) {\n    super(_AgPanel.getTemplate(config));\n    this.config = config;\n    this.closable = true;\n  }\n  static getTemplate(config) {\n    const cssIdentifier = config.cssIdentifier || \"default\";\n    return (\n      /* html */\n      `<div class=\"ag-panel ag-${cssIdentifier}-panel\" tabindex=\"-1\">\n            <div ref=\"eTitleBar\" class=\"ag-panel-title-bar ag-${cssIdentifier}-panel-title-bar ag-unselectable\">\n                <span ref=\"eTitle\" class=\"ag-panel-title-bar-title ag-${cssIdentifier}-panel-title-bar-title\"></span>\n                <div ref=\"eTitleBarButtons\" class=\"ag-panel-title-bar-buttons ag-${cssIdentifier}-panel-title-bar-buttons\"></div>\n            </div>\n            <div ref=\"eContentWrapper\" class=\"ag-panel-content-wrapper ag-${cssIdentifier}-panel-content-wrapper\"></div>\n        </div>`\n    );\n  }\n  postConstruct() {\n    const {\n      component,\n      closable,\n      hideTitleBar,\n      title,\n      minWidth = 250,\n      width,\n      minHeight = 250,\n      height,\n      centered,\n      popup,\n      x,\n      y\n    } = this.config;\n    this.positionableFeature = new PositionableFeature(this.getGui(), {\n      minWidth,\n      width,\n      minHeight,\n      height,\n      centered,\n      x,\n      y,\n      popup,\n      calculateTopBuffer: () => this.positionableFeature.getHeight() - this.getBodyHeight()\n    });\n    this.createManagedBean(this.positionableFeature);\n    const eGui = this.getGui();\n    if (component) {\n      this.setBodyComponent(component);\n    }\n    if (!hideTitleBar) {\n      if (title) {\n        this.setTitle(title);\n      }\n      this.setClosable(closable != null ? closable : this.closable);\n    } else {\n      setDisplayed(this.eTitleBar, false);\n    }\n    this.addManagedListener(this.eTitleBar, \"mousedown\", (e) => {\n      if (eGui.contains(e.relatedTarget) || eGui.contains(this.gos.getActiveDomElement()) || this.eTitleBarButtons.contains(e.target)) {\n        e.preventDefault();\n        return;\n      }\n      const focusEl = this.eContentWrapper.querySelector(\"button, [href], input, select, textarea, [tabindex]\");\n      if (focusEl) {\n        focusEl.focus();\n      }\n    });\n    if (popup && this.positionableFeature.isPositioned()) {\n      return;\n    }\n    if (this.renderComponent) {\n      this.renderComponent();\n    }\n    this.positionableFeature.initialisePosition();\n    this.eContentWrapper.style.height = \"0\";\n  }\n  renderComponent() {\n    const eGui = this.getGui();\n    eGui.focus();\n    this.close = () => {\n      eGui.parentElement.removeChild(eGui);\n      this.destroy();\n    };\n  }\n  getHeight() {\n    return this.positionableFeature.getHeight();\n  }\n  setHeight(height) {\n    this.positionableFeature.setHeight(height);\n  }\n  getWidth() {\n    return this.positionableFeature.getWidth();\n  }\n  setWidth(width) {\n    this.positionableFeature.setWidth(width);\n  }\n  setClosable(closable) {\n    if (closable !== this.closable) {\n      this.closable = closable;\n    }\n    if (closable) {\n      const closeButtonComp = this.closeButtonComp = new Component(_AgPanel.CLOSE_BTN_TEMPLATE);\n      this.getContext().createBean(closeButtonComp);\n      const eGui = closeButtonComp.getGui();\n      const child = createIconNoSpan(\"close\", this.gos);\n      child.classList.add(\"ag-panel-title-bar-button-icon\");\n      eGui.appendChild(child);\n      this.addTitleBarButton(closeButtonComp);\n      closeButtonComp.addManagedListener(eGui, \"click\", this.onBtClose.bind(this));\n    } else if (this.closeButtonComp) {\n      const eGui = this.closeButtonComp.getGui();\n      eGui.parentElement.removeChild(eGui);\n      this.closeButtonComp = this.destroyBean(this.closeButtonComp);\n    }\n  }\n  setBodyComponent(bodyComponent) {\n    bodyComponent.setParentComponent(this);\n    this.eContentWrapper.appendChild(bodyComponent.getGui());\n  }\n  addTitleBarButton(button, position) {\n    const eTitleBarButtons = this.eTitleBarButtons;\n    const buttons = eTitleBarButtons.children;\n    const len = buttons.length;\n    if (position == null) {\n      position = len;\n    }\n    position = Math.max(0, Math.min(position, len));\n    button.addCssClass(\"ag-panel-title-bar-button\");\n    const eGui = button.getGui();\n    if (position === 0) {\n      eTitleBarButtons.insertAdjacentElement(\"afterbegin\", eGui);\n    } else if (position === len) {\n      eTitleBarButtons.insertAdjacentElement(\"beforeend\", eGui);\n    } else {\n      buttons[position - 1].insertAdjacentElement(\"afterend\", eGui);\n    }\n    button.setParentComponent(this);\n  }\n  getBodyHeight() {\n    return getInnerHeight(this.eContentWrapper);\n  }\n  getBodyWidth() {\n    return getInnerWidth(this.eContentWrapper);\n  }\n  setTitle(title) {\n    this.eTitle.innerText = title;\n  }\n  // called when user hits the 'x' in the top right\n  onBtClose() {\n    this.close();\n  }\n  destroy() {\n    if (this.closeButtonComp) {\n      this.closeButtonComp = this.destroyBean(this.closeButtonComp);\n    }\n    const eGui = this.getGui();\n    if (eGui && isVisible(eGui)) {\n      this.close();\n    }\n    super.destroy();\n  }\n};\n_AgPanel.CLOSE_BTN_TEMPLATE = /* html */\n`<div class=\"ag-button\"></div>`;\n__decorateClass([\n  RefSelector(\"eContentWrapper\")\n], _AgPanel.prototype, \"eContentWrapper\", 2);\n__decorateClass([\n  RefSelector(\"eTitleBar\")\n], _AgPanel.prototype, \"eTitleBar\", 2);\n__decorateClass([\n  RefSelector(\"eTitleBarButtons\")\n], _AgPanel.prototype, \"eTitleBarButtons\", 2);\n__decorateClass([\n  RefSelector(\"eTitle\")\n], _AgPanel.prototype, \"eTitle\", 2);\n__decorateClass([\n  PostConstruct\n], _AgPanel.prototype, \"postConstruct\", 1);\nvar AgPanel = _AgPanel;\n\n// community-modules/core/src/widgets/agDialog.ts\nvar AgDialog = class extends AgPanel {\n  constructor(config) {\n    super(__spreadProps(__spreadValues({}, config), { popup: true }));\n    this.isMaximizable = false;\n    this.isMaximized = false;\n    this.maximizeListeners = [];\n    this.resizeListenerDestroy = null;\n    this.lastPosition = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const { movable, resizable, maximizable } = this.config;\n    this.addCssClass(\"ag-dialog\");\n    super.postConstruct();\n    this.addManagedListener(eGui, \"focusin\", (e) => {\n      this.popupService.bringPopupToFront(eGui);\n    });\n    if (movable) {\n      this.setMovable(movable);\n    }\n    if (maximizable) {\n      this.setMaximizable(maximizable);\n    }\n    if (resizable) {\n      this.setResizable(resizable);\n    }\n  }\n  renderComponent() {\n    const eGui = this.getGui();\n    const { alwaysOnTop, modal, title, afterGuiAttached } = this.config;\n    const translate = this.localeService.getLocaleTextFunc();\n    const addPopupRes = this.popupService.addPopup({\n      modal,\n      eChild: eGui,\n      closeOnEsc: true,\n      closedCallback: this.onClosed.bind(this),\n      alwaysOnTop,\n      ariaLabel: title || translate(\"ariaLabelDialog\", \"Dialog\"),\n      afterGuiAttached\n    });\n    if (addPopupRes) {\n      this.close = addPopupRes.hideFunc;\n    }\n  }\n  onClosed(event) {\n    var _a, _b;\n    this.destroy();\n    (_b = (_a = this.config).closedCallback) == null ? void 0 : _b.call(_a, event);\n  }\n  toggleMaximize() {\n    const position = this.positionableFeature.getPosition();\n    if (this.isMaximized) {\n      const { x, y, width, height } = this.lastPosition;\n      this.setWidth(width);\n      this.setHeight(height);\n      this.positionableFeature.offsetElement(x, y);\n    } else {\n      this.lastPosition.width = this.getWidth();\n      this.lastPosition.height = this.getHeight();\n      this.lastPosition.x = position.x;\n      this.lastPosition.y = position.y;\n      this.positionableFeature.offsetElement(0, 0);\n      this.setHeight(\"100%\");\n      this.setWidth(\"100%\");\n    }\n    this.isMaximized = !this.isMaximized;\n    this.refreshMaximizeIcon();\n  }\n  refreshMaximizeIcon() {\n    setDisplayed(this.maximizeIcon, !this.isMaximized);\n    setDisplayed(this.minimizeIcon, this.isMaximized);\n  }\n  clearMaximizebleListeners() {\n    if (this.maximizeListeners.length) {\n      this.maximizeListeners.forEach((destroyListener) => destroyListener());\n      this.maximizeListeners.length = 0;\n    }\n    if (this.resizeListenerDestroy) {\n      this.resizeListenerDestroy();\n      this.resizeListenerDestroy = null;\n    }\n  }\n  destroy() {\n    this.maximizeButtonComp = this.destroyBean(this.maximizeButtonComp);\n    this.clearMaximizebleListeners();\n    super.destroy();\n  }\n  setResizable(resizable) {\n    this.positionableFeature.setResizable(resizable);\n  }\n  setMovable(movable) {\n    this.positionableFeature.setMovable(movable, this.eTitleBar);\n  }\n  setMaximizable(maximizable) {\n    if (!maximizable) {\n      this.clearMaximizebleListeners();\n      if (this.maximizeButtonComp) {\n        this.destroyBean(this.maximizeButtonComp);\n        this.maximizeButtonComp = this.maximizeIcon = this.minimizeIcon = void 0;\n      }\n      return;\n    }\n    const eTitleBar = this.eTitleBar;\n    if (!eTitleBar || maximizable === this.isMaximizable) {\n      return;\n    }\n    const maximizeButtonComp = this.buildMaximizeAndMinimizeElements();\n    this.refreshMaximizeIcon();\n    maximizeButtonComp.addManagedListener(maximizeButtonComp.getGui(), \"click\", this.toggleMaximize.bind(this));\n    this.addTitleBarButton(maximizeButtonComp, 0);\n    this.maximizeListeners.push(\n      this.addManagedListener(eTitleBar, \"dblclick\", this.toggleMaximize.bind(this))\n    );\n    this.resizeListenerDestroy = this.addManagedListener(this, \"resize\", () => {\n      this.isMaximized = false;\n      this.refreshMaximizeIcon();\n    });\n  }\n  buildMaximizeAndMinimizeElements() {\n    const maximizeButtonComp = this.maximizeButtonComp = this.createBean(new Component(\n      /* html */\n      `<div class=\"ag-dialog-button\"></span>`\n    ));\n    const eGui = maximizeButtonComp.getGui();\n    this.maximizeIcon = createIconNoSpan(\"maximize\", this.gos);\n    eGui.appendChild(this.maximizeIcon);\n    this.maximizeIcon.classList.add(\"ag-panel-title-bar-button-icon\");\n    this.minimizeIcon = createIconNoSpan(\"minimize\", this.gos);\n    eGui.appendChild(this.minimizeIcon);\n    this.minimizeIcon.classList.add(\"ag-panel-title-bar-button-icon\");\n    return maximizeButtonComp;\n  }\n};\n__decorateClass([\n  Autowired(\"popupService\")\n], AgDialog.prototype, \"popupService\", 2);\n\n// community-modules/core/src/widgets/popupService.ts\nvar instanceIdSeq = 0;\nvar PopupService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.popupList = [];\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.gridCtrl = p.gridCtrl;\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_GRID_STYLES_CHANGED, this.handleThemeChange.bind(this));\n  }\n  getPopupParent() {\n    const ePopupParent = this.gos.get(\"popupParent\");\n    if (ePopupParent) {\n      return ePopupParent;\n    }\n    return this.gridCtrl.getGui();\n  }\n  positionPopupForMenu(params) {\n    const { eventSource, ePopup } = params;\n    const popupIdx = this.getPopupIndex(ePopup);\n    if (popupIdx !== -1) {\n      const popup = this.popupList[popupIdx];\n      popup.alignedToElement = eventSource;\n    }\n    const sourceRect = eventSource.getBoundingClientRect();\n    const parentRect = this.getParentRect();\n    const y = this.keepXYWithinBounds(ePopup, sourceRect.top - parentRect.top, 0 /* vertical */);\n    const minWidth = ePopup.clientWidth > 0 ? ePopup.clientWidth : 200;\n    ePopup.style.minWidth = `${minWidth}px`;\n    const widthOfParent = parentRect.right - parentRect.left;\n    const maxX = widthOfParent - minWidth;\n    let x;\n    if (this.gos.get(\"enableRtl\")) {\n      x = xLeftPosition();\n      if (x < 0) {\n        x = xRightPosition();\n        this.setAlignedStyles(ePopup, \"left\");\n      }\n      if (x > maxX) {\n        x = 0;\n        this.setAlignedStyles(ePopup, \"right\");\n      }\n    } else {\n      x = xRightPosition();\n      if (x > maxX) {\n        x = xLeftPosition();\n        this.setAlignedStyles(ePopup, \"right\");\n      }\n      if (x < 0) {\n        x = 0;\n        this.setAlignedStyles(ePopup, \"left\");\n      }\n    }\n    ePopup.style.left = `${x}px`;\n    ePopup.style.top = `${y}px`;\n    function xRightPosition() {\n      return sourceRect.right - parentRect.left - 2;\n    }\n    function xLeftPosition() {\n      return sourceRect.left - parentRect.left - minWidth;\n    }\n  }\n  positionPopupUnderMouseEvent(params) {\n    const { ePopup, nudgeX, nudgeY, skipObserver } = params;\n    this.positionPopup({\n      ePopup,\n      nudgeX,\n      nudgeY,\n      keepWithinBounds: true,\n      skipObserver,\n      updatePosition: () => this.calculatePointerAlign(params.mouseEvent),\n      postProcessCallback: () => this.callPostProcessPopup(params.type, params.ePopup, null, params.mouseEvent, params.column, params.rowNode)\n    });\n  }\n  calculatePointerAlign(e) {\n    const parentRect = this.getParentRect();\n    return {\n      x: e.clientX - parentRect.left,\n      y: e.clientY - parentRect.top\n    };\n  }\n  positionPopupByComponent(params) {\n    const { ePopup, nudgeX, nudgeY, keepWithinBounds, eventSource, alignSide = \"left\", position = \"over\", column, rowNode, type } = params;\n    const sourceRect = eventSource.getBoundingClientRect();\n    const parentRect = this.getParentRect();\n    const popupIdx = this.getPopupIndex(ePopup);\n    if (popupIdx !== -1) {\n      const popup = this.popupList[popupIdx];\n      popup.alignedToElement = eventSource;\n    }\n    const updatePosition = () => {\n      let x = sourceRect.left - parentRect.left;\n      if (alignSide === \"right\") {\n        x -= ePopup.offsetWidth - sourceRect.width;\n      }\n      let y;\n      if (position === \"over\") {\n        y = sourceRect.top - parentRect.top;\n        this.setAlignedStyles(ePopup, \"over\");\n      } else {\n        this.setAlignedStyles(ePopup, \"under\");\n        const alignSide2 = this.shouldRenderUnderOrAbove(ePopup, sourceRect, parentRect, params.nudgeY || 0);\n        if (alignSide2 === \"under\") {\n          y = sourceRect.top - parentRect.top + sourceRect.height;\n        } else {\n          y = sourceRect.top - ePopup.offsetHeight - (nudgeY || 0) * 2 - parentRect.top;\n        }\n      }\n      return { x, y };\n    };\n    this.positionPopup({\n      ePopup,\n      nudgeX,\n      nudgeY,\n      keepWithinBounds,\n      updatePosition,\n      postProcessCallback: () => this.callPostProcessPopup(type, ePopup, eventSource, null, column, rowNode)\n    });\n  }\n  shouldRenderUnderOrAbove(ePopup, targetCompRect, parentRect, nudgeY) {\n    const spaceAvailableUnder = parentRect.bottom - targetCompRect.bottom;\n    const spaceAvailableAbove = targetCompRect.top - parentRect.top;\n    const spaceRequired = ePopup.offsetHeight + nudgeY;\n    if (spaceAvailableUnder > spaceRequired) {\n      return \"under\";\n    }\n    if (spaceAvailableAbove > spaceRequired || spaceAvailableAbove > spaceAvailableUnder) {\n      return \"above\";\n    }\n    return \"under\";\n  }\n  setAlignedStyles(ePopup, positioned) {\n    const popupIdx = this.getPopupIndex(ePopup);\n    if (popupIdx === -1) {\n      return;\n    }\n    const popup = this.popupList[popupIdx];\n    const { alignedToElement } = popup;\n    if (!alignedToElement) {\n      return;\n    }\n    const positions = [\"right\", \"left\", \"over\", \"above\", \"under\"];\n    positions.forEach((position) => {\n      alignedToElement.classList.remove(`ag-has-popup-positioned-${position}`);\n      ePopup.classList.remove(`ag-popup-positioned-${position}`);\n    });\n    if (!positioned) {\n      return;\n    }\n    alignedToElement.classList.add(`ag-has-popup-positioned-${positioned}`);\n    ePopup.classList.add(`ag-popup-positioned-${positioned}`);\n  }\n  callPostProcessPopup(type, ePopup, eventSource, mouseEvent, column, rowNode) {\n    const callback = this.gos.getCallback(\"postProcessPopup\");\n    if (callback) {\n      const params = {\n        column,\n        rowNode,\n        ePopup,\n        type,\n        eventSource,\n        mouseEvent\n      };\n      callback(params);\n    }\n  }\n  positionPopup(params) {\n    const { ePopup, keepWithinBounds, nudgeX, nudgeY, skipObserver, updatePosition } = params;\n    const lastSize = { width: 0, height: 0 };\n    const updatePopupPosition = (fromResizeObserver = false) => {\n      let { x, y } = updatePosition();\n      if (fromResizeObserver && ePopup.clientWidth === lastSize.width && ePopup.clientHeight === lastSize.height) {\n        return;\n      }\n      lastSize.width = ePopup.clientWidth;\n      lastSize.height = ePopup.clientHeight;\n      if (nudgeX) {\n        x += nudgeX;\n      }\n      if (nudgeY) {\n        y += nudgeY;\n      }\n      if (keepWithinBounds) {\n        x = this.keepXYWithinBounds(ePopup, x, 1 /* horizontal */);\n        y = this.keepXYWithinBounds(ePopup, y, 0 /* vertical */);\n      }\n      ePopup.style.left = `${x}px`;\n      ePopup.style.top = `${y}px`;\n      if (params.postProcessCallback) {\n        params.postProcessCallback();\n      }\n    };\n    updatePopupPosition();\n    if (!skipObserver) {\n      const resizeObserverDestroyFunc = this.resizeObserverService.observeResize(ePopup, () => updatePopupPosition(true));\n      setTimeout(() => resizeObserverDestroyFunc(), PopupService.WAIT_FOR_POPUP_CONTENT_RESIZE);\n    }\n  }\n  getActivePopups() {\n    return this.popupList.map((popup) => popup.element);\n  }\n  getPopupList() {\n    return this.popupList;\n  }\n  getParentRect() {\n    const eDocument = this.gos.getDocument();\n    let popupParent = this.getPopupParent();\n    if (popupParent === eDocument.body) {\n      popupParent = eDocument.documentElement;\n    } else if (getComputedStyle(popupParent).position === \"static\") {\n      popupParent = popupParent.offsetParent;\n    }\n    return getElementRectWithOffset(popupParent);\n  }\n  keepXYWithinBounds(ePopup, position, direction) {\n    const isVertical = direction === 0 /* vertical */;\n    const sizeProperty = isVertical ? \"clientHeight\" : \"clientWidth\";\n    const anchorProperty = isVertical ? \"top\" : \"left\";\n    const offsetProperty = isVertical ? \"offsetHeight\" : \"offsetWidth\";\n    const scrollPositionProperty = isVertical ? \"scrollTop\" : \"scrollLeft\";\n    const eDocument = this.gos.getDocument();\n    const docElement = eDocument.documentElement;\n    const popupParent = this.getPopupParent();\n    const parentRect = popupParent.getBoundingClientRect();\n    const documentRect = eDocument.documentElement.getBoundingClientRect();\n    const isBody = popupParent === eDocument.body;\n    const offsetSize = ePopup[offsetProperty];\n    const getSize = isVertical ? getAbsoluteHeight : getAbsoluteWidth;\n    let sizeOfParent = isBody ? getSize(docElement) + docElement[scrollPositionProperty] : popupParent[sizeProperty];\n    if (isBody) {\n      sizeOfParent -= Math.abs(documentRect[anchorProperty] - parentRect[anchorProperty]);\n    }\n    const max = sizeOfParent - offsetSize;\n    return Math.min(Math.max(position, 0), Math.abs(max));\n  }\n  addPopup(params) {\n    const eDocument = this.gos.getDocument();\n    const { eChild, ariaLabel, alwaysOnTop, positionCallback, anchorToElement } = params;\n    if (!eDocument) {\n      console.warn(\"AG Grid: could not find the document, document is empty\");\n      return { hideFunc: () => {\n      } };\n    }\n    const pos = this.getPopupIndex(eChild);\n    if (pos !== -1) {\n      const popup = this.popupList[pos];\n      return { hideFunc: popup.hideFunc };\n    }\n    this.initialisePopupPosition(eChild);\n    const wrapperEl = this.createPopupWrapper(eChild, ariaLabel, !!alwaysOnTop);\n    const removeListeners = this.addEventListenersToPopup(__spreadProps(__spreadValues({}, params), { wrapperEl }));\n    if (positionCallback) {\n      positionCallback();\n    }\n    this.addPopupToPopupList(eChild, wrapperEl, removeListeners, anchorToElement);\n    return {\n      hideFunc: removeListeners\n    };\n  }\n  initialisePopupPosition(element) {\n    const ePopupParent = this.getPopupParent();\n    const ePopupParentRect = ePopupParent.getBoundingClientRect();\n    if (!exists(element.style.top)) {\n      element.style.top = `${ePopupParentRect.top * -1}px`;\n    }\n    if (!exists(element.style.left)) {\n      element.style.left = `${ePopupParentRect.left * -1}px`;\n    }\n  }\n  createPopupWrapper(element, ariaLabel, alwaysOnTop) {\n    const ePopupParent = this.getPopupParent();\n    const eWrapper = document.createElement(\"div\");\n    const { allThemes } = this.environment.getTheme();\n    if (allThemes.length) {\n      eWrapper.classList.add(...allThemes);\n    }\n    eWrapper.classList.add(\"ag-popup\");\n    element.classList.add(\n      this.gos.get(\"enableRtl\") ? \"ag-rtl\" : \"ag-ltr\",\n      \"ag-popup-child\"\n    );\n    if (!element.hasAttribute(\"role\")) {\n      setAriaRole(element, \"dialog\");\n    }\n    setAriaLabel(element, ariaLabel);\n    eWrapper.appendChild(element);\n    ePopupParent.appendChild(eWrapper);\n    if (alwaysOnTop) {\n      this.setAlwaysOnTop(element, true);\n    } else {\n      this.bringPopupToFront(element);\n    }\n    return eWrapper;\n  }\n  handleThemeChange() {\n    const { allThemes } = this.environment.getTheme();\n    for (const popup of this.popupList) {\n      for (const className of Array.from(popup.wrapper.classList)) {\n        if (className.startsWith(\"ag-theme-\")) {\n          popup.wrapper.classList.remove(className);\n        }\n      }\n      if (allThemes.length) {\n        popup.wrapper.classList.add(...allThemes);\n      }\n    }\n  }\n  addEventListenersToPopup(params) {\n    const eDocument = this.gos.getDocument();\n    const ePopupParent = this.getPopupParent();\n    const { wrapperEl, eChild: popupEl, closedCallback, afterGuiAttached, closeOnEsc, modal } = params;\n    let popupHidden = false;\n    const hidePopupOnKeyboardEvent = (event) => {\n      if (!wrapperEl.contains(this.gos.getActiveDomElement())) {\n        return;\n      }\n      const key = event.key;\n      if (key === KeyCode.ESCAPE && !isStopPropagationForAgGrid(event)) {\n        removeListeners({ keyboardEvent: event });\n      }\n    };\n    const hidePopupOnMouseEvent = (event) => removeListeners({ mouseEvent: event });\n    const hidePopupOnTouchEvent = (event) => removeListeners({ touchEvent: event });\n    const removeListeners = (popupParams = {}) => {\n      const { mouseEvent, touchEvent, keyboardEvent, forceHide } = popupParams;\n      if (!forceHide && // we don't hide popup if the event was on the child, or any\n      // children of this child\n      (this.isEventFromCurrentPopup({ mouseEvent, touchEvent }, popupEl) || // this method should only be called once. the client can have different\n      // paths, each one wanting to close, so this method may be called multiple times.\n      popupHidden)) {\n        return;\n      }\n      popupHidden = true;\n      ePopupParent.removeChild(wrapperEl);\n      eDocument.removeEventListener(\"keydown\", hidePopupOnKeyboardEvent);\n      eDocument.removeEventListener(\"mousedown\", hidePopupOnMouseEvent);\n      eDocument.removeEventListener(\"touchstart\", hidePopupOnTouchEvent);\n      eDocument.removeEventListener(\"contextmenu\", hidePopupOnMouseEvent);\n      this.eventService.removeEventListener(Events.EVENT_DRAG_STARTED, hidePopupOnMouseEvent);\n      if (closedCallback) {\n        closedCallback(mouseEvent || touchEvent || keyboardEvent);\n      }\n      this.removePopupFromPopupList(popupEl);\n    };\n    if (afterGuiAttached) {\n      afterGuiAttached({ hidePopup: removeListeners });\n    }\n    window.setTimeout(() => {\n      if (closeOnEsc) {\n        eDocument.addEventListener(\"keydown\", hidePopupOnKeyboardEvent);\n      }\n      if (modal) {\n        eDocument.addEventListener(\"mousedown\", hidePopupOnMouseEvent);\n        this.eventService.addEventListener(Events.EVENT_DRAG_STARTED, hidePopupOnMouseEvent);\n        eDocument.addEventListener(\"touchstart\", hidePopupOnTouchEvent);\n        eDocument.addEventListener(\"contextmenu\", hidePopupOnMouseEvent);\n      }\n    }, 0);\n    return removeListeners;\n  }\n  addPopupToPopupList(element, wrapperEl, removeListeners, anchorToElement) {\n    this.popupList.push({\n      element,\n      wrapper: wrapperEl,\n      hideFunc: removeListeners,\n      instanceId: instanceIdSeq++,\n      isAnchored: !!anchorToElement\n    });\n    if (anchorToElement) {\n      this.setPopupPositionRelatedToElement(element, anchorToElement);\n    }\n  }\n  getPopupIndex(el) {\n    return this.popupList.findIndex((p) => p.element === el);\n  }\n  setPopupPositionRelatedToElement(popupEl, relativeElement) {\n    const popupIndex = this.getPopupIndex(popupEl);\n    if (popupIndex === -1) {\n      return;\n    }\n    const popup = this.popupList[popupIndex];\n    if (popup.stopAnchoringPromise) {\n      popup.stopAnchoringPromise.then((destroyFunc) => destroyFunc && destroyFunc());\n    }\n    popup.stopAnchoringPromise = void 0;\n    popup.isAnchored = false;\n    if (!relativeElement) {\n      return;\n    }\n    const destroyPositionTracker = this.keepPopupPositionedRelativeTo({\n      element: relativeElement,\n      ePopup: popupEl,\n      hidePopup: popup.hideFunc\n    });\n    popup.stopAnchoringPromise = destroyPositionTracker;\n    popup.isAnchored = true;\n    return destroyPositionTracker;\n  }\n  removePopupFromPopupList(element) {\n    this.setAlignedStyles(element, null);\n    this.setPopupPositionRelatedToElement(element, null);\n    this.popupList = this.popupList.filter((p) => p.element !== element);\n  }\n  keepPopupPositionedRelativeTo(params) {\n    const eParent = this.getPopupParent();\n    const parentRect = eParent.getBoundingClientRect();\n    const { element, ePopup } = params;\n    const sourceRect = element.getBoundingClientRect();\n    const initialDiffTop = parentRect.top - sourceRect.top;\n    const initialDiffLeft = parentRect.left - sourceRect.left;\n    let lastDiffTop = initialDiffTop;\n    let lastDiffLeft = initialDiffLeft;\n    const topPx = ePopup.style.top;\n    const top = parseInt(topPx.substring(0, topPx.length - 1), 10);\n    const leftPx = ePopup.style.left;\n    const left = parseInt(leftPx.substring(0, leftPx.length - 1), 10);\n    return new AgPromise((resolve) => {\n      this.getFrameworkOverrides().setInterval(() => {\n        const pRect = eParent.getBoundingClientRect();\n        const sRect = element.getBoundingClientRect();\n        const elementNotInDom = sRect.top == 0 && sRect.left == 0 && sRect.height == 0 && sRect.width == 0;\n        if (elementNotInDom) {\n          params.hidePopup();\n          return;\n        }\n        const currentDiffTop = pRect.top - sRect.top;\n        if (currentDiffTop != lastDiffTop) {\n          const newTop = this.keepXYWithinBounds(ePopup, top + initialDiffTop - currentDiffTop, 0 /* vertical */);\n          ePopup.style.top = `${newTop}px`;\n        }\n        lastDiffTop = currentDiffTop;\n        const currentDiffLeft = pRect.left - sRect.left;\n        if (currentDiffLeft != lastDiffLeft) {\n          const newLeft = this.keepXYWithinBounds(ePopup, left + initialDiffLeft - currentDiffLeft, 1 /* horizontal */);\n          ePopup.style.left = `${newLeft}px`;\n        }\n        lastDiffLeft = currentDiffLeft;\n      }, 200).then((intervalId) => {\n        const result = () => {\n          if (intervalId != null) {\n            window.clearInterval(intervalId);\n          }\n        };\n        resolve(result);\n      });\n    });\n  }\n  hasAnchoredPopup() {\n    return this.popupList.some((popup) => popup.isAnchored);\n  }\n  isEventFromCurrentPopup(params, target) {\n    const { mouseEvent, touchEvent } = params;\n    const event = mouseEvent ? mouseEvent : touchEvent;\n    if (!event) {\n      return false;\n    }\n    const indexOfThisChild = this.getPopupIndex(target);\n    if (indexOfThisChild === -1) {\n      return false;\n    }\n    for (let i = indexOfThisChild; i < this.popupList.length; i++) {\n      const popup = this.popupList[i];\n      if (isElementInEventPath(popup.element, event)) {\n        return true;\n      }\n    }\n    return this.isElementWithinCustomPopup(event.target);\n  }\n  isElementWithinCustomPopup(el) {\n    const eDocument = this.gos.getDocument();\n    while (el && el !== eDocument.body) {\n      if (el.classList.contains(\"ag-custom-component-popup\") || el.parentElement === null) {\n        return true;\n      }\n      el = el.parentElement;\n    }\n    return false;\n  }\n  getWrapper(ePopup) {\n    while (!ePopup.classList.contains(\"ag-popup\") && ePopup.parentElement) {\n      ePopup = ePopup.parentElement;\n    }\n    return ePopup.classList.contains(\"ag-popup\") ? ePopup : null;\n  }\n  setAlwaysOnTop(ePopup, alwaysOnTop) {\n    const eWrapper = this.getWrapper(ePopup);\n    if (!eWrapper) {\n      return;\n    }\n    eWrapper.classList.toggle(\"ag-always-on-top\", !!alwaysOnTop);\n    if (alwaysOnTop) {\n      this.bringPopupToFront(eWrapper);\n    }\n  }\n  bringPopupToFront(ePopup) {\n    const parent = this.getPopupParent();\n    const popupList = Array.prototype.slice.call(parent.querySelectorAll(\".ag-popup\"));\n    const popupLen = popupList.length;\n    const alwaysOnTopList = Array.prototype.slice.call(parent.querySelectorAll(\".ag-popup.ag-always-on-top\"));\n    const onTopLength = alwaysOnTopList.length;\n    const eWrapper = this.getWrapper(ePopup);\n    if (!eWrapper || popupLen <= 1 || !parent.contains(ePopup)) {\n      return;\n    }\n    const pos = popupList.indexOf(eWrapper);\n    const innerEls = eWrapper.querySelectorAll(\"div\");\n    const innerElsScrollMap = [];\n    innerEls.forEach((el) => {\n      if (el.scrollTop !== 0) {\n        innerElsScrollMap.push([el, el.scrollTop]);\n      }\n    });\n    if (onTopLength) {\n      const isPopupAlwaysOnTop = eWrapper.classList.contains(\"ag-always-on-top\");\n      if (isPopupAlwaysOnTop) {\n        if (pos !== popupLen - 1) {\n          last(alwaysOnTopList).insertAdjacentElement(\"afterend\", eWrapper);\n        }\n      } else if (pos !== popupLen - onTopLength - 1) {\n        alwaysOnTopList[0].insertAdjacentElement(\"beforebegin\", eWrapper);\n      }\n    } else if (pos !== popupLen - 1) {\n      last(popupList).insertAdjacentElement(\"afterend\", eWrapper);\n    }\n    while (innerElsScrollMap.length) {\n      const currentEl = innerElsScrollMap.pop();\n      currentEl[0].scrollTop = currentEl[1];\n    }\n  }\n};\nPopupService.WAIT_FOR_POPUP_CONTENT_RESIZE = 200;\n__decorateClass([\n  Autowired(\"focusService\")\n], PopupService.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], PopupService.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"resizeObserverService\")\n], PopupService.prototype, \"resizeObserverService\", 2);\n__decorateClass([\n  PostConstruct\n], PopupService.prototype, \"postConstruct\", 1);\nPopupService = __decorateClass([\n  Bean(\"popupService\")\n], PopupService);\n\n// community-modules/core/src/widgets/agAutocompleteRow.ts\nvar AgAutocompleteRow = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `\n        <div class=\"ag-autocomplete-row\" role=\"presentation\">\n            <div class=\"ag-autocomplete-row-label\"></div>\n        </div>`\n    );\n    this.hasHighlighting = false;\n  }\n  setState(value, selected) {\n    this.value = value;\n    this.render();\n    this.updateSelected(selected);\n  }\n  updateSelected(selected) {\n    this.addOrRemoveCssClass(\"ag-autocomplete-row-selected\", selected);\n  }\n  setSearchString(searchString) {\n    var _a;\n    let keepHighlighting = false;\n    if (exists(searchString)) {\n      const index = (_a = this.value) == null ? void 0 : _a.toLocaleLowerCase().indexOf(searchString.toLocaleLowerCase());\n      if (index >= 0) {\n        keepHighlighting = true;\n        this.hasHighlighting = true;\n        const highlightEndIndex = index + searchString.length;\n        const startPart = escapeString(this.value.slice(0, index));\n        const highlightedPart = escapeString(this.value.slice(index, highlightEndIndex));\n        const endPart = escapeString(this.value.slice(highlightEndIndex));\n        this.getGui().lastElementChild.innerHTML = `${startPart}<b>${highlightedPart}</b>${endPart}`;\n      }\n    }\n    if (!keepHighlighting && this.hasHighlighting) {\n      this.hasHighlighting = false;\n      this.render();\n    }\n  }\n  render() {\n    var _a;\n    this.getGui().lastElementChild.innerHTML = (_a = escapeString(this.value)) != null ? _a : \"&nbsp;\";\n  }\n};\n\n// community-modules/core/src/widgets/agAutocompleteList.ts\nvar _AgAutocompleteList = class _AgAutocompleteList extends PopupComponent {\n  constructor(params) {\n    super(_AgAutocompleteList.TEMPLATE);\n    this.params = params;\n    this.searchString = \"\";\n  }\n  destroy() {\n    super.destroy();\n  }\n  init() {\n    this.autocompleteEntries = this.params.autocompleteEntries;\n    this.virtualList = this.createManagedBean(new VirtualList({ cssIdentifier: \"autocomplete\" }));\n    this.virtualList.setComponentCreator(this.createRowComponent.bind(this));\n    this.eList.appendChild(this.virtualList.getGui());\n    this.virtualList.setModel({\n      getRowCount: () => this.autocompleteEntries.length,\n      getRow: (index) => this.autocompleteEntries[index]\n    });\n    const virtualListGui = this.virtualList.getGui();\n    this.addManagedListener(virtualListGui, \"click\", () => this.params.onConfirmed());\n    this.addManagedListener(virtualListGui, \"mousemove\", this.onMouseMove.bind(this));\n    this.addManagedListener(virtualListGui, \"mousedown\", (e) => e.preventDefault());\n    this.setSelectedValue(0);\n  }\n  onNavigationKeyDown(event, key) {\n    event.preventDefault();\n    const oldIndex = this.autocompleteEntries.indexOf(this.selectedValue);\n    const newIndex = key === KeyCode.UP ? oldIndex - 1 : oldIndex + 1;\n    this.checkSetSelectedValue(newIndex);\n  }\n  setSearch(searchString) {\n    this.searchString = searchString;\n    if (exists(searchString)) {\n      this.runSearch();\n    } else {\n      this.autocompleteEntries = this.params.autocompleteEntries;\n      this.virtualList.refresh();\n      this.checkSetSelectedValue(0);\n    }\n    this.updateSearchInList();\n  }\n  runContainsSearch(searchString, searchStrings) {\n    let topMatch;\n    let topMatchStartsWithSearchString = false;\n    const lowerCaseSearchString = searchString.toLocaleLowerCase();\n    const allMatches = searchStrings.filter((string) => {\n      const lowerCaseString = string.toLocaleLowerCase();\n      const index = lowerCaseString.indexOf(lowerCaseSearchString);\n      const startsWithSearchString = index === 0;\n      const isMatch = index >= 0;\n      if (isMatch && (!topMatch || !topMatchStartsWithSearchString && startsWithSearchString || topMatchStartsWithSearchString === startsWithSearchString && string.length < topMatch.length)) {\n        topMatch = string;\n        topMatchStartsWithSearchString = startsWithSearchString;\n      }\n      return isMatch;\n    });\n    if (!topMatch && allMatches.length) {\n      topMatch = allMatches[0];\n    }\n    return { topMatch, allMatches };\n  }\n  runSearch() {\n    var _a, _b;\n    const { autocompleteEntries } = this.params;\n    const searchStrings = autocompleteEntries.map((v) => {\n      var _a2;\n      return (_a2 = v.displayValue) != null ? _a2 : v.key;\n    });\n    let matchingStrings;\n    let topSuggestion;\n    if (this.params.useFuzzySearch) {\n      matchingStrings = fuzzySuggestions(this.searchString, searchStrings, true).values;\n      topSuggestion = matchingStrings.length ? matchingStrings[0] : void 0;\n    } else {\n      const containsMatches = this.runContainsSearch(this.searchString, searchStrings);\n      matchingStrings = containsMatches.allMatches;\n      topSuggestion = containsMatches.topMatch;\n    }\n    let filteredEntries = autocompleteEntries.filter(({ key, displayValue }) => matchingStrings.includes(displayValue != null ? displayValue : key));\n    if (!filteredEntries.length && this.selectedValue && ((_b = (_a = this.params) == null ? void 0 : _a.forceLastSelection) == null ? void 0 : _b.call(_a, this.selectedValue, this.searchString))) {\n      filteredEntries = [this.selectedValue];\n    }\n    this.autocompleteEntries = filteredEntries;\n    this.virtualList.refresh();\n    if (!topSuggestion) {\n      return;\n    }\n    const topSuggestionIndex = matchingStrings.indexOf(topSuggestion);\n    this.checkSetSelectedValue(topSuggestionIndex);\n  }\n  updateSearchInList() {\n    this.virtualList.forEachRenderedRow((row) => row.setSearchString(this.searchString));\n  }\n  checkSetSelectedValue(index) {\n    if (index >= 0 && index < this.autocompleteEntries.length) {\n      this.setSelectedValue(index);\n    }\n  }\n  setSelectedValue(index) {\n    const value = this.autocompleteEntries[index];\n    if (this.selectedValue === value) {\n      return;\n    }\n    this.selectedValue = value;\n    this.virtualList.ensureIndexVisible(index);\n    this.virtualList.forEachRenderedRow((cmp, idx) => {\n      cmp.updateSelected(index === idx);\n    });\n  }\n  createRowComponent(value) {\n    var _a;\n    const row = new AgAutocompleteRow();\n    this.getContext().createBean(row);\n    row.setState((_a = value.displayValue) != null ? _a : value.key, value === this.selectedValue);\n    return row;\n  }\n  onMouseMove(mouseEvent) {\n    const rect = this.virtualList.getGui().getBoundingClientRect();\n    const scrollTop = this.virtualList.getScrollTop();\n    const mouseY = mouseEvent.clientY - rect.top + scrollTop;\n    const row = Math.floor(mouseY / this.virtualList.getRowHeight());\n    this.checkSetSelectedValue(row);\n  }\n  afterGuiAttached() {\n    this.virtualList.refresh();\n  }\n  getSelectedValue() {\n    var _a;\n    if (!this.autocompleteEntries.length) {\n      return null;\n    }\n    ;\n    return (_a = this.selectedValue) != null ? _a : null;\n  }\n};\n_AgAutocompleteList.TEMPLATE = /* html */\n`<div class=\"ag-autocomplete-list-popup\">\n            <div ref=\"eList\" class=\"ag-autocomplete-list\"></div>\n        <div>`;\n__decorateClass([\n  RefSelector(\"eList\")\n], _AgAutocompleteList.prototype, \"eList\", 2);\n__decorateClass([\n  PostConstruct\n], _AgAutocompleteList.prototype, \"init\", 1);\nvar AgAutocompleteList = _AgAutocompleteList;\n\n// community-modules/core/src/widgets/agAutocomplete.ts\nvar _AgAutocomplete = class _AgAutocomplete extends Component {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-autocomplete\" role=\"presentation\">\n                <ag-input-text-field ref=\"eAutocompleteInput\"></ag-input-text-field>\n            </div>`\n    );\n    this.isListOpen = false;\n    this.lastPosition = 0;\n    this.valid = true;\n  }\n  postConstruct() {\n    this.eAutocompleteInput.onValueChange((value) => this.onValueChanged(value));\n    this.eAutocompleteInput.getInputElement().setAttribute(\"autocomplete\", \"off\");\n    this.addGuiEventListener(\"keydown\", this.onKeyDown.bind(this));\n    this.addGuiEventListener(\"click\", this.updatePositionAndList.bind(this));\n    this.addDestroyFunc(() => {\n      this.destroyBean(this.autocompleteList);\n    });\n    this.addGuiEventListener(\"focusout\", () => this.onFocusOut());\n  }\n  onValueChanged(value) {\n    const parsedValue = makeNull(value);\n    this.updateValue(parsedValue);\n    this.updateAutocompleteList(parsedValue);\n  }\n  updateValue(value) {\n    this.updateLastPosition();\n    this.dispatchEvent({\n      type: _AgAutocomplete.EVENT_VALUE_CHANGED,\n      value\n    });\n    this.validate(value);\n  }\n  updateAutocompleteList(value) {\n    var _a, _b, _c, _d;\n    const autocompleteListParams = (_b = (_a = this.listGenerator) == null ? void 0 : _a.call(this, value, this.lastPosition)) != null ? _b : { enabled: false };\n    if (!autocompleteListParams.type || autocompleteListParams.type !== ((_c = this.autocompleteListParams) == null ? void 0 : _c.type)) {\n      if (this.isListOpen) {\n        this.closeList();\n      }\n    }\n    this.autocompleteListParams = autocompleteListParams;\n    if ((_d = this.autocompleteListParams) == null ? void 0 : _d.enabled) {\n      if (!this.isListOpen) {\n        this.openList();\n      }\n      const { searchString } = this.autocompleteListParams;\n      this.autocompleteList.setSearch(searchString != null ? searchString : \"\");\n    } else {\n      if (this.isListOpen) {\n        this.closeList();\n      }\n    }\n  }\n  onKeyDown(event) {\n    const key = event.key;\n    this.updateLastPosition();\n    switch (key) {\n      case KeyCode.ENTER:\n        this.onEnterKeyDown(event);\n        break;\n      case KeyCode.TAB:\n        this.onTabKeyDown(event);\n        break;\n      case KeyCode.DOWN:\n      case KeyCode.UP:\n        this.onUpDownKeyDown(event, key);\n        break;\n      case KeyCode.LEFT:\n      case KeyCode.RIGHT:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        setTimeout(() => {\n          this.updatePositionAndList();\n        });\n        break;\n      case KeyCode.ESCAPE:\n        this.onEscapeKeyDown(event);\n        break;\n      case KeyCode.SPACE:\n        if (event.ctrlKey && !this.isListOpen) {\n          event.preventDefault();\n          this.forceOpenList();\n        }\n        break;\n    }\n  }\n  confirmSelection() {\n    var _a;\n    const selectedValue = (_a = this.autocompleteList) == null ? void 0 : _a.getSelectedValue();\n    if (selectedValue) {\n      this.closeList();\n      this.dispatchEvent({\n        type: _AgAutocomplete.EVENT_OPTION_SELECTED,\n        value: this.getValue(),\n        position: this.lastPosition,\n        updateEntry: selectedValue,\n        autocompleteType: this.autocompleteListParams.type\n      });\n    }\n  }\n  onTabKeyDown(event) {\n    if (this.isListOpen) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.confirmSelection();\n    }\n  }\n  onEnterKeyDown(event) {\n    event.preventDefault();\n    if (this.isListOpen) {\n      this.confirmSelection();\n    } else {\n      this.onCompleted();\n    }\n  }\n  onUpDownKeyDown(event, key) {\n    var _a;\n    event.preventDefault();\n    if (!this.isListOpen) {\n      this.forceOpenList();\n    } else {\n      (_a = this.autocompleteList) == null ? void 0 : _a.onNavigationKeyDown(event, key);\n    }\n  }\n  onEscapeKeyDown(event) {\n    if (this.isListOpen) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.closeList();\n      this.setCaret(this.lastPosition, true);\n    }\n  }\n  onFocusOut() {\n    if (this.isListOpen) {\n      this.closeList();\n    }\n  }\n  updatePositionAndList() {\n    var _a;\n    this.updateLastPosition();\n    this.updateAutocompleteList((_a = this.eAutocompleteInput.getValue()) != null ? _a : null);\n  }\n  setCaret(position, setFocus) {\n    const eDocument = this.gos.getDocument();\n    const activeEl = this.gos.getActiveDomElement();\n    if (setFocus && (!activeEl || activeEl === eDocument.body)) {\n      this.eAutocompleteInput.getFocusableElement().focus();\n    }\n    const eInput = this.eAutocompleteInput.getInputElement();\n    eInput.setSelectionRange(position, position);\n    if (position === eInput.value.length) {\n      eInput.scrollLeft = eInput.scrollWidth;\n    }\n  }\n  forceOpenList() {\n    this.onValueChanged(this.eAutocompleteInput.getValue());\n  }\n  updateLastPosition() {\n    var _a;\n    this.lastPosition = (_a = this.eAutocompleteInput.getInputElement().selectionStart) != null ? _a : 0;\n  }\n  validate(value) {\n    var _a;\n    if (!this.validator) {\n      return;\n    }\n    this.validationMessage = this.validator(value);\n    this.eAutocompleteInput.getInputElement().setCustomValidity((_a = this.validationMessage) != null ? _a : \"\");\n    this.valid = !this.validationMessage;\n    this.dispatchEvent({\n      type: _AgAutocomplete.EVENT_VALID_CHANGED,\n      isValid: this.valid,\n      validationMessage: this.validationMessage\n    });\n  }\n  openList() {\n    this.isListOpen = true;\n    this.autocompleteList = this.createBean(new AgAutocompleteList({\n      autocompleteEntries: this.autocompleteListParams.entries,\n      onConfirmed: () => this.confirmSelection(),\n      forceLastSelection: this.forceLastSelection\n    }));\n    const ePopupGui = this.autocompleteList.getGui();\n    const positionParams = {\n      ePopup: ePopupGui,\n      type: \"autocomplete\",\n      eventSource: this.getGui(),\n      position: \"under\",\n      alignSide: this.gos.get(\"enableRtl\") ? \"right\" : \"left\",\n      keepWithinBounds: true\n    };\n    const addPopupRes = this.popupService.addPopup({\n      eChild: ePopupGui,\n      anchorToElement: this.getGui(),\n      positionCallback: () => this.popupService.positionPopupByComponent(positionParams),\n      ariaLabel: this.listAriaLabel\n    });\n    this.hidePopup = addPopupRes.hideFunc;\n    this.autocompleteList.afterGuiAttached();\n  }\n  closeList() {\n    this.isListOpen = false;\n    this.hidePopup();\n    this.destroyBean(this.autocompleteList);\n    this.autocompleteList = null;\n  }\n  onCompleted() {\n    if (this.isListOpen) {\n      this.closeList();\n    }\n    this.dispatchEvent({\n      type: _AgAutocomplete.EVENT_VALUE_CONFIRMED,\n      value: this.getValue(),\n      isValid: this.isValid()\n    });\n  }\n  getValue() {\n    return makeNull(this.eAutocompleteInput.getValue());\n  }\n  setInputPlaceholder(placeholder) {\n    this.eAutocompleteInput.setInputPlaceholder(placeholder);\n    return this;\n  }\n  setInputAriaLabel(label) {\n    this.eAutocompleteInput.setInputAriaLabel(label);\n    return this;\n  }\n  setListAriaLabel(label) {\n    this.listAriaLabel = label;\n    return this;\n  }\n  setListGenerator(listGenerator) {\n    this.listGenerator = listGenerator;\n    return this;\n  }\n  setValidator(validator) {\n    this.validator = validator;\n    return this;\n  }\n  isValid() {\n    return this.valid;\n  }\n  setValue(params) {\n    const { value, position, silent, updateListOnlyIfOpen, restoreFocus } = params;\n    this.eAutocompleteInput.setValue(value, true);\n    this.setCaret(position != null ? position : this.lastPosition, restoreFocus);\n    if (!silent) {\n      this.updateValue(value);\n    }\n    if (!updateListOnlyIfOpen || this.isListOpen) {\n      this.updateAutocompleteList(value);\n    }\n  }\n  setForceLastSelection(forceLastSelection) {\n    this.forceLastSelection = forceLastSelection;\n    return this;\n  }\n  setInputDisabled(disabled) {\n    this.eAutocompleteInput.setDisabled(disabled);\n    return this;\n  }\n};\n_AgAutocomplete.EVENT_VALUE_CHANGED = \"eventValueChanged\";\n_AgAutocomplete.EVENT_VALUE_CONFIRMED = \"eventValueConfirmed\";\n_AgAutocomplete.EVENT_OPTION_SELECTED = \"eventOptionSelected\";\n_AgAutocomplete.EVENT_VALID_CHANGED = \"eventValidChanged\";\n__decorateClass([\n  Autowired(\"popupService\")\n], _AgAutocomplete.prototype, \"popupService\", 2);\n__decorateClass([\n  RefSelector(\"eAutocompleteInput\")\n], _AgAutocomplete.prototype, \"eAutocompleteInput\", 2);\n__decorateClass([\n  PostConstruct\n], _AgAutocomplete.prototype, \"postConstruct\", 1);\nvar AgAutocomplete = _AgAutocomplete;\n\n// community-modules/core/src/widgets/pillDragComp.ts\nvar _PillDragComp = class _PillDragComp extends Component {\n  constructor(dragSourceDropTarget, ghost, horizontal, template) {\n    super();\n    this.dragSourceDropTarget = dragSourceDropTarget;\n    this.ghost = ghost;\n    this.horizontal = horizontal;\n    this.template = template;\n  }\n  init() {\n    var _a;\n    this.setTemplate((_a = this.template) != null ? _a : _PillDragComp.TEMPLATE);\n    const eGui = this.getGui();\n    this.addElementClasses(eGui);\n    this.addElementClasses(this.eDragHandle, \"drag-handle\");\n    this.addElementClasses(this.eText, \"text\");\n    this.addElementClasses(this.eButton, \"button\");\n    this.eDragHandle.appendChild(createIconNoSpan(\"columnDrag\", this.gos));\n    this.eButton.appendChild(createIconNoSpan(\"cancel\", this.gos));\n    this.setupComponents();\n    if (!this.ghost && this.isDraggable()) {\n      this.addDragSource();\n    }\n    this.setupAria();\n    this.setupTooltip();\n    this.activateTabIndex();\n    this.refreshDraggable();\n  }\n  isDraggable() {\n    return true;\n  }\n  refreshDraggable() {\n    this.eDragHandle.classList.toggle(\"ag-column-select-column-readonly\", !this.isDraggable());\n  }\n  setupAria() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const ariaInstructions = [this.getAriaDisplayName()];\n    this.addAdditionalAriaInstructions(ariaInstructions, translate);\n    setAriaLabel(this.getGui(), ariaInstructions.join(\". \"));\n  }\n  addAdditionalAriaInstructions(ariaInstructions, translate) {\n    if (this.isRemovable()) {\n      const deleteAria = translate(\"ariaDropZoneColumnComponentDescription\", \"Press DELETE to remove\");\n      ariaInstructions.push(deleteAria);\n    }\n  }\n  setupTooltip() {\n    const refresh = () => {\n      const newTooltipText = this.getTooltip();\n      this.setTooltip({ newTooltipText });\n    };\n    refresh();\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, refresh);\n  }\n  getDragSourceId() {\n    return void 0;\n  }\n  getDefaultIconName() {\n    return DragAndDropService.ICON_NOT_ALLOWED;\n  }\n  addDragSource() {\n    const { dragAndDropService, eDragHandle } = this;\n    const getDragItem = this.createGetDragItem();\n    const defaultIconName = this.getDefaultIconName();\n    const dragSource = {\n      type: this.getDragSourceType(),\n      sourceId: this.getDragSourceId(),\n      eElement: eDragHandle,\n      getDefaultIconName: () => defaultIconName,\n      getDragItem,\n      dragItemName: this.getDisplayName()\n    };\n    dragAndDropService.addDragSource(dragSource, true);\n    this.addDestroyFunc(() => dragAndDropService.removeDragSource(dragSource));\n  }\n  setupComponents() {\n    this.setTextValue();\n    this.setupRemove();\n    if (this.ghost) {\n      this.addCssClass(\"ag-column-drop-cell-ghost\");\n    }\n  }\n  isRemovable() {\n    return true;\n  }\n  refreshRemove() {\n    setDisplayed(this.eButton, this.isRemovable());\n  }\n  setupRemove() {\n    this.refreshRemove();\n    const agEvent = { type: _PillDragComp.EVENT_COLUMN_REMOVE };\n    this.addGuiEventListener(\"keydown\", (e) => this.onKeyDown(e));\n    this.addManagedListener(this.eButton, \"click\", (mouseEvent) => {\n      this.dispatchEvent(agEvent);\n      mouseEvent.stopPropagation();\n    });\n    const touchListener = new TouchListener(this.eButton);\n    this.addManagedListener(touchListener, TouchListener.EVENT_TAP, () => {\n      this.dispatchEvent(agEvent);\n    });\n    this.addDestroyFunc(touchListener.destroy.bind(touchListener));\n  }\n  onKeyDown(e) {\n    const isDelete = e.key === KeyCode.DELETE;\n    if (isDelete) {\n      if (this.isRemovable()) {\n        e.preventDefault();\n        this.dispatchEvent({ type: _PillDragComp.EVENT_COLUMN_REMOVE });\n      }\n    }\n  }\n  getDisplayValue() {\n    return this.getDisplayName();\n  }\n  setTextValue() {\n    const displayValue = this.getDisplayValue();\n    const displayValueSanitised = escapeString(displayValue);\n    this.eText.innerHTML = displayValueSanitised;\n  }\n  addElementClasses(el, suffix) {\n    suffix = suffix ? `-${suffix}` : \"\";\n    const direction = this.horizontal ? \"horizontal\" : \"vertical\";\n    el.classList.add(`ag-column-drop-cell${suffix}`, `ag-column-drop-${direction}-cell${suffix}`);\n  }\n  destroy() {\n    super.destroy();\n    this.dragSourceDropTarget = null;\n  }\n};\n_PillDragComp.EVENT_COLUMN_REMOVE = \"columnRemove\";\n_PillDragComp.TEMPLATE = /* html */\n`<span role=\"option\">\n          <span ref=\"eDragHandle\" class=\"ag-drag-handle ag-column-drop-cell-drag-handle\" role=\"presentation\"></span>\n          <span ref=\"eText\" class=\"ag-column-drop-cell-text\" aria-hidden=\"true\"></span>\n          <span ref=\"eButton\" class=\"ag-column-drop-cell-button\" role=\"presentation\"></span>\n        </span>`;\n__decorateClass([\n  Autowired(\"dragAndDropService\")\n], _PillDragComp.prototype, \"dragAndDropService\", 2);\n__decorateClass([\n  RefSelector(\"eText\")\n], _PillDragComp.prototype, \"eText\", 2);\n__decorateClass([\n  RefSelector(\"eDragHandle\")\n], _PillDragComp.prototype, \"eDragHandle\", 2);\n__decorateClass([\n  RefSelector(\"eButton\")\n], _PillDragComp.prototype, \"eButton\", 2);\n__decorateClass([\n  PostConstruct\n], _PillDragComp.prototype, \"init\", 1);\nvar PillDragComp = _PillDragComp;\n\n// community-modules/core/src/widgets/pillDropZonePanel.ts\nvar _PillDropZonePanel = class _PillDropZonePanel extends Component {\n  constructor(horizontal) {\n    super(\n      /* html */\n      `<div class=\"ag-unselectable\" role=\"presentation\"></div>`\n    );\n    this.horizontal = horizontal;\n    this.state = _PillDropZonePanel.STATE_NOT_DRAGGING;\n    this.guiDestroyFunctions = [];\n    this.childPillComponents = [];\n    this.resizeEnabled = false;\n    this.addElementClasses(this.getGui());\n    this.ePillDropList = document.createElement(\"div\");\n    this.addElementClasses(this.ePillDropList, \"list\");\n    setAriaRole(this.ePillDropList, \"listbox\");\n  }\n  isHorizontal() {\n    return this.horizontal;\n  }\n  toggleResizable(resizable) {\n    this.positionableFeature.setResizable(resizable ? { bottom: true } : false);\n    this.resizeEnabled = resizable;\n  }\n  isSourceEventFromTarget(draggingEvent) {\n    const { dropZoneTarget, dragSource } = draggingEvent;\n    return dropZoneTarget.contains(dragSource.eElement);\n  }\n  destroy() {\n    this.destroyGui();\n    super.destroy();\n  }\n  destroyGui() {\n    this.guiDestroyFunctions.forEach((func) => func());\n    this.guiDestroyFunctions.length = 0;\n    this.childPillComponents.length = 0;\n    clearElement(this.getGui());\n    clearElement(this.ePillDropList);\n  }\n  init(params) {\n    this.params = params != null ? params : {};\n    this.createManagedBean(new ManagedFocusFeature(\n      this.getFocusableElement(),\n      {\n        handleKeyDown: this.handleKeyDown.bind(this)\n      }\n    ));\n    this.setupDropTarget();\n    this.positionableFeature = new PositionableFeature(this.getGui(), { minHeight: 100 });\n    this.createManagedBean(this.positionableFeature);\n    this.refreshGui();\n    setAriaLabel(this.ePillDropList, this.getAriaLabel());\n  }\n  handleKeyDown(e) {\n    const isVertical = !this.horizontal;\n    let isNext = e.key === KeyCode.DOWN;\n    let isPrevious = e.key === KeyCode.UP;\n    if (!isVertical) {\n      const isRtl = this.gos.get(\"enableRtl\");\n      isNext = !isRtl && e.key === KeyCode.RIGHT || isRtl && e.key === KeyCode.LEFT;\n      isPrevious = !isRtl && e.key === KeyCode.LEFT || isRtl && e.key === KeyCode.RIGHT;\n    }\n    if (!isNext && !isPrevious) {\n      return;\n    }\n    const el = this.focusService.findNextFocusableElement(\n      this.getFocusableElement(),\n      false,\n      isPrevious\n    );\n    if (el) {\n      e.preventDefault();\n      el.focus();\n    }\n  }\n  addElementClasses(el, suffix) {\n    suffix = suffix ? `-${suffix}` : \"\";\n    const direction = this.horizontal ? \"horizontal\" : \"vertical\";\n    el.classList.add(`ag-column-drop${suffix}`, `ag-column-drop-${direction}${suffix}`);\n  }\n  setupDropTarget() {\n    this.dropTarget = {\n      getContainer: this.getGui.bind(this),\n      getIconName: this.getIconName.bind(this),\n      onDragging: this.onDragging.bind(this),\n      onDragEnter: this.onDragEnter.bind(this),\n      onDragLeave: this.onDragLeave.bind(this),\n      onDragStop: this.onDragStop.bind(this),\n      isInterestedIn: this.isInterestedIn.bind(this)\n    };\n    this.dragAndDropService.addDropTarget(this.dropTarget);\n  }\n  minimumAllowedNewInsertIndex() {\n    return 0;\n  }\n  checkInsertIndex(draggingEvent) {\n    const newIndex = this.getNewInsertIndex(draggingEvent);\n    if (newIndex < 0) {\n      return false;\n    }\n    const minimumAllowedIndex = this.minimumAllowedNewInsertIndex();\n    const newAdjustedIndex = Math.max(minimumAllowedIndex, newIndex);\n    const changed = newAdjustedIndex !== this.insertIndex;\n    if (changed) {\n      this.insertIndex = newAdjustedIndex;\n    }\n    return changed;\n  }\n  getNewInsertIndex(draggingEvent) {\n    const mouseEvent = draggingEvent.event;\n    const mouseLocation = this.horizontal ? mouseEvent.clientX : mouseEvent.clientY;\n    const boundsList = this.childPillComponents.map((comp) => comp.getGui().getBoundingClientRect());\n    const hoveredIndex = boundsList.findIndex((rect) => this.horizontal ? rect.right > mouseLocation && rect.left < mouseLocation : rect.top < mouseLocation && rect.bottom > mouseLocation);\n    if (hoveredIndex === -1) {\n      const enableRtl = this.gos.get(\"enableRtl\");\n      const isLast = boundsList.every((rect) => mouseLocation > (this.horizontal ? rect.right : rect.bottom));\n      if (isLast) {\n        return enableRtl && this.horizontal ? 0 : this.childPillComponents.length;\n      }\n      const isFirst = boundsList.every((rect) => mouseLocation < (this.horizontal ? rect.left : rect.top));\n      if (isFirst) {\n        return enableRtl && this.horizontal ? this.childPillComponents.length : 0;\n      }\n      return this.insertIndex;\n    }\n    if (this.insertIndex <= hoveredIndex) {\n      return hoveredIndex + 1;\n    }\n    return hoveredIndex;\n  }\n  checkDragStartedBySelf(draggingEvent) {\n    if (this.state !== _PillDropZonePanel.STATE_NOT_DRAGGING) {\n      return;\n    }\n    this.state = _PillDropZonePanel.STATE_REARRANGE_ITEMS;\n    this.potentialDndItems = this.getItems(draggingEvent.dragSource.getDragItem());\n    this.refreshGui();\n    this.checkInsertIndex(draggingEvent);\n    this.refreshGui();\n  }\n  onDragging(draggingEvent) {\n    this.checkDragStartedBySelf(draggingEvent);\n    if (this.checkInsertIndex(draggingEvent)) {\n      this.refreshGui();\n    }\n  }\n  handleDragEnterEnd(draggingEvent) {\n  }\n  onDragEnter(draggingEvent) {\n    const dragItems = this.getItems(draggingEvent.dragSource.getDragItem());\n    this.state = _PillDropZonePanel.STATE_NEW_ITEMS_IN;\n    const goodDragItems = dragItems.filter((item) => this.isItemDroppable(item, draggingEvent));\n    const alreadyPresent = goodDragItems.every((item) => this.childPillComponents.map((cmp) => cmp.getItem()).indexOf(item) !== -1);\n    if (goodDragItems.length === 0) {\n      return;\n    }\n    this.potentialDndItems = goodDragItems;\n    if (alreadyPresent) {\n      this.state = _PillDropZonePanel.STATE_NOT_DRAGGING;\n      return;\n    }\n    this.handleDragEnterEnd(draggingEvent);\n    this.checkInsertIndex(draggingEvent);\n    this.refreshGui();\n  }\n  isPotentialDndItems() {\n    return existsAndNotEmpty(this.potentialDndItems);\n  }\n  handleDragLeaveEnd(draggingEvent) {\n  }\n  onDragLeave(draggingEvent) {\n    if (this.state === _PillDropZonePanel.STATE_REARRANGE_ITEMS) {\n      const items = this.getItems(draggingEvent.dragSource.getDragItem());\n      this.removeItems(items);\n    }\n    if (this.isPotentialDndItems()) {\n      this.handleDragLeaveEnd(draggingEvent);\n      this.potentialDndItems = [];\n      this.refreshGui();\n    }\n    this.state = _PillDropZonePanel.STATE_NOT_DRAGGING;\n  }\n  refreshOnDragStop() {\n    return true;\n  }\n  onDragStop() {\n    if (this.isPotentialDndItems()) {\n      let success = false;\n      if (this.state === _PillDropZonePanel.STATE_NEW_ITEMS_IN) {\n        this.addItems(this.potentialDndItems);\n        success = true;\n      } else {\n        success = this.rearrangeItems(this.potentialDndItems);\n      }\n      this.potentialDndItems = [];\n      if (this.refreshOnDragStop() || !success) {\n        this.refreshGui();\n      }\n    }\n    this.state = _PillDropZonePanel.STATE_NOT_DRAGGING;\n  }\n  removeItems(itemsToRemove) {\n    const newItemList = this.getExistingItems().filter((item) => !includes(itemsToRemove, item));\n    this.updateItems(newItemList);\n  }\n  addItems(itemsToAdd) {\n    if (!itemsToAdd) {\n      return;\n    }\n    const newItemList = this.getExistingItems().slice();\n    const itemsToAddNoDuplicates = itemsToAdd.filter((item) => newItemList.indexOf(item) < 0);\n    insertArrayIntoArray(newItemList, itemsToAddNoDuplicates, this.insertIndex);\n    this.updateItems(newItemList);\n  }\n  addItem(item) {\n    this.insertIndex = this.getExistingItems().length;\n    this.addItems([item]);\n    this.refreshGui();\n  }\n  rearrangeItems(itemsToAdd) {\n    const newItemList = this.getNonGhostItems().slice();\n    insertArrayIntoArray(newItemList, itemsToAdd, this.insertIndex);\n    if (areEqual(newItemList, this.getExistingItems())) {\n      return false;\n    }\n    this.updateItems(newItemList);\n    return true;\n  }\n  refreshGui() {\n    const scrollTop = this.ePillDropList.scrollTop;\n    const resizeEnabled = this.resizeEnabled;\n    const focusedIndex = this.getFocusedItem();\n    let alternateElement = this.focusService.findNextFocusableElement();\n    if (!alternateElement) {\n      alternateElement = this.focusService.findNextFocusableElement(void 0, false, true);\n    }\n    this.toggleResizable(false);\n    this.destroyGui();\n    this.addIconAndTitleToGui();\n    this.addEmptyMessageToGui();\n    this.addItemsToGui();\n    if (!this.isHorizontal()) {\n      this.ePillDropList.scrollTop = scrollTop;\n    }\n    if (resizeEnabled) {\n      this.toggleResizable(resizeEnabled);\n    }\n    if (this.focusService.isKeyboardMode()) {\n      this.restoreFocus(focusedIndex, alternateElement);\n    }\n  }\n  getFocusedItem() {\n    const eGui = this.getGui();\n    const activeElement = this.gos.getActiveDomElement();\n    if (!eGui.contains(activeElement)) {\n      return -1;\n    }\n    const items = Array.from(eGui.querySelectorAll(\".ag-column-drop-cell\"));\n    return items.indexOf(activeElement);\n  }\n  restoreFocus(index, alternateElement) {\n    const eGui = this.getGui();\n    const items = Array.from(eGui.querySelectorAll(\".ag-column-drop-cell\"));\n    if (index === -1) {\n      return;\n    }\n    if (items.length === 0) {\n      alternateElement.focus();\n    }\n    const indexToFocus = Math.min(items.length - 1, index);\n    const el = items[indexToFocus];\n    if (el) {\n      el.focus();\n    }\n  }\n  focusList(fromBottom) {\n    const index = fromBottom ? this.childPillComponents.length - 1 : 0;\n    this.restoreFocus(index, this.getFocusableElement());\n  }\n  getNonGhostItems() {\n    const existingItems = this.getExistingItems();\n    if (this.isPotentialDndItems()) {\n      return existingItems.filter((item) => !includes(this.potentialDndItems, item));\n    }\n    return existingItems;\n  }\n  addItemsToGui() {\n    const nonGhostItems = this.getNonGhostItems();\n    const itemsToAddToGui = nonGhostItems.map((item) => this.createItemComponent(item, false));\n    if (this.isPotentialDndItems()) {\n      const dndItems = this.potentialDndItems.map((item) => this.createItemComponent(item, true));\n      if (this.insertIndex >= itemsToAddToGui.length) {\n        itemsToAddToGui.push(...dndItems);\n      } else {\n        itemsToAddToGui.splice(this.insertIndex, 0, ...dndItems);\n      }\n    }\n    this.appendChild(this.ePillDropList);\n    itemsToAddToGui.forEach((itemComponent, index) => {\n      if (index > 0) {\n        this.addArrow(this.ePillDropList);\n      }\n      this.ePillDropList.appendChild(itemComponent.getGui());\n    });\n    this.addAriaLabelsToComponents();\n  }\n  addAriaLabelsToComponents() {\n    this.childPillComponents.forEach((comp, idx) => {\n      const eGui = comp.getGui();\n      setAriaPosInSet(eGui, idx + 1);\n      setAriaSetSize(eGui, this.childPillComponents.length);\n    });\n  }\n  createItemComponent(item, ghost) {\n    const itemComponent = this.createPillComponent(item, this.dropTarget, ghost, this.horizontal);\n    itemComponent.addEventListener(PillDragComp.EVENT_COLUMN_REMOVE, this.removeItems.bind(this, [item]));\n    this.context.createBean(itemComponent);\n    this.guiDestroyFunctions.push(() => this.destroyBean(itemComponent));\n    if (!ghost) {\n      this.childPillComponents.push(itemComponent);\n    }\n    return itemComponent;\n  }\n  addIconAndTitleToGui() {\n    const { title, icon: eGroupIcon } = this.params;\n    if (!title || !eGroupIcon) {\n      return;\n    }\n    const eTitleBar = document.createElement(\"div\");\n    setAriaHidden(eTitleBar, true);\n    this.addElementClasses(eTitleBar, \"title-bar\");\n    this.addElementClasses(eGroupIcon, \"icon\");\n    this.addOrRemoveCssClass(\"ag-column-drop-empty\", this.isExistingItemsEmpty());\n    eTitleBar.appendChild(eGroupIcon);\n    if (!this.horizontal) {\n      const eTitle = document.createElement(\"span\");\n      this.addElementClasses(eTitle, \"title\");\n      eTitle.innerHTML = title;\n      eTitleBar.appendChild(eTitle);\n    }\n    this.appendChild(eTitleBar);\n  }\n  isExistingItemsEmpty() {\n    return this.getExistingItems().length === 0;\n  }\n  addEmptyMessageToGui() {\n    const { emptyMessage } = this.params;\n    if (!emptyMessage || !this.isExistingItemsEmpty() || this.isPotentialDndItems()) {\n      return;\n    }\n    const eMessage = document.createElement(\"span\");\n    eMessage.innerHTML = emptyMessage;\n    this.addElementClasses(eMessage, \"empty-message\");\n    this.ePillDropList.appendChild(eMessage);\n  }\n  addArrow(eParent) {\n    if (this.horizontal) {\n      const enableRtl = this.gos.get(\"enableRtl\");\n      const icon = createIconNoSpan(enableRtl ? \"smallLeft\" : \"smallRight\", this.gos);\n      this.addElementClasses(icon, \"cell-separator\");\n      eParent.appendChild(icon);\n    }\n  }\n};\n_PillDropZonePanel.STATE_NOT_DRAGGING = \"notDragging\";\n_PillDropZonePanel.STATE_NEW_ITEMS_IN = \"newItemsIn\";\n_PillDropZonePanel.STATE_REARRANGE_ITEMS = \"rearrangeItems\";\n__decorateClass([\n  Autowired(\"focusService\")\n], _PillDropZonePanel.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"dragAndDropService\")\n], _PillDropZonePanel.prototype, \"dragAndDropService\", 2);\nvar PillDropZonePanel = _PillDropZonePanel;\n\n// community-modules/core/src/vanillaFrameworkOverrides.ts\nvar PASSIVE_EVENTS2 = [\"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\"];\nvar VanillaFrameworkOverrides = class {\n  constructor(frameworkName = \"javascript\") {\n    this.frameworkName = frameworkName;\n    this.renderingEngine = \"vanilla\";\n    this.wrapIncoming = (callback) => callback();\n    this.wrapOutgoing = (callback) => callback();\n  }\n  setInterval(action, timeout) {\n    return new AgPromise((resolve) => {\n      resolve(window.setInterval(action, timeout));\n    });\n  }\n  // for Vanilla JS, we just add the event to the element\n  addEventListener(element, type, listener, useCapture) {\n    const isPassive = includes(PASSIVE_EVENTS2, type);\n    element.addEventListener(type, listener, { capture: !!useCapture, passive: isPassive });\n  }\n  get shouldWrapOutgoing() {\n    return false;\n  }\n  frameworkComponent(name) {\n    return null;\n  }\n  isFrameworkComponent(comp) {\n    return false;\n  }\n  getDocLink(path) {\n    const framework = this.frameworkName === \"solid\" ? \"react\" : this.frameworkName;\n    return `https://www.ag-grid.com/${framework}-data-grid${path ? `/${path}` : \"\"}`;\n  }\n};\n\n// community-modules/core/src/cellNavigationService.ts\nvar CellNavigationService = class extends BeanStub {\n  // returns null if no cell to focus on, ie at the end of the grid\n  getNextCellToFocus(key, focusedCell, ctrlPressed = false) {\n    if (ctrlPressed) {\n      return this.getNextCellToFocusWithCtrlPressed(key, focusedCell);\n    }\n    return this.getNextCellToFocusWithoutCtrlPressed(key, focusedCell);\n  }\n  getNextCellToFocusWithCtrlPressed(key, focusedCell) {\n    const upKey = key === KeyCode.UP;\n    const downKey = key === KeyCode.DOWN;\n    const leftKey = key === KeyCode.LEFT;\n    let column;\n    let rowIndex;\n    if (upKey || downKey) {\n      rowIndex = upKey ? this.paginationProxy.getPageFirstRow() : this.paginationProxy.getPageLastRow();\n      column = focusedCell.column;\n    } else {\n      const allColumns = this.columnModel.getAllDisplayedColumns();\n      const isRtl = this.gos.get(\"enableRtl\");\n      rowIndex = focusedCell.rowIndex;\n      column = leftKey !== isRtl ? allColumns[0] : last(allColumns);\n    }\n    return {\n      rowIndex,\n      rowPinned: null,\n      column\n    };\n  }\n  getNextCellToFocusWithoutCtrlPressed(key, focusedCell) {\n    let pointer = focusedCell;\n    let finished = false;\n    while (!finished) {\n      switch (key) {\n        case KeyCode.UP:\n          pointer = this.getCellAbove(pointer);\n          break;\n        case KeyCode.DOWN:\n          pointer = this.getCellBelow(pointer);\n          break;\n        case KeyCode.RIGHT:\n          if (this.gos.get(\"enableRtl\")) {\n            pointer = this.getCellToLeft(pointer);\n          } else {\n            pointer = this.getCellToRight(pointer);\n          }\n          break;\n        case KeyCode.LEFT:\n          if (this.gos.get(\"enableRtl\")) {\n            pointer = this.getCellToRight(pointer);\n          } else {\n            pointer = this.getCellToLeft(pointer);\n          }\n          break;\n        default:\n          pointer = null;\n          console.warn(\"AG Grid: unknown key for navigation \" + key);\n          break;\n      }\n      if (pointer) {\n        finished = this.isCellGoodToFocusOn(pointer);\n      } else {\n        finished = true;\n      }\n    }\n    return pointer;\n  }\n  isCellGoodToFocusOn(gridCell) {\n    const column = gridCell.column;\n    let rowNode;\n    switch (gridCell.rowPinned) {\n      case \"top\":\n        rowNode = this.pinnedRowModel.getPinnedTopRow(gridCell.rowIndex);\n        break;\n      case \"bottom\":\n        rowNode = this.pinnedRowModel.getPinnedBottomRow(gridCell.rowIndex);\n        break;\n      default:\n        rowNode = this.rowModel.getRow(gridCell.rowIndex);\n        break;\n    }\n    if (!rowNode) {\n      return false;\n    }\n    const suppressNavigable = column.isSuppressNavigable(rowNode);\n    return !suppressNavigable;\n  }\n  getCellToLeft(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const colToLeft = this.columnModel.getDisplayedColBefore(lastCell.column);\n    if (!colToLeft) {\n      return null;\n    }\n    return {\n      rowIndex: lastCell.rowIndex,\n      column: colToLeft,\n      rowPinned: lastCell.rowPinned\n    };\n  }\n  getCellToRight(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const colToRight = this.columnModel.getDisplayedColAfter(lastCell.column);\n    if (!colToRight) {\n      return null;\n    }\n    return {\n      rowIndex: lastCell.rowIndex,\n      column: colToRight,\n      rowPinned: lastCell.rowPinned\n    };\n  }\n  getRowBelow(rowPosition) {\n    const index = rowPosition.rowIndex;\n    const pinned = rowPosition.rowPinned;\n    if (this.isLastRowInContainer(rowPosition)) {\n      switch (pinned) {\n        case \"bottom\":\n          return null;\n        case \"top\":\n          if (this.rowModel.isRowsToRender()) {\n            return { rowIndex: this.paginationProxy.getPageFirstRow(), rowPinned: null };\n          }\n          if (this.pinnedRowModel.isRowsToRender(\"bottom\")) {\n            return { rowIndex: 0, rowPinned: \"bottom\" };\n          }\n          return null;\n        default:\n          if (this.pinnedRowModel.isRowsToRender(\"bottom\")) {\n            return { rowIndex: 0, rowPinned: \"bottom\" };\n          }\n          return null;\n      }\n    }\n    const rowNode = this.rowModel.getRow(rowPosition.rowIndex);\n    const nextStickyPosition = this.getNextStickyPosition(rowNode);\n    if (nextStickyPosition) {\n      return nextStickyPosition;\n    }\n    return { rowIndex: index + 1, rowPinned: pinned };\n  }\n  getNextStickyPosition(rowNode, up) {\n    if (!this.gos.isGroupRowsSticky() || !rowNode || !rowNode.sticky) {\n      return;\n    }\n    const isTopCtrls = this.rowRenderer.getStickyTopRowCtrls().some((ctrl) => ctrl.getRowNode().rowIndex === rowNode.rowIndex);\n    let stickyRowCtrls = [];\n    if (isTopCtrls) {\n      stickyRowCtrls = [...this.rowRenderer.getStickyTopRowCtrls()].sort(\n        (a, b) => a.getRowNode().rowIndex - b.getRowNode().rowIndex\n      );\n    } else {\n      stickyRowCtrls = [...this.rowRenderer.getStickyBottomRowCtrls()].sort(\n        (a, b) => b.getRowNode().rowIndex - a.getRowNode().rowIndex\n      );\n    }\n    const diff = up ? -1 : 1;\n    const idx = stickyRowCtrls.findIndex((ctrl) => ctrl.getRowNode().rowIndex === rowNode.rowIndex);\n    const nextCtrl = stickyRowCtrls[idx + diff];\n    if (nextCtrl) {\n      return { rowIndex: nextCtrl.getRowNode().rowIndex, rowPinned: null };\n    }\n  }\n  getCellBelow(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const rowBelow = this.getRowBelow(lastCell);\n    if (rowBelow) {\n      return {\n        rowIndex: rowBelow.rowIndex,\n        column: lastCell.column,\n        rowPinned: rowBelow.rowPinned\n      };\n    }\n    return null;\n  }\n  isLastRowInContainer(rowPosition) {\n    const pinned = rowPosition.rowPinned;\n    const index = rowPosition.rowIndex;\n    if (pinned === \"top\") {\n      const lastTopIndex = this.pinnedRowModel.getPinnedTopRowData().length - 1;\n      return lastTopIndex <= index;\n    }\n    if (pinned === \"bottom\") {\n      const lastBottomIndex = this.pinnedRowModel.getPinnedBottomRowData().length - 1;\n      return lastBottomIndex <= index;\n    }\n    const lastBodyIndex = this.paginationProxy.getPageLastRow();\n    return lastBodyIndex <= index;\n  }\n  getRowAbove(rowPosition) {\n    const index = rowPosition.rowIndex;\n    const pinned = rowPosition.rowPinned;\n    const isFirstRow = pinned ? index === 0 : index === this.paginationProxy.getPageFirstRow();\n    if (isFirstRow) {\n      if (pinned === \"top\") {\n        return null;\n      }\n      if (!pinned) {\n        if (this.pinnedRowModel.isRowsToRender(\"top\")) {\n          return this.getLastFloatingTopRow();\n        }\n        return null;\n      }\n      if (this.rowModel.isRowsToRender()) {\n        return this.getLastBodyCell();\n      }\n      if (this.pinnedRowModel.isRowsToRender(\"top\")) {\n        return this.getLastFloatingTopRow();\n      }\n      return null;\n    }\n    const rowNode = this.rowModel.getRow(rowPosition.rowIndex);\n    const nextStickyPosition = this.getNextStickyPosition(rowNode, true);\n    if (nextStickyPosition) {\n      return nextStickyPosition;\n    }\n    return { rowIndex: index - 1, rowPinned: pinned };\n  }\n  getCellAbove(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const rowAbove = this.getRowAbove({ rowIndex: lastCell.rowIndex, rowPinned: lastCell.rowPinned });\n    if (rowAbove) {\n      return {\n        rowIndex: rowAbove.rowIndex,\n        column: lastCell.column,\n        rowPinned: rowAbove.rowPinned\n      };\n    }\n    return null;\n  }\n  getLastBodyCell() {\n    const lastBodyRow = this.paginationProxy.getPageLastRow();\n    return { rowIndex: lastBodyRow, rowPinned: null };\n  }\n  getLastFloatingTopRow() {\n    const lastFloatingRow = this.pinnedRowModel.getPinnedTopRowData().length - 1;\n    return { rowIndex: lastFloatingRow, rowPinned: \"top\" };\n  }\n  getNextTabbedCell(gridCell, backwards) {\n    if (backwards) {\n      return this.getNextTabbedCellBackwards(gridCell);\n    }\n    return this.getNextTabbedCellForwards(gridCell);\n  }\n  getNextTabbedCellForwards(gridCell) {\n    const displayedColumns = this.columnModel.getAllDisplayedColumns();\n    let newRowIndex = gridCell.rowIndex;\n    let newFloating = gridCell.rowPinned;\n    let newColumn = this.columnModel.getDisplayedColAfter(gridCell.column);\n    if (!newColumn) {\n      newColumn = displayedColumns[0];\n      const rowBelow = this.getRowBelow(gridCell);\n      if (missing(rowBelow)) {\n        return null;\n      }\n      if (!rowBelow.rowPinned && !this.paginationProxy.isRowInPage(rowBelow)) {\n        return null;\n      }\n      newRowIndex = rowBelow ? rowBelow.rowIndex : null;\n      newFloating = rowBelow ? rowBelow.rowPinned : null;\n    }\n    return { rowIndex: newRowIndex, column: newColumn, rowPinned: newFloating };\n  }\n  getNextTabbedCellBackwards(gridCell) {\n    const displayedColumns = this.columnModel.getAllDisplayedColumns();\n    let newRowIndex = gridCell.rowIndex;\n    let newFloating = gridCell.rowPinned;\n    let newColumn = this.columnModel.getDisplayedColBefore(gridCell.column);\n    if (!newColumn) {\n      newColumn = last(displayedColumns);\n      const rowAbove = this.getRowAbove({ rowIndex: gridCell.rowIndex, rowPinned: gridCell.rowPinned });\n      if (missing(rowAbove)) {\n        return null;\n      }\n      if (!rowAbove.rowPinned && !this.paginationProxy.isRowInPage(rowAbove)) {\n        return null;\n      }\n      newRowIndex = rowAbove ? rowAbove.rowIndex : null;\n      newFloating = rowAbove ? rowAbove.rowPinned : null;\n    }\n    return { rowIndex: newRowIndex, column: newColumn, rowPinned: newFloating };\n  }\n};\n__decorateClass([\n  Autowired(\"columnModel\")\n], CellNavigationService.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"rowModel\")\n], CellNavigationService.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"rowRenderer\")\n], CellNavigationService.prototype, \"rowRenderer\", 2);\n__decorateClass([\n  Autowired(\"pinnedRowModel\")\n], CellNavigationService.prototype, \"pinnedRowModel\", 2);\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], CellNavigationService.prototype, \"paginationProxy\", 2);\nCellNavigationService = __decorateClass([\n  Bean(\"cellNavigationService\")\n], CellNavigationService);\n\n// community-modules/core/src/alignedGridsService.ts\nvar AlignedGridsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    // flag to mark if we are consuming. to avoid cyclic events (ie other grid firing back to master\n    // while processing a master event) we mark this if consuming an event, and if we are, then\n    // we don't fire back any events.\n    this.consuming = false;\n  }\n  setBeans(loggerFactory) {\n    this.logger = loggerFactory.create(\"AlignedGridsService\");\n  }\n  getAlignedGridApis() {\n    var _a;\n    let alignedGrids = (_a = this.gos.get(\"alignedGrids\")) != null ? _a : [];\n    const isCallbackConfig = typeof alignedGrids === \"function\";\n    if (typeof alignedGrids === \"function\") {\n      alignedGrids = alignedGrids();\n    }\n    const seeUrl = () => `See ${this.getFrameworkOverrides().getDocLink(\"aligned-grids\")}`;\n    const apis = alignedGrids.map((alignedGrid) => {\n      var _a2;\n      if (!alignedGrid) {\n        errorOnce(`alignedGrids contains an undefined option.`);\n        if (!isCallbackConfig) {\n          errorOnce(`You may want to configure via a callback to avoid setup race conditions:\n                     \"alignedGrids: () => [linkedGrid]\"`);\n        }\n        errorOnce(seeUrl());\n        return;\n      }\n      if (alignedGrid instanceof GridApi) {\n        return alignedGrid;\n      }\n      const refOrComp = alignedGrid;\n      if (\"current\" in refOrComp) {\n        return (_a2 = refOrComp.current) == null ? void 0 : _a2.api;\n      } else {\n        if (!refOrComp.api) {\n          errorOnce(`alignedGrids - No api found on the linked grid. If you are passing gridOptions to alignedGrids since v31 this is no longer valid. ${seeUrl()}`);\n        }\n        return refOrComp.api;\n      }\n    }).filter((api) => !!api && !api.isDestroyed());\n    return apis;\n  }\n  init() {\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_MOVED, this.fireColumnEvent.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VISIBLE, this.fireColumnEvent.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PINNED, this.fireColumnEvent.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_GROUP_OPENED, this.fireColumnEvent.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_RESIZED, this.fireColumnEvent.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_BODY_SCROLL, this.fireScrollEvent.bind(this));\n  }\n  // common logic across all the fire methods\n  fireEvent(callback) {\n    if (this.consuming) {\n      return;\n    }\n    this.getAlignedGridApis().forEach((api) => {\n      if (api.isDestroyed()) {\n        return;\n      }\n      const alignedGridService = api.__getAlignedGridService();\n      callback(alignedGridService);\n    });\n  }\n  // common logic across all consume methods. very little common logic, however extracting\n  // guarantees consistency across the methods.\n  onEvent(callback) {\n    this.consuming = true;\n    callback();\n    this.consuming = false;\n  }\n  fireColumnEvent(event) {\n    this.fireEvent((alignedGridsService) => {\n      alignedGridsService.onColumnEvent(event);\n    });\n  }\n  fireScrollEvent(event) {\n    if (event.direction !== \"horizontal\") {\n      return;\n    }\n    this.fireEvent((alignedGridsService) => {\n      alignedGridsService.onScrollEvent(event);\n    });\n  }\n  onScrollEvent(event) {\n    this.onEvent(() => {\n      const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n      gridBodyCon.getScrollFeature().setHorizontalScrollPosition(event.left, true);\n    });\n  }\n  getMasterColumns(event) {\n    const result = [];\n    if (event.columns) {\n      event.columns.forEach((column) => {\n        result.push(column);\n      });\n    } else if (event.column) {\n      result.push(event.column);\n    }\n    return result;\n  }\n  getColumnIds(event) {\n    const result = [];\n    if (event.columns) {\n      event.columns.forEach((column) => {\n        result.push(column.getColId());\n      });\n    } else if (event.column) {\n      result.push(event.column.getColId());\n    }\n    return result;\n  }\n  onColumnEvent(event) {\n    this.onEvent(() => {\n      switch (event.type) {\n        case Events.EVENT_COLUMN_MOVED:\n        case Events.EVENT_COLUMN_VISIBLE:\n        case Events.EVENT_COLUMN_PINNED:\n        case Events.EVENT_COLUMN_RESIZED:\n          const colEvent = event;\n          this.processColumnEvent(colEvent);\n          break;\n        case Events.EVENT_COLUMN_GROUP_OPENED:\n          const groupOpenedEvent = event;\n          this.processGroupOpenedEvent(groupOpenedEvent);\n          break;\n        case Events.EVENT_COLUMN_PIVOT_CHANGED:\n          console.warn(\"AG Grid: pivoting is not supported with aligned grids. You can only use one of these features at a time in a grid.\");\n          break;\n      }\n    });\n  }\n  processGroupOpenedEvent(groupOpenedEvent) {\n    groupOpenedEvent.columnGroups.forEach((masterGroup) => {\n      let otherColumnGroup = null;\n      if (masterGroup) {\n        const groupId = masterGroup.getGroupId();\n        otherColumnGroup = this.columnModel.getProvidedColumnGroup(groupId);\n      }\n      if (masterGroup && !otherColumnGroup) {\n        return;\n      }\n      this.logger.log(\"onColumnEvent-> processing \" + groupOpenedEvent + \" expanded = \" + masterGroup.isExpanded());\n      this.columnModel.setColumnGroupOpened(otherColumnGroup, masterGroup.isExpanded(), \"alignedGridChanged\");\n    });\n  }\n  processColumnEvent(colEvent) {\n    var _a;\n    const masterColumn = colEvent.column;\n    let otherColumn = null;\n    if (masterColumn) {\n      otherColumn = this.columnModel.getPrimaryColumn(masterColumn.getColId());\n    }\n    if (masterColumn && !otherColumn) {\n      return;\n    }\n    const masterColumns = this.getMasterColumns(colEvent);\n    switch (colEvent.type) {\n      case Events.EVENT_COLUMN_MOVED:\n        {\n          const movedEvent = colEvent;\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map((s) => ({ colId: s.colId }));\n          this.columnModel.applyColumnState(\n            { state: destColState, applyOrder: true },\n            \"alignedGridChanged\"\n          );\n          this.logger.log(`onColumnEvent-> processing ${colEvent.type} toIndex = ${movedEvent.toIndex}`);\n        }\n        break;\n      case Events.EVENT_COLUMN_VISIBLE:\n        {\n          const visibleEvent = colEvent;\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map((s) => ({ colId: s.colId, hide: s.hide }));\n          this.columnModel.applyColumnState({ state: destColState }, \"alignedGridChanged\");\n          this.logger.log(`onColumnEvent-> processing ${colEvent.type} visible = ${visibleEvent.visible}`);\n        }\n        break;\n      case Events.EVENT_COLUMN_PINNED:\n        {\n          const pinnedEvent = colEvent;\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map((s) => ({ colId: s.colId, pinned: s.pinned }));\n          this.columnModel.applyColumnState({ state: destColState }, \"alignedGridChanged\");\n          this.logger.log(`onColumnEvent-> processing ${colEvent.type} pinned = ${pinnedEvent.pinned}`);\n        }\n        break;\n      case Events.EVENT_COLUMN_RESIZED:\n        const resizedEvent = colEvent;\n        const columnWidths = {};\n        masterColumns.forEach((column) => {\n          this.logger.log(`onColumnEvent-> processing ${colEvent.type} actualWidth = ${column.getActualWidth()}`);\n          columnWidths[column.getId()] = { key: column.getColId(), newWidth: column.getActualWidth() };\n        });\n        (_a = resizedEvent.flexColumns) == null ? void 0 : _a.forEach((col) => {\n          if (columnWidths[col.getId()]) {\n            delete columnWidths[col.getId()];\n          }\n        });\n        this.columnModel.setColumnWidths(Object.values(columnWidths), false, resizedEvent.finished, \"alignedGridChanged\");\n        break;\n    }\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const isVerticalScrollShowing2 = gridBodyCon.isVerticalScrollShowing();\n    this.getAlignedGridApis().forEach((api) => {\n      api.setGridOption(\"alwaysShowVerticalScroll\", isVerticalScrollShowing2);\n    });\n  }\n};\n__decorateClass([\n  Autowired(\"columnModel\")\n], AlignedGridsService.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], AlignedGridsService.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  __decorateParam(0, Qualifier(\"loggerFactory\"))\n], AlignedGridsService.prototype, \"setBeans\", 1);\n__decorateClass([\n  PostConstruct\n], AlignedGridsService.prototype, \"init\", 1);\nAlignedGridsService = __decorateClass([\n  Bean(\"alignedGridsService\")\n], AlignedGridsService);\n\n// community-modules/core/src/selectionService.ts\nvar SelectionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.selectedNodes = /* @__PURE__ */ new Map();\n    this.lastRowNode = null;\n  }\n  init() {\n    this.rowSelection = this.gos.get(\"rowSelection\");\n    this.groupSelectsChildren = this.gos.get(\"groupSelectsChildren\");\n    this.addManagedPropertyListeners([\"groupSelectsChildren\", \"rowSelection\"], () => {\n      this.groupSelectsChildren = this.gos.get(\"groupSelectsChildren\");\n      this.rowSelection = this.gos.get(\"rowSelection\");\n      this.deselectAllRowNodes({ source: \"api\" });\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));\n  }\n  destroy() {\n    super.destroy();\n    this.resetNodes();\n    this.lastRowNode = null;\n  }\n  isMultiselect() {\n    return this.rowSelection === \"multiple\";\n  }\n  setNodesSelected(params) {\n    var _a;\n    const {\n      newValue,\n      clearSelection,\n      suppressFinishActions,\n      rangeSelect,\n      nodes,\n      event,\n      source = \"api\"\n    } = params;\n    if (nodes.length === 0)\n      return 0;\n    if (nodes.length > 1 && !this.isMultiselect()) {\n      console.warn(`AG Grid: cannot multi select while rowSelection='single'`);\n      return 0;\n    }\n    const groupSelectsFiltered = this.groupSelectsChildren && params.groupSelectsFiltered === true;\n    const filteredNodes = nodes.map((node) => node.footer ? node.sibling : node);\n    if (rangeSelect) {\n      if (nodes.length > 1) {\n        console.warn(\"AG Grid: cannot range select while selecting multiple rows\");\n        return 0;\n      }\n      let toNode = null;\n      if (source === \"checkboxSelected\" && newValue === false && this.lastRowNode) {\n        if (this.lastRowNode.id) {\n          toNode = this.lastRowNode;\n        } else {\n          this.lastRowNode = null;\n        }\n      }\n      if (toNode == null) {\n        toNode = this.getLastSelectedNode();\n      }\n      if (toNode) {\n        const fromNode = filteredNodes[0];\n        const newRowClicked = fromNode !== toNode;\n        if (newRowClicked && this.isMultiselect()) {\n          return this.selectRange(fromNode, toNode, newValue, source);\n        }\n      }\n    }\n    this.lastRowNode = newValue ? null : filteredNodes[0];\n    let updatedCount = 0;\n    for (let i = 0; i < filteredNodes.length; i++) {\n      const node = filteredNodes[i];\n      const skipThisNode = groupSelectsFiltered && node.group;\n      if (!skipThisNode) {\n        const thisNodeWasSelected = node.selectThisNode(newValue, event, source);\n        if (thisNodeWasSelected) {\n          updatedCount++;\n        }\n      }\n      if (this.groupSelectsChildren && ((_a = node.childrenAfterGroup) == null ? void 0 : _a.length)) {\n        updatedCount += this.selectChildren(node, newValue, groupSelectsFiltered, source);\n      }\n    }\n    if (!suppressFinishActions) {\n      const clearOtherNodes = newValue && (clearSelection || !this.isMultiselect());\n      if (clearOtherNodes) {\n        updatedCount += this.clearOtherNodes(filteredNodes[0], source);\n      }\n      if (updatedCount > 0) {\n        this.updateGroupsFromChildrenSelections(source);\n        const event2 = {\n          type: Events.EVENT_SELECTION_CHANGED,\n          source\n        };\n        this.eventService.dispatchEvent(event2);\n      }\n    }\n    return updatedCount;\n  }\n  // selects all rows between this node and the last selected node (or the top if this is the first selection).\n  // not to be mixed up with 'cell range selection' where you drag the mouse, this is row range selection, by\n  // holding down 'shift'.\n  selectRange(fromNode, toNode, value = true, source) {\n    const nodesToSelect = this.rowModel.getNodesInRangeForSelection(fromNode, toNode);\n    let updatedCount = 0;\n    nodesToSelect.forEach((rowNode) => {\n      if (rowNode.group && this.groupSelectsChildren) {\n        return;\n      }\n      const nodeWasSelected = rowNode.selectThisNode(value, void 0, source);\n      if (nodeWasSelected) {\n        updatedCount++;\n      }\n    });\n    this.updateGroupsFromChildrenSelections(source);\n    const event = {\n      type: Events.EVENT_SELECTION_CHANGED,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n    return updatedCount;\n  }\n  selectChildren(node, newValue, groupSelectsFiltered, source) {\n    const children = groupSelectsFiltered ? node.childrenAfterAggFilter : node.childrenAfterGroup;\n    if (missing(children)) {\n      return 0;\n    }\n    return this.setNodesSelected({\n      newValue,\n      clearSelection: false,\n      suppressFinishActions: true,\n      groupSelectsFiltered,\n      source,\n      nodes: children\n    });\n  }\n  getLastSelectedNode() {\n    const selectedKeys = Array.from(this.selectedNodes.keys());\n    if (selectedKeys.length == 0) {\n      return null;\n    }\n    const node = this.selectedNodes.get(last(selectedKeys));\n    if (node) {\n      return node;\n    }\n    return null;\n  }\n  getSelectedNodes() {\n    const selectedNodes = [];\n    this.selectedNodes.forEach((rowNode) => {\n      if (rowNode) {\n        selectedNodes.push(rowNode);\n      }\n    });\n    return selectedNodes;\n  }\n  getSelectedRows() {\n    const selectedRows = [];\n    this.selectedNodes.forEach((rowNode) => {\n      if (rowNode && rowNode.data) {\n        selectedRows.push(rowNode.data);\n      }\n    });\n    return selectedRows;\n  }\n  getSelectionCount() {\n    return this.selectedNodes.size;\n  }\n  /**\n   * This method is used by the CSRM to remove groups which are being disposed of,\n   * events do not need fired in this case\n   */\n  filterFromSelection(predicate) {\n    const newSelectedNodes = /* @__PURE__ */ new Map();\n    this.selectedNodes.forEach((rowNode, key) => {\n      const passesPredicate = rowNode && predicate(rowNode);\n      if (passesPredicate) {\n        newSelectedNodes.set(key, rowNode);\n      }\n    });\n    this.selectedNodes = newSelectedNodes;\n  }\n  // should only be called if groupSelectsChildren=true\n  updateGroupsFromChildrenSelections(source, changedPath) {\n    if (!this.groupSelectsChildren) {\n      return false;\n    }\n    if (this.rowModel.getType() !== \"clientSide\") {\n      return false;\n    }\n    const clientSideRowModel = this.rowModel;\n    const rootNode = clientSideRowModel.getRootNode();\n    if (!changedPath) {\n      changedPath = new ChangedPath(true, rootNode);\n      changedPath.setInactive();\n    }\n    let selectionChanged = false;\n    changedPath.forEachChangedNodeDepthFirst((rowNode) => {\n      if (rowNode !== rootNode) {\n        const selected = rowNode.calculateSelectedFromChildren();\n        selectionChanged = rowNode.selectThisNode(selected === null ? false : selected, void 0, source) || selectionChanged;\n      }\n    });\n    return selectionChanged;\n  }\n  clearOtherNodes(rowNodeToKeepSelected, source) {\n    const groupsToRefresh = /* @__PURE__ */ new Map();\n    let updatedCount = 0;\n    this.selectedNodes.forEach((otherRowNode) => {\n      if (otherRowNode && otherRowNode.id !== rowNodeToKeepSelected.id) {\n        const rowNode = this.selectedNodes.get(otherRowNode.id);\n        updatedCount += rowNode.setSelectedParams({\n          newValue: false,\n          clearSelection: false,\n          suppressFinishActions: true,\n          source\n        });\n        if (this.groupSelectsChildren && otherRowNode.parent) {\n          groupsToRefresh.set(otherRowNode.parent.id, otherRowNode.parent);\n        }\n      }\n    });\n    groupsToRefresh.forEach((group) => {\n      const selected = group.calculateSelectedFromChildren();\n      group.selectThisNode(selected === null ? false : selected, void 0, source);\n    });\n    return updatedCount;\n  }\n  onRowSelected(event) {\n    const rowNode = event.node;\n    if (this.groupSelectsChildren && rowNode.group) {\n      return;\n    }\n    if (rowNode.isSelected()) {\n      this.selectedNodes.set(rowNode.id, rowNode);\n    } else {\n      this.selectedNodes.delete(rowNode.id);\n    }\n  }\n  syncInRowNode(rowNode, oldNode) {\n    this.syncInOldRowNode(rowNode, oldNode);\n    this.syncInNewRowNode(rowNode);\n  }\n  // if the id has changed for the node, then this means the rowNode\n  // is getting used for a different data item, which breaks\n  // our selectedNodes, as the node now is mapped by the old id\n  // which is inconsistent. so to keep the old node as selected,\n  // we swap in the clone (with the old id and old data). this means\n  // the oldNode is effectively a daemon we keep a reference to,\n  // so if client calls api.getSelectedNodes(), it gets the daemon\n  // in the result. when the client un-selects, the reference to the\n  // daemon is removed. the daemon, because it's an oldNode, is not\n  // used by the grid for rendering, it's a copy of what the node used\n  // to be like before the id was changed.\n  syncInOldRowNode(rowNode, oldNode) {\n    const oldNodeHasDifferentId = exists(oldNode) && rowNode.id !== oldNode.id;\n    if (oldNodeHasDifferentId && oldNode) {\n      const id = oldNode.id;\n      const oldNodeSelected = this.selectedNodes.get(id) == rowNode;\n      if (oldNodeSelected) {\n        this.selectedNodes.set(oldNode.id, oldNode);\n      }\n    }\n  }\n  syncInNewRowNode(rowNode) {\n    if (this.selectedNodes.has(rowNode.id)) {\n      rowNode.setSelectedInitialValue(true);\n      this.selectedNodes.set(rowNode.id, rowNode);\n    } else {\n      rowNode.setSelectedInitialValue(false);\n    }\n  }\n  reset(source) {\n    const selectionCount = this.getSelectionCount();\n    this.resetNodes();\n    if (selectionCount) {\n      const event = {\n        type: Events.EVENT_SELECTION_CHANGED,\n        source\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  resetNodes() {\n    var _a;\n    (_a = this.selectedNodes) == null ? void 0 : _a.clear();\n  }\n  // returns a list of all nodes at 'best cost' - a feature to be used\n  // with groups / trees. if a group has all it's children selected,\n  // then the group appears in the result, but not the children.\n  // Designed for use with 'children' as the group selection type,\n  // where groups don't actually appear in the selection normally.\n  getBestCostNodeSelection() {\n    if (this.rowModel.getType() !== \"clientSide\") {\n      return;\n    }\n    const clientSideRowModel = this.rowModel;\n    const topLevelNodes = clientSideRowModel.getTopLevelNodes();\n    if (topLevelNodes === null) {\n      return;\n    }\n    const result = [];\n    function traverse(nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        const node = nodes[i];\n        if (node.isSelected()) {\n          result.push(node);\n        } else {\n          const maybeGroup = node;\n          if (maybeGroup.group && maybeGroup.children) {\n            traverse(maybeGroup.children);\n          }\n        }\n      }\n    }\n    traverse(topLevelNodes);\n    return result;\n  }\n  isEmpty() {\n    let count = 0;\n    this.selectedNodes.forEach((rowNode) => {\n      if (rowNode) {\n        count++;\n      }\n    });\n    return count === 0;\n  }\n  deselectAllRowNodes(params) {\n    const callback = (rowNode) => rowNode.selectThisNode(false, void 0, source);\n    const rowModelClientSide = this.rowModel.getType() === \"clientSide\";\n    const { source, justFiltered, justCurrentPage } = params;\n    if (justCurrentPage || justFiltered) {\n      if (!rowModelClientSide) {\n        console.error(\"AG Grid: selecting just filtered only works when gridOptions.rowModelType='clientSide'\");\n        return;\n      }\n      this.getNodesToSelect(justFiltered, justCurrentPage).forEach(callback);\n    } else {\n      this.selectedNodes.forEach((rowNode) => {\n        if (rowNode) {\n          callback(rowNode);\n        }\n      });\n      this.reset(source);\n    }\n    if (rowModelClientSide && this.groupSelectsChildren) {\n      this.updateGroupsFromChildrenSelections(source);\n    }\n    const event = {\n      type: Events.EVENT_SELECTION_CHANGED,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  getSelectedCounts(justFiltered, justCurrentPage) {\n    let selectedCount = 0;\n    let notSelectedCount = 0;\n    const callback = (node) => {\n      if (this.groupSelectsChildren && node.group) {\n        return;\n      }\n      if (node.isSelected()) {\n        selectedCount++;\n      } else if (!node.selectable) {\n      } else {\n        notSelectedCount++;\n      }\n    };\n    this.getNodesToSelect(justFiltered, justCurrentPage).forEach(callback);\n    return { selectedCount, notSelectedCount };\n  }\n  getSelectAllState(justFiltered, justCurrentPage) {\n    const { selectedCount, notSelectedCount } = this.getSelectedCounts(justFiltered, justCurrentPage);\n    if (selectedCount === 0 && notSelectedCount === 0) {\n      return false;\n    }\n    if (selectedCount > 0 && notSelectedCount > 0) {\n      return null;\n    }\n    return selectedCount > 0;\n  }\n  hasNodesToSelect(justFiltered = false, justCurrentPage = false) {\n    return this.getNodesToSelect(justFiltered, justCurrentPage).filter((node) => node.selectable).length > 0;\n  }\n  /**\n   * @param justFiltered whether to just include nodes which have passed the filter\n   * @param justCurrentPage whether to just include nodes on the current page\n   * @returns all nodes including unselectable nodes which are the target of this selection attempt\n   */\n  getNodesToSelect(justFiltered = false, justCurrentPage = false) {\n    if (this.rowModel.getType() !== \"clientSide\") {\n      throw new Error(`selectAll only available when rowModelType='clientSide', ie not ${this.rowModel.getType()}`);\n    }\n    const nodes = [];\n    if (justCurrentPage) {\n      this.paginationProxy.forEachNodeOnPage((node) => {\n        if (!node.group) {\n          nodes.push(node);\n          return;\n        }\n        if (!node.expanded) {\n          const recursivelyAddChildren = (child) => {\n            var _a;\n            nodes.push(child);\n            if ((_a = child.childrenAfterFilter) == null ? void 0 : _a.length) {\n              child.childrenAfterFilter.forEach(recursivelyAddChildren);\n            }\n          };\n          recursivelyAddChildren(node);\n          return;\n        }\n        if (!this.groupSelectsChildren) {\n          nodes.push(node);\n        }\n      });\n      return nodes;\n    }\n    const clientSideRowModel = this.rowModel;\n    if (justFiltered) {\n      clientSideRowModel.forEachNodeAfterFilter((node) => {\n        nodes.push(node);\n      });\n      return nodes;\n    }\n    clientSideRowModel.forEachNode((node) => {\n      nodes.push(node);\n    });\n    return nodes;\n  }\n  selectAllRowNodes(params) {\n    if (this.rowModel.getType() !== \"clientSide\") {\n      throw new Error(`selectAll only available when rowModelType='clientSide', ie not ${this.rowModel.getType()}`);\n    }\n    const { source, justFiltered, justCurrentPage } = params;\n    const callback = (rowNode) => rowNode.selectThisNode(true, void 0, source);\n    this.getNodesToSelect(justFiltered, justCurrentPage).forEach(callback);\n    if (this.rowModel.getType() === \"clientSide\" && this.groupSelectsChildren) {\n      this.updateGroupsFromChildrenSelections(source);\n    }\n    const event = {\n      type: Events.EVENT_SELECTION_CHANGED,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  getSelectionState() {\n    const selectedIds = [];\n    this.selectedNodes.forEach((node) => {\n      if (node == null ? void 0 : node.id) {\n        selectedIds.push(node.id);\n      }\n    });\n    return selectedIds.length ? selectedIds : null;\n  }\n  setSelectionState(state, source) {\n    if (!Array.isArray(state)) {\n      return;\n    }\n    const rowIds = new Set(state);\n    const nodes = [];\n    this.rowModel.forEachNode((node) => {\n      if (rowIds.has(node.id)) {\n        nodes.push(node);\n      }\n    });\n    this.setNodesSelected({\n      newValue: true,\n      nodes,\n      source\n    });\n  }\n};\n__decorateClass([\n  Autowired(\"rowModel\")\n], SelectionService.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], SelectionService.prototype, \"paginationProxy\", 2);\n__decorateClass([\n  PostConstruct\n], SelectionService.prototype, \"init\", 1);\nSelectionService = __decorateClass([\n  Bean(\"selectionService\")\n], SelectionService);\n\n// community-modules/core/src/columns/columnApi.ts\nvar ColumnApi = class {\n  constructor(gridAp) {\n    this.viaApi = (funcName, ...args) => {\n      warnOnce(`Since v31, 'columnApi.${funcName}' is deprecated and moved to 'api.${funcName}'.`);\n      return this.api[funcName](...args);\n    };\n    this.api = gridAp;\n  }\n  /** @deprecated v31 use `api.sizeColumnsToFit()` instead.   */\n  sizeColumnsToFit(gridWidth) {\n    this.viaApi(\"sizeColumnsToFit\", gridWidth);\n  }\n  /** @deprecated v31 use `api.setColumnGroupOpened() instead. */\n  setColumnGroupOpened(group, newValue) {\n    this.viaApi(\"setColumnGroupOpened\", group, newValue);\n  }\n  /** @deprecated v31 use `api.getColumnGroup() instead. */\n  getColumnGroup(name, instanceId) {\n    return this.viaApi(\"getColumnGroup\", name, instanceId);\n  }\n  /** @deprecated v31 use `api.getProvidedColumnGroup() instead. */\n  getProvidedColumnGroup(name) {\n    return this.viaApi(\"getProvidedColumnGroup\", name);\n  }\n  /** @deprecated v31 use `api.getDisplayNameForColumn() instead. */\n  getDisplayNameForColumn(column, location) {\n    return this.viaApi(\"getDisplayNameForColumn\", column, location);\n  }\n  /** @deprecated v31 use `api.getDisplayNameForColumnGroup() instead. */\n  getDisplayNameForColumnGroup(columnGroup, location) {\n    return this.viaApi(\"getDisplayNameForColumnGroup\", columnGroup, location);\n  }\n  /** @deprecated v31 use `api.getColumn() instead. */\n  getColumn(key) {\n    return this.viaApi(\"getColumn\", key);\n  }\n  /** @deprecated v31 use `api.getColumns() instead. */\n  getColumns() {\n    return this.viaApi(\"getColumns\");\n  }\n  /** @deprecated v31 use `api.applyColumnState() instead. */\n  applyColumnState(params) {\n    return this.viaApi(\"applyColumnState\", params);\n  }\n  /** @deprecated v31 use `api.getColumnState() instead. */\n  getColumnState() {\n    return this.viaApi(\"getColumnState\");\n  }\n  /** @deprecated v31 use `api.resetColumnState() instead. */\n  resetColumnState() {\n    this.viaApi(\"resetColumnState\");\n  }\n  /** @deprecated v31 use `api.getColumnGroupState() instead. */\n  getColumnGroupState() {\n    return this.viaApi(\"getColumnGroupState\");\n  }\n  /** @deprecated v31 use `api.setColumnGroupState() instead. */\n  setColumnGroupState(stateItems) {\n    this.viaApi(\"setColumnGroupState\", stateItems);\n  }\n  /** @deprecated v31 use `api.resetColumnGroupState() instead. */\n  resetColumnGroupState() {\n    this.viaApi(\"resetColumnGroupState\");\n  }\n  /** @deprecated v31 use `api.isPinning() instead. */\n  isPinning() {\n    return this.viaApi(\"isPinning\");\n  }\n  /** @deprecated v31 use `api.isPinningLeft() instead. */\n  isPinningLeft() {\n    return this.viaApi(\"isPinningLeft\");\n  }\n  /** @deprecated v31 use `api.isPinningRight() instead. */\n  isPinningRight() {\n    return this.viaApi(\"isPinningRight\");\n  }\n  /** @deprecated v31 use `api.getDisplayedColAfter() instead. */\n  getDisplayedColAfter(col) {\n    return this.viaApi(\"getDisplayedColAfter\", col);\n  }\n  /** @deprecated v31 use `api.getDisplayedColBefore() instead. */\n  getDisplayedColBefore(col) {\n    return this.viaApi(\"getDisplayedColBefore\", col);\n  }\n  /** @deprecated v31 use `api.setColumnVisible() instead. */\n  setColumnVisible(key, visible) {\n    this.viaApi(\"setColumnVisible\", key, visible);\n  }\n  /** @deprecated v31 use `api.setColumnsVisible() instead. */\n  setColumnsVisible(keys2, visible) {\n    this.viaApi(\"setColumnsVisible\", keys2, visible);\n  }\n  /** @deprecated v31 use `api.setColumnPinned() instead. */\n  setColumnPinned(key, pinned) {\n    this.viaApi(\"setColumnPinned\", key, pinned);\n  }\n  /** @deprecated v31 use `api.setColumnsPinned() instead. */\n  setColumnsPinned(keys2, pinned) {\n    this.viaApi(\"setColumnsPinned\", keys2, pinned);\n  }\n  /** @deprecated v31 use `api.getAllGridColumns() instead. */\n  getAllGridColumns() {\n    return this.viaApi(\"getAllGridColumns\");\n  }\n  /** @deprecated v31 use `api.getDisplayedLeftColumns() instead. */\n  getDisplayedLeftColumns() {\n    return this.viaApi(\"getDisplayedLeftColumns\");\n  }\n  /** @deprecated v31 use `api.getDisplayedCenterColumns() instead. */\n  getDisplayedCenterColumns() {\n    return this.viaApi(\"getDisplayedCenterColumns\");\n  }\n  /** @deprecated v31 use `api.getDisplayedRightColumns() instead. */\n  getDisplayedRightColumns() {\n    return this.viaApi(\"getDisplayedRightColumns\");\n  }\n  /** @deprecated v31 use `api.getAllDisplayedColumns() instead. */\n  getAllDisplayedColumns() {\n    return this.viaApi(\"getAllDisplayedColumns\");\n  }\n  /** @deprecated v31 use `api.getAllDisplayedVirtualColumns() instead. */\n  getAllDisplayedVirtualColumns() {\n    return this.viaApi(\"getAllDisplayedVirtualColumns\");\n  }\n  /** @deprecated v31 use `api.moveColumn() instead. */\n  moveColumn(key, toIndex) {\n    this.viaApi(\"moveColumn\", key, toIndex);\n  }\n  /** @deprecated v31 use `api.moveColumnByIndex() instead. */\n  moveColumnByIndex(fromIndex, toIndex) {\n    this.viaApi(\"moveColumnByIndex\", fromIndex, toIndex);\n  }\n  /** @deprecated v31 use `api.moveColumns() instead. */\n  moveColumns(columnsToMoveKeys, toIndex) {\n    this.viaApi(\"moveColumns\", columnsToMoveKeys, toIndex);\n  }\n  /** @deprecated v31 use `api.moveRowGroupColumn() instead. */\n  moveRowGroupColumn(fromIndex, toIndex) {\n    this.viaApi(\"moveRowGroupColumn\", fromIndex, toIndex);\n  }\n  /** @deprecated v31 use `api.setColumnAggFunc() instead. */\n  setColumnAggFunc(key, aggFunc) {\n    this.viaApi(\"setColumnAggFunc\", key, aggFunc);\n  }\n  /** @deprecated v31 use `api.setColumnWidth() instead. */\n  setColumnWidth(key, newWidth, finished = true, source) {\n    this.viaApi(\"setColumnWidth\", key, newWidth, finished, source);\n  }\n  /** @deprecated v31 use `api.setColumnWidths() instead. */\n  setColumnWidths(columnWidths, finished = true, source) {\n    this.viaApi(\"setColumnWidths\", columnWidths, finished, source);\n  }\n  /** @deprecated v31 use `api.setPivotMode() instead. */\n  setPivotMode(pivotMode) {\n    this.viaApi(\"setPivotMode\", pivotMode);\n  }\n  /** @deprecated v31 use `api.isPivotMode() instead. */\n  isPivotMode() {\n    return this.viaApi(\"isPivotMode\");\n  }\n  /** @deprecated v31 use `api.getPivotResultColumn() instead. */\n  getPivotResultColumn(pivotKeys, valueColKey) {\n    return this.viaApi(\"getPivotResultColumn\", pivotKeys, valueColKey);\n  }\n  /** @deprecated v31 use `api.setValueColumns() instead. */\n  setValueColumns(colKeys) {\n    this.viaApi(\"setValueColumns\", colKeys);\n  }\n  /** @deprecated v31 use `api.getValueColumns() instead. */\n  getValueColumns() {\n    return this.viaApi(\"getValueColumns\");\n  }\n  /** @deprecated v31 use `api.removeValueColumn() instead. */\n  removeValueColumn(colKey) {\n    this.viaApi(\"removeValueColumn\", colKey);\n  }\n  /** @deprecated v31 use `api.removeValueColumns() instead. */\n  removeValueColumns(colKeys) {\n    this.viaApi(\"removeValueColumns\", colKeys);\n  }\n  /** @deprecated v31 use `api.addValueColumn() instead. */\n  addValueColumn(colKey) {\n    this.viaApi(\"addValueColumn\", colKey);\n  }\n  /** @deprecated v31 use `api.addValueColumns() instead. */\n  addValueColumns(colKeys) {\n    this.viaApi(\"addValueColumns\", colKeys);\n  }\n  /** @deprecated v31 use `api.setRowGroupColumns() instead. */\n  setRowGroupColumns(colKeys) {\n    this.viaApi(\"setRowGroupColumns\", colKeys);\n  }\n  /** @deprecated v31 use `api.removeRowGroupColumn() instead. */\n  removeRowGroupColumn(colKey) {\n    this.viaApi(\"removeRowGroupColumn\", colKey);\n  }\n  /** @deprecated v31 use `api.removeRowGroupColumns() instead. */\n  removeRowGroupColumns(colKeys) {\n    this.viaApi(\"removeRowGroupColumns\", colKeys);\n  }\n  /** @deprecated v31 use `api.addRowGroupColumn() instead. */\n  addRowGroupColumn(colKey) {\n    this.viaApi(\"addRowGroupColumn\", colKey);\n  }\n  /** @deprecated v31 use `api.addRowGroupColumns() instead. */\n  addRowGroupColumns(colKeys) {\n    this.viaApi(\"addRowGroupColumns\", colKeys);\n  }\n  /** @deprecated v31 use `api.getRowGroupColumns() instead. */\n  getRowGroupColumns() {\n    return this.viaApi(\"getRowGroupColumns\");\n  }\n  /** @deprecated v31 use `api.setPivotColumns() instead. */\n  setPivotColumns(colKeys) {\n    this.viaApi(\"setPivotColumns\", colKeys);\n  }\n  /** @deprecated v31 use `api.removePivotColumn() instead. */\n  removePivotColumn(colKey) {\n    this.viaApi(\"removePivotColumn\", colKey);\n  }\n  /** @deprecated v31 use `api.removePivotColumns() instead. */\n  removePivotColumns(colKeys) {\n    this.viaApi(\"removePivotColumns\", colKeys);\n  }\n  /** @deprecated v31 use `api.addPivotColumn() instead. */\n  addPivotColumn(colKey) {\n    this.viaApi(\"addPivotColumn\", colKey);\n  }\n  /** @deprecated v31 use `api.addPivotColumns() instead. */\n  addPivotColumns(colKeys) {\n    this.viaApi(\"addPivotColumns\", colKeys);\n  }\n  /** @deprecated v31 use `api.getPivotColumns() instead. */\n  getPivotColumns() {\n    return this.viaApi(\"getPivotColumns\");\n  }\n  /** @deprecated v31 use `api.getLeftDisplayedColumnGroups() instead. */\n  getLeftDisplayedColumnGroups() {\n    return this.viaApi(\"getLeftDisplayedColumnGroups\");\n  }\n  /** @deprecated v31 use `api.getCenterDisplayedColumnGroups() instead. */\n  getCenterDisplayedColumnGroups() {\n    return this.viaApi(\"getCenterDisplayedColumnGroups\");\n  }\n  /** @deprecated v31 use `api.getRightDisplayedColumnGroups() instead. */\n  getRightDisplayedColumnGroups() {\n    return this.viaApi(\"getRightDisplayedColumnGroups\");\n  }\n  /** @deprecated v31 use `api.getAllDisplayedColumnGroups() instead. */\n  getAllDisplayedColumnGroups() {\n    return this.viaApi(\"getAllDisplayedColumnGroups\");\n  }\n  /** @deprecated v31 use `api.autoSizeColumn() instead. */\n  autoSizeColumn(key, skipHeader) {\n    return this.viaApi(\"autoSizeColumn\", key, skipHeader);\n  }\n  /** @deprecated v31 use `api.autoSizeColumns() instead. */\n  autoSizeColumns(keys2, skipHeader) {\n    this.viaApi(\"autoSizeColumns\", keys2, skipHeader);\n  }\n  /** @deprecated v31 use `api.autoSizeAllColumns() instead. */\n  autoSizeAllColumns(skipHeader) {\n    this.viaApi(\"autoSizeAllColumns\", skipHeader);\n  }\n  /** @deprecated v31 use `api.setPivotResultColumns() instead. */\n  setPivotResultColumns(colDefs) {\n    this.viaApi(\"setPivotResultColumns\", colDefs);\n  }\n  /** @deprecated v31 use `api.getPivotResultColumns() instead. */\n  getPivotResultColumns() {\n    return this.viaApi(\"getPivotResultColumns\");\n  }\n};\n__decorateClass([\n  Autowired(\"gridApi\")\n], ColumnApi.prototype, \"api\", 2);\nColumnApi = __decorateClass([\n  Bean(\"columnApi\")\n], ColumnApi);\n\n// community-modules/core/src/valueService/valueService.ts\nvar ValueService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.initialised = false;\n    this.isSsrm = false;\n  }\n  init() {\n    this.isSsrm = this.gos.isRowModelType(\"serverSide\");\n    this.cellExpressions = this.gos.get(\"enableCellExpressions\");\n    this.isTreeData = this.gos.get(\"treeData\");\n    this.initialised = true;\n    const listener = (event) => this.callColumnCellValueChangedHandler(event);\n    const async = this.gos.useAsyncEvents();\n    this.eventService.addEventListener(Events.EVENT_CELL_VALUE_CHANGED, listener, async);\n    this.addDestroyFunc(() => this.eventService.removeEventListener(Events.EVENT_CELL_VALUE_CHANGED, listener, async));\n    this.addManagedPropertyListener(\"treeData\", (propChange) => this.isTreeData = propChange.currentValue);\n  }\n  getValue(column, rowNode, forFilter = false, ignoreAggData = false) {\n    if (!this.initialised) {\n      this.init();\n    }\n    if (!rowNode) {\n      return;\n    }\n    const colDef = column.getColDef();\n    const field = colDef.field;\n    const colId = column.getColId();\n    const data = rowNode.data;\n    let result;\n    const groupDataExists = rowNode.groupData && rowNode.groupData[colId] !== void 0;\n    const aggDataExists = !ignoreAggData && rowNode.aggData && rowNode.aggData[colId] !== void 0;\n    const ignoreSsrmAggData = this.isSsrm && ignoreAggData && !!column.getColDef().aggFunc;\n    const ssrmFooterGroupCol = this.isSsrm && rowNode.footer && rowNode.field && (column.getColDef().showRowGroup === true || column.getColDef().showRowGroup === rowNode.field);\n    if (forFilter && colDef.filterValueGetter) {\n      result = this.executeFilterValueGetter(colDef.filterValueGetter, data, column, rowNode);\n    } else if (this.isTreeData && aggDataExists) {\n      result = rowNode.aggData[colId];\n    } else if (this.isTreeData && colDef.valueGetter) {\n      result = this.executeValueGetter(colDef.valueGetter, data, column, rowNode);\n    } else if (this.isTreeData && (field && data)) {\n      result = getValueUsingField(data, field, column.isFieldContainsDots());\n    } else if (groupDataExists) {\n      result = rowNode.groupData[colId];\n    } else if (aggDataExists) {\n      result = rowNode.aggData[colId];\n    } else if (colDef.valueGetter) {\n      result = this.executeValueGetter(colDef.valueGetter, data, column, rowNode);\n    } else if (ssrmFooterGroupCol) {\n      result = getValueUsingField(data, rowNode.field, column.isFieldContainsDots());\n    } else if (field && data && !ignoreSsrmAggData) {\n      result = getValueUsingField(data, field, column.isFieldContainsDots());\n    }\n    if (this.cellExpressions && typeof result === \"string\" && result.indexOf(\"=\") === 0) {\n      const cellValueGetter = result.substring(1);\n      result = this.executeValueGetter(cellValueGetter, data, column, rowNode);\n    }\n    if (result == null) {\n      const openedGroup = this.getOpenedGroup(rowNode, column);\n      if (openedGroup != null) {\n        return openedGroup;\n      }\n    }\n    return result;\n  }\n  parseValue(column, rowNode, newValue, oldValue) {\n    const colDef = column.getColDef();\n    const params = this.gos.addGridCommonParams({\n      node: rowNode,\n      data: rowNode == null ? void 0 : rowNode.data,\n      oldValue,\n      newValue,\n      colDef,\n      column\n    });\n    const valueParser = colDef.valueParser;\n    if (exists(valueParser)) {\n      if (typeof valueParser === \"function\") {\n        return valueParser(params);\n      }\n      return this.expressionService.evaluate(valueParser, params);\n    }\n    return newValue;\n  }\n  formatValue(column, node, value, suppliedFormatter, useFormatterFromColumn = true) {\n    let result = null;\n    let formatter;\n    const colDef = column.getColDef();\n    if (suppliedFormatter) {\n      formatter = suppliedFormatter;\n    } else if (useFormatterFromColumn) {\n      formatter = colDef.valueFormatter;\n    }\n    if (formatter) {\n      const params = this.gos.addGridCommonParams({\n        value,\n        node,\n        data: node ? node.data : null,\n        colDef,\n        column\n      });\n      if (typeof formatter === \"function\") {\n        result = formatter(params);\n      } else {\n        result = this.expressionService.evaluate(formatter, params);\n      }\n    } else if (colDef.refData) {\n      return colDef.refData[value] || \"\";\n    }\n    if (result == null && Array.isArray(value)) {\n      result = value.join(\", \");\n    }\n    return result;\n  }\n  getOpenedGroup(rowNode, column) {\n    if (!this.gos.get(\"showOpenedGroup\")) {\n      return;\n    }\n    const colDef = column.getColDef();\n    if (!colDef.showRowGroup) {\n      return;\n    }\n    const showRowGroup = column.getColDef().showRowGroup;\n    let pointer = rowNode.parent;\n    while (pointer != null) {\n      if (pointer.rowGroupColumn && (showRowGroup === true || showRowGroup === pointer.rowGroupColumn.getColId())) {\n        return pointer.key;\n      }\n      pointer = pointer.parent;\n    }\n    return void 0;\n  }\n  /**\n   * Sets the value of a GridCell\n   * @param rowNode The `RowNode` to be updated\n   * @param colKey The `Column` to be updated\n   * @param newValue The new value to be set\n   * @param eventSource The event source\n   * @returns `True` if the value has been updated, otherwise`False`.\n   */\n  setValue(rowNode, colKey, newValue, eventSource) {\n    const column = this.columnModel.getPrimaryColumn(colKey);\n    if (!rowNode || !column) {\n      return false;\n    }\n    if (missing(rowNode.data)) {\n      rowNode.data = {};\n    }\n    const { field, valueSetter } = column.getColDef();\n    if (missing(field) && missing(valueSetter)) {\n      console.warn(`AG Grid: you need either field or valueSetter set on colDef for editing to work`);\n      return false;\n    }\n    if (!this.dataTypeService.checkType(column, newValue)) {\n      console.warn(`AG Grid: Data type of the new value does not match the cell data type of the column`);\n      return false;\n    }\n    const params = this.gos.addGridCommonParams({\n      node: rowNode,\n      data: rowNode.data,\n      oldValue: this.getValue(column, rowNode),\n      newValue,\n      colDef: column.getColDef(),\n      column\n    });\n    params.newValue = newValue;\n    let valueWasDifferent;\n    if (exists(valueSetter)) {\n      if (typeof valueSetter === \"function\") {\n        valueWasDifferent = valueSetter(params);\n      } else {\n        valueWasDifferent = this.expressionService.evaluate(valueSetter, params);\n      }\n    } else {\n      valueWasDifferent = this.setValueUsingField(rowNode.data, field, newValue, column.isFieldContainsDots());\n    }\n    if (valueWasDifferent === void 0) {\n      valueWasDifferent = true;\n    }\n    if (!valueWasDifferent) {\n      return false;\n    }\n    rowNode.resetQuickFilterAggregateText();\n    this.valueCache.onDataChanged();\n    params.newValue = this.getValue(column, rowNode);\n    const event = {\n      type: Events.EVENT_CELL_VALUE_CHANGED,\n      event: null,\n      rowIndex: rowNode.rowIndex,\n      rowPinned: rowNode.rowPinned,\n      column: params.column,\n      api: params.api,\n      columnApi: params.columnApi,\n      colDef: params.colDef,\n      context: params.context,\n      data: rowNode.data,\n      node: rowNode,\n      oldValue: params.oldValue,\n      newValue: params.newValue,\n      value: params.newValue,\n      source: eventSource\n    };\n    this.eventService.dispatchEvent(event);\n    return true;\n  }\n  callColumnCellValueChangedHandler(event) {\n    const onCellValueChanged = event.colDef.onCellValueChanged;\n    if (typeof onCellValueChanged === \"function\") {\n      this.getFrameworkOverrides().wrapOutgoing(() => {\n        onCellValueChanged({\n          node: event.node,\n          data: event.data,\n          oldValue: event.oldValue,\n          newValue: event.newValue,\n          colDef: event.colDef,\n          column: event.column,\n          api: event.api,\n          columnApi: event.columnApi,\n          context: event.context\n        });\n      });\n    }\n  }\n  setValueUsingField(data, field, newValue, isFieldContainsDots) {\n    if (!field) {\n      return false;\n    }\n    let valuesAreSame = false;\n    if (!isFieldContainsDots) {\n      valuesAreSame = data[field] === newValue;\n      if (!valuesAreSame) {\n        data[field] = newValue;\n      }\n    } else {\n      const fieldPieces = field.split(\".\");\n      let currentObject = data;\n      while (fieldPieces.length > 0 && currentObject) {\n        const fieldPiece = fieldPieces.shift();\n        if (fieldPieces.length === 0) {\n          valuesAreSame = currentObject[fieldPiece] === newValue;\n          if (!valuesAreSame) {\n            currentObject[fieldPiece] = newValue;\n          }\n        } else {\n          currentObject = currentObject[fieldPiece];\n        }\n      }\n    }\n    return !valuesAreSame;\n  }\n  executeFilterValueGetter(valueGetter, data, column, rowNode) {\n    const params = this.gos.addGridCommonParams({\n      data,\n      node: rowNode,\n      column,\n      colDef: column.getColDef(),\n      getValue: this.getValueCallback.bind(this, rowNode)\n    });\n    if (typeof valueGetter === \"function\") {\n      return valueGetter(params);\n    }\n    return this.expressionService.evaluate(valueGetter, params);\n  }\n  executeValueGetter(valueGetter, data, column, rowNode) {\n    const colId = column.getColId();\n    const valueFromCache = this.valueCache.getValue(rowNode, colId);\n    if (valueFromCache !== void 0) {\n      return valueFromCache;\n    }\n    const params = this.gos.addGridCommonParams({\n      data,\n      node: rowNode,\n      column,\n      colDef: column.getColDef(),\n      getValue: this.getValueCallback.bind(this, rowNode)\n    });\n    let result;\n    if (typeof valueGetter === \"function\") {\n      result = valueGetter(params);\n    } else {\n      result = this.expressionService.evaluate(valueGetter, params);\n    }\n    this.valueCache.setValue(rowNode, colId, result);\n    return result;\n  }\n  getValueCallback(node, field) {\n    const otherColumn = this.columnModel.getPrimaryColumn(field);\n    if (otherColumn) {\n      return this.getValue(otherColumn, node);\n    }\n    return null;\n  }\n  // used by row grouping and pivot, to get key for a row. col can be a pivot col or a row grouping col\n  getKeyForNode(col, rowNode) {\n    const value = this.getValue(col, rowNode);\n    const keyCreator = col.getColDef().keyCreator;\n    let result = value;\n    if (keyCreator) {\n      const keyParams = this.gos.addGridCommonParams({\n        value,\n        colDef: col.getColDef(),\n        column: col,\n        node: rowNode,\n        data: rowNode.data\n      });\n      result = keyCreator(keyParams);\n    }\n    if (typeof result === \"string\" || result == null) {\n      return result;\n    }\n    result = String(result);\n    if (result === \"[object Object]\") {\n      warnOnce(\"a column you are grouping or pivoting by has objects as values. If you want to group by complex objects then either a) use a colDef.keyCreator (se AG Grid docs) or b) to toString() on the object to return a key\");\n    }\n    return result;\n  }\n};\n__decorateClass([\n  Autowired(\"expressionService\")\n], ValueService.prototype, \"expressionService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], ValueService.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"valueCache\")\n], ValueService.prototype, \"valueCache\", 2);\n__decorateClass([\n  Autowired(\"dataTypeService\")\n], ValueService.prototype, \"dataTypeService\", 2);\n__decorateClass([\n  PostConstruct\n], ValueService.prototype, \"init\", 1);\nValueService = __decorateClass([\n  Bean(\"valueService\")\n], ValueService);\n\n// community-modules/core/src/valueService/expressionService.ts\nvar ExpressionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.expressionToFunctionCache = {};\n  }\n  setBeans(loggerFactory) {\n    this.logger = loggerFactory.create(\"ExpressionService\");\n  }\n  evaluate(expression, params) {\n    if (typeof expression === \"string\") {\n      return this.evaluateExpression(expression, params);\n    } else {\n      console.error(\"AG Grid: value should be either a string or a function\", expression);\n    }\n  }\n  evaluateExpression(expression, params) {\n    try {\n      const javaScriptFunction = this.createExpressionFunction(expression);\n      const result = javaScriptFunction(\n        params.value,\n        params.context,\n        params.oldValue,\n        params.newValue,\n        params.value,\n        params.node,\n        params.data,\n        params.colDef,\n        params.rowIndex,\n        params.api,\n        params.columnApi,\n        params.getValue,\n        params.column,\n        params.columnGroup\n      );\n      return result;\n    } catch (e) {\n      console.log(\"Processing of the expression failed\");\n      console.log(\"Expression = \" + expression);\n      console.log(\"Params =\", params);\n      console.log(\"Exception = \" + e);\n      return null;\n    }\n  }\n  createExpressionFunction(expression) {\n    if (this.expressionToFunctionCache[expression]) {\n      return this.expressionToFunctionCache[expression];\n    }\n    const functionBody = this.createFunctionBody(expression);\n    const theFunction = new Function(\"x, ctx, oldValue, newValue, value, node, data, colDef, rowIndex, api, columnApi, getValue, column, columnGroup\", functionBody);\n    this.expressionToFunctionCache[expression] = theFunction;\n    return theFunction;\n  }\n  createFunctionBody(expression) {\n    if (expression.indexOf(\"return\") >= 0) {\n      return expression;\n    } else {\n      return \"return \" + expression + \";\";\n    }\n  }\n};\n__decorateClass([\n  __decorateParam(0, Qualifier(\"loggerFactory\"))\n], ExpressionService.prototype, \"setBeans\", 1);\nExpressionService = __decorateClass([\n  Bean(\"expressionService\")\n], ExpressionService);\n\n// community-modules/core/src/logger.ts\nvar LoggerFactory = class extends BeanStub {\n  setBeans(gos) {\n    this.logging = gos.get(\"debug\");\n  }\n  create(name) {\n    return new Logger(name, this.isLogging.bind(this));\n  }\n  isLogging() {\n    return this.logging;\n  }\n};\n__decorateClass([\n  __decorateParam(0, Qualifier(\"gridOptionsService\"))\n], LoggerFactory.prototype, \"setBeans\", 1);\nLoggerFactory = __decorateClass([\n  Bean(\"loggerFactory\")\n], LoggerFactory);\nvar Logger = class {\n  constructor(name, isLoggingFunc) {\n    this.name = name;\n    this.isLoggingFunc = isLoggingFunc;\n  }\n  isLogging() {\n    return this.isLoggingFunc();\n  }\n  log(message) {\n    if (this.isLoggingFunc()) {\n      console.log(\"AG Grid.\" + this.name + \": \" + message);\n    }\n  }\n};\n\n// community-modules/core/src/gridComp/gridCtrl.ts\nvar GridCtrl = class extends BeanStub {\n  setComp(view, eGridDiv, eGui) {\n    this.view = view;\n    this.eGridHostDiv = eGridDiv;\n    this.eGui = eGui;\n    this.eGui.setAttribute(\"grid-id\", this.context.getGridId());\n    this.dragAndDropService.addDropTarget({\n      getContainer: () => this.eGui,\n      isInterestedIn: (type) => type === 1 /* HeaderCell */ || type === 0 /* ToolPanel */,\n      getIconName: () => DragAndDropService.ICON_NOT_ALLOWED\n    });\n    this.mouseEventService.stampTopLevelGridCompWithGridInstance(eGridDiv);\n    this.createManagedBean(new LayoutFeature(this.view));\n    this.addRtlSupport();\n    const unsubscribeFromResize = this.resizeObserverService.observeResize(\n      this.eGridHostDiv,\n      this.onGridSizeChanged.bind(this)\n    );\n    this.addDestroyFunc(() => unsubscribeFromResize());\n    this.ctrlsService.register(\"gridCtrl\", this);\n  }\n  isDetailGrid() {\n    var _a;\n    const el = this.focusService.findTabbableParent(this.getGui());\n    return ((_a = el == null ? void 0 : el.getAttribute(\"row-id\")) == null ? void 0 : _a.startsWith(\"detail\")) || false;\n  }\n  showDropZones() {\n    return ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */, this.context.getGridId());\n  }\n  showSideBar() {\n    return ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/side-bar\" /* SideBarModule */, this.context.getGridId());\n  }\n  showStatusBar() {\n    return ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/status-bar\" /* StatusBarModule */, this.context.getGridId());\n  }\n  showWatermark() {\n    return ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/core\" /* EnterpriseCoreModule */, this.context.getGridId());\n  }\n  onGridSizeChanged() {\n    const event = {\n      type: Events.EVENT_GRID_SIZE_CHANGED,\n      clientWidth: this.eGridHostDiv.clientWidth,\n      clientHeight: this.eGridHostDiv.clientHeight\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  addRtlSupport() {\n    const cssClass = this.gos.get(\"enableRtl\") ? \"ag-rtl\" : \"ag-ltr\";\n    this.view.setRtlClass(cssClass);\n  }\n  destroyGridUi() {\n    this.view.destroyGridUi();\n  }\n  getGui() {\n    return this.eGui;\n  }\n  setResizeCursor(on) {\n    this.view.setCursor(on ? \"ew-resize\" : null);\n  }\n  disableUserSelect(on) {\n    this.view.setUserSelect(on ? \"none\" : null);\n  }\n  focusNextInnerContainer(backwards) {\n    const focusableContainers = this.view.getFocusableContainers();\n    const activeEl = this.gos.getActiveDomElement();\n    const idxWithFocus = focusableContainers.findIndex((container) => container.contains(activeEl));\n    const nextIdx = idxWithFocus + (backwards ? -1 : 1);\n    if (nextIdx <= 0 || nextIdx >= focusableContainers.length) {\n      return false;\n    }\n    return this.focusService.focusInto(focusableContainers[nextIdx]);\n  }\n  focusInnerElement(fromBottom) {\n    const focusableContainers = this.view.getFocusableContainers();\n    const allColumns = this.columnModel.getAllDisplayedColumns();\n    if (fromBottom) {\n      if (focusableContainers.length > 1) {\n        return this.focusService.focusInto(last(focusableContainers), true);\n      }\n      const lastColumn = last(allColumns);\n      if (this.focusService.focusGridView(lastColumn, true)) {\n        return true;\n      }\n    }\n    if (this.gos.get(\"headerHeight\") === 0 || this.gos.get(\"suppressHeaderFocus\")) {\n      if (this.focusService.focusGridView(allColumns[0])) {\n        return true;\n      }\n      for (let i = 1; i < focusableContainers.length; i++) {\n        if (this.focusService.focusInto(focusableContainers[i])) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return this.focusService.focusFirstHeader();\n  }\n  forceFocusOutOfContainer(up = false) {\n    this.view.forceFocusOutOfContainer(up);\n  }\n};\n__decorateClass([\n  Autowired(\"focusService\")\n], GridCtrl.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"resizeObserverService\")\n], GridCtrl.prototype, \"resizeObserverService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], GridCtrl.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], GridCtrl.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"mouseEventService\")\n], GridCtrl.prototype, \"mouseEventService\", 2);\n__decorateClass([\n  Autowired(\"dragAndDropService\")\n], GridCtrl.prototype, \"dragAndDropService\", 2);\n\n// community-modules/core/src/gridComp/gridComp.ts\nvar GridComp = class extends TabGuardComp {\n  constructor(eGridDiv) {\n    super();\n    this.eGridDiv = eGridDiv;\n  }\n  postConstruct() {\n    this.logger = this.loggerFactory.create(\"GridComp\");\n    const compProxy = {\n      destroyGridUi: () => this.destroyBean(this),\n      setRtlClass: (cssClass) => this.addCssClass(cssClass),\n      forceFocusOutOfContainer: this.forceFocusOutOfContainer.bind(this),\n      updateLayoutClasses: this.updateLayoutClasses.bind(this),\n      getFocusableContainers: this.getFocusableContainers.bind(this),\n      setUserSelect: (value) => {\n        this.getGui().style.userSelect = value != null ? value : \"\";\n        this.getGui().style.webkitUserSelect = value != null ? value : \"\";\n      },\n      setCursor: (value) => {\n        this.getGui().style.cursor = value != null ? value : \"\";\n      }\n    };\n    this.ctrl = this.createManagedBean(new GridCtrl());\n    const template = this.createTemplate();\n    this.setTemplate(template);\n    this.ctrl.setComp(compProxy, this.eGridDiv, this.getGui());\n    this.insertGridIntoDom();\n    this.initialiseTabGuard({\n      // we want to override the default behaviour to do nothing for onTabKeyDown\n      onTabKeyDown: () => void 0,\n      focusInnerElement: (fromBottom) => this.ctrl.focusInnerElement(fromBottom),\n      forceFocusOutWhenTabGuardsAreEmpty: true\n    });\n  }\n  insertGridIntoDom() {\n    const eGui = this.getGui();\n    this.eGridDiv.appendChild(eGui);\n    this.addDestroyFunc(() => {\n      this.eGridDiv.removeChild(eGui);\n      this.logger.log(\"Grid removed from DOM\");\n    });\n  }\n  updateLayoutClasses(cssClass, params) {\n    const eRootWrapperBodyClassList = this.eRootWrapperBody.classList;\n    eRootWrapperBodyClassList.toggle(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n    eRootWrapperBodyClassList.toggle(\"ag-layout-normal\" /* NORMAL */, params.normal);\n    eRootWrapperBodyClassList.toggle(\"ag-layout-print\" /* PRINT */, params.print);\n    this.addOrRemoveCssClass(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n    this.addOrRemoveCssClass(\"ag-layout-normal\" /* NORMAL */, params.normal);\n    this.addOrRemoveCssClass(\"ag-layout-print\" /* PRINT */, params.print);\n  }\n  createTemplate() {\n    const dropZones = this.ctrl.showDropZones() ? \"<ag-grid-header-drop-zones></ag-grid-header-drop-zones>\" : \"\";\n    const sideBar = this.ctrl.showSideBar() ? '<ag-side-bar ref=\"sideBar\"></ag-side-bar>' : \"\";\n    const statusBar = this.ctrl.showStatusBar() ? '<ag-status-bar ref=\"statusBar\"></ag-status-bar>' : \"\";\n    const watermark = this.ctrl.showWatermark() ? \"<ag-watermark></ag-watermark>\" : \"\";\n    const template = (\n      /* html */\n      `<div class=\"ag-root-wrapper\" role=\"presentation\">\n                ${dropZones}\n                <div class=\"ag-root-wrapper-body\" ref=\"rootWrapperBody\" role=\"presentation\">\n                    <ag-grid-body ref=\"gridBody\"></ag-grid-body>\n                    ${sideBar}\n                </div>\n                ${statusBar}\n                <ag-pagination></ag-pagination>\n                ${watermark}\n            </div>`\n    );\n    return template;\n  }\n  getFocusableElement() {\n    return this.eRootWrapperBody;\n  }\n  getFocusableContainers() {\n    const focusableContainers = [\n      this.gridBodyComp.getGui()\n    ];\n    if (this.sideBarComp) {\n      focusableContainers.push(\n        this.sideBarComp.getGui()\n      );\n    }\n    return focusableContainers.filter((el) => isVisible(el));\n  }\n};\n__decorateClass([\n  Autowired(\"loggerFactory\")\n], GridComp.prototype, \"loggerFactory\", 2);\n__decorateClass([\n  RefSelector(\"gridBody\")\n], GridComp.prototype, \"gridBodyComp\", 2);\n__decorateClass([\n  RefSelector(\"sideBar\")\n], GridComp.prototype, \"sideBarComp\", 2);\n__decorateClass([\n  RefSelector(\"rootWrapperBody\")\n], GridComp.prototype, \"eRootWrapperBody\", 2);\n__decorateClass([\n  PostConstruct\n], GridComp.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/sortController.ts\nvar SortController = class extends BeanStub {\n  progressSort(column, multiSort, source) {\n    const nextDirection = this.getNextSortDirection(column);\n    this.setSortForColumn(column, nextDirection, multiSort, source);\n  }\n  setSortForColumn(column, sort, multiSort, source) {\n    if (sort !== \"asc\" && sort !== \"desc\") {\n      sort = null;\n    }\n    const isColumnsSortingCoupledToGroup = this.gos.isColumnsSortingCoupledToGroup();\n    let columnsToUpdate = [column];\n    if (isColumnsSortingCoupledToGroup) {\n      if (column.getColDef().showRowGroup) {\n        const rowGroupColumns = this.columnModel.getSourceColumnsForGroupColumn(column);\n        const sortableRowGroupColumns = rowGroupColumns == null ? void 0 : rowGroupColumns.filter((col) => col.isSortable());\n        if (sortableRowGroupColumns) {\n          columnsToUpdate = [column, ...sortableRowGroupColumns];\n        }\n      }\n    }\n    columnsToUpdate.forEach((col) => col.setSort(sort, source));\n    const doingMultiSort = (multiSort || this.gos.get(\"alwaysMultiSort\")) && !this.gos.get(\"suppressMultiSort\");\n    const updatedColumns = [];\n    if (!doingMultiSort) {\n      const clearedColumns = this.clearSortBarTheseColumns(columnsToUpdate, source);\n      updatedColumns.push(...clearedColumns);\n    }\n    this.updateSortIndex(column);\n    updatedColumns.push(...columnsToUpdate);\n    this.dispatchSortChangedEvents(source, updatedColumns);\n  }\n  updateSortIndex(lastColToChange) {\n    const isCoupled = this.gos.isColumnsSortingCoupledToGroup();\n    const groupParent = this.columnModel.getGroupDisplayColumnForGroup(lastColToChange.getId());\n    const lastSortIndexCol = isCoupled ? groupParent || lastColToChange : lastColToChange;\n    const allSortedCols = this.getColumnsWithSortingOrdered();\n    this.columnModel.getPrimaryAndSecondaryAndAutoColumns().forEach((col) => col.setSortIndex(null));\n    const allSortedColsWithoutChangesOrGroups = allSortedCols.filter((col) => {\n      if (isCoupled && col.getColDef().showRowGroup) {\n        return false;\n      }\n      return col !== lastSortIndexCol;\n    });\n    const sortedColsWithIndices = !!lastSortIndexCol.getSort() ? [...allSortedColsWithoutChangesOrGroups, lastSortIndexCol] : allSortedColsWithoutChangesOrGroups;\n    sortedColsWithIndices.forEach((col, idx) => {\n      col.setSortIndex(idx);\n    });\n  }\n  // gets called by API, so if data changes, use can call this, which will end up\n  // working out the sort order again of the rows.\n  onSortChanged(source, columns) {\n    this.dispatchSortChangedEvents(source, columns);\n  }\n  isSortActive() {\n    const allCols = this.columnModel.getPrimaryAndSecondaryAndAutoColumns();\n    const sortedCols = allCols.filter((column) => !!column.getSort());\n    return sortedCols && sortedCols.length > 0;\n  }\n  dispatchSortChangedEvents(source, columns) {\n    const event = {\n      type: Events.EVENT_SORT_CHANGED,\n      source\n    };\n    if (columns) {\n      event.columns = columns;\n    }\n    this.eventService.dispatchEvent(event);\n  }\n  clearSortBarTheseColumns(columnsToSkip, source) {\n    const clearedColumns = [];\n    this.columnModel.getPrimaryAndSecondaryAndAutoColumns().forEach((columnToClear) => {\n      if (!columnsToSkip.includes(columnToClear)) {\n        if (!!columnToClear.getSort()) {\n          clearedColumns.push(columnToClear);\n        }\n        columnToClear.setSort(void 0, source);\n      }\n    });\n    return clearedColumns;\n  }\n  getNextSortDirection(column) {\n    let sortingOrder;\n    if (column.getColDef().sortingOrder) {\n      sortingOrder = column.getColDef().sortingOrder;\n    } else if (this.gos.get(\"sortingOrder\")) {\n      sortingOrder = this.gos.get(\"sortingOrder\");\n    } else {\n      sortingOrder = SortController.DEFAULT_SORTING_ORDER;\n    }\n    if (!Array.isArray(sortingOrder) || sortingOrder.length <= 0) {\n      console.warn(`AG Grid: sortingOrder must be an array with at least one element, currently it's ${sortingOrder}`);\n      return null;\n    }\n    const currentIndex = sortingOrder.indexOf(column.getSort());\n    const notInArray = currentIndex < 0;\n    const lastItemInArray = currentIndex == sortingOrder.length - 1;\n    let result;\n    if (notInArray || lastItemInArray) {\n      result = sortingOrder[0];\n    } else {\n      result = sortingOrder[currentIndex + 1];\n    }\n    if (SortController.DEFAULT_SORTING_ORDER.indexOf(result) < 0) {\n      console.warn(\"AG Grid: invalid sort type \" + result);\n      return null;\n    }\n    return result;\n  }\n  /**\n   * @returns a map of sort indexes for every sorted column, if groups sort primaries then they will have equivalent indices\n   */\n  getIndexedSortMap() {\n    let allSortedCols = this.columnModel.getPrimaryAndSecondaryAndAutoColumns().filter((col) => !!col.getSort());\n    if (this.columnModel.isPivotMode()) {\n      const isSortingLinked = this.gos.isColumnsSortingCoupledToGroup();\n      allSortedCols = allSortedCols.filter((col) => {\n        const isAggregated = !!col.getAggFunc();\n        const isSecondary = !col.isPrimary();\n        const isGroup = isSortingLinked ? this.columnModel.getGroupDisplayColumnForGroup(col.getId()) : col.getColDef().showRowGroup;\n        return isAggregated || isSecondary || isGroup;\n      });\n    }\n    const sortedRowGroupCols = this.columnModel.getRowGroupColumns().filter((col) => !!col.getSort());\n    const allColsIndexes = {};\n    allSortedCols.forEach((col, index) => allColsIndexes[col.getId()] = index);\n    allSortedCols.sort((a, b) => {\n      const iA = a.getSortIndex();\n      const iB = b.getSortIndex();\n      if (iA != null && iB != null) {\n        return iA - iB;\n      } else if (iA == null && iB == null) {\n        const posA = allColsIndexes[a.getId()];\n        const posB = allColsIndexes[b.getId()];\n        return posA > posB ? 1 : -1;\n      } else if (iB == null) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    const isSortLinked = this.gos.isColumnsSortingCoupledToGroup() && !!sortedRowGroupCols.length;\n    if (isSortLinked) {\n      allSortedCols = [\n        ...new Set(\n          // if linked sorting, replace all columns with the display group column for index purposes, and ensure uniqueness\n          allSortedCols.map((col) => {\n            var _a;\n            return (_a = this.columnModel.getGroupDisplayColumnForGroup(col.getId())) != null ? _a : col;\n          })\n        )\n      ];\n    }\n    const indexMap = /* @__PURE__ */ new Map();\n    allSortedCols.forEach((col, idx) => indexMap.set(col, idx));\n    if (isSortLinked) {\n      sortedRowGroupCols.forEach((col) => {\n        const groupDisplayCol = this.columnModel.getGroupDisplayColumnForGroup(col.getId());\n        indexMap.set(col, indexMap.get(groupDisplayCol));\n      });\n    }\n    return indexMap;\n  }\n  getColumnsWithSortingOrdered() {\n    return [...this.getIndexedSortMap().entries()].sort(([col1, idx1], [col2, idx2]) => idx1 - idx2).map(([col]) => col);\n  }\n  // used by server side row models, to sent sort to server\n  getSortModel() {\n    return this.getColumnsWithSortingOrdered().filter((column) => column.getSort()).map((column) => ({\n      sort: column.getSort(),\n      colId: column.getId()\n    }));\n  }\n  getSortOptions() {\n    return this.getColumnsWithSortingOrdered().filter((column) => column.getSort()).map((column) => ({\n      sort: column.getSort(),\n      column\n    }));\n  }\n  canColumnDisplayMixedSort(column) {\n    const isColumnSortCouplingActive = this.gos.isColumnsSortingCoupledToGroup();\n    const isGroupDisplayColumn = !!column.getColDef().showRowGroup;\n    return isColumnSortCouplingActive && isGroupDisplayColumn;\n  }\n  getDisplaySortForColumn(column) {\n    const linkedColumns = this.columnModel.getSourceColumnsForGroupColumn(column);\n    if (!this.canColumnDisplayMixedSort(column) || !(linkedColumns == null ? void 0 : linkedColumns.length)) {\n      return column.getSort();\n    }\n    const columnHasUniqueData = column.getColDef().field != null || !!column.getColDef().valueGetter;\n    const sortableColumns = columnHasUniqueData ? [column, ...linkedColumns] : linkedColumns;\n    const firstSort = sortableColumns[0].getSort();\n    const allMatch = sortableColumns.every((col) => col.getSort() == firstSort);\n    if (!allMatch) {\n      return \"mixed\";\n    }\n    return firstSort;\n  }\n  getDisplaySortIndexForColumn(column) {\n    return this.getIndexedSortMap().get(column);\n  }\n};\nSortController.DEFAULT_SORTING_ORDER = [\"asc\", \"desc\", null];\n__decorateClass([\n  Autowired(\"columnModel\")\n], SortController.prototype, \"columnModel\", 2);\nSortController = __decorateClass([\n  Bean(\"sortController\")\n], SortController);\n\n// community-modules/core/src/focusService.ts\nvar FocusService = class extends BeanStub {\n  static addKeyboardModeEvents(doc) {\n    if (this.instanceCount > 0) {\n      return;\n    }\n    doc.addEventListener(\"keydown\", FocusService.toggleKeyboardMode);\n    doc.addEventListener(\"mousedown\", FocusService.toggleKeyboardMode);\n  }\n  static removeKeyboardModeEvents(doc) {\n    if (this.instanceCount > 0)\n      return;\n    doc.addEventListener(\"keydown\", FocusService.toggleKeyboardMode);\n    doc.addEventListener(\"mousedown\", FocusService.toggleKeyboardMode);\n  }\n  static toggleKeyboardMode(event) {\n    const isKeyboardActive = FocusService.keyboardModeActive;\n    const isKeyboardEvent = event.type === \"keydown\";\n    if (isKeyboardEvent) {\n      if (event.ctrlKey || event.metaKey || event.altKey) {\n        return;\n      }\n    }\n    if (isKeyboardActive === isKeyboardEvent) {\n      return;\n    }\n    FocusService.keyboardModeActive = isKeyboardEvent;\n  }\n  static unregisterGridCompController(doc) {\n    FocusService.removeKeyboardModeEvents(doc);\n  }\n  init() {\n    const clearFocusedCellListener = this.clearFocusedCell.bind(this);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, clearFocusedCellListener);\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onColumnEverythingChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_GROUP_OPENED, clearFocusedCellListener);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, clearFocusedCellListener);\n    this.registerKeyboardFocusEvents();\n    this.ctrlsService.whenReady((p) => {\n      this.gridCtrl = p.gridCtrl;\n    });\n  }\n  registerKeyboardFocusEvents() {\n    const eDocument = this.gos.getDocument();\n    FocusService.addKeyboardModeEvents(eDocument);\n    FocusService.instanceCount++;\n    this.addDestroyFunc(() => {\n      FocusService.instanceCount--;\n      FocusService.unregisterGridCompController(eDocument);\n    });\n  }\n  onColumnEverythingChanged() {\n    if (!this.focusedCellPosition) {\n      return;\n    }\n    const col = this.focusedCellPosition.column;\n    const colFromColumnModel = this.columnModel.getGridColumn(col.getId());\n    if (col !== colFromColumnModel) {\n      this.clearFocusedCell();\n    }\n  }\n  isKeyboardMode() {\n    return FocusService.keyboardModeActive;\n  }\n  // we check if the browser is focusing something, and if it is, and\n  // it's the cell we think is focused, then return the cell. so this\n  // methods returns the cell if a) we think it has focus and b) the\n  // browser thinks it has focus. this then returns nothing if we\n  // first focus a cell, then second click outside the grid, as then the\n  // grid cell will still be focused as far as the grid is concerned,\n  // however the browser focus will have moved somewhere else.\n  getFocusCellToUseAfterRefresh() {\n    if (this.gos.get(\"suppressFocusAfterRefresh\") || !this.focusedCellPosition) {\n      return null;\n    }\n    if (this.isDomDataMissingInHierarchy(this.gos.getActiveDomElement(), RowCtrl.DOM_DATA_KEY_ROW_CTRL)) {\n      return null;\n    }\n    return this.focusedCellPosition;\n  }\n  getFocusHeaderToUseAfterRefresh() {\n    if (this.gos.get(\"suppressFocusAfterRefresh\") || !this.focusedHeaderPosition) {\n      return null;\n    }\n    if (this.isDomDataMissingInHierarchy(this.gos.getActiveDomElement(), AbstractHeaderCellCtrl.DOM_DATA_KEY_HEADER_CTRL)) {\n      return null;\n    }\n    return this.focusedHeaderPosition;\n  }\n  isDomDataMissingInHierarchy(eBrowserCell, key) {\n    let ePointer = eBrowserCell;\n    while (ePointer) {\n      const data = this.gos.getDomData(ePointer, key);\n      if (data) {\n        return false;\n      }\n      ePointer = ePointer.parentNode;\n    }\n    return true;\n  }\n  getFocusedCell() {\n    return this.focusedCellPosition;\n  }\n  shouldRestoreFocus(cell) {\n    if (this.isCellRestoreFocused(cell)) {\n      setTimeout(() => {\n        this.restoredFocusedCellPosition = null;\n      }, 0);\n      return true;\n    }\n    return false;\n  }\n  isCellRestoreFocused(cellPosition) {\n    if (this.restoredFocusedCellPosition == null) {\n      return false;\n    }\n    return this.cellPositionUtils.equals(cellPosition, this.restoredFocusedCellPosition);\n  }\n  setRestoreFocusedCell(cellPosition) {\n    if (this.getFrameworkOverrides().renderingEngine === \"react\") {\n      this.restoredFocusedCellPosition = cellPosition;\n    }\n  }\n  getFocusEventParams() {\n    const { rowIndex, rowPinned, column } = this.focusedCellPosition;\n    const params = {\n      rowIndex,\n      rowPinned,\n      column,\n      isFullWidthCell: false\n    };\n    const rowCtrl = this.rowRenderer.getRowByPosition({ rowIndex, rowPinned });\n    if (rowCtrl) {\n      params.isFullWidthCell = rowCtrl.isFullWidth();\n    }\n    return params;\n  }\n  clearFocusedCell() {\n    this.restoredFocusedCellPosition = null;\n    if (this.focusedCellPosition == null) {\n      return;\n    }\n    const event = __spreadValues({\n      type: Events.EVENT_CELL_FOCUS_CLEARED\n    }, this.getFocusEventParams());\n    this.focusedCellPosition = null;\n    this.eventService.dispatchEvent(event);\n  }\n  setFocusedCell(params) {\n    const {\n      column,\n      rowIndex,\n      rowPinned,\n      forceBrowserFocus = false,\n      preventScrollOnBrowserFocus = false\n    } = params;\n    const gridColumn = this.columnModel.getGridColumn(column);\n    if (!gridColumn) {\n      this.focusedCellPosition = null;\n      return;\n    }\n    this.focusedCellPosition = gridColumn ? {\n      rowIndex,\n      rowPinned: makeNull(rowPinned),\n      column: gridColumn\n    } : null;\n    const event = __spreadProps(__spreadValues({\n      type: Events.EVENT_CELL_FOCUSED\n    }, this.getFocusEventParams()), {\n      forceBrowserFocus,\n      preventScrollOnBrowserFocus,\n      floating: null\n    });\n    this.eventService.dispatchEvent(event);\n  }\n  isCellFocused(cellPosition) {\n    if (this.focusedCellPosition == null) {\n      return false;\n    }\n    return this.cellPositionUtils.equals(cellPosition, this.focusedCellPosition);\n  }\n  isRowNodeFocused(rowNode) {\n    return this.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\n  }\n  isHeaderWrapperFocused(headerCtrl) {\n    if (this.focusedHeaderPosition == null) {\n      return false;\n    }\n    const column = headerCtrl.getColumnGroupChild();\n    const headerRowIndex = headerCtrl.getRowIndex();\n    const pinned = headerCtrl.getPinned();\n    const { column: focusedColumn, headerRowIndex: focusedHeaderRowIndex } = this.focusedHeaderPosition;\n    return column === focusedColumn && headerRowIndex === focusedHeaderRowIndex && pinned == focusedColumn.getPinned();\n  }\n  clearFocusedHeader() {\n    this.focusedHeaderPosition = null;\n  }\n  getFocusedHeader() {\n    return this.focusedHeaderPosition;\n  }\n  setFocusedHeader(headerRowIndex, column) {\n    this.focusedHeaderPosition = { headerRowIndex, column };\n  }\n  focusHeaderPosition(params) {\n    if (this.gos.get(\"suppressHeaderFocus\")) {\n      return false;\n    }\n    const { direction, fromTab, allowUserOverride, event, fromCell, rowWithoutSpanValue } = params;\n    let { headerPosition } = params;\n    if (fromCell && this.filterManager.isAdvancedFilterHeaderActive()) {\n      return this.focusAdvancedFilter(headerPosition);\n    }\n    if (allowUserOverride) {\n      const currentPosition = this.getFocusedHeader();\n      const headerRowCount = this.headerNavigationService.getHeaderRowCount();\n      if (fromTab) {\n        const userFunc = this.gos.getCallback(\"tabToNextHeader\");\n        if (userFunc) {\n          headerPosition = this.getHeaderPositionFromUserFunc({\n            userFunc,\n            direction,\n            currentPosition,\n            headerPosition,\n            headerRowCount\n          });\n        }\n      } else {\n        const userFunc = this.gos.getCallback(\"navigateToNextHeader\");\n        if (userFunc && event) {\n          const params2 = {\n            key: event.key,\n            previousHeaderPosition: currentPosition,\n            nextHeaderPosition: headerPosition,\n            headerRowCount,\n            event\n          };\n          headerPosition = userFunc(params2);\n        }\n      }\n    }\n    if (!headerPosition) {\n      return false;\n    }\n    return this.focusProvidedHeaderPosition({\n      headerPosition,\n      direction,\n      event,\n      fromCell,\n      rowWithoutSpanValue\n    });\n  }\n  focusHeaderPositionFromUserFunc(params) {\n    if (this.gos.get(\"suppressHeaderFocus\")) {\n      return false;\n    }\n    const { userFunc, headerPosition, direction, event } = params;\n    const currentPosition = this.getFocusedHeader();\n    const headerRowCount = this.headerNavigationService.getHeaderRowCount();\n    const newHeaderPosition = this.getHeaderPositionFromUserFunc({\n      userFunc,\n      direction,\n      currentPosition,\n      headerPosition,\n      headerRowCount\n    });\n    return !!newHeaderPosition && this.focusProvidedHeaderPosition({\n      headerPosition: newHeaderPosition,\n      direction,\n      event\n    });\n  }\n  getHeaderPositionFromUserFunc(params) {\n    const { userFunc, direction, currentPosition, headerPosition, headerRowCount } = params;\n    const userFuncParams = {\n      backwards: direction === \"Before\",\n      previousHeaderPosition: currentPosition,\n      nextHeaderPosition: headerPosition,\n      headerRowCount\n    };\n    const userResult = userFunc(userFuncParams);\n    if (userResult === true || userResult === null) {\n      if (userResult === null) {\n        warnOnce(\"Returning `null` from tabToNextHeader is deprecated. Return `true` to stay on the current header, or `false` to let the browser handle the tab behaviour.\");\n      }\n      return currentPosition;\n    }\n    if (userResult === false) {\n      return null;\n    }\n    return userResult;\n  }\n  focusProvidedHeaderPosition(params) {\n    const { headerPosition, direction, fromCell, rowWithoutSpanValue, event } = params;\n    if (headerPosition.headerRowIndex === -1) {\n      if (this.filterManager.isAdvancedFilterHeaderActive()) {\n        return this.focusAdvancedFilter(headerPosition);\n      }\n      return this.focusGridView(headerPosition.column);\n    }\n    this.headerNavigationService.scrollToColumn(headerPosition.column, direction);\n    const headerRowContainerCtrl = this.ctrlsService.getHeaderRowContainerCtrl(headerPosition.column.getPinned());\n    const focusSuccess = headerRowContainerCtrl.focusHeader(headerPosition.headerRowIndex, headerPosition.column, event);\n    if (focusSuccess && (rowWithoutSpanValue != null || fromCell)) {\n      this.headerNavigationService.setCurrentHeaderRowWithoutSpan(rowWithoutSpanValue != null ? rowWithoutSpanValue : -1);\n    }\n    return focusSuccess;\n  }\n  focusFirstHeader() {\n    let firstColumn = this.columnModel.getAllDisplayedColumns()[0];\n    if (!firstColumn) {\n      return false;\n    }\n    if (firstColumn.getParent()) {\n      firstColumn = this.columnModel.getColumnGroupAtLevel(firstColumn, 0);\n    }\n    const headerPosition = this.headerPositionUtils.getHeaderIndexToFocus(firstColumn, 0);\n    return this.focusHeaderPosition({\n      headerPosition,\n      rowWithoutSpanValue: 0\n    });\n  }\n  focusLastHeader(event) {\n    const headerRowIndex = this.headerNavigationService.getHeaderRowCount() - 1;\n    const column = last(this.columnModel.getAllDisplayedColumns());\n    return this.focusHeaderPosition({\n      headerPosition: { headerRowIndex, column },\n      rowWithoutSpanValue: -1,\n      event\n    });\n  }\n  focusPreviousFromFirstCell(event) {\n    if (this.filterManager.isAdvancedFilterHeaderActive()) {\n      return this.focusAdvancedFilter(null);\n    }\n    return this.focusLastHeader(event);\n  }\n  isAnyCellFocused() {\n    return !!this.focusedCellPosition;\n  }\n  isRowFocused(rowIndex, floating) {\n    if (this.focusedCellPosition == null) {\n      return false;\n    }\n    return this.focusedCellPosition.rowIndex === rowIndex && this.focusedCellPosition.rowPinned === makeNull(floating);\n  }\n  findFocusableElements(rootNode, exclude, onlyUnmanaged = false) {\n    const focusableString = FOCUSABLE_SELECTOR;\n    let excludeString = FOCUSABLE_EXCLUDE;\n    if (exclude) {\n      excludeString += \", \" + exclude;\n    }\n    if (onlyUnmanaged) {\n      excludeString += ', [tabindex=\"-1\"]';\n    }\n    const nodes = Array.prototype.slice.apply(rootNode.querySelectorAll(focusableString)).filter((node) => {\n      return isVisible(node);\n    });\n    const excludeNodes = Array.prototype.slice.apply(rootNode.querySelectorAll(excludeString));\n    if (!excludeNodes.length) {\n      return nodes;\n    }\n    const diff = (a, b) => a.filter((element) => b.indexOf(element) === -1);\n    return diff(nodes, excludeNodes);\n  }\n  focusInto(rootNode, up = false, onlyUnmanaged = false) {\n    const focusableElements = this.findFocusableElements(rootNode, null, onlyUnmanaged);\n    const toFocus = up ? last(focusableElements) : focusableElements[0];\n    if (toFocus) {\n      toFocus.focus({ preventScroll: true });\n      return true;\n    }\n    return false;\n  }\n  findFocusableElementBeforeTabGuard(rootNode, referenceElement) {\n    if (!referenceElement) {\n      return null;\n    }\n    const focusableElements = this.findFocusableElements(rootNode);\n    const referenceIndex = focusableElements.indexOf(referenceElement);\n    if (referenceIndex === -1) {\n      return null;\n    }\n    let lastTabGuardIndex = -1;\n    for (let i = referenceIndex - 1; i >= 0; i--) {\n      if (focusableElements[i].classList.contains(\"ag-tab-guard-top\" /* TAB_GUARD_TOP */)) {\n        lastTabGuardIndex = i;\n        break;\n      }\n    }\n    if (lastTabGuardIndex <= 0) {\n      return null;\n    }\n    return focusableElements[lastTabGuardIndex - 1];\n  }\n  findNextFocusableElement(rootNode = this.eGridDiv, onlyManaged, backwards) {\n    const focusable = this.findFocusableElements(rootNode, onlyManaged ? ':not([tabindex=\"-1\"])' : null);\n    const activeEl = this.gos.getActiveDomElement();\n    let currentIndex;\n    if (onlyManaged) {\n      currentIndex = focusable.findIndex((el) => el.contains(activeEl));\n    } else {\n      currentIndex = focusable.indexOf(activeEl);\n    }\n    const nextIndex = currentIndex + (backwards ? -1 : 1);\n    if (nextIndex < 0 || nextIndex >= focusable.length) {\n      return null;\n    }\n    return focusable[nextIndex];\n  }\n  isTargetUnderManagedComponent(rootNode, target) {\n    if (!target) {\n      return false;\n    }\n    const managedContainers = rootNode.querySelectorAll(`.${ManagedFocusFeature.FOCUS_MANAGED_CLASS}`);\n    if (!managedContainers.length) {\n      return false;\n    }\n    for (let i = 0; i < managedContainers.length; i++) {\n      if (managedContainers[i].contains(target)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  findTabbableParent(node, limit = 5) {\n    let counter = 0;\n    while (node && getTabIndex(node) === null && ++counter <= limit) {\n      node = node.parentElement;\n    }\n    if (getTabIndex(node) === null) {\n      return null;\n    }\n    return node;\n  }\n  focusGridView(column, backwards) {\n    var _a;\n    if (this.gos.get(\"suppressCellFocus\")) {\n      if (backwards) {\n        if (!this.gos.get(\"suppressHeaderFocus\")) {\n          return this.focusLastHeader();\n        }\n        return this.focusNextGridCoreContainer(true, true);\n      }\n      return this.focusNextGridCoreContainer(false);\n    }\n    const nextRow = backwards ? this.rowPositionUtils.getLastRow() : this.rowPositionUtils.getFirstRow();\n    if (!nextRow) {\n      return false;\n    }\n    const { rowIndex, rowPinned } = nextRow;\n    const focusedHeader = this.getFocusedHeader();\n    if (!column && focusedHeader) {\n      column = focusedHeader.column;\n    }\n    if (rowIndex == null || !column) {\n      return false;\n    }\n    this.navigationService.ensureCellVisible({ rowIndex, column, rowPinned });\n    this.setFocusedCell({\n      rowIndex,\n      column,\n      rowPinned: makeNull(rowPinned),\n      forceBrowserFocus: true\n    });\n    (_a = this.rangeService) == null ? void 0 : _a.setRangeToCell({ rowIndex, rowPinned, column });\n    return true;\n  }\n  focusNextGridCoreContainer(backwards, forceOut = false) {\n    if (!forceOut && this.gridCtrl.focusNextInnerContainer(backwards)) {\n      return true;\n    }\n    if (forceOut || !backwards && !this.gridCtrl.isDetailGrid()) {\n      this.gridCtrl.forceFocusOutOfContainer(backwards);\n    }\n    return false;\n  }\n  focusAdvancedFilter(position) {\n    var _a, _b;\n    this.advancedFilterFocusColumn = position == null ? void 0 : position.column;\n    return (_b = (_a = this.advancedFilterService) == null ? void 0 : _a.getCtrl().focusHeaderComp()) != null ? _b : false;\n  }\n  focusNextFromAdvancedFilter(backwards, forceFirstColumn) {\n    var _a, _b;\n    const column = (_b = forceFirstColumn ? void 0 : this.advancedFilterFocusColumn) != null ? _b : (_a = this.columnModel.getAllDisplayedColumns()) == null ? void 0 : _a[0];\n    if (backwards) {\n      return this.focusHeaderPosition({\n        headerPosition: {\n          column,\n          headerRowIndex: this.headerNavigationService.getHeaderRowCount() - 1\n        }\n      });\n    } else {\n      return this.focusGridView(column);\n    }\n  }\n  clearAdvancedFilterColumn() {\n    this.advancedFilterFocusColumn = void 0;\n  }\n};\nFocusService.keyboardModeActive = false;\nFocusService.instanceCount = 0;\n__decorateClass([\n  Autowired(\"eGridDiv\")\n], FocusService.prototype, \"eGridDiv\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], FocusService.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"headerNavigationService\")\n], FocusService.prototype, \"headerNavigationService\", 2);\n__decorateClass([\n  Autowired(\"headerPositionUtils\")\n], FocusService.prototype, \"headerPositionUtils\", 2);\n__decorateClass([\n  Autowired(\"rowRenderer\")\n], FocusService.prototype, \"rowRenderer\", 2);\n__decorateClass([\n  Autowired(\"rowPositionUtils\")\n], FocusService.prototype, \"rowPositionUtils\", 2);\n__decorateClass([\n  Autowired(\"cellPositionUtils\")\n], FocusService.prototype, \"cellPositionUtils\", 2);\n__decorateClass([\n  Autowired(\"navigationService\")\n], FocusService.prototype, \"navigationService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], FocusService.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"filterManager\")\n], FocusService.prototype, \"filterManager\", 2);\n__decorateClass([\n  Optional(\"rangeService\")\n], FocusService.prototype, \"rangeService\", 2);\n__decorateClass([\n  Optional(\"advancedFilterService\")\n], FocusService.prototype, \"advancedFilterService\", 2);\n__decorateClass([\n  PostConstruct\n], FocusService.prototype, \"init\", 1);\nFocusService = __decorateClass([\n  Bean(\"focusService\")\n], FocusService);\n\n// community-modules/core/src/rendering/columnHoverService.ts\nvar ColumnHoverService = class extends BeanStub {\n  setMouseOver(columns) {\n    this.selectedColumns = columns;\n    const event = {\n      type: Events.EVENT_COLUMN_HOVER_CHANGED\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  clearMouseOver() {\n    this.selectedColumns = null;\n    const event = {\n      type: Events.EVENT_COLUMN_HOVER_CHANGED\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  isHovered(column) {\n    return !!this.selectedColumns && this.selectedColumns.indexOf(column) >= 0;\n  }\n};\nColumnHoverService = __decorateClass([\n  Bean(\"columnHoverService\")\n], ColumnHoverService);\n\n// community-modules/core/src/rendering/columnAnimationService.ts\nvar ColumnAnimationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.executeNextFuncs = [];\n    this.executeLaterFuncs = [];\n    this.active = false;\n    this.suppressAnimation = false;\n    this.animationThreadCount = 0;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => this.gridBodyCtrl = p.gridBodyCtrl);\n  }\n  isActive() {\n    return this.active && !this.suppressAnimation;\n  }\n  setSuppressAnimation(suppress) {\n    this.suppressAnimation = suppress;\n  }\n  start() {\n    if (this.active) {\n      return;\n    }\n    if (this.gos.get(\"suppressColumnMoveAnimation\")) {\n      return;\n    }\n    if (this.gos.get(\"enableRtl\")) {\n      return;\n    }\n    this.ensureAnimationCssClassPresent();\n    this.active = true;\n  }\n  finish() {\n    if (!this.active) {\n      return;\n    }\n    this.flush(() => {\n      this.active = false;\n    });\n  }\n  executeNextVMTurn(func) {\n    if (this.active) {\n      this.executeNextFuncs.push(func);\n    } else {\n      func();\n    }\n  }\n  executeLaterVMTurn(func) {\n    if (this.active) {\n      this.executeLaterFuncs.push(func);\n    } else {\n      func();\n    }\n  }\n  ensureAnimationCssClassPresent() {\n    this.animationThreadCount++;\n    const animationThreadCountCopy = this.animationThreadCount;\n    this.gridBodyCtrl.setColumnMovingCss(true);\n    this.executeLaterFuncs.push(() => {\n      if (this.animationThreadCount === animationThreadCountCopy) {\n        this.gridBodyCtrl.setColumnMovingCss(false);\n      }\n    });\n  }\n  flush(callback) {\n    if (this.executeNextFuncs.length === 0 && this.executeLaterFuncs.length === 0) {\n      callback();\n      return;\n    }\n    const runFuncs = (queue) => {\n      while (queue.length) {\n        const func = queue.pop();\n        if (func) {\n          func();\n        }\n      }\n    };\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      window.setTimeout(() => runFuncs(this.executeNextFuncs), 0);\n      window.setTimeout(() => {\n        callback();\n        runFuncs(this.executeLaterFuncs);\n      }, 200);\n    });\n  }\n};\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], ColumnAnimationService.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  PostConstruct\n], ColumnAnimationService.prototype, \"postConstruct\", 1);\nColumnAnimationService = __decorateClass([\n  Bean(\"columnAnimationService\")\n], ColumnAnimationService);\n\n// community-modules/core/src/pagination/paginationAutoPageSizeService.ts\nvar PaginationAutoPageSizeService = class extends BeanStub {\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.centerRowsCtrl = p.center;\n      this.addManagedListener(this.eventService, Events.EVENT_BODY_HEIGHT_CHANGED, this.checkPageSize.bind(this));\n      this.addManagedListener(this.eventService, Events.EVENT_SCROLL_VISIBILITY_CHANGED, this.checkPageSize.bind(this));\n      this.addManagedPropertyListener(\"paginationAutoPageSize\", this.onPaginationAutoSizeChanged.bind(this));\n      this.checkPageSize();\n    });\n  }\n  notActive() {\n    return !this.gos.get(\"paginationAutoPageSize\") || this.centerRowsCtrl == null;\n  }\n  onPaginationAutoSizeChanged() {\n    if (this.notActive()) {\n      this.paginationProxy.unsetAutoCalculatedPageSize();\n    } else {\n      this.checkPageSize();\n    }\n  }\n  checkPageSize() {\n    if (this.notActive()) {\n      return;\n    }\n    const bodyHeight = this.centerRowsCtrl.getViewportSizeFeature().getBodyHeight();\n    if (bodyHeight > 0) {\n      const update = () => {\n        const rowHeight = this.gos.getRowHeightAsNumber();\n        const newPageSize = Math.floor(bodyHeight / rowHeight);\n        this.paginationProxy.setPageSize(newPageSize, \"autoCalculated\");\n      };\n      if (!this.isBodyRendered) {\n        update();\n        this.isBodyRendered = true;\n      } else {\n        debounce(() => update(), 50)();\n      }\n    } else {\n      this.isBodyRendered = false;\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], PaginationAutoPageSizeService.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], PaginationAutoPageSizeService.prototype, \"paginationProxy\", 2);\n__decorateClass([\n  PostConstruct\n], PaginationAutoPageSizeService.prototype, \"postConstruct\", 1);\nPaginationAutoPageSizeService = __decorateClass([\n  Bean(\"paginationAutoPageSizeService\")\n], PaginationAutoPageSizeService);\n\n// community-modules/core/src/valueService/valueCache.ts\nvar ValueCache = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.cacheVersion = 0;\n  }\n  init() {\n    this.active = this.gos.get(\"valueCache\");\n    this.neverExpires = this.gos.get(\"valueCacheNeverExpires\");\n  }\n  onDataChanged() {\n    if (this.neverExpires) {\n      return;\n    }\n    this.expire();\n  }\n  expire() {\n    this.cacheVersion++;\n  }\n  setValue(rowNode, colId, value) {\n    if (this.active) {\n      if (rowNode.__cacheVersion !== this.cacheVersion) {\n        rowNode.__cacheVersion = this.cacheVersion;\n        rowNode.__cacheData = {};\n      }\n      rowNode.__cacheData[colId] = value;\n    }\n  }\n  getValue(rowNode, colId) {\n    if (!this.active || rowNode.__cacheVersion !== this.cacheVersion) {\n      return void 0;\n    }\n    return rowNode.__cacheData[colId];\n  }\n};\n__decorateClass([\n  PostConstruct\n], ValueCache.prototype, \"init\", 1);\nValueCache = __decorateClass([\n  Bean(\"valueCache\")\n], ValueCache);\n\n// community-modules/core/src/valueService/changeDetectionService.ts\nvar SOURCE_PASTE = \"paste\";\nvar ChangeDetectionService = class extends BeanStub {\n  init() {\n    if (this.rowModel.getType() === \"clientSide\") {\n      this.clientSideRowModel = this.rowModel;\n    }\n    this.addManagedListener(this.eventService, Events.EVENT_CELL_VALUE_CHANGED, this.onCellValueChanged.bind(this));\n  }\n  onCellValueChanged(event) {\n    if (event.source === SOURCE_PASTE) {\n      return;\n    }\n    this.doChangeDetection(event.node, event.column);\n  }\n  doChangeDetection(rowNode, column) {\n    if (this.gos.get(\"suppressChangeDetection\")) {\n      return;\n    }\n    const nodesToRefresh = [rowNode];\n    if (this.clientSideRowModel && !rowNode.isRowPinned()) {\n      const onlyChangedColumns = this.gos.get(\"aggregateOnlyChangedColumns\");\n      const changedPath = new ChangedPath(onlyChangedColumns, this.clientSideRowModel.getRootNode());\n      changedPath.addParentNode(rowNode.parent, [column]);\n      this.clientSideRowModel.doAggregate(changedPath);\n      changedPath.forEachChangedNodeDepthFirst((rowNode2) => {\n        nodesToRefresh.push(rowNode2);\n      });\n    }\n    this.rowRenderer.refreshCells({ rowNodes: nodesToRefresh });\n  }\n};\n__decorateClass([\n  Autowired(\"rowModel\")\n], ChangeDetectionService.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"rowRenderer\")\n], ChangeDetectionService.prototype, \"rowRenderer\", 2);\n__decorateClass([\n  PostConstruct\n], ChangeDetectionService.prototype, \"init\", 1);\nChangeDetectionService = __decorateClass([\n  Bean(\"changeDetectionService\")\n], ChangeDetectionService);\n\n// community-modules/core/src/components/framework/agComponentUtils.ts\nvar AgComponentUtils = class extends BeanStub {\n  adaptFunction(propertyName, jsCompFunc) {\n    const metadata = this.componentMetadataProvider.retrieve(propertyName);\n    if (metadata && metadata.functionAdapter) {\n      return metadata.functionAdapter(jsCompFunc);\n    }\n    return null;\n  }\n  adaptCellRendererFunction(callback) {\n    class Adapter {\n      refresh(params) {\n        return false;\n      }\n      getGui() {\n        return this.eGui;\n      }\n      init(params) {\n        const callbackResult = callback(params);\n        const type = typeof callbackResult;\n        if (type === \"string\" || type === \"number\" || type === \"boolean\") {\n          this.eGui = loadTemplate(\"<span>\" + callbackResult + \"</span>\");\n          return;\n        }\n        if (callbackResult == null) {\n          this.eGui = loadTemplate(\"<span></span>\");\n          return;\n        }\n        this.eGui = callbackResult;\n      }\n    }\n    return Adapter;\n  }\n  doesImplementIComponent(candidate) {\n    if (!candidate) {\n      return false;\n    }\n    return candidate.prototype && \"getGui\" in candidate.prototype;\n  }\n};\n__decorateClass([\n  Autowired(\"componentMetadataProvider\")\n], AgComponentUtils.prototype, \"componentMetadataProvider\", 2);\nAgComponentUtils = __decorateClass([\n  Bean(\"agComponentUtils\")\n], AgComponentUtils);\n\n// community-modules/core/src/components/framework/componentMetadataProvider.ts\nvar ComponentMetadataProvider = class extends BeanStub {\n  postConstruct() {\n    this.componentMetaData = {\n      dateComponent: {\n        mandatoryMethodList: [\"getDate\", \"setDate\"],\n        optionalMethodList: [\"afterGuiAttached\", \"setInputPlaceholder\", \"setInputAriaLabel\", \"setDisabled\", \"onParamsUpdated\", \"refresh\"]\n      },\n      detailCellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      headerComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"]\n      },\n      headerGroupComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: []\n      },\n      loadingCellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      loadingOverlayComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"]\n      },\n      noRowsOverlayComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"]\n      },\n      floatingFilterComponent: {\n        mandatoryMethodList: [\"onParentModelChanged\"],\n        optionalMethodList: [\"afterGuiAttached\", \"onParamsUpdated\", \"refresh\"]\n      },\n      cellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\", \"afterGuiAttached\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      cellEditor: {\n        mandatoryMethodList: [\"getValue\"],\n        optionalMethodList: [\"isPopup\", \"isCancelBeforeStart\", \"isCancelAfterEnd\", \"getPopupPosition\", \"focusIn\", \"focusOut\", \"afterGuiAttached\", \"refresh\"]\n      },\n      innerRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"afterGuiAttached\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      fullWidthCellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\", \"afterGuiAttached\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      groupRowRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"afterGuiAttached\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      filter: {\n        mandatoryMethodList: [\"isFilterActive\", \"doesFilterPass\", \"getModel\", \"setModel\"],\n        optionalMethodList: [\"afterGuiAttached\", \"afterGuiDetached\", \"onNewRowsLoaded\", \"getModelAsString\", \"onFloatingFilterChanged\", \"onAnyFilterChanged\", \"refresh\"]\n      },\n      statusPanel: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"]\n      },\n      toolPanel: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\", \"getState\"]\n      },\n      tooltipComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: []\n      },\n      menuItem: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"setActive\", \"select\", \"setExpanded\", \"configureDefaults\"]\n      }\n    };\n  }\n  retrieve(name) {\n    return this.componentMetaData[name];\n  }\n};\n__decorateClass([\n  Autowired(\"agComponentUtils\")\n], ComponentMetadataProvider.prototype, \"agComponentUtils\", 2);\n__decorateClass([\n  PostConstruct\n], ComponentMetadataProvider.prototype, \"postConstruct\", 1);\nComponentMetadataProvider = __decorateClass([\n  Bean(\"componentMetadataProvider\")\n], ComponentMetadataProvider);\n\n// community-modules/core/src/environment.ts\nvar DEFAULT_ROW_HEIGHT = 25;\nvar MIN_COL_WIDTH = 10;\nvar MAT_GRID_SIZE = 8;\nvar BASE_GRID_SIZE = 4;\nvar BALHAM_GRID_SIZE = 4;\nvar ALPINE_GRID_SIZE = 6;\nvar QUARTZ_ICON_SIZE = 16;\nvar QUARTZ_FONT_SIZE = 14;\nvar QUARTZ_GRID_SIZE = 8;\nvar HARD_CODED_SIZES = {\n  // this item is required for custom themes\n  \"ag-theme-custom\": {\n    headerHeight: 25,\n    headerCellMinWidth: 24,\n    listItemHeight: BASE_GRID_SIZE * 5,\n    rowHeight: 25,\n    chartMenuPanelWidth: 220\n  },\n  \"ag-theme-material\": {\n    headerHeight: MAT_GRID_SIZE * 7,\n    headerCellMinWidth: 48,\n    listItemHeight: MAT_GRID_SIZE * 4,\n    rowHeight: MAT_GRID_SIZE * 6,\n    chartMenuPanelWidth: 240\n  },\n  \"ag-theme-balham\": {\n    headerHeight: BALHAM_GRID_SIZE * 8,\n    headerCellMinWidth: 24,\n    listItemHeight: BALHAM_GRID_SIZE * 6,\n    rowHeight: BALHAM_GRID_SIZE * 7,\n    chartMenuPanelWidth: 220\n  },\n  \"ag-theme-alpine\": {\n    headerHeight: ALPINE_GRID_SIZE * 8,\n    headerCellMinWidth: 36,\n    listItemHeight: ALPINE_GRID_SIZE * 4,\n    rowHeight: ALPINE_GRID_SIZE * 7,\n    chartMenuPanelWidth: 240\n  },\n  \"ag-theme-quartz\": {\n    headerHeight: QUARTZ_FONT_SIZE + QUARTZ_GRID_SIZE * 4.25,\n    headerCellMinWidth: 36,\n    listItemHeight: QUARTZ_ICON_SIZE + QUARTZ_GRID_SIZE,\n    rowHeight: QUARTZ_FONT_SIZE + QUARTZ_GRID_SIZE * 3.5,\n    chartMenuPanelWidth: 260\n  }\n};\nvar SASS_PROPERTY_BUILDER = {\n  headerHeight: [\"ag-header-row\"],\n  headerCellMinWidth: [\"ag-header-cell\"],\n  listItemHeight: [\"ag-virtual-list-item\"],\n  rowHeight: [\"ag-row\"],\n  chartMenuPanelWidth: [\"ag-chart-docked-container\"]\n};\nvar Environment = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.calculatedSizes = {};\n    this.calculatedTheme = null;\n  }\n  postConstruct() {\n    var _a;\n    const el = (_a = this.getTheme().el) != null ? _a : this.eGridDiv;\n    this.addManagedPropertyListener(\"rowHeight\", () => this.refreshRowHeightVariable());\n    this.mutationObserver = new MutationObserver(() => {\n      this.calculatedSizes = {};\n      this.calculatedTheme = null;\n      this.calculatedTheme = this.getTheme();\n      this.fireGridStylesChangedEvent();\n    });\n    this.mutationObserver.observe(el || this.eGridDiv, {\n      attributes: true,\n      attributeFilter: [\"class\"]\n    });\n  }\n  fireGridStylesChangedEvent() {\n    const event = {\n      type: Events.EVENT_GRID_STYLES_CHANGED\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  getSassVariable(key) {\n    const { themeFamily, el } = this.getTheme();\n    if (!themeFamily || themeFamily.indexOf(\"ag-theme\") !== 0) {\n      return;\n    }\n    if (!this.calculatedSizes) {\n      this.calculatedSizes = {};\n    }\n    if (!this.calculatedSizes[themeFamily]) {\n      this.calculatedSizes[themeFamily] = {};\n    }\n    const size = this.calculatedSizes[themeFamily][key];\n    if (size != null) {\n      return size;\n    }\n    this.calculatedSizes[themeFamily][key] = this.calculateValueForSassProperty(key, themeFamily, el);\n    return this.calculatedSizes[themeFamily][key];\n  }\n  calculateValueForSassProperty(property, theme, themeElement) {\n    const useTheme = \"ag-theme-\" + (theme.match(\"material\") ? \"material\" : theme.match(\"balham\") ? \"balham\" : theme.match(\"alpine\") ? \"alpine\" : \"custom\");\n    const defaultValue = HARD_CODED_SIZES[useTheme][property];\n    const eDocument = this.gos.getDocument();\n    if (!themeElement) {\n      themeElement = this.eGridDiv;\n    }\n    if (!SASS_PROPERTY_BUILDER[property]) {\n      return defaultValue;\n    }\n    const classList = SASS_PROPERTY_BUILDER[property];\n    const div = eDocument.createElement(\"div\");\n    const classesFromThemeElement = Array.from(themeElement.classList);\n    div.classList.add(theme, ...classesFromThemeElement);\n    div.style.position = \"absolute\";\n    const el = classList.reduce((prevEl, currentClass) => {\n      const currentDiv = eDocument.createElement(\"div\");\n      currentDiv.style.position = \"static\";\n      currentDiv.classList.add(currentClass);\n      prevEl.appendChild(currentDiv);\n      return currentDiv;\n    }, div);\n    let calculatedValue = 0;\n    if (eDocument.body) {\n      eDocument.body.appendChild(div);\n      const sizeName = property.toLowerCase().indexOf(\"height\") !== -1 ? \"height\" : \"width\";\n      calculatedValue = parseInt(window.getComputedStyle(el)[sizeName], 10);\n      eDocument.body.removeChild(div);\n    }\n    return calculatedValue || defaultValue;\n  }\n  isThemeDark() {\n    const { theme } = this.getTheme();\n    return !!theme && theme.indexOf(\"dark\") >= 0;\n  }\n  chartMenuPanelWidth() {\n    return this.getSassVariable(\"chartMenuPanelWidth\");\n  }\n  getTheme() {\n    if (this.calculatedTheme) {\n      return this.calculatedTheme;\n    }\n    const reg = /\\bag-(material|(?:theme-([\\w\\-]*)))\\b/g;\n    let el = this.eGridDiv;\n    let themeMatch = null;\n    let allThemes = [];\n    while (el) {\n      themeMatch = reg.exec(el.className);\n      if (!themeMatch) {\n        el = el.parentElement || void 0;\n      } else {\n        const matched = el.className.match(reg);\n        if (matched) {\n          allThemes = matched;\n        }\n        break;\n      }\n    }\n    if (!themeMatch) {\n      return { allThemes };\n    }\n    const theme = themeMatch[0];\n    this.calculatedTheme = { theme, el, themeFamily: theme.replace(/-dark$/, \"\"), allThemes };\n    return this.calculatedTheme;\n  }\n  getFromTheme(defaultValue, sassVariableName) {\n    var _a;\n    return (_a = this.getSassVariable(sassVariableName)) != null ? _a : defaultValue;\n  }\n  getDefaultRowHeight() {\n    return this.getFromTheme(DEFAULT_ROW_HEIGHT, \"rowHeight\");\n  }\n  getListItemHeight() {\n    return this.getFromTheme(20, \"listItemHeight\");\n  }\n  refreshRowHeightVariable() {\n    const oldRowHeight = this.eGridDiv.style.getPropertyValue(\"--ag-line-height\").trim();\n    const height = this.gos.get(\"rowHeight\");\n    if (height == null || isNaN(height) || !isFinite(height)) {\n      if (oldRowHeight !== null) {\n        this.eGridDiv.style.setProperty(\"--ag-line-height\", null);\n      }\n      return -1;\n    }\n    const newRowHeight = `${height}px`;\n    if (oldRowHeight != newRowHeight) {\n      this.eGridDiv.style.setProperty(\"--ag-line-height\", newRowHeight);\n      return height;\n    }\n    return oldRowHeight != \"\" ? parseFloat(oldRowHeight) : -1;\n  }\n  getMinColWidth() {\n    const measuredMin = this.getFromTheme(null, \"headerCellMinWidth\");\n    return exists(measuredMin) ? Math.max(measuredMin, MIN_COL_WIDTH) : MIN_COL_WIDTH;\n  }\n  destroy() {\n    this.calculatedSizes = null;\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n    super.destroy();\n  }\n};\n__decorateClass([\n  Autowired(\"eGridDiv\")\n], Environment.prototype, \"eGridDiv\", 2);\n__decorateClass([\n  PostConstruct\n], Environment.prototype, \"postConstruct\", 1);\nEnvironment = __decorateClass([\n  Bean(\"environment\")\n], Environment);\n\n// community-modules/core/src/rendering/rowContainerHeightService.ts\nvar RowContainerHeightService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    // the scrollY position\n    this.scrollY = 0;\n    // how tall the body is\n    this.uiBodyHeight = 0;\n  }\n  agWire(loggerFactory) {\n    this.logger = loggerFactory.create(\"RowContainerHeightService\");\n  }\n  postConstruct() {\n    this.addManagedListener(this.eventService, Events.EVENT_BODY_HEIGHT_CHANGED, this.updateOffset.bind(this));\n    this.maxDivHeight = getMaxDivHeight();\n    this.logger.log(\"maxDivHeight = \" + this.maxDivHeight);\n  }\n  isStretching() {\n    return this.stretching;\n  }\n  getDivStretchOffset() {\n    return this.divStretchOffset;\n  }\n  updateOffset() {\n    if (!this.stretching) {\n      return;\n    }\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const newScrollY = gridBodyCon.getScrollFeature().getVScrollPosition().top;\n    const newBodyHeight = this.getUiBodyHeight();\n    const atLeastOneChanged = newScrollY !== this.scrollY || newBodyHeight !== this.uiBodyHeight;\n    if (atLeastOneChanged) {\n      this.scrollY = newScrollY;\n      this.uiBodyHeight = newBodyHeight;\n      this.calculateOffset();\n    }\n  }\n  calculateOffset() {\n    this.setUiContainerHeight(this.maxDivHeight);\n    this.pixelsToShave = this.modelHeight - this.uiContainerHeight;\n    this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;\n    const scrollPercent = this.scrollY / this.maxScrollY;\n    const divStretchOffset = scrollPercent * this.pixelsToShave;\n    this.logger.log(`Div Stretch Offset = ${divStretchOffset} (${this.pixelsToShave} * ${scrollPercent})`);\n    this.setDivStretchOffset(divStretchOffset);\n  }\n  setUiContainerHeight(height) {\n    if (height !== this.uiContainerHeight) {\n      this.uiContainerHeight = height;\n      this.eventService.dispatchEvent({ type: Events.EVENT_ROW_CONTAINER_HEIGHT_CHANGED });\n    }\n  }\n  clearOffset() {\n    this.setUiContainerHeight(this.modelHeight);\n    this.pixelsToShave = 0;\n    this.setDivStretchOffset(0);\n  }\n  setDivStretchOffset(newOffset) {\n    const newOffsetFloor = typeof newOffset === \"number\" ? Math.floor(newOffset) : null;\n    if (this.divStretchOffset === newOffsetFloor) {\n      return;\n    }\n    this.divStretchOffset = newOffsetFloor;\n    this.eventService.dispatchEvent({ type: Events.EVENT_HEIGHT_SCALE_CHANGED });\n  }\n  setModelHeight(modelHeight) {\n    this.modelHeight = modelHeight;\n    this.stretching = modelHeight != null && this.maxDivHeight > 0 && modelHeight > this.maxDivHeight;\n    if (this.stretching) {\n      this.calculateOffset();\n    } else {\n      this.clearOffset();\n    }\n  }\n  getUiContainerHeight() {\n    return this.uiContainerHeight;\n  }\n  getRealPixelPosition(modelPixel) {\n    return modelPixel - this.divStretchOffset;\n  }\n  getUiBodyHeight() {\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const pos = gridBodyCon.getScrollFeature().getVScrollPosition();\n    return pos.bottom - pos.top;\n  }\n  getScrollPositionForPixel(rowTop) {\n    if (this.pixelsToShave <= 0) {\n      return rowTop;\n    }\n    const modelMaxScroll = this.modelHeight - this.getUiBodyHeight();\n    const scrollPercent = rowTop / modelMaxScroll;\n    const scrollPixel = this.maxScrollY * scrollPercent;\n    return scrollPixel;\n  }\n};\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], RowContainerHeightService.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  __decorateParam(0, Qualifier(\"loggerFactory\"))\n], RowContainerHeightService.prototype, \"agWire\", 1);\n__decorateClass([\n  PostConstruct\n], RowContainerHeightService.prototype, \"postConstruct\", 1);\nRowContainerHeightService = __decorateClass([\n  Bean(\"rowContainerHeightService\")\n], RowContainerHeightService);\n\n// community-modules/core/src/rowNodes/selectableService.ts\nvar SelectableService = class extends BeanStub {\n  init() {\n    this.addManagedPropertyListener(\"isRowSelectable\", () => this.updateSelectable());\n  }\n  /**\n   * Used by CSRM only, to update selectable state after group state changes.\n   */\n  updateSelectableAfterGrouping() {\n    this.updateSelectable(true);\n  }\n  updateSelectable(skipLeafNodes = false) {\n    const isRowSelecting = !!this.gos.get(\"rowSelection\");\n    const isRowSelectable = this.gos.get(\"isRowSelectable\");\n    if (!isRowSelecting || !isRowSelectable) {\n      return;\n    }\n    const isGroupSelectsChildren = this.gos.get(\"groupSelectsChildren\");\n    const isCsrmGroupSelectsChildren = this.rowModel.getType() === \"clientSide\" && isGroupSelectsChildren;\n    const nodesToDeselect = [];\n    const nodeCallback = (node) => {\n      if (skipLeafNodes && !node.group) {\n        return;\n      }\n      if (isCsrmGroupSelectsChildren && node.group) {\n        const hasSelectableChild = node.childrenAfterGroup.some((rowNode) => rowNode.selectable === true);\n        node.setRowSelectable(hasSelectableChild, true);\n        return;\n      }\n      const rowSelectable = isRowSelectable ? isRowSelectable(node) : true;\n      node.setRowSelectable(rowSelectable, true);\n      if (!rowSelectable && node.isSelected()) {\n        nodesToDeselect.push(node);\n      }\n    };\n    if (isCsrmGroupSelectsChildren) {\n      const csrm = this.rowModel;\n      const changedPath = new ChangedPath(false, csrm.getRootNode());\n      changedPath.forEachChangedNodeDepthFirst(nodeCallback, true, true);\n    } else {\n      this.rowModel.forEachNode(nodeCallback);\n    }\n    if (nodesToDeselect.length) {\n      this.selectionService.setNodesSelected({ nodes: nodesToDeselect, newValue: false, source: \"selectableChanged\" });\n    }\n    if (isCsrmGroupSelectsChildren && this.selectionService instanceof SelectionService) {\n      this.selectionService.updateGroupsFromChildrenSelections(\"selectableChanged\");\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"rowModel\")\n], SelectableService.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"selectionService\")\n], SelectableService.prototype, \"selectionService\", 2);\n__decorateClass([\n  PostConstruct\n], SelectableService.prototype, \"init\", 1);\nSelectableService = __decorateClass([\n  Bean(\"selectableService\")\n], SelectableService);\n\n// community-modules/core/src/pagination/paginationComp.ts\nvar PaginationComp = class extends Component {\n  constructor() {\n    super();\n    this.previousAndFirstButtonsDisabled = false;\n    this.nextButtonDisabled = false;\n    this.lastButtonDisabled = false;\n    this.areListenersSetup = false;\n  }\n  postConstruct() {\n    const isRtl = this.gos.get(\"enableRtl\");\n    this.setTemplate(this.getTemplate());\n    const { btFirst, btPrevious, btNext, btLast, pageSizeComp } = this;\n    this.activateTabIndex([btFirst, btPrevious, btNext, btLast]);\n    btFirst.insertAdjacentElement(\"afterbegin\", createIconNoSpan(isRtl ? \"last\" : \"first\", this.gos));\n    btPrevious.insertAdjacentElement(\"afterbegin\", createIconNoSpan(isRtl ? \"next\" : \"previous\", this.gos));\n    btNext.insertAdjacentElement(\"afterbegin\", createIconNoSpan(isRtl ? \"previous\" : \"next\", this.gos));\n    btLast.insertAdjacentElement(\"afterbegin\", createIconNoSpan(isRtl ? \"first\" : \"last\", this.gos));\n    this.addManagedPropertyListener(\"pagination\", this.onPaginationChanged.bind(this));\n    this.addManagedPropertyListener(\"suppressPaginationPanel\", this.onPaginationChanged.bind(this));\n    this.addManagedPropertyListeners(\n      [\"paginationPageSizeSelector\", \"paginationAutoPageSize\", \"suppressPaginationPanel\"],\n      () => this.onPageSizeRelatedOptionsChange()\n    );\n    this.pageSizeComp.toggleSelectDisplay(\n      this.pageSizeComp.shouldShowPageSizeSelector()\n    );\n    this.onPaginationChanged();\n  }\n  onPaginationChanged() {\n    const isPaging = this.gos.get(\"pagination\");\n    const paginationPanelEnabled = isPaging && !this.gos.get(\"suppressPaginationPanel\");\n    this.setDisplayed(paginationPanelEnabled);\n    if (!paginationPanelEnabled) {\n      return;\n    }\n    this.setupListeners();\n    this.enableOrDisableButtons();\n    this.updateRowLabels();\n    this.setCurrentPageLabel();\n    this.setTotalLabels();\n    this.onPageSizeRelatedOptionsChange();\n  }\n  onPageSizeRelatedOptionsChange() {\n    this.pageSizeComp.toggleSelectDisplay(\n      this.pageSizeComp.shouldShowPageSizeSelector()\n    );\n  }\n  setupListeners() {\n    if (!this.areListenersSetup) {\n      this.addManagedListener(this.eventService, Events.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this));\n      [\n        { el: this.btFirst, fn: this.onBtFirst.bind(this) },\n        { el: this.btPrevious, fn: this.onBtPrevious.bind(this) },\n        { el: this.btNext, fn: this.onBtNext.bind(this) },\n        { el: this.btLast, fn: this.onBtLast.bind(this) }\n      ].forEach((item) => {\n        const { el, fn } = item;\n        this.addManagedListener(el, \"click\", fn);\n        this.addManagedListener(el, \"keydown\", (e) => {\n          if (e.key === KeyCode.ENTER || e.key === KeyCode.SPACE) {\n            e.preventDefault();\n            fn();\n          }\n        });\n      });\n      this.areListenersSetup = true;\n    }\n  }\n  onBtFirst() {\n    if (!this.previousAndFirstButtonsDisabled) {\n      this.paginationProxy.goToFirstPage();\n    }\n  }\n  setCurrentPageLabel() {\n    const pagesExist = this.paginationProxy.getTotalPages() > 0;\n    const currentPage = this.paginationProxy.getCurrentPage();\n    const toDisplay = pagesExist ? currentPage + 1 : 0;\n    this.lbCurrent.textContent = this.formatNumber(toDisplay);\n  }\n  formatNumber(value) {\n    const userFunc = this.gos.getCallback(\"paginationNumberFormatter\");\n    if (userFunc) {\n      const params = { value };\n      return userFunc(params);\n    }\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const thousandSeparator = localeTextFunc(\"thousandSeparator\", \",\");\n    const decimalSeparator = localeTextFunc(\"decimalSeparator\", \".\");\n    return formatNumberCommas(value, thousandSeparator, decimalSeparator);\n  }\n  getTemplate() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const strPage = localeTextFunc(\"page\", \"Page\");\n    const strTo = localeTextFunc(\"to\", \"to\");\n    const strOf = localeTextFunc(\"of\", \"of\");\n    const strFirst = localeTextFunc(\"firstPage\", \"First Page\");\n    const strPrevious = localeTextFunc(\"previousPage\", \"Previous Page\");\n    const strNext = localeTextFunc(\"nextPage\", \"Next Page\");\n    const strLast = localeTextFunc(\"lastPage\", \"Last Page\");\n    const compId = this.getCompId();\n    return (\n      /* html */\n      `<div class=\"ag-paging-panel ag-unselectable\" id=\"ag-${compId}\">\n                <ag-page-size-selector ref=\"pageSizeComp\"></ag-page-size-selector>\n                <span class=\"ag-paging-row-summary-panel\" role=\"status\">\n                    <span id=\"ag-${compId}-first-row\" ref=\"lbFirstRowOnPage\" class=\"ag-paging-row-summary-panel-number\"></span>\n                    <span id=\"ag-${compId}-to\">${strTo}</span>\n                    <span id=\"ag-${compId}-last-row\" ref=\"lbLastRowOnPage\" class=\"ag-paging-row-summary-panel-number\"></span>\n                    <span id=\"ag-${compId}-of\">${strOf}</span>\n                    <span id=\"ag-${compId}-row-count\" ref=\"lbRecordCount\" class=\"ag-paging-row-summary-panel-number\"></span>\n                </span>\n                <span class=\"ag-paging-page-summary-panel\" role=\"presentation\">\n                    <div ref=\"btFirst\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strFirst}\"></div>\n                    <div ref=\"btPrevious\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strPrevious}\"></div>\n                    <span class=\"ag-paging-description\" role=\"status\">\n                        <span id=\"ag-${compId}-start-page\">${strPage}</span>\n                        <span id=\"ag-${compId}-start-page-number\" ref=\"lbCurrent\" class=\"ag-paging-number\"></span>\n                        <span id=\"ag-${compId}-of-page\">${strOf}</span>\n                        <span id=\"ag-${compId}-of-page-number\" ref=\"lbTotal\" class=\"ag-paging-number\"></span>\n                    </span>\n                    <div ref=\"btNext\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strNext}\"></div>\n                    <div ref=\"btLast\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strLast}\"></div>\n                </span>\n            </div>`\n    );\n  }\n  onBtNext() {\n    if (!this.nextButtonDisabled) {\n      this.paginationProxy.goToNextPage();\n    }\n  }\n  onBtPrevious() {\n    if (!this.previousAndFirstButtonsDisabled) {\n      this.paginationProxy.goToPreviousPage();\n    }\n  }\n  onBtLast() {\n    if (!this.lastButtonDisabled) {\n      this.paginationProxy.goToLastPage();\n    }\n  }\n  enableOrDisableButtons() {\n    const currentPage = this.paginationProxy.getCurrentPage();\n    const maxRowFound = this.paginationProxy.isLastPageFound();\n    const totalPages = this.paginationProxy.getTotalPages();\n    this.previousAndFirstButtonsDisabled = currentPage === 0;\n    this.toggleButtonDisabled(this.btFirst, this.previousAndFirstButtonsDisabled);\n    this.toggleButtonDisabled(this.btPrevious, this.previousAndFirstButtonsDisabled);\n    const zeroPagesToDisplay = this.isZeroPagesToDisplay();\n    const onLastPage = currentPage === totalPages - 1;\n    this.nextButtonDisabled = onLastPage || zeroPagesToDisplay;\n    this.lastButtonDisabled = !maxRowFound || zeroPagesToDisplay || currentPage === totalPages - 1;\n    this.toggleButtonDisabled(this.btNext, this.nextButtonDisabled);\n    this.toggleButtonDisabled(this.btLast, this.lastButtonDisabled);\n  }\n  toggleButtonDisabled(button, disabled) {\n    setAriaDisabled(button, disabled);\n    button.classList.toggle(\"ag-disabled\", disabled);\n  }\n  updateRowLabels() {\n    const currentPage = this.paginationProxy.getCurrentPage();\n    const pageSize = this.paginationProxy.getPageSize();\n    const maxRowFound = this.paginationProxy.isLastPageFound();\n    const rowCount = this.paginationProxy.isLastPageFound() ? this.paginationProxy.getMasterRowCount() : null;\n    let startRow;\n    let endRow;\n    if (this.isZeroPagesToDisplay()) {\n      startRow = endRow = 0;\n    } else {\n      startRow = pageSize * currentPage + 1;\n      endRow = startRow + pageSize - 1;\n      if (maxRowFound && endRow > rowCount) {\n        endRow = rowCount;\n      }\n    }\n    this.lbFirstRowOnPage.textContent = this.formatNumber(startRow);\n    if (this.rowNodeBlockLoader.isLoading()) {\n      const translate = this.localeService.getLocaleTextFunc();\n      this.lbLastRowOnPage.innerHTML = translate(\"pageLastRowUnknown\", \"?\");\n    } else {\n      this.lbLastRowOnPage.textContent = this.formatNumber(endRow);\n    }\n  }\n  isZeroPagesToDisplay() {\n    const maxRowFound = this.paginationProxy.isLastPageFound();\n    const totalPages = this.paginationProxy.getTotalPages();\n    return maxRowFound && totalPages === 0;\n  }\n  setTotalLabels() {\n    const lastPageFound = this.paginationProxy.isLastPageFound();\n    const totalPages = this.paginationProxy.getTotalPages();\n    const rowCount = lastPageFound ? this.paginationProxy.getMasterRowCount() : null;\n    if (rowCount === 1) {\n      const firstRow = this.paginationProxy.getRow(0);\n      const hiddenGroupRow = firstRow && firstRow.group && !(firstRow.groupData || firstRow.aggData);\n      if (hiddenGroupRow) {\n        this.setTotalLabelsToZero();\n        return;\n      }\n    }\n    if (lastPageFound) {\n      this.lbTotal.textContent = this.formatNumber(totalPages);\n      this.lbRecordCount.textContent = this.formatNumber(rowCount);\n    } else {\n      const moreText = this.localeService.getLocaleTextFunc()(\"more\", \"more\");\n      this.lbTotal.innerHTML = moreText;\n      this.lbRecordCount.innerHTML = moreText;\n    }\n  }\n  setTotalLabelsToZero() {\n    this.lbFirstRowOnPage.textContent = this.formatNumber(0);\n    this.lbCurrent.textContent = this.formatNumber(0);\n    this.lbLastRowOnPage.textContent = this.formatNumber(0);\n    this.lbTotal.textContent = this.formatNumber(0);\n    this.lbRecordCount.textContent = this.formatNumber(0);\n  }\n};\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], PaginationComp.prototype, \"paginationProxy\", 2);\n__decorateClass([\n  Autowired(\"rowNodeBlockLoader\")\n], PaginationComp.prototype, \"rowNodeBlockLoader\", 2);\n__decorateClass([\n  RefSelector(\"btFirst\")\n], PaginationComp.prototype, \"btFirst\", 2);\n__decorateClass([\n  RefSelector(\"btPrevious\")\n], PaginationComp.prototype, \"btPrevious\", 2);\n__decorateClass([\n  RefSelector(\"btNext\")\n], PaginationComp.prototype, \"btNext\", 2);\n__decorateClass([\n  RefSelector(\"btLast\")\n], PaginationComp.prototype, \"btLast\", 2);\n__decorateClass([\n  RefSelector(\"lbRecordCount\")\n], PaginationComp.prototype, \"lbRecordCount\", 2);\n__decorateClass([\n  RefSelector(\"lbFirstRowOnPage\")\n], PaginationComp.prototype, \"lbFirstRowOnPage\", 2);\n__decorateClass([\n  RefSelector(\"lbLastRowOnPage\")\n], PaginationComp.prototype, \"lbLastRowOnPage\", 2);\n__decorateClass([\n  RefSelector(\"lbCurrent\")\n], PaginationComp.prototype, \"lbCurrent\", 2);\n__decorateClass([\n  RefSelector(\"lbTotal\")\n], PaginationComp.prototype, \"lbTotal\", 2);\n__decorateClass([\n  RefSelector(\"pageSizeComp\")\n], PaginationComp.prototype, \"pageSizeComp\", 2);\n__decorateClass([\n  PostConstruct\n], PaginationComp.prototype, \"postConstruct\", 1);\n\n// community-modules/core/src/rendering/overlays/overlayWrapperComponent.ts\nvar _OverlayWrapperComponent = class _OverlayWrapperComponent extends Component {\n  constructor() {\n    super(_OverlayWrapperComponent.TEMPLATE);\n    this.inProgress = false;\n    this.destroyRequested = false;\n  }\n  updateLayoutClasses(cssClass, params) {\n    const overlayWrapperClassList = this.eOverlayWrapper.classList;\n    overlayWrapperClassList.toggle(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n    overlayWrapperClassList.toggle(\"ag-layout-normal\" /* NORMAL */, params.normal);\n    overlayWrapperClassList.toggle(\"ag-layout-print\" /* PRINT */, params.print);\n  }\n  postConstruct() {\n    this.createManagedBean(new LayoutFeature(this));\n    this.setDisplayed(false, { skipAriaHidden: true });\n    this.overlayService.registerOverlayWrapperComp(this);\n  }\n  setWrapperTypeClass(overlayWrapperCssClass) {\n    const overlayWrapperClassList = this.eOverlayWrapper.classList;\n    if (this.activeOverlayWrapperCssClass) {\n      overlayWrapperClassList.toggle(this.activeOverlayWrapperCssClass, false);\n    }\n    this.activeOverlayWrapperCssClass = overlayWrapperCssClass;\n    overlayWrapperClassList.toggle(overlayWrapperCssClass, true);\n  }\n  showOverlay(overlayComp, overlayWrapperCssClass, updateListenerDestroyFunc) {\n    if (this.inProgress) {\n      return;\n    }\n    this.setWrapperTypeClass(overlayWrapperCssClass);\n    this.destroyActiveOverlay();\n    this.inProgress = true;\n    if (overlayComp) {\n      overlayComp.then((comp) => {\n        this.inProgress = false;\n        this.eOverlayWrapper.appendChild(comp.getGui());\n        this.activeOverlay = comp;\n        this.updateListenerDestroyFunc = updateListenerDestroyFunc;\n        if (this.destroyRequested) {\n          this.destroyRequested = false;\n          this.destroyActiveOverlay();\n        }\n      });\n    }\n    this.setDisplayed(true, { skipAriaHidden: true });\n  }\n  destroyActiveOverlay() {\n    var _a;\n    if (this.inProgress) {\n      this.destroyRequested = true;\n      return;\n    }\n    if (!this.activeOverlay) {\n      return;\n    }\n    this.activeOverlay = this.getContext().destroyBean(this.activeOverlay);\n    (_a = this.updateListenerDestroyFunc) == null ? void 0 : _a.call(this);\n    clearElement(this.eOverlayWrapper);\n  }\n  hideOverlay() {\n    this.destroyActiveOverlay();\n    this.setDisplayed(false, { skipAriaHidden: true });\n  }\n  destroy() {\n    this.destroyActiveOverlay();\n    super.destroy();\n  }\n};\n// wrapping in outer div, and wrapper, is needed to center the loading icon\n_OverlayWrapperComponent.TEMPLATE = /* html */\n`\n        <div class=\"ag-overlay\" role=\"presentation\">\n            <div class=\"ag-overlay-panel\" role=\"presentation\">\n                <div class=\"ag-overlay-wrapper\" ref=\"eOverlayWrapper\" role=\"presentation\"></div>\n            </div>\n        </div>`;\n__decorateClass([\n  Autowired(\"overlayService\")\n], _OverlayWrapperComponent.prototype, \"overlayService\", 2);\n__decorateClass([\n  RefSelector(\"eOverlayWrapper\")\n], _OverlayWrapperComponent.prototype, \"eOverlayWrapper\", 2);\n__decorateClass([\n  PostConstruct\n], _OverlayWrapperComponent.prototype, \"postConstruct\", 1);\nvar OverlayWrapperComponent = _OverlayWrapperComponent;\n\n// community-modules/core/src/entities/rowPositionUtils.ts\nvar RowPositionUtils = class extends BeanStub {\n  getFirstRow() {\n    let rowIndex = 0;\n    let rowPinned;\n    if (this.pinnedRowModel.getPinnedTopRowCount()) {\n      rowPinned = \"top\";\n    } else if (this.rowModel.getRowCount()) {\n      rowPinned = null;\n      rowIndex = this.paginationProxy.getPageFirstRow();\n    } else if (this.pinnedRowModel.getPinnedBottomRowCount()) {\n      rowPinned = \"bottom\";\n    }\n    return rowPinned === void 0 ? null : { rowIndex, rowPinned };\n  }\n  getLastRow() {\n    let rowIndex;\n    let rowPinned = null;\n    const pinnedBottomCount = this.pinnedRowModel.getPinnedBottomRowCount();\n    const pinnedTopCount = this.pinnedRowModel.getPinnedTopRowCount();\n    if (pinnedBottomCount) {\n      rowPinned = \"bottom\";\n      rowIndex = pinnedBottomCount - 1;\n    } else if (this.rowModel.getRowCount()) {\n      rowPinned = null;\n      rowIndex = this.paginationProxy.getPageLastRow();\n    } else if (pinnedTopCount) {\n      rowPinned = \"top\";\n      rowIndex = pinnedTopCount - 1;\n    }\n    return rowIndex === void 0 ? null : { rowIndex, rowPinned };\n  }\n  getRowNode(gridRow) {\n    switch (gridRow.rowPinned) {\n      case \"top\":\n        return this.pinnedRowModel.getPinnedTopRowData()[gridRow.rowIndex];\n      case \"bottom\":\n        return this.pinnedRowModel.getPinnedBottomRowData()[gridRow.rowIndex];\n      default:\n        return this.rowModel.getRow(gridRow.rowIndex);\n    }\n  }\n  sameRow(rowA, rowB) {\n    if (!rowA && !rowB) {\n      return true;\n    }\n    if (rowA && !rowB || !rowA && rowB) {\n      return false;\n    }\n    return rowA.rowIndex === rowB.rowIndex && rowA.rowPinned == rowB.rowPinned;\n  }\n  // tests if this row selection is before the other row selection\n  before(rowA, rowB) {\n    switch (rowA.rowPinned) {\n      case \"top\":\n        if (rowB.rowPinned !== \"top\") {\n          return true;\n        }\n        break;\n      case \"bottom\":\n        if (rowB.rowPinned !== \"bottom\") {\n          return false;\n        }\n        break;\n      default:\n        if (exists(rowB.rowPinned)) {\n          return rowB.rowPinned !== \"top\";\n        }\n        break;\n    }\n    return rowA.rowIndex < rowB.rowIndex;\n  }\n};\n__decorateClass([\n  Autowired(\"rowModel\")\n], RowPositionUtils.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"pinnedRowModel\")\n], RowPositionUtils.prototype, \"pinnedRowModel\", 2);\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], RowPositionUtils.prototype, \"paginationProxy\", 2);\nRowPositionUtils = __decorateClass([\n  Bean(\"rowPositionUtils\")\n], RowPositionUtils);\n\n// community-modules/core/src/entities/cellPositionUtils.ts\nvar CellPositionUtils = class extends BeanStub {\n  createId(cellPosition) {\n    const { rowIndex, rowPinned, column } = cellPosition;\n    return this.createIdFromValues({ rowIndex, column, rowPinned });\n  }\n  createIdFromValues(cellPosition) {\n    const { rowIndex, rowPinned, column } = cellPosition;\n    return `${rowIndex}.${rowPinned == null ? \"null\" : rowPinned}.${column.getId()}`;\n  }\n  equals(cellA, cellB) {\n    const colsMatch = cellA.column === cellB.column;\n    const floatingMatch = cellA.rowPinned === cellB.rowPinned;\n    const indexMatch = cellA.rowIndex === cellB.rowIndex;\n    return colsMatch && floatingMatch && indexMatch;\n  }\n};\nCellPositionUtils = __decorateClass([\n  Bean(\"cellPositionUtils\")\n], CellPositionUtils);\n\n// community-modules/core/src/undoRedo/undoRedoStack.ts\nvar UndoRedoAction = class {\n  constructor(cellValueChanges) {\n    this.cellValueChanges = cellValueChanges;\n  }\n};\nvar RangeUndoRedoAction = class extends UndoRedoAction {\n  constructor(cellValueChanges, initialRange, finalRange, ranges) {\n    super(cellValueChanges);\n    this.initialRange = initialRange;\n    this.finalRange = finalRange;\n    this.ranges = ranges;\n  }\n};\nvar _UndoRedoStack = class _UndoRedoStack {\n  constructor(maxStackSize) {\n    this.actionStack = [];\n    this.maxStackSize = maxStackSize ? maxStackSize : _UndoRedoStack.DEFAULT_STACK_SIZE;\n    this.actionStack = new Array(this.maxStackSize);\n  }\n  pop() {\n    return this.actionStack.pop();\n  }\n  push(item) {\n    const shouldAddActions = item.cellValueChanges && item.cellValueChanges.length > 0;\n    if (!shouldAddActions) {\n      return;\n    }\n    if (this.actionStack.length === this.maxStackSize) {\n      this.actionStack.shift();\n    }\n    this.actionStack.push(item);\n  }\n  clear() {\n    this.actionStack = [];\n  }\n  getCurrentStackSize() {\n    return this.actionStack.length;\n  }\n};\n_UndoRedoStack.DEFAULT_STACK_SIZE = 10;\nvar UndoRedoStack = _UndoRedoStack;\n\n// community-modules/core/src/undoRedo/undoRedoService.ts\nvar UndoRedoService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.cellValueChanges = [];\n    this.activeCellEdit = null;\n    this.activeRowEdit = null;\n    this.isPasting = false;\n    this.isRangeInAction = false;\n    this.onCellValueChanged = (event) => {\n      const eventCell = { column: event.column, rowIndex: event.rowIndex, rowPinned: event.rowPinned };\n      const isCellEditing = this.activeCellEdit !== null && this.cellPositionUtils.equals(this.activeCellEdit, eventCell);\n      const isRowEditing = this.activeRowEdit !== null && this.rowPositionUtils.sameRow(this.activeRowEdit, eventCell);\n      const shouldCaptureAction = isCellEditing || isRowEditing || this.isPasting || this.isRangeInAction;\n      if (!shouldCaptureAction) {\n        return;\n      }\n      const { rowPinned, rowIndex, column, oldValue, value } = event;\n      const cellValueChange = {\n        rowPinned,\n        rowIndex,\n        columnId: column.getColId(),\n        newValue: value,\n        oldValue\n      };\n      this.cellValueChanges.push(cellValueChange);\n    };\n    this.clearStacks = () => {\n      this.undoStack.clear();\n      this.redoStack.clear();\n    };\n  }\n  init() {\n    if (!this.gos.get(\"undoRedoCellEditing\")) {\n      return;\n    }\n    const undoRedoLimit = this.gos.get(\"undoRedoCellEditingLimit\");\n    if (undoRedoLimit <= 0) {\n      return;\n    }\n    this.undoStack = new UndoRedoStack(undoRedoLimit);\n    this.redoStack = new UndoRedoStack(undoRedoLimit);\n    this.addRowEditingListeners();\n    this.addCellEditingListeners();\n    this.addPasteListeners();\n    this.addFillListeners();\n    this.addCellKeyListeners();\n    this.addManagedListener(this.eventService, Events.EVENT_CELL_VALUE_CHANGED, this.onCellValueChanged);\n    this.addManagedListener(this.eventService, Events.EVENT_MODEL_UPDATED, (e) => {\n      if (!e.keepUndoRedoStack) {\n        this.clearStacks();\n      }\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_GROUP_OPENED, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_MOVED, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PINNED, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VISIBLE, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_DRAG_END, this.clearStacks);\n    this.ctrlsService.whenReady((p) => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n    });\n  }\n  getCurrentUndoStackSize() {\n    return this.undoStack ? this.undoStack.getCurrentStackSize() : 0;\n  }\n  getCurrentRedoStackSize() {\n    return this.redoStack ? this.redoStack.getCurrentStackSize() : 0;\n  }\n  undo(source) {\n    const startEvent = {\n      type: Events.EVENT_UNDO_STARTED,\n      source\n    };\n    this.eventService.dispatchEvent(startEvent);\n    const operationPerformed = this.undoRedo(this.undoStack, this.redoStack, \"initialRange\", \"oldValue\", \"undo\");\n    const endEvent = {\n      type: Events.EVENT_UNDO_ENDED,\n      source,\n      operationPerformed\n    };\n    this.eventService.dispatchEvent(endEvent);\n  }\n  redo(source) {\n    const startEvent = {\n      type: Events.EVENT_REDO_STARTED,\n      source\n    };\n    this.eventService.dispatchEvent(startEvent);\n    const operationPerformed = this.undoRedo(this.redoStack, this.undoStack, \"finalRange\", \"newValue\", \"redo\");\n    const endEvent = {\n      type: Events.EVENT_REDO_ENDED,\n      source,\n      operationPerformed\n    };\n    this.eventService.dispatchEvent(endEvent);\n  }\n  undoRedo(undoRedoStack, opposingUndoRedoStack, rangeProperty, cellValueChangeProperty, source) {\n    if (!undoRedoStack) {\n      return false;\n    }\n    const undoRedoAction = undoRedoStack.pop();\n    if (!undoRedoAction || !undoRedoAction.cellValueChanges) {\n      return false;\n    }\n    this.processAction(undoRedoAction, (cellValueChange) => cellValueChange[cellValueChangeProperty], source);\n    if (undoRedoAction instanceof RangeUndoRedoAction) {\n      this.processRange(this.rangeService, undoRedoAction.ranges || [undoRedoAction[rangeProperty]]);\n    } else {\n      this.processCell(undoRedoAction.cellValueChanges);\n    }\n    opposingUndoRedoStack.push(undoRedoAction);\n    return true;\n  }\n  processAction(action, valueExtractor, source) {\n    action.cellValueChanges.forEach((cellValueChange) => {\n      const { rowIndex, rowPinned, columnId } = cellValueChange;\n      const rowPosition = { rowIndex, rowPinned };\n      const currentRow = this.rowPositionUtils.getRowNode(rowPosition);\n      if (!currentRow.displayed) {\n        return;\n      }\n      currentRow.setDataValue(columnId, valueExtractor(cellValueChange), source);\n    });\n  }\n  processRange(rangeService, ranges) {\n    let lastFocusedCell;\n    rangeService.removeAllCellRanges(true);\n    ranges.forEach((range, idx) => {\n      if (!range) {\n        return;\n      }\n      const startRow = range.startRow;\n      const endRow = range.endRow;\n      if (idx === ranges.length - 1) {\n        lastFocusedCell = {\n          rowPinned: startRow.rowPinned,\n          rowIndex: startRow.rowIndex,\n          columnId: range.startColumn.getColId()\n        };\n        this.setLastFocusedCell(lastFocusedCell);\n      }\n      const cellRangeParams = {\n        rowStartIndex: startRow.rowIndex,\n        rowStartPinned: startRow.rowPinned,\n        rowEndIndex: endRow.rowIndex,\n        rowEndPinned: endRow.rowPinned,\n        columnStart: range.startColumn,\n        columns: range.columns\n      };\n      rangeService.addCellRange(cellRangeParams);\n    });\n  }\n  processCell(cellValueChanges) {\n    const cellValueChange = cellValueChanges[0];\n    const { rowIndex, rowPinned } = cellValueChange;\n    const rowPosition = { rowIndex, rowPinned };\n    const row = this.rowPositionUtils.getRowNode(rowPosition);\n    const lastFocusedCell = {\n      rowPinned: cellValueChange.rowPinned,\n      rowIndex: row.rowIndex,\n      columnId: cellValueChange.columnId\n    };\n    this.setLastFocusedCell(lastFocusedCell, this.rangeService);\n  }\n  setLastFocusedCell(lastFocusedCell, rangeService) {\n    const { rowIndex, columnId, rowPinned } = lastFocusedCell;\n    const scrollFeature = this.gridBodyCtrl.getScrollFeature();\n    const column = this.columnModel.getGridColumn(columnId);\n    if (!column) {\n      return;\n    }\n    scrollFeature.ensureIndexVisible(rowIndex);\n    scrollFeature.ensureColumnVisible(column);\n    const cellPosition = { rowIndex, column, rowPinned };\n    this.focusService.setFocusedCell(__spreadProps(__spreadValues({}, cellPosition), { forceBrowserFocus: true }));\n    rangeService == null ? void 0 : rangeService.setRangeToCell(cellPosition);\n  }\n  addRowEditingListeners() {\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_EDITING_STARTED, (e) => {\n      this.activeRowEdit = { rowIndex: e.rowIndex, rowPinned: e.rowPinned };\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_EDITING_STOPPED, () => {\n      const action = new UndoRedoAction(this.cellValueChanges);\n      this.pushActionsToUndoStack(action);\n      this.activeRowEdit = null;\n    });\n  }\n  addCellEditingListeners() {\n    this.addManagedListener(this.eventService, Events.EVENT_CELL_EDITING_STARTED, (e) => {\n      this.activeCellEdit = { column: e.column, rowIndex: e.rowIndex, rowPinned: e.rowPinned };\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_CELL_EDITING_STOPPED, (e) => {\n      this.activeCellEdit = null;\n      const shouldPushAction = e.valueChanged && !this.activeRowEdit && !this.isPasting && !this.isRangeInAction;\n      if (shouldPushAction) {\n        const action = new UndoRedoAction(this.cellValueChanges);\n        this.pushActionsToUndoStack(action);\n      }\n    });\n  }\n  addPasteListeners() {\n    this.addManagedListener(this.eventService, Events.EVENT_PASTE_START, () => {\n      this.isPasting = true;\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_PASTE_END, () => {\n      const action = new UndoRedoAction(this.cellValueChanges);\n      this.pushActionsToUndoStack(action);\n      this.isPasting = false;\n    });\n  }\n  addFillListeners() {\n    this.addManagedListener(this.eventService, Events.EVENT_FILL_START, () => {\n      this.isRangeInAction = true;\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_FILL_END, (event) => {\n      const action = new RangeUndoRedoAction(this.cellValueChanges, event.initialRange, event.finalRange);\n      this.pushActionsToUndoStack(action);\n      this.isRangeInAction = false;\n    });\n  }\n  addCellKeyListeners() {\n    this.addManagedListener(this.eventService, Events.EVENT_KEY_SHORTCUT_CHANGED_CELL_START, () => {\n      this.isRangeInAction = true;\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_KEY_SHORTCUT_CHANGED_CELL_END, () => {\n      let action;\n      if (this.rangeService && this.gos.get(\"enableRangeSelection\")) {\n        action = new RangeUndoRedoAction(this.cellValueChanges, void 0, void 0, [...this.rangeService.getCellRanges()]);\n      } else {\n        action = new UndoRedoAction(this.cellValueChanges);\n      }\n      this.pushActionsToUndoStack(action);\n      this.isRangeInAction = false;\n    });\n  }\n  pushActionsToUndoStack(action) {\n    this.undoStack.push(action);\n    this.cellValueChanges = [];\n    this.redoStack.clear();\n  }\n};\n__decorateClass([\n  Autowired(\"focusService\")\n], UndoRedoService.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], UndoRedoService.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"cellPositionUtils\")\n], UndoRedoService.prototype, \"cellPositionUtils\", 2);\n__decorateClass([\n  Autowired(\"rowPositionUtils\")\n], UndoRedoService.prototype, \"rowPositionUtils\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], UndoRedoService.prototype, \"columnModel\", 2);\n__decorateClass([\n  Optional(\"rangeService\")\n], UndoRedoService.prototype, \"rangeService\", 2);\n__decorateClass([\n  PostConstruct\n], UndoRedoService.prototype, \"init\", 1);\nUndoRedoService = __decorateClass([\n  Bean(\"undoRedoService\")\n], UndoRedoService);\n\n// community-modules/core/src/headerRendering/common/headerPosition.ts\nvar HeaderPositionUtils = class extends BeanStub {\n  findHeader(focusedHeader, direction) {\n    let nextColumn;\n    let getColMethod;\n    if (focusedHeader.column instanceof ColumnGroup) {\n      nextColumn = this.columnModel.getDisplayedGroupAtDirection(focusedHeader.column, direction);\n    } else {\n      getColMethod = `getDisplayedCol${direction}`;\n      nextColumn = this.columnModel[getColMethod](focusedHeader.column);\n    }\n    if (!nextColumn) {\n      return;\n    }\n    let { headerRowIndex } = focusedHeader;\n    if (this.getHeaderRowType(headerRowIndex) !== \"filter\" /* FLOATING_FILTER */) {\n      const columnsInPath = [nextColumn];\n      while (nextColumn.getParent()) {\n        nextColumn = nextColumn.getParent();\n        columnsInPath.push(nextColumn);\n      }\n      nextColumn = columnsInPath[columnsInPath.length - 1 - headerRowIndex];\n    }\n    const { column, headerRowIndex: indexToFocus } = this.getHeaderIndexToFocus(nextColumn, headerRowIndex);\n    return {\n      column,\n      headerRowIndex: indexToFocus\n    };\n  }\n  getHeaderIndexToFocus(column, currentIndex) {\n    let nextColumn;\n    if (column instanceof ColumnGroup && this.isAnyChildSpanningHeaderHeight(column) && column.isPadding()) {\n      const targetColumn = column;\n      nextColumn = targetColumn.getLeafColumns()[0];\n      let col = nextColumn;\n      while (col !== targetColumn) {\n        currentIndex++;\n        col = col.getParent();\n      }\n    }\n    return {\n      column: nextColumn || column,\n      headerRowIndex: currentIndex\n    };\n  }\n  isAnyChildSpanningHeaderHeight(columnGroup) {\n    if (!columnGroup) {\n      return false;\n    }\n    return columnGroup.getLeafColumns().some((col) => col.isSpanHeaderHeight());\n  }\n  getColumnVisibleParent(currentColumn, currentIndex) {\n    const currentRowType = this.getHeaderRowType(currentIndex);\n    const isFloatingFilter = currentRowType === \"filter\" /* FLOATING_FILTER */;\n    const isColumn = currentRowType === \"column\" /* COLUMN */;\n    let nextFocusColumn = isFloatingFilter ? currentColumn : currentColumn.getParent();\n    let nextRow = currentIndex - 1;\n    let headerRowIndexWithoutSpan = nextRow;\n    if (isColumn && this.isAnyChildSpanningHeaderHeight(currentColumn.getParent())) {\n      while (nextFocusColumn && nextFocusColumn.isPadding()) {\n        nextFocusColumn = nextFocusColumn.getParent();\n        nextRow--;\n      }\n      headerRowIndexWithoutSpan = nextRow;\n      if (nextRow < 0) {\n        nextFocusColumn = currentColumn;\n        nextRow = currentIndex;\n        headerRowIndexWithoutSpan = void 0;\n      }\n    }\n    return { column: nextFocusColumn, headerRowIndex: nextRow, headerRowIndexWithoutSpan };\n  }\n  getColumnVisibleChild(column, currentIndex, direction = \"After\") {\n    const currentRowType = this.getHeaderRowType(currentIndex);\n    let nextFocusColumn = column;\n    let nextRow = currentIndex + 1;\n    let headerRowIndexWithoutSpan = nextRow;\n    if (currentRowType === \"group\" /* COLUMN_GROUP */) {\n      const leafColumns = column.getDisplayedLeafColumns();\n      const leafColumn = direction === \"After\" ? leafColumns[0] : last(leafColumns);\n      const columnsInTheWay = [];\n      let currentColumn = leafColumn;\n      while (currentColumn.getParent() !== column) {\n        currentColumn = currentColumn.getParent();\n        columnsInTheWay.push(currentColumn);\n      }\n      nextFocusColumn = leafColumn;\n      if (leafColumn.isSpanHeaderHeight()) {\n        for (let i = columnsInTheWay.length - 1; i >= 0; i--) {\n          const colToFocus = columnsInTheWay[i];\n          if (!colToFocus.isPadding()) {\n            nextFocusColumn = colToFocus;\n            break;\n          }\n          nextRow++;\n        }\n      } else {\n        nextFocusColumn = last(columnsInTheWay);\n        if (!nextFocusColumn) {\n          nextFocusColumn = leafColumn;\n        }\n      }\n    }\n    return { column: nextFocusColumn, headerRowIndex: nextRow, headerRowIndexWithoutSpan };\n  }\n  getHeaderRowType(rowIndex) {\n    const centerHeaderContainer = this.ctrlsService.getHeaderRowContainerCtrl();\n    if (centerHeaderContainer) {\n      return centerHeaderContainer.getRowType(rowIndex);\n    }\n  }\n  findColAtEdgeForHeaderRow(level, position) {\n    const displayedColumns = this.columnModel.getAllDisplayedColumns();\n    const column = displayedColumns[position === \"start\" ? 0 : displayedColumns.length - 1];\n    if (!column) {\n      return;\n    }\n    const childContainer = this.ctrlsService.getHeaderRowContainerCtrl(column.getPinned());\n    const type = childContainer.getRowType(level);\n    if (type == \"group\" /* COLUMN_GROUP */) {\n      const columnGroup = this.columnModel.getColumnGroupAtLevel(column, level);\n      return {\n        headerRowIndex: level,\n        column: columnGroup\n      };\n    }\n    return {\n      // if type==null, means the header level didn't exist\n      headerRowIndex: type == null ? -1 : level,\n      column\n    };\n  }\n};\n__decorateClass([\n  Autowired(\"columnModel\")\n], HeaderPositionUtils.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], HeaderPositionUtils.prototype, \"ctrlsService\", 2);\nHeaderPositionUtils = __decorateClass([\n  Bean(\"headerPositionUtils\")\n], HeaderPositionUtils);\n\n// community-modules/core/src/columns/columnDefFactory.ts\nvar ColumnDefFactory = class {\n  buildColumnDefs(cols, rowGroupColumns, pivotColumns) {\n    const res = [];\n    const colGroupDefs = {};\n    cols.forEach((col) => {\n      const colDef = this.createDefFromColumn(col, rowGroupColumns, pivotColumns);\n      let addToResult = true;\n      let childDef = colDef;\n      let pointer = col.getOriginalParent();\n      let lastPointer = null;\n      while (pointer) {\n        let parentDef = null;\n        if (pointer.isPadding()) {\n          pointer = pointer.getOriginalParent();\n          continue;\n        }\n        const existingParentDef = colGroupDefs[pointer.getGroupId()];\n        if (existingParentDef) {\n          existingParentDef.children.push(childDef);\n          addToResult = false;\n          break;\n        }\n        parentDef = this.createDefFromGroup(pointer);\n        if (parentDef) {\n          parentDef.children = [childDef];\n          colGroupDefs[parentDef.groupId] = parentDef;\n          childDef = parentDef;\n          pointer = pointer.getOriginalParent();\n        }\n        if (pointer != null && lastPointer === pointer) {\n          addToResult = false;\n          break;\n        }\n        lastPointer = pointer;\n      }\n      if (addToResult) {\n        res.push(childDef);\n      }\n    });\n    return res;\n  }\n  createDefFromGroup(group) {\n    const defCloned = deepCloneDefinition(group.getColGroupDef(), [\"children\"]);\n    if (defCloned) {\n      defCloned.groupId = group.getGroupId();\n    }\n    return defCloned;\n  }\n  createDefFromColumn(col, rowGroupColumns, pivotColumns) {\n    const colDefCloned = deepCloneDefinition(col.getColDef());\n    colDefCloned.colId = col.getColId();\n    colDefCloned.width = col.getActualWidth();\n    colDefCloned.rowGroup = col.isRowGroupActive();\n    colDefCloned.rowGroupIndex = col.isRowGroupActive() ? rowGroupColumns.indexOf(col) : null;\n    colDefCloned.pivot = col.isPivotActive();\n    colDefCloned.pivotIndex = col.isPivotActive() ? pivotColumns.indexOf(col) : null;\n    colDefCloned.aggFunc = col.isValueActive() ? col.getAggFunc() : null;\n    colDefCloned.hide = col.isVisible() ? void 0 : true;\n    colDefCloned.pinned = col.isPinned() ? col.getPinned() : null;\n    colDefCloned.sort = col.getSort() ? col.getSort() : null;\n    colDefCloned.sortIndex = col.getSortIndex() != null ? col.getSortIndex() : null;\n    return colDefCloned;\n  }\n};\nColumnDefFactory = __decorateClass([\n  Bean(\"columnDefFactory\")\n], ColumnDefFactory);\n\n// community-modules/core/src/rendering/row/rowCssClassCalculator.ts\nvar RowCssClassCalculator = class {\n  getInitialRowClasses(params) {\n    const classes = [];\n    if (exists(params.extraCssClass)) {\n      classes.push(params.extraCssClass);\n    }\n    classes.push(\"ag-row\");\n    classes.push(params.rowFocused ? \"ag-row-focus\" : \"ag-row-no-focus\");\n    if (params.fadeRowIn) {\n      classes.push(\"ag-opacity-zero\");\n    }\n    classes.push(params.rowIsEven ? \"ag-row-even\" : \"ag-row-odd\");\n    if (params.rowNode.isRowPinned()) {\n      classes.push(\"ag-row-pinned\");\n    }\n    if (params.rowNode.isSelected()) {\n      classes.push(\"ag-row-selected\");\n    }\n    if (params.rowNode.footer) {\n      classes.push(\"ag-row-footer\");\n    }\n    classes.push(\"ag-row-level-\" + params.rowLevel);\n    if (params.rowNode.stub) {\n      classes.push(\"ag-row-loading\");\n    }\n    if (params.fullWidthRow) {\n      classes.push(\"ag-full-width-row\");\n    }\n    if (params.expandable) {\n      classes.push(\"ag-row-group\");\n      classes.push(params.rowNode.expanded ? \"ag-row-group-expanded\" : \"ag-row-group-contracted\");\n    }\n    if (params.rowNode.dragging) {\n      classes.push(\"ag-row-dragging\");\n    }\n    pushAll(classes, this.processClassesFromGridOptions(params.rowNode));\n    pushAll(classes, this.preProcessRowClassRules(params.rowNode));\n    classes.push(params.printLayout ? \"ag-row-position-relative\" : \"ag-row-position-absolute\");\n    if (params.firstRowOnPage) {\n      classes.push(\"ag-row-first\");\n    }\n    if (params.lastRowOnPage) {\n      classes.push(\"ag-row-last\");\n    }\n    if (params.fullWidthRow) {\n      if (params.pinned === \"left\") {\n        classes.push(\"ag-cell-last-left-pinned\");\n      }\n      if (params.pinned === \"right\") {\n        classes.push(\"ag-cell-first-right-pinned\");\n      }\n    }\n    return classes;\n  }\n  processClassesFromGridOptions(rowNode) {\n    const res = [];\n    const process = (rowCls) => {\n      if (typeof rowCls === \"string\") {\n        res.push(rowCls);\n      } else if (Array.isArray(rowCls)) {\n        rowCls.forEach((e) => res.push(e));\n      }\n    };\n    const rowClass = this.gos.get(\"rowClass\");\n    if (rowClass) {\n      if (typeof rowClass === \"function\") {\n        console.warn(\"AG Grid: rowClass should not be a function, please use getRowClass instead\");\n        return [];\n      }\n      process(rowClass);\n    }\n    const rowClassFunc = this.gos.getCallback(\"getRowClass\");\n    if (rowClassFunc) {\n      const params = {\n        data: rowNode.data,\n        node: rowNode,\n        rowIndex: rowNode.rowIndex\n      };\n      const rowClassFuncResult = rowClassFunc(params);\n      process(rowClassFuncResult);\n    }\n    return res;\n  }\n  preProcessRowClassRules(rowNode) {\n    const res = [];\n    this.processRowClassRules(\n      rowNode,\n      (className) => {\n        res.push(className);\n      },\n      (className) => {\n      }\n    );\n    return res;\n  }\n  processRowClassRules(rowNode, onApplicableClass, onNotApplicableClass) {\n    const rowClassParams = this.gos.addGridCommonParams({\n      data: rowNode.data,\n      node: rowNode,\n      rowIndex: rowNode.rowIndex\n    });\n    this.stylingService.processClassRules(\n      void 0,\n      this.gos.get(\"rowClassRules\"),\n      rowClassParams,\n      onApplicableClass,\n      onNotApplicableClass\n    );\n  }\n  calculateRowLevel(rowNode) {\n    if (rowNode.group) {\n      return rowNode.level;\n    }\n    return rowNode.parent ? rowNode.parent.level + 1 : 0;\n  }\n};\n__decorateClass([\n  Autowired(\"stylingService\")\n], RowCssClassCalculator.prototype, \"stylingService\", 2);\n__decorateClass([\n  Autowired(\"gridOptionsService\")\n], RowCssClassCalculator.prototype, \"gos\", 2);\nRowCssClassCalculator = __decorateClass([\n  Bean(\"rowCssClassCalculator\")\n], RowCssClassCalculator);\n\n// community-modules/core/src/rowNodes/rowNodeSorter.ts\nvar RowNodeSorter = class extends BeanStub {\n  init() {\n    this.isAccentedSort = this.gos.get(\"accentedSort\");\n    this.primaryColumnsSortGroups = this.gos.isColumnsSortingCoupledToGroup();\n    this.addManagedPropertyListener(\"accentedSort\", (propChange) => this.isAccentedSort = propChange.currentValue);\n    this.addManagedPropertyListener(\"autoGroupColumnDef\", () => this.primaryColumnsSortGroups = this.gos.isColumnsSortingCoupledToGroup());\n  }\n  doFullSort(rowNodes, sortOptions) {\n    const mapper = (rowNode, pos) => ({ currentPos: pos, rowNode });\n    const sortedRowNodes = rowNodes.map(mapper);\n    sortedRowNodes.sort(this.compareRowNodes.bind(this, sortOptions));\n    return sortedRowNodes.map((item) => item.rowNode);\n  }\n  compareRowNodes(sortOptions, sortedNodeA, sortedNodeB) {\n    const nodeA = sortedNodeA.rowNode;\n    const nodeB = sortedNodeB.rowNode;\n    for (let i = 0, len = sortOptions.length; i < len; i++) {\n      const sortOption = sortOptions[i];\n      const isDescending = sortOption.sort === \"desc\";\n      const valueA = this.getValue(nodeA, sortOption.column);\n      const valueB = this.getValue(nodeB, sortOption.column);\n      let comparatorResult;\n      const providedComparator = this.getComparator(sortOption, nodeA);\n      if (providedComparator) {\n        comparatorResult = providedComparator(valueA, valueB, nodeA, nodeB, isDescending);\n      } else {\n        comparatorResult = _.defaultComparator(valueA, valueB, this.isAccentedSort);\n      }\n      const validResult = !isNaN(comparatorResult);\n      if (validResult && comparatorResult !== 0) {\n        return sortOption.sort === \"asc\" ? comparatorResult : comparatorResult * -1;\n      }\n    }\n    return sortedNodeA.currentPos - sortedNodeB.currentPos;\n  }\n  getComparator(sortOption, rowNode) {\n    const column = sortOption.column;\n    const comparatorOnCol = column.getColDef().comparator;\n    if (comparatorOnCol != null) {\n      return comparatorOnCol;\n    }\n    if (!column.getColDef().showRowGroup) {\n      return;\n    }\n    const groupLeafField = !rowNode.group && column.getColDef().field;\n    if (!groupLeafField) {\n      return;\n    }\n    const primaryColumn = this.columnModel.getPrimaryColumn(groupLeafField);\n    if (!primaryColumn) {\n      return;\n    }\n    return primaryColumn.getColDef().comparator;\n  }\n  getValue(node, column) {\n    var _a, _b;\n    if (!this.primaryColumnsSortGroups) {\n      return this.valueService.getValue(column, node, false, false);\n    }\n    const isNodeGroupedAtLevel = node.rowGroupColumn === column;\n    if (isNodeGroupedAtLevel) {\n      const isGroupRows = this.gos.isGroupUseEntireRow(this.columnModel.isPivotActive());\n      if (isGroupRows) {\n        const leafChild = (_a = node.allLeafChildren) == null ? void 0 : _a[0];\n        if (leafChild) {\n          return this.valueService.getValue(column, leafChild, false, false);\n        }\n        return void 0;\n      }\n      const displayCol = this.columnModel.getGroupDisplayColumnForGroup(column.getId());\n      if (!displayCol) {\n        return void 0;\n      }\n      return (_b = node.groupData) == null ? void 0 : _b[displayCol.getId()];\n    }\n    if (node.group && column.getColDef().showRowGroup) {\n      return void 0;\n    }\n    return this.valueService.getValue(column, node, false, false);\n  }\n};\n__decorateClass([\n  Autowired(\"valueService\")\n], RowNodeSorter.prototype, \"valueService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], RowNodeSorter.prototype, \"columnModel\", 2);\n__decorateClass([\n  PostConstruct\n], RowNodeSorter.prototype, \"init\", 1);\nRowNodeSorter = __decorateClass([\n  Bean(\"rowNodeSorter\")\n], RowNodeSorter);\n\n// community-modules/core/src/ctrlsService.ts\nvar CtrlsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.params = {};\n    this.ready = false;\n    this.readyCallbacks = [];\n  }\n  checkReady() {\n    const params = this.params;\n    this.ready = params.gridCtrl != null && params.gridBodyCtrl != null && params.center != null && params.left != null && params.right != null && params.bottomCenter != null && params.bottomLeft != null && params.bottomRight != null && params.topCenter != null && params.topLeft != null && params.topRight != null && params.stickyTopCenter != null && params.stickyTopLeft != null && params.stickyTopRight != null && params.stickyBottomCenter != null && params.stickyBottomLeft != null && params.stickyBottomRight != null && params.centerHeader != null && params.leftHeader != null && params.rightHeader != null && params.fakeHScrollComp != null && params.fakeVScrollComp != null && params.gridHeaderCtrl != null;\n    if (this.ready) {\n      this.readyCallbacks.forEach((c) => c(params));\n      this.readyCallbacks.length = 0;\n    }\n  }\n  whenReady(callback) {\n    if (this.ready) {\n      callback(this.params);\n    } else {\n      this.readyCallbacks.push(callback);\n    }\n  }\n  register(ctrlType, ctrl) {\n    this.params[ctrlType] = ctrl;\n    this.checkReady();\n  }\n  registerHeaderContainer(ctrl, pinned) {\n    switch (pinned) {\n      case \"left\":\n        this.params.leftHeader = ctrl;\n        break;\n      case \"right\":\n        this.params.rightHeader = ctrl;\n        break;\n      default:\n        this.params.centerHeader = ctrl;\n        break;\n    }\n    this.checkReady();\n  }\n  get(ctrlType) {\n    return this.params[ctrlType];\n  }\n  getParams() {\n    return this.params;\n  }\n  getGridBodyCtrl() {\n    return this.params.gridBodyCtrl;\n  }\n  getHeaderRowContainerCtrls() {\n    return [this.params.leftHeader, this.params.rightHeader, this.params.centerHeader];\n  }\n  getHeaderRowContainerCtrl(pinned) {\n    switch (pinned) {\n      case \"left\":\n        return this.params.leftHeader;\n      case \"right\":\n        return this.params.rightHeader;\n      default:\n        return this.params.centerHeader;\n    }\n  }\n};\nCtrlsService.NAME = \"ctrlsService\";\nCtrlsService = __decorateClass([\n  Bean(CtrlsService.NAME)\n], CtrlsService);\n\n// community-modules/core/src/ctrlsFactory.ts\nvar CtrlsFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.registry = {};\n  }\n  register(meta) {\n    this.registry[meta.controllerName] = meta.controllerClass;\n  }\n  getInstance(name) {\n    const ControllerClass = this.registry[name];\n    if (ControllerClass == null) {\n      return void 0;\n    }\n    return new ControllerClass();\n  }\n};\nCtrlsFactory = __decorateClass([\n  Bean(\"ctrlsFactory\")\n], CtrlsFactory);\n\n// community-modules/core/src/gridBodyComp/abstractFakeScrollComp.ts\nvar AbstractFakeScrollComp = class extends Component {\n  constructor(template, direction) {\n    super(template);\n    this.direction = direction;\n    this.hideTimeout = null;\n  }\n  postConstruct() {\n    this.addManagedListener(this.eventService, Events.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this));\n    this.onScrollVisibilityChanged();\n    this.addOrRemoveCssClass(\"ag-apple-scrollbar\", isMacOsUserAgent() || isIOSUserAgent());\n  }\n  initialiseInvisibleScrollbar() {\n    if (this.invisibleScrollbar !== void 0) {\n      return;\n    }\n    this.invisibleScrollbar = isInvisibleScrollbar();\n    if (this.invisibleScrollbar) {\n      this.hideAndShowInvisibleScrollAsNeeded();\n      this.addActiveListenerToggles();\n    }\n  }\n  addActiveListenerToggles() {\n    const activateEvents = [\"mouseenter\", \"mousedown\", \"touchstart\"];\n    const deactivateEvents = [\"mouseleave\", \"touchend\"];\n    const eGui = this.getGui();\n    activateEvents.forEach(\n      (eventName) => this.addManagedListener(\n        eGui,\n        eventName,\n        () => this.addOrRemoveCssClass(\"ag-scrollbar-active\", true)\n      )\n    );\n    deactivateEvents.forEach(\n      (eventName) => this.addManagedListener(\n        eGui,\n        eventName,\n        () => this.addOrRemoveCssClass(\"ag-scrollbar-active\", false)\n      )\n    );\n  }\n  onScrollVisibilityChanged() {\n    if (this.invisibleScrollbar === void 0) {\n      this.initialiseInvisibleScrollbar();\n    }\n    this.animationFrameService.requestAnimationFrame(() => this.setScrollVisible());\n  }\n  hideAndShowInvisibleScrollAsNeeded() {\n    this.addManagedListener(this.eventService, Events.EVENT_BODY_SCROLL, (params) => {\n      if (params.direction === this.direction) {\n        if (this.hideTimeout !== null) {\n          window.clearTimeout(this.hideTimeout);\n          this.hideTimeout = null;\n        }\n        this.addOrRemoveCssClass(\"ag-scrollbar-scrolling\", true);\n      }\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_BODY_SCROLL_END, () => {\n      this.hideTimeout = window.setTimeout(() => {\n        this.addOrRemoveCssClass(\"ag-scrollbar-scrolling\", false);\n        this.hideTimeout = null;\n      }, 400);\n    });\n  }\n  attemptSettingScrollPosition(value) {\n    const viewport = this.getViewport();\n    waitUntil(() => isVisible(viewport), () => this.setScrollPosition(value), 100);\n  }\n  getViewport() {\n    return this.eViewport;\n  }\n  getContainer() {\n    return this.eContainer;\n  }\n  onScrollCallback(fn) {\n    this.addManagedListener(this.getViewport(), \"scroll\", fn);\n  }\n};\n__decorateClass([\n  RefSelector(\"eViewport\")\n], AbstractFakeScrollComp.prototype, \"eViewport\", 2);\n__decorateClass([\n  RefSelector(\"eContainer\")\n], AbstractFakeScrollComp.prototype, \"eContainer\", 2);\n__decorateClass([\n  Autowired(\"scrollVisibleService\")\n], AbstractFakeScrollComp.prototype, \"scrollVisibleService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], AbstractFakeScrollComp.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"animationFrameService\")\n], AbstractFakeScrollComp.prototype, \"animationFrameService\", 2);\n\n// community-modules/core/src/gridBodyComp/fakeHScrollComp.ts\nvar _FakeHScrollComp = class _FakeHScrollComp extends AbstractFakeScrollComp {\n  constructor() {\n    super(_FakeHScrollComp.TEMPLATE, \"horizontal\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    const spacerWidthsListener = this.setFakeHScrollSpacerWidths.bind(this);\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, spacerWidthsListener);\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, spacerWidthsListener);\n    this.addManagedListener(this.eventService, Events.EVENT_PINNED_ROW_DATA_CHANGED, this.onPinnedRowDataChanged.bind(this));\n    this.addManagedPropertyListener(\"domLayout\", spacerWidthsListener);\n    this.ctrlsService.register(\"fakeHScrollComp\", this);\n    this.createManagedBean(new CenterWidthFeature((width) => this.eContainer.style.width = `${width}px`));\n    this.addManagedPropertyListeners([\"suppressHorizontalScroll\"], this.onScrollVisibilityChanged.bind(this));\n  }\n  initialiseInvisibleScrollbar() {\n    if (this.invisibleScrollbar !== void 0) {\n      return;\n    }\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    super.initialiseInvisibleScrollbar();\n    if (this.invisibleScrollbar) {\n      this.refreshCompBottom();\n    }\n  }\n  onPinnedRowDataChanged() {\n    this.refreshCompBottom();\n  }\n  refreshCompBottom() {\n    if (!this.invisibleScrollbar) {\n      return;\n    }\n    const bottomPinnedHeight = this.pinnedRowModel.getPinnedBottomTotalHeight();\n    this.getGui().style.bottom = `${bottomPinnedHeight}px`;\n  }\n  onScrollVisibilityChanged() {\n    super.onScrollVisibilityChanged();\n    this.setFakeHScrollSpacerWidths();\n  }\n  setFakeHScrollSpacerWidths() {\n    const vScrollShowing = this.scrollVisibleService.isVerticalScrollShowing();\n    let rightSpacing = this.columnModel.getDisplayedColumnsRightWidth();\n    const scrollOnRight = !this.enableRtl && vScrollShowing;\n    const scrollbarWidth = this.gos.getScrollbarWidth();\n    if (scrollOnRight) {\n      rightSpacing += scrollbarWidth;\n    }\n    setFixedWidth(this.eRightSpacer, rightSpacing);\n    this.eRightSpacer.classList.toggle(\"ag-scroller-corner\", rightSpacing <= scrollbarWidth);\n    let leftSpacing = this.columnModel.getDisplayedColumnsLeftWidth();\n    const scrollOnLeft = this.enableRtl && vScrollShowing;\n    if (scrollOnLeft) {\n      leftSpacing += scrollbarWidth;\n    }\n    setFixedWidth(this.eLeftSpacer, leftSpacing);\n    this.eLeftSpacer.classList.toggle(\"ag-scroller-corner\", leftSpacing <= scrollbarWidth);\n  }\n  setScrollVisible() {\n    const hScrollShowing = this.scrollVisibleService.isHorizontalScrollShowing();\n    const invisibleScrollbar2 = this.invisibleScrollbar;\n    const isSuppressHorizontalScroll = this.gos.get(\"suppressHorizontalScroll\");\n    const scrollbarWidth = hScrollShowing ? this.gos.getScrollbarWidth() || 0 : 0;\n    const adjustedScrollbarWidth = scrollbarWidth === 0 && invisibleScrollbar2 ? 16 : scrollbarWidth;\n    const scrollContainerSize = !isSuppressHorizontalScroll ? adjustedScrollbarWidth : 0;\n    this.addOrRemoveCssClass(\"ag-scrollbar-invisible\", invisibleScrollbar2);\n    setFixedHeight(this.getGui(), scrollContainerSize);\n    setFixedHeight(this.eViewport, scrollContainerSize);\n    setFixedHeight(this.eContainer, scrollContainerSize);\n    this.setDisplayed(hScrollShowing, { skipAriaHidden: true });\n  }\n  getScrollPosition() {\n    return getScrollLeft(this.getViewport(), this.enableRtl);\n  }\n  setScrollPosition(value) {\n    if (!isVisible(this.getViewport())) {\n      this.attemptSettingScrollPosition(value);\n    }\n    setScrollLeft(this.getViewport(), value, this.enableRtl);\n  }\n};\n_FakeHScrollComp.TEMPLATE = /* html */\n`<div class=\"ag-body-horizontal-scroll\" aria-hidden=\"true\">\n            <div class=\"ag-horizontal-left-spacer\" ref=\"eLeftSpacer\"></div>\n            <div class=\"ag-body-horizontal-scroll-viewport\" ref=\"eViewport\">\n                <div class=\"ag-body-horizontal-scroll-container\" ref=\"eContainer\"></div>\n            </div>\n            <div class=\"ag-horizontal-right-spacer\" ref=\"eRightSpacer\"></div>\n        </div>`;\n__decorateClass([\n  RefSelector(\"eLeftSpacer\")\n], _FakeHScrollComp.prototype, \"eLeftSpacer\", 2);\n__decorateClass([\n  RefSelector(\"eRightSpacer\")\n], _FakeHScrollComp.prototype, \"eRightSpacer\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], _FakeHScrollComp.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"pinnedRowModel\")\n], _FakeHScrollComp.prototype, \"pinnedRowModel\", 2);\n__decorateClass([\n  PostConstruct\n], _FakeHScrollComp.prototype, \"postConstruct\", 1);\nvar FakeHScrollComp = _FakeHScrollComp;\n\n// community-modules/core/src/gridBodyComp/pinnedWidthService.ts\nvar PinnedWidthService = class extends BeanStub {\n  postConstruct() {\n    const listener = this.checkContainerWidths.bind(this);\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, listener);\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, listener);\n    this.addManagedPropertyListener(\"domLayout\", listener);\n  }\n  checkContainerWidths() {\n    const printLayout = this.gos.isDomLayout(\"print\");\n    const newLeftWidth = printLayout ? 0 : this.columnModel.getDisplayedColumnsLeftWidth();\n    const newRightWidth = printLayout ? 0 : this.columnModel.getDisplayedColumnsRightWidth();\n    if (newLeftWidth != this.leftWidth) {\n      this.leftWidth = newLeftWidth;\n      this.eventService.dispatchEvent({ type: Events.EVENT_LEFT_PINNED_WIDTH_CHANGED });\n    }\n    if (newRightWidth != this.rightWidth) {\n      this.rightWidth = newRightWidth;\n      this.eventService.dispatchEvent({ type: Events.EVENT_RIGHT_PINNED_WIDTH_CHANGED });\n    }\n  }\n  getPinnedRightWidth() {\n    return this.rightWidth;\n  }\n  getPinnedLeftWidth() {\n    return this.leftWidth;\n  }\n};\n__decorateClass([\n  Autowired(\"columnModel\")\n], PinnedWidthService.prototype, \"columnModel\", 2);\n__decorateClass([\n  PostConstruct\n], PinnedWidthService.prototype, \"postConstruct\", 1);\nPinnedWidthService = __decorateClass([\n  Bean(\"pinnedWidthService\")\n], PinnedWidthService);\n\n// community-modules/core/src/entities/rowNodeEventThrottle.ts\nvar RowNodeEventThrottle = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.events = [];\n  }\n  postConstruct() {\n    if (this.rowModel.getType() == \"clientSide\") {\n      this.clientSideRowModel = this.rowModel;\n    }\n  }\n  // because the user can call rowNode.setExpanded() many times in one VM turn,\n  // we throttle the calls to ClientSideRowModel using animationFrameService. this means for 100\n  // row nodes getting expanded, we only update the CSRM once, and then we fire all events after\n  // CSRM has updated.\n  //\n  // if we did not do this, then the user could call setExpanded on 100+ rows, causing the grid\n  // to re-render 100+ times, which would be a performance lag.\n  //\n  // we use animationFrameService\n  // rather than _.debounce() so this will get done if anyone flushes the animationFrameService\n  // (eg user calls api.ensureRowVisible(), which in turn flushes ).\n  dispatchExpanded(event, forceSync) {\n    if (this.clientSideRowModel == null) {\n      this.eventService.dispatchEvent(event);\n      return;\n    }\n    this.events.push(event);\n    const func = () => {\n      if (this.clientSideRowModel) {\n        this.clientSideRowModel.onRowGroupOpened();\n      }\n      this.events.forEach((e) => this.eventService.dispatchEvent(e));\n      this.events = [];\n    };\n    if (forceSync) {\n      func();\n    } else {\n      if (this.dispatchExpandedDebounced == null) {\n        this.dispatchExpandedDebounced = this.animationFrameService.debounce(func);\n      }\n      this.dispatchExpandedDebounced();\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"animationFrameService\")\n], RowNodeEventThrottle.prototype, \"animationFrameService\", 2);\n__decorateClass([\n  Autowired(\"rowModel\")\n], RowNodeEventThrottle.prototype, \"rowModel\", 2);\n__decorateClass([\n  PostConstruct\n], RowNodeEventThrottle.prototype, \"postConstruct\", 1);\nRowNodeEventThrottle = __decorateClass([\n  Bean(\"rowNodeEventThrottle\")\n], RowNodeEventThrottle);\n\n// community-modules/core/src/validation/rules/colDefValidations.ts\nvar COLUMN_DEFINITION_DEPRECATIONS = {\n  columnsMenuParams: { version: \"31.1\", message: \"Use `columnChooserParams` instead.\" },\n  suppressMenu: { version: \"31.1\", message: \"Use `suppressHeaderMenuButton` instead.\" },\n  suppressCellFlash: { version: \"31.2\", message: \"Use `enableCellChangeFlash={false}` in the ColDef\" },\n  dndSource: { version: \"31.2\", message: \"This feature has been replaced by `Row Dragging to an External DropZone`.\" },\n  dndSourceOnRowDrag: { version: \"31.2\", message: \"This feature has been replaced by `Row Dragging to an External DropZone`.\" }\n};\nvar CSRM_REQUIRES_ROW_GROUP_MODULE = (_options, gridOptions) => {\n  var _a;\n  if (((_a = gridOptions.rowModelType) != null ? _a : \"clientSide\") === \"clientSide\") {\n    return { module: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */ };\n  }\n  return null;\n};\nvar COLUMN_DEFINITION_VALIDATIONS = {\n  // supported on all row models, but need module for client side.\n  enableRowGroup: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  rowGroup: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  rowGroupIndex: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  enablePivot: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  enableValue: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  pivot: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  pivotIndex: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  aggFunc: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  cellEditor: (options) => {\n    if (options.cellEditor === \"agRichSelect\" || options.cellEditor === \"agRichSelectCellEditor\") {\n      return { module: \"@ag-grid-enterprise/rich-select\" /* RichSelectModule */ };\n    }\n    return null;\n  },\n  menuTabs: (options) => {\n    var _a;\n    const enterpriseMenuTabs = [\"columnsMenuTab\", \"generalMenuTab\"];\n    if ((_a = options.menuTabs) == null ? void 0 : _a.some((tab) => enterpriseMenuTabs.includes(tab))) {\n      return {\n        module: \"@ag-grid-enterprise/menu\" /* MenuModule */\n      };\n    }\n    return null;\n  },\n  columnsMenuParams: {\n    module: [\"@ag-grid-enterprise/menu\" /* MenuModule */, \"@ag-grid-enterprise/column-tool-panel\" /* ColumnsToolPanelModule */]\n  },\n  columnChooserParams: {\n    module: [\"@ag-grid-enterprise/menu\" /* MenuModule */, \"@ag-grid-enterprise/column-tool-panel\" /* ColumnsToolPanelModule */]\n  },\n  headerCheckboxSelection: {\n    supportedRowModels: [\"clientSide\", \"serverSide\"],\n    dependencies: (_options, { rowSelection }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelection is only supported with rowSelection=multiple\"\n  },\n  headerCheckboxSelectionFilteredOnly: {\n    supportedRowModels: [\"clientSide\"],\n    dependencies: (_options, { rowSelection }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelectionFilteredOnly is only supported with rowSelection=multiple\"\n  },\n  headerCheckboxSelectionCurrentPageOnly: {\n    supportedRowModels: [\"clientSide\"],\n    dependencies: (_options, { rowSelection }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelectionCurrentPageOnly is only supported with rowSelection=multiple\"\n  },\n  children: () => COL_DEF_VALIDATORS\n};\nvar colDefPropertyMap = {\n  headerName: void 0,\n  columnGroupShow: void 0,\n  headerClass: void 0,\n  toolPanelClass: void 0,\n  headerValueGetter: void 0,\n  pivotKeys: void 0,\n  groupId: void 0,\n  colId: void 0,\n  sort: void 0,\n  initialSort: void 0,\n  field: void 0,\n  type: void 0,\n  cellDataType: void 0,\n  tooltipComponent: void 0,\n  tooltipField: void 0,\n  headerTooltip: void 0,\n  cellClass: void 0,\n  showRowGroup: void 0,\n  filter: void 0,\n  initialAggFunc: void 0,\n  defaultAggFunc: void 0,\n  aggFunc: void 0,\n  pinned: void 0,\n  initialPinned: void 0,\n  chartDataType: void 0,\n  cellAriaRole: void 0,\n  cellEditorPopupPosition: void 0,\n  headerGroupComponent: void 0,\n  headerGroupComponentParams: void 0,\n  cellStyle: void 0,\n  cellRenderer: void 0,\n  cellRendererParams: void 0,\n  cellEditor: void 0,\n  cellEditorParams: void 0,\n  filterParams: void 0,\n  pivotValueColumn: void 0,\n  headerComponent: void 0,\n  headerComponentParams: void 0,\n  floatingFilterComponent: void 0,\n  floatingFilterComponentParams: void 0,\n  tooltipComponentParams: void 0,\n  refData: void 0,\n  columnsMenuParams: void 0,\n  columnChooserParams: void 0,\n  children: void 0,\n  sortingOrder: void 0,\n  allowedAggFuncs: void 0,\n  menuTabs: void 0,\n  pivotTotalColumnIds: void 0,\n  cellClassRules: void 0,\n  icons: void 0,\n  sortIndex: void 0,\n  initialSortIndex: void 0,\n  flex: void 0,\n  initialFlex: void 0,\n  width: void 0,\n  initialWidth: void 0,\n  minWidth: void 0,\n  maxWidth: void 0,\n  rowGroupIndex: void 0,\n  initialRowGroupIndex: void 0,\n  pivotIndex: void 0,\n  initialPivotIndex: void 0,\n  suppressCellFlash: void 0,\n  suppressColumnsToolPanel: void 0,\n  suppressFiltersToolPanel: void 0,\n  openByDefault: void 0,\n  marryChildren: void 0,\n  suppressStickyLabel: void 0,\n  hide: void 0,\n  initialHide: void 0,\n  rowGroup: void 0,\n  initialRowGroup: void 0,\n  pivot: void 0,\n  initialPivot: void 0,\n  checkboxSelection: void 0,\n  showDisabledCheckboxes: void 0,\n  headerCheckboxSelection: void 0,\n  headerCheckboxSelectionFilteredOnly: void 0,\n  headerCheckboxSelectionCurrentPageOnly: void 0,\n  suppressMenu: void 0,\n  suppressHeaderMenuButton: void 0,\n  suppressMovable: void 0,\n  lockPosition: void 0,\n  lockVisible: void 0,\n  lockPinned: void 0,\n  unSortIcon: void 0,\n  suppressSizeToFit: void 0,\n  suppressAutoSize: void 0,\n  enableRowGroup: void 0,\n  enablePivot: void 0,\n  enableValue: void 0,\n  editable: void 0,\n  suppressPaste: void 0,\n  suppressNavigable: void 0,\n  enableCellChangeFlash: void 0,\n  rowDrag: void 0,\n  dndSource: void 0,\n  autoHeight: void 0,\n  wrapText: void 0,\n  sortable: void 0,\n  resizable: void 0,\n  singleClickEdit: void 0,\n  floatingFilter: void 0,\n  cellEditorPopup: void 0,\n  suppressFillHandle: void 0,\n  wrapHeaderText: void 0,\n  autoHeaderHeight: void 0,\n  dndSourceOnRowDrag: void 0,\n  valueGetter: void 0,\n  valueSetter: void 0,\n  filterValueGetter: void 0,\n  keyCreator: void 0,\n  valueFormatter: void 0,\n  valueParser: void 0,\n  comparator: void 0,\n  equals: void 0,\n  pivotComparator: void 0,\n  suppressKeyboardEvent: void 0,\n  suppressHeaderKeyboardEvent: void 0,\n  colSpan: void 0,\n  rowSpan: void 0,\n  getQuickFilterText: void 0,\n  onCellValueChanged: void 0,\n  onCellClicked: void 0,\n  onCellDoubleClicked: void 0,\n  onCellContextMenu: void 0,\n  rowDragText: void 0,\n  tooltipValueGetter: void 0,\n  cellRendererSelector: void 0,\n  cellEditorSelector: void 0,\n  suppressSpanHeaderHeight: void 0,\n  useValueFormatterForExport: void 0,\n  useValueParserForImport: void 0,\n  mainMenuItems: void 0,\n  contextMenuItems: void 0,\n  suppressFloatingFilterButton: void 0,\n  suppressHeaderFilterButton: void 0,\n  suppressHeaderContextMenu: void 0,\n  loadingCellRenderer: void 0,\n  loadingCellRendererParams: void 0,\n  loadingCellRendererSelector: void 0\n};\nvar ALL_PROPERTIES = Object.keys(colDefPropertyMap);\nvar COL_DEF_VALIDATORS = {\n  objectName: \"colDef\",\n  allProperties: ALL_PROPERTIES,\n  docsUrl: \"column-properties/\",\n  deprecations: COLUMN_DEFINITION_DEPRECATIONS,\n  validations: COLUMN_DEFINITION_VALIDATIONS\n};\n\n// community-modules/core/src/validation/rules/gridOptionsValidations.ts\nvar GRID_OPTION_DEPRECATIONS = {\n  enableChartToolPanelsButton: { version: \"29\" },\n  functionsPassive: { version: \"29.2\" },\n  onColumnRowGroupChangeRequest: { version: \"29.2\" },\n  onColumnPivotChangeRequest: { version: \"29.2\" },\n  onColumnValueChangeRequest: { version: \"29.2\" },\n  onColumnAggFuncChangeRequest: { version: \"29.2\" },\n  serverSideFilterAllLevels: { version: \"30\", message: \"All server-side group levels are now filtered by default. This can be toggled using `serverSideOnlyRefreshFilteredGroups`.\" },\n  suppressAggAtRootLevel: { version: \"30\", message: \"The root level aggregation is now suppressed by default. This can be toggled using  `alwaysAggregateAtRootLevel`.\" },\n  excludeHiddenColumnsFromQuickFilter: { version: \"30\", message: \"Hidden columns are now excluded from the Quick Filter by default. This can be toggled using `includeHiddenColumnsInQuickFilter`.\" },\n  enterMovesDown: { version: \"30\", renamed: \"enterNavigatesVertically\" },\n  enterMovesDownAfterEdit: { version: \"30\", renamed: \"enterNavigatesVerticallyAfterEdit\" },\n  suppressParentsInRowNodes: { version: \"30.2\", message: \"Using suppressParentsInRowNodes is no longer recommended. To serialize nodes it is now recommended to instead remove the parent node reference before serialization.\" },\n  advancedFilterModel: { version: \"31\", message: \"Use `initialState.filter.advancedFilterModel` instead.\" },\n  suppressAsyncEvents: { version: \"31\", message: \"Events should be handled asynchronously.\" },\n  cellFadeDelay: { version: \"31.1\", renamed: \"cellFadeDuration\" },\n  cellFlashDelay: { version: \"31.1\", renamed: \"cellFlashDuration\" },\n  suppressServerSideInfiniteScroll: { version: \"31.1\" },\n  serverSideSortOnServer: { version: \"31.1\" },\n  serverSideFilterOnServer: { version: \"31.1\" },\n  enableCellChangeFlash: { version: \"31.2\", message: \"Use `enableCellChangeFlash` in the `ColDef` or `defaultColDef` for all columns.\" },\n  groupIncludeFooter: { version: \"31.3\", message: \"Use `groupTotalRow` instead.\" },\n  groupIncludeTotalFooter: { version: \"31.3\", message: \"Use `grandTotalRow` instead.\" }\n};\nvar GRID_OPTION_DEFAULTS = {\n  suppressContextMenu: false,\n  preventDefaultOnContextMenu: false,\n  allowContextMenuWithControlKey: false,\n  suppressMenuHide: false,\n  enableBrowserTooltips: false,\n  tooltipTrigger: \"hover\",\n  tooltipShowDelay: 2e3,\n  tooltipHideDelay: 1e4,\n  tooltipMouseTrack: false,\n  tooltipShowMode: \"standard\",\n  tooltipInteraction: false,\n  copyHeadersToClipboard: false,\n  copyGroupHeadersToClipboard: false,\n  clipboardDelimiter: \"\t\",\n  suppressCopyRowsToClipboard: false,\n  suppressCopySingleCellRanges: false,\n  suppressLastEmptyLineOnPaste: false,\n  suppressClipboardPaste: false,\n  suppressClipboardApi: false,\n  suppressCutToClipboard: false,\n  maintainColumnOrder: false,\n  suppressFieldDotNotation: false,\n  allowDragFromColumnsToolPanel: false,\n  suppressMovableColumns: false,\n  suppressColumnMoveAnimation: false,\n  suppressDragLeaveHidesColumns: false,\n  suppressRowGroupHidesColumns: false,\n  suppressAutoSize: false,\n  autoSizePadding: 20,\n  skipHeaderOnAutoSize: false,\n  singleClickEdit: false,\n  suppressClickEdit: false,\n  readOnlyEdit: false,\n  stopEditingWhenCellsLoseFocus: false,\n  enterNavigatesVertically: false,\n  enterNavigatesVerticallyAfterEdit: false,\n  enableCellEditingOnBackspace: false,\n  undoRedoCellEditing: false,\n  undoRedoCellEditingLimit: 10,\n  suppressCsvExport: false,\n  suppressExcelExport: false,\n  cacheQuickFilter: false,\n  includeHiddenColumnsInQuickFilter: false,\n  excludeChildrenWhenTreeDataFiltering: false,\n  enableAdvancedFilter: false,\n  includeHiddenColumnsInAdvancedFilter: false,\n  enableCharts: false,\n  suppressChartToolPanelsButton: false,\n  masterDetail: false,\n  keepDetailRows: false,\n  keepDetailRowsCount: 10,\n  detailRowAutoHeight: false,\n  tabIndex: 0,\n  rowBuffer: 10,\n  valueCache: false,\n  valueCacheNeverExpires: false,\n  enableCellExpressions: false,\n  suppressTouch: false,\n  suppressFocusAfterRefresh: false,\n  suppressAsyncEvents: false,\n  suppressBrowserResizeObserver: false,\n  suppressPropertyNamesCheck: false,\n  suppressChangeDetection: false,\n  debug: false,\n  suppressLoadingOverlay: false,\n  suppressNoRowsOverlay: false,\n  pagination: false,\n  paginationPageSize: 100,\n  paginationPageSizeSelector: true,\n  paginationAutoPageSize: false,\n  paginateChildRows: false,\n  suppressPaginationPanel: false,\n  pivotMode: false,\n  pivotPanelShow: \"never\",\n  pivotDefaultExpanded: 0,\n  pivotSuppressAutoColumn: false,\n  suppressExpandablePivotGroups: false,\n  functionsReadOnly: false,\n  suppressAggFuncInHeader: false,\n  alwaysAggregateAtRootLevel: false,\n  aggregateOnlyChangedColumns: false,\n  suppressAggFilteredOnly: false,\n  removePivotHeaderRowWhenSingleValueColumn: false,\n  animateRows: true,\n  enableCellChangeFlash: false,\n  cellFlashDelay: 500,\n  cellFlashDuration: 500,\n  cellFadeDelay: 1e3,\n  cellFadeDuration: 1e3,\n  allowShowChangeAfterFilter: false,\n  domLayout: \"normal\",\n  ensureDomOrder: false,\n  enableRtl: false,\n  suppressColumnVirtualisation: false,\n  suppressMaxRenderedRowRestriction: false,\n  suppressRowVirtualisation: false,\n  rowDragManaged: false,\n  suppressRowDrag: false,\n  suppressMoveWhenRowDragging: false,\n  rowDragEntireRow: false,\n  rowDragMultiRow: false,\n  embedFullWidthRows: false,\n  groupDisplayType: \"singleColumn\",\n  groupDefaultExpanded: 0,\n  groupMaintainOrder: false,\n  groupSelectsChildren: false,\n  groupIncludeTotalFooter: false,\n  groupSuppressBlankHeader: false,\n  groupSelectsFiltered: false,\n  showOpenedGroup: false,\n  groupRemoveSingleChildren: false,\n  groupRemoveLowestSingleChildren: false,\n  groupHideOpenParents: false,\n  groupAllowUnbalanced: false,\n  rowGroupPanelShow: \"never\",\n  suppressMakeColumnVisibleAfterUnGroup: false,\n  treeData: false,\n  rowGroupPanelSuppressSort: false,\n  suppressGroupRowsSticky: false,\n  rowModelType: \"clientSide\",\n  asyncTransactionWaitMillis: 50,\n  suppressModelUpdateAfterUpdateTransaction: false,\n  cacheOverflowSize: 1,\n  infiniteInitialRowCount: 1,\n  serverSideInitialRowCount: 1,\n  suppressServerSideInfiniteScroll: false,\n  cacheBlockSize: 100,\n  maxBlocksInCache: -1,\n  maxConcurrentDatasourceRequests: 2,\n  blockLoadDebounceMillis: 0,\n  purgeClosedRowNodes: false,\n  serverSideSortAllLevels: false,\n  serverSideOnlyRefreshFilteredGroups: false,\n  serverSideSortOnServer: false,\n  serverSideFilterOnServer: false,\n  serverSidePivotResultFieldSeparator: \"_\",\n  viewportRowModelPageSize: 5,\n  viewportRowModelBufferSize: 5,\n  alwaysShowHorizontalScroll: false,\n  alwaysShowVerticalScroll: false,\n  debounceVerticalScrollbar: false,\n  suppressHorizontalScroll: false,\n  suppressScrollOnNewData: false,\n  suppressScrollWhenPopupsAreOpen: false,\n  suppressAnimationFrame: false,\n  suppressMiddleClickScrolls: false,\n  suppressPreventDefaultOnMouseWheel: false,\n  rowMultiSelectWithClick: false,\n  suppressRowDeselection: false,\n  suppressRowClickSelection: false,\n  suppressCellFocus: false,\n  suppressHeaderFocus: false,\n  suppressMultiRangeSelection: false,\n  enableCellTextSelection: false,\n  enableRangeSelection: false,\n  enableRangeHandle: false,\n  enableFillHandle: false,\n  fillHandleDirection: \"xy\",\n  suppressClearOnFillReduction: false,\n  accentedSort: false,\n  unSortIcon: false,\n  suppressMultiSort: false,\n  alwaysMultiSort: false,\n  suppressMaintainUnsortedOrder: false,\n  suppressRowHoverHighlight: false,\n  suppressRowTransform: false,\n  columnHoverHighlight: false,\n  deltaSort: false,\n  enableGroupEdit: false,\n  suppressGroupMaintainValueType: false,\n  functionsPassive: false,\n  groupLockGroupColumns: 0,\n  serverSideEnableClientSideSort: false,\n  suppressServerSideFullWidthLoadingRow: false,\n  pivotMaxGeneratedColumns: -1\n};\nvar GRID_OPTION_VALIDATIONS = {\n  sideBar: { module: \"@ag-grid-enterprise/side-bar\" /* SideBarModule */ },\n  statusBar: { module: \"@ag-grid-enterprise/status-bar\" /* StatusBarModule */ },\n  enableCharts: { module: \"@ag-grid-enterprise/charts\" /* GridChartsModule */ },\n  getMainMenuItems: { module: \"@ag-grid-enterprise/menu\" /* MenuModule */ },\n  getContextMenuItems: { module: \"@ag-grid-enterprise/menu\" /* MenuModule */ },\n  allowContextMenuWithControlKey: { module: \"@ag-grid-enterprise/menu\" /* MenuModule */ },\n  enableAdvancedFilter: { module: \"@ag-grid-enterprise/advanced-filter\" /* AdvancedFilterModule */ },\n  treeData: {\n    supportedRowModels: [\"clientSide\", \"serverSide\"],\n    module: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */,\n    dependencies: (options) => {\n      var _a;\n      const rowModel = (_a = options.rowModelType) != null ? _a : \"clientSide\";\n      switch (rowModel) {\n        case \"clientSide\":\n          const csrmWarning = `treeData requires 'getDataPath' in the ${rowModel} row model.`;\n          return options.getDataPath ? null : csrmWarning;\n        case \"serverSide\":\n          const ssrmWarning = `treeData requires 'isServerSideGroup' and 'getServerSideGroupKey' in the ${rowModel} row model.`;\n          return options.isServerSideGroup && options.getServerSideGroupKey ? null : ssrmWarning;\n      }\n      return null;\n    }\n  },\n  masterDetail: { module: \"@ag-grid-enterprise/master-detail\" /* MasterDetailModule */ },\n  enableRangeSelection: { module: \"@ag-grid-enterprise/range-selection\" /* RangeSelectionModule */ },\n  enableRangeHandle: {\n    dependencies: {\n      enableRangeSelection: [true]\n    }\n  },\n  enableFillHandle: {\n    dependencies: {\n      enableRangeSelection: [true]\n    }\n  },\n  groupDefaultExpanded: {\n    supportedRowModels: [\"clientSide\"]\n  },\n  groupIncludeFooter: {\n    supportedRowModels: [\"clientSide\", \"serverSide\"],\n    dependencies: (options) => {\n      var _a;\n      const rowModel = (_a = options.rowModelType) != null ? _a : \"clientSide\";\n      switch (rowModel) {\n        case \"clientSide\":\n          return null;\n        case \"serverSide\":\n          const warning = \"groupIncludeFooter is not supported alongside suppressServerSideInfiniteScroll\";\n          return options.suppressServerSideInfiniteScroll ? warning : null;\n      }\n      return null;\n    }\n  },\n  groupIncludeTotalFooter: {\n    supportedRowModels: [\"clientSide\"]\n  },\n  groupRemoveSingleChildren: {\n    dependencies: {\n      groupHideOpenParents: [void 0, false],\n      groupRemoveLowestSingleChildren: [void 0, false]\n    }\n  },\n  groupRemoveLowestSingleChildren: {\n    dependencies: {\n      groupHideOpenParents: [void 0, false],\n      groupRemoveSingleChildren: [void 0, false]\n    }\n  },\n  groupSelectsChildren: {\n    dependencies: {\n      rowSelection: [\"multiple\"]\n    }\n  },\n  suppressParentsInRowNodes: {\n    dependencies: {\n      groupSelectsChildren: [void 0, false]\n    }\n  },\n  viewportDatasource: {\n    supportedRowModels: [\"viewport\"],\n    module: \"@ag-grid-enterprise/viewport-row-model\" /* ViewportRowModelModule */\n  },\n  serverSideDatasource: {\n    supportedRowModels: [\"serverSide\"],\n    module: \"@ag-grid-enterprise/server-side-row-model\" /* ServerSideRowModelModule */\n  },\n  cacheBlockSize: {\n    supportedRowModels: [\"serverSide\", \"infinite\"]\n  },\n  datasource: {\n    supportedRowModels: [\"infinite\"],\n    module: \"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */\n  },\n  rowData: {\n    supportedRowModels: [\"clientSide\"],\n    module: \"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */\n  },\n  columnDefs: () => COL_DEF_VALIDATORS,\n  defaultColDef: () => COL_DEF_VALIDATORS,\n  defaultColGroupDef: () => COL_DEF_VALIDATORS,\n  autoGroupColumnDef: () => COL_DEF_VALIDATORS\n};\nvar GRID_OPTIONS_VALIDATORS = {\n  objectName: \"gridOptions\",\n  allProperties: [\n    ...PropertyKeys.ALL_PROPERTIES,\n    ...ComponentUtil.EVENT_CALLBACKS\n  ],\n  propertyExceptions: [\"api\", \"columnApi\"],\n  docsUrl: \"grid-options/\",\n  deprecations: GRID_OPTION_DEPRECATIONS,\n  validations: GRID_OPTION_VALIDATIONS\n};\n\n// community-modules/core/src/gridOptionsService.ts\nvar GridOptionsService = class {\n  constructor() {\n    this.destroyed = false;\n    this.domDataKey = \"__AG_\" + Math.random().toString();\n    this.propertyEventService = new EventService();\n    // responsible for calling the onXXX functions on gridOptions\n    // It forces events defined in GridOptionsService.alwaysSyncGlobalEvents to be fired synchronously.\n    // This is required for events such as GridPreDestroyed.\n    // Other events can be fired asynchronously or synchronously depending on config.\n    this.globalEventHandlerFactory = (restrictToSyncOnly) => {\n      return (eventName, event) => {\n        if (this.destroyed) {\n          return;\n        }\n        const alwaysSync = ALWAYS_SYNC_GLOBAL_EVENTS.has(eventName);\n        if (alwaysSync && !restrictToSyncOnly || !alwaysSync && restrictToSyncOnly) {\n          return;\n        }\n        const eventHandlerName = ComponentUtil.getCallbackForEvent(eventName);\n        const eventHandler = this.gridOptions[eventHandlerName];\n        if (typeof eventHandler === \"function\") {\n          this.frameworkOverrides.wrapOutgoing(() => {\n            eventHandler(event);\n          });\n        }\n      };\n    };\n  }\n  // This is quicker then having code call gridOptionsService.get('context')\n  get context() {\n    return this.gridOptions[\"context\"];\n  }\n  init() {\n    this.columnApi = new ColumnApi(this.api);\n    const async = !this.get(\"suppressAsyncEvents\");\n    this.eventService.addGlobalListener(this.globalEventHandlerFactory().bind(this), async);\n    this.eventService.addGlobalListener(this.globalEventHandlerFactory(true).bind(this), false);\n    this.propertyEventService.setFrameworkOverrides(this.frameworkOverrides);\n    this.getScrollbarWidth();\n  }\n  destroy() {\n    this.destroyed = true;\n    this.columnApi = void 0;\n  }\n  /**\n   * Get the raw value of the GridOptions property provided.\n   * @param property\n   */\n  get(property) {\n    var _a;\n    return (_a = this.gridOptions[property]) != null ? _a : GRID_OPTION_DEFAULTS[property];\n  }\n  /**\n   * Get the GridOption callback but wrapped so that the common params of api,columnApi and context are automatically applied to the params.\n   * @param property GridOption callback properties based on the fact that this property has a callback with params extending AgGridCommon\n   */\n  getCallback(property) {\n    return this.mergeGridCommonParams(this.gridOptions[property]);\n  }\n  /**\n   * Returns `true` if a value has been specified for this GridOption.\n   * @param property GridOption property\n   */\n  exists(property) {\n    return exists(this.gridOptions[property]);\n  }\n  /**\n  * Wrap the user callback and attach the api, columnApi and context to the params object on the way through.\n  * @param callback User provided callback\n  * @returns Wrapped callback where the params object not require api, columnApi and context\n  */\n  mergeGridCommonParams(callback) {\n    if (callback) {\n      const wrapped = (callbackParams) => {\n        const mergedParams = callbackParams;\n        mergedParams.api = this.api;\n        mergedParams.columnApi = this.columnApi;\n        mergedParams.context = this.context;\n        return callback(mergedParams);\n      };\n      return wrapped;\n    }\n    return callback;\n  }\n  static toBoolean(value) {\n    if (typeof value === \"boolean\") {\n      return value;\n    }\n    if (typeof value === \"string\") {\n      return value.toUpperCase() === \"TRUE\" || value == \"\";\n    }\n    return false;\n  }\n  static toNumber(value) {\n    if (typeof value === \"number\") {\n      return value;\n    }\n    if (typeof value === \"string\") {\n      const parsed = parseInt(value);\n      if (isNaN(parsed)) {\n        return void 0;\n      }\n      return parsed;\n    }\n    return void 0;\n  }\n  static toConstrainedNum(min, max) {\n    return (value) => {\n      const num = GridOptionsService.toNumber(value);\n      if (num == null || num < min || num > max) {\n        return void 0;\n      }\n      return num;\n    };\n  }\n  static getCoercedValue(key, value) {\n    const coerceFunc = GridOptionsService.PROPERTY_COERCIONS.get(key);\n    if (!coerceFunc) {\n      return value;\n    }\n    return coerceFunc(value);\n  }\n  static getCoercedGridOptions(gridOptions) {\n    const newGo = {};\n    Object.entries(gridOptions).forEach(([key, value]) => {\n      const coercedValue = GridOptionsService.getCoercedValue(key, value);\n      newGo[key] = coercedValue;\n    });\n    return newGo;\n  }\n  updateGridOptions({ options, force, source = \"api\" }) {\n    const changeSet = { id: GridOptionsService.changeSetId++, properties: [] };\n    const events = [];\n    Object.entries(options).forEach(([key, value]) => {\n      if (source === \"api\" && INITIAL_GRID_OPTION_KEYS[key]) {\n        warnOnce(`${key} is an initial property and cannot be updated.`);\n      }\n      const coercedValue = GridOptionsService.getCoercedValue(key, value);\n      const shouldForce = force || typeof coercedValue === \"object\" && source === \"api\";\n      const previousValue = this.gridOptions[key];\n      if (shouldForce || previousValue !== coercedValue) {\n        this.gridOptions[key] = coercedValue;\n        const event = {\n          type: key,\n          currentValue: coercedValue,\n          previousValue,\n          changeSet,\n          source\n        };\n        events.push(event);\n      }\n    });\n    this.validationService.processGridOptions(this.gridOptions);\n    changeSet.properties = events.map((event) => event.type);\n    events.forEach((event) => {\n      if (this.gridOptions.debug) {\n        console.log(`AG Grid: Updated property ${event.type} from `, event.previousValue, \" to  \", event.currentValue);\n      }\n      this.propertyEventService.dispatchEvent(event);\n    });\n  }\n  addEventListener(key, listener) {\n    this.propertyEventService.addEventListener(key, listener);\n  }\n  removeEventListener(key, listener) {\n    this.propertyEventService.removeEventListener(key, listener);\n  }\n  // *************** Helper methods ************************** //\n  // Methods to share common GridOptions related logic that goes above accessing a single property\n  // the user might be using some non-standard scrollbar, eg a scrollbar that has zero\n  // width and overlays (like the Safari scrollbar, but presented in Chrome). so we\n  // allow the user to provide the scroll width before we work it out.\n  getScrollbarWidth() {\n    if (this.scrollbarWidth == null) {\n      const useGridOptions = typeof this.gridOptions.scrollbarWidth === \"number\" && this.gridOptions.scrollbarWidth >= 0;\n      const scrollbarWidth = useGridOptions ? this.gridOptions.scrollbarWidth : getScrollbarWidth();\n      if (scrollbarWidth != null) {\n        this.scrollbarWidth = scrollbarWidth;\n        this.eventService.dispatchEvent({\n          type: Events.EVENT_SCROLLBAR_WIDTH_CHANGED\n        });\n      }\n    }\n    return this.scrollbarWidth;\n  }\n  isRowModelType(rowModelType) {\n    return this.gridOptions.rowModelType === rowModelType || rowModelType === \"clientSide\" && missing(this.gridOptions.rowModelType);\n  }\n  isDomLayout(domLayout) {\n    var _a;\n    const gridLayout = (_a = this.gridOptions.domLayout) != null ? _a : \"normal\";\n    return gridLayout === domLayout;\n  }\n  isRowSelection() {\n    return this.gridOptions.rowSelection === \"single\" || this.gridOptions.rowSelection === \"multiple\";\n  }\n  useAsyncEvents() {\n    return !this.get(\"suppressAsyncEvents\");\n  }\n  isGetRowHeightFunction() {\n    return typeof this.gridOptions.getRowHeight === \"function\";\n  }\n  getRowHeightForNode(rowNode, allowEstimate = false, defaultRowHeight) {\n    if (defaultRowHeight == null) {\n      defaultRowHeight = this.environment.getDefaultRowHeight();\n    }\n    if (this.isGetRowHeightFunction()) {\n      if (allowEstimate) {\n        return { height: defaultRowHeight, estimated: true };\n      }\n      const params = {\n        node: rowNode,\n        data: rowNode.data\n      };\n      const height = this.getCallback(\"getRowHeight\")(params);\n      if (this.isNumeric(height)) {\n        if (height === 0) {\n          warnOnce(\"The return of `getRowHeight` cannot be zero. If the intention is to hide rows, use a filter instead.\");\n        }\n        return { height: Math.max(1, height), estimated: false };\n      }\n    }\n    if (rowNode.detail && this.get(\"masterDetail\")) {\n      return this.getMasterDetailRowHeight();\n    }\n    const rowHeight = this.gridOptions.rowHeight && this.isNumeric(this.gridOptions.rowHeight) ? this.gridOptions.rowHeight : defaultRowHeight;\n    return { height: rowHeight, estimated: false };\n  }\n  getMasterDetailRowHeight() {\n    if (this.get(\"detailRowAutoHeight\")) {\n      return { height: 1, estimated: false };\n    }\n    if (this.isNumeric(this.gridOptions.detailRowHeight)) {\n      return { height: this.gridOptions.detailRowHeight, estimated: false };\n    }\n    return { height: 300, estimated: false };\n  }\n  // we don't allow dynamic row height for virtual paging\n  getRowHeightAsNumber() {\n    if (!this.gridOptions.rowHeight || missing(this.gridOptions.rowHeight)) {\n      return this.environment.getDefaultRowHeight();\n    }\n    const rowHeight = this.environment.refreshRowHeightVariable();\n    if (rowHeight !== -1) {\n      return rowHeight;\n    }\n    console.warn(\"AG Grid row height must be a number if not using standard row model\");\n    return this.environment.getDefaultRowHeight();\n  }\n  isNumeric(value) {\n    return !isNaN(value) && typeof value === \"number\" && isFinite(value);\n  }\n  getDomDataKey() {\n    return this.domDataKey;\n  }\n  // returns the dom data, or undefined if not found\n  getDomData(element, key) {\n    const domData = element[this.getDomDataKey()];\n    return domData ? domData[key] : void 0;\n  }\n  setDomData(element, key, value) {\n    const domDataKey = this.getDomDataKey();\n    let domData = element[domDataKey];\n    if (missing(domData)) {\n      domData = {};\n      element[domDataKey] = domData;\n    }\n    domData[key] = value;\n  }\n  getDocument() {\n    let result = null;\n    if (this.gridOptions.getDocument && exists(this.gridOptions.getDocument)) {\n      result = this.gridOptions.getDocument();\n    } else if (this.eGridDiv) {\n      result = this.eGridDiv.ownerDocument;\n    }\n    if (result && exists(result)) {\n      return result;\n    }\n    return document;\n  }\n  getWindow() {\n    const eDocument = this.getDocument();\n    return eDocument.defaultView || window;\n  }\n  getRootNode() {\n    return this.eGridDiv.getRootNode();\n  }\n  getActiveDomElement() {\n    return this.getRootNode().activeElement;\n  }\n  getAsyncTransactionWaitMillis() {\n    return exists(this.gridOptions.asyncTransactionWaitMillis) ? this.gridOptions.asyncTransactionWaitMillis : 50;\n  }\n  isAnimateRows() {\n    if (this.get(\"ensureDomOrder\")) {\n      return false;\n    }\n    return this.get(\"animateRows\");\n  }\n  isGroupRowsSticky() {\n    if (this.get(\"paginateChildRows\") || this.get(\"groupHideOpenParents\") || this.isDomLayout(\"print\")) {\n      return false;\n    }\n    return true;\n  }\n  isColumnsSortingCoupledToGroup() {\n    const autoGroupColumnDef = this.gridOptions.autoGroupColumnDef;\n    return !(autoGroupColumnDef == null ? void 0 : autoGroupColumnDef.comparator) && !this.get(\"treeData\");\n  }\n  getGroupAggFiltering() {\n    const userValue = this.gridOptions.groupAggFiltering;\n    if (typeof userValue === \"function\") {\n      return this.getCallback(\"groupAggFiltering\");\n    }\n    if (userValue === true) {\n      return () => true;\n    }\n    return void 0;\n  }\n  getGrandTotalRow() {\n    const userValue = this.gridOptions.grandTotalRow;\n    if (userValue) {\n      return userValue;\n    }\n    const legacyValue = this.gridOptions.groupIncludeTotalFooter;\n    if (legacyValue) {\n      return \"bottom\";\n    }\n    return void 0;\n  }\n  getGroupTotalRowCallback() {\n    const userValue = this.get(\"groupTotalRow\");\n    if (typeof userValue === \"function\") {\n      return this.getCallback(\"groupTotalRow\");\n    }\n    if (userValue) {\n      return () => userValue;\n    }\n    const legacyValue = this.get(\"groupIncludeFooter\");\n    if (typeof legacyValue === \"function\") {\n      const legacyCallback = this.getCallback(\"groupIncludeFooter\");\n      return (p) => {\n        return legacyCallback(p) ? \"bottom\" : void 0;\n      };\n    }\n    return () => legacyValue ? \"bottom\" : void 0;\n  }\n  isGroupMultiAutoColumn() {\n    if (this.gridOptions.groupDisplayType) {\n      return this.gridOptions.groupDisplayType === \"multipleColumns\";\n    }\n    return this.get(\"groupHideOpenParents\");\n  }\n  isGroupUseEntireRow(pivotMode) {\n    if (pivotMode) {\n      return false;\n    }\n    return this.gridOptions.groupDisplayType === \"groupRows\";\n  }\n  getGridCommonParams() {\n    return {\n      api: this.api,\n      columnApi: this.columnApi,\n      context: this.context\n    };\n  }\n  addGridCommonParams(params) {\n    const updatedParams = params;\n    updatedParams.api = this.api;\n    updatedParams.columnApi = this.columnApi;\n    updatedParams.context = this.context;\n    return updatedParams;\n  }\n};\n/**\n * Handles value coercion including validation of ranges etc. If value is invalid, undefined is set, allowing default to be used.\n */\nGridOptionsService.PROPERTY_COERCIONS = new Map([\n  ...PropertyKeys.BOOLEAN_PROPERTIES.map((key) => [key, GridOptionsService.toBoolean]),\n  ...PropertyKeys.NUMBER_PROPERTIES.map((key) => [key, GridOptionsService.toNumber]),\n  [\"groupAggFiltering\", (val) => typeof val === \"function\" ? val : GridOptionsService.toBoolean(val)],\n  [\"pageSize\", GridOptionsService.toConstrainedNum(1, Number.MAX_VALUE)],\n  [\"autoSizePadding\", GridOptionsService.toConstrainedNum(0, Number.MAX_VALUE)],\n  [\"keepDetailRowsCount\", GridOptionsService.toConstrainedNum(1, Number.MAX_VALUE)],\n  [\"rowBuffer\", GridOptionsService.toConstrainedNum(0, Number.MAX_VALUE)],\n  [\"infiniteInitialRowCount\", GridOptionsService.toConstrainedNum(1, Number.MAX_VALUE)],\n  [\"cacheOverflowSize\", GridOptionsService.toConstrainedNum(1, Number.MAX_VALUE)],\n  [\"cacheBlockSize\", GridOptionsService.toConstrainedNum(1, Number.MAX_VALUE)],\n  [\"serverSideInitialRowCount\", GridOptionsService.toConstrainedNum(1, Number.MAX_VALUE)],\n  [\"viewportRowModelPageSize\", GridOptionsService.toConstrainedNum(1, Number.MAX_VALUE)],\n  [\"viewportRowModelBufferSize\", GridOptionsService.toConstrainedNum(0, Number.MAX_VALUE)]\n]);\nGridOptionsService.changeSetId = 0;\n__decorateClass([\n  Autowired(\"gridOptions\")\n], GridOptionsService.prototype, \"gridOptions\", 2);\n__decorateClass([\n  Autowired(\"eventService\")\n], GridOptionsService.prototype, \"eventService\", 2);\n__decorateClass([\n  Autowired(\"environment\")\n], GridOptionsService.prototype, \"environment\", 2);\n__decorateClass([\n  Autowired(\"frameworkOverrides\")\n], GridOptionsService.prototype, \"frameworkOverrides\", 2);\n__decorateClass([\n  Autowired(\"eGridDiv\")\n], GridOptionsService.prototype, \"eGridDiv\", 2);\n__decorateClass([\n  Autowired(\"validationService\")\n], GridOptionsService.prototype, \"validationService\", 2);\n__decorateClass([\n  Autowired(\"gridApi\")\n], GridOptionsService.prototype, \"api\", 2);\n__decorateClass([\n  PostConstruct\n], GridOptionsService.prototype, \"init\", 1);\n__decorateClass([\n  PreDestroy\n], GridOptionsService.prototype, \"destroy\", 1);\nGridOptionsService = __decorateClass([\n  Bean(\"gridOptionsService\")\n], GridOptionsService);\n\n// community-modules/core/src/localeService.ts\nvar LocaleService = class extends BeanStub {\n  getLocaleTextFunc() {\n    const getLocaleText = this.gos.getCallback(\"getLocaleText\");\n    if (getLocaleText) {\n      return (key, defaultValue, variableValues) => {\n        const params = {\n          key,\n          defaultValue,\n          variableValues\n        };\n        return getLocaleText(params);\n      };\n    }\n    const localeText = this.gos.get(\"localeText\");\n    return (key, defaultValue, variableValues) => {\n      let localisedText = localeText && localeText[key];\n      if (localisedText && variableValues && variableValues.length) {\n        let found = 0;\n        while (true) {\n          if (found >= variableValues.length) {\n            break;\n          }\n          const idx = localisedText.indexOf(\"${variable}\");\n          if (idx === -1) {\n            break;\n          }\n          localisedText = localisedText.replace(\"${variable}\", variableValues[found++]);\n        }\n      }\n      return localisedText != null ? localisedText : defaultValue;\n    };\n  }\n};\nLocaleService = __decorateClass([\n  Bean(\"localeService\")\n], LocaleService);\n\n// community-modules/core/src/gridBodyComp/fakeVScrollComp.ts\nvar _FakeVScrollComp = class _FakeVScrollComp extends AbstractFakeScrollComp {\n  constructor() {\n    super(_FakeVScrollComp.TEMPLATE, \"vertical\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.createManagedBean(new SetHeightFeature(this.eContainer));\n    this.ctrlsService.register(\"fakeVScrollComp\", this);\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_CONTAINER_HEIGHT_CHANGED, this.onRowContainerHeightChanged.bind(this));\n  }\n  setScrollVisible() {\n    const vScrollShowing = this.scrollVisibleService.isVerticalScrollShowing();\n    const invisibleScrollbar2 = this.invisibleScrollbar;\n    const scrollbarWidth = vScrollShowing ? this.gos.getScrollbarWidth() || 0 : 0;\n    const adjustedScrollbarWidth = scrollbarWidth === 0 && invisibleScrollbar2 ? 16 : scrollbarWidth;\n    this.addOrRemoveCssClass(\"ag-scrollbar-invisible\", invisibleScrollbar2);\n    setFixedWidth(this.getGui(), adjustedScrollbarWidth);\n    setFixedWidth(this.eViewport, adjustedScrollbarWidth);\n    setFixedWidth(this.eContainer, adjustedScrollbarWidth);\n    this.setDisplayed(vScrollShowing, { skipAriaHidden: true });\n  }\n  onRowContainerHeightChanged() {\n    const { ctrlsService } = this;\n    const gridBodyCtrl = ctrlsService.getGridBodyCtrl();\n    const gridBodyViewportEl = gridBodyCtrl.getBodyViewportElement();\n    const eViewportScrollTop = this.getScrollPosition();\n    const gridBodyViewportScrollTop = gridBodyViewportEl.scrollTop;\n    if (eViewportScrollTop != gridBodyViewportScrollTop) {\n      this.setScrollPosition(gridBodyViewportScrollTop, true);\n    }\n  }\n  getScrollPosition() {\n    return this.getViewport().scrollTop;\n  }\n  setScrollPosition(value, force) {\n    if (!force && !isVisible(this.getViewport())) {\n      this.attemptSettingScrollPosition(value);\n    }\n    this.getViewport().scrollTop = value;\n  }\n};\n_FakeVScrollComp.TEMPLATE = /* html */\n`<div class=\"ag-body-vertical-scroll\" aria-hidden=\"true\">\n            <div class=\"ag-body-vertical-scroll-viewport\" ref=\"eViewport\">\n                <div class=\"ag-body-vertical-scroll-container\" ref=\"eContainer\"></div>\n            </div>\n        </div>`;\n__decorateClass([\n  PostConstruct\n], _FakeVScrollComp.prototype, \"postConstruct\", 1);\nvar FakeVScrollComp = _FakeVScrollComp;\n\n// community-modules/core/src/columns/dataTypeService.ts\nvar MONTH_LOCALE_TEXT = {\n  january: \"January\",\n  february: \"February\",\n  march: \"March\",\n  april: \"April\",\n  may: \"May\",\n  june: \"June\",\n  july: \"July\",\n  august: \"August\",\n  september: \"September\",\n  october: \"October\",\n  november: \"November\",\n  december: \"December\"\n};\nvar MONTH_KEYS = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\nvar DataTypeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.dataTypeDefinitions = {};\n    this.isWaitingForRowData = false;\n    this.isColumnTypeOverrideInDataTypeDefinitions = false;\n    // keep track of any column state updates whilst waiting for data types to be inferred\n    this.columnStateUpdatesPendingInference = {};\n    this.columnStateUpdateListenerDestroyFuncs = [];\n  }\n  init() {\n    this.groupHideOpenParents = this.gos.get(\"groupHideOpenParents\");\n    this.addManagedPropertyListener(\"groupHideOpenParents\", () => {\n      this.groupHideOpenParents = this.gos.get(\"groupHideOpenParents\");\n    });\n    this.processDataTypeDefinitions();\n    this.addManagedPropertyListener(\"dataTypeDefinitions\", (event) => {\n      this.processDataTypeDefinitions();\n      this.columnModel.recreateColumnDefs(convertSourceType(event.source));\n    });\n  }\n  processDataTypeDefinitions() {\n    var _a;\n    const defaultDataTypes = this.getDefaultDataTypes();\n    this.dataTypeDefinitions = {};\n    Object.entries(defaultDataTypes).forEach(([cellDataType, dataTypeDefinition]) => {\n      this.dataTypeDefinitions[cellDataType] = __spreadProps(__spreadValues({}, dataTypeDefinition), {\n        groupSafeValueFormatter: this.createGroupSafeValueFormatter(dataTypeDefinition)\n      });\n    });\n    const dataTypeDefinitions = (_a = this.gos.get(\"dataTypeDefinitions\")) != null ? _a : {};\n    this.dataTypeMatchers = {};\n    Object.entries(dataTypeDefinitions).forEach(([cellDataType, dataTypeDefinition]) => {\n      const mergedDataTypeDefinition = this.processDataTypeDefinition(dataTypeDefinition, dataTypeDefinitions, [cellDataType], defaultDataTypes);\n      if (mergedDataTypeDefinition) {\n        this.dataTypeDefinitions[cellDataType] = mergedDataTypeDefinition;\n        if (dataTypeDefinition.dataTypeMatcher) {\n          this.dataTypeMatchers[cellDataType] = dataTypeDefinition.dataTypeMatcher;\n        }\n      }\n    });\n    this.checkObjectValueHandlers(defaultDataTypes);\n    [\"dateString\", \"text\", \"number\", \"boolean\", \"date\"].forEach((cellDataType) => {\n      const overriddenDataTypeMatcher = this.dataTypeMatchers[cellDataType];\n      if (overriddenDataTypeMatcher) {\n        delete this.dataTypeMatchers[cellDataType];\n      }\n      this.dataTypeMatchers[cellDataType] = overriddenDataTypeMatcher != null ? overriddenDataTypeMatcher : defaultDataTypes[cellDataType].dataTypeMatcher;\n    });\n  }\n  mergeDataTypeDefinitions(parentDataTypeDefinition, childDataTypeDefinition) {\n    const mergedDataTypeDefinition = __spreadValues(__spreadValues({}, parentDataTypeDefinition), childDataTypeDefinition);\n    if (parentDataTypeDefinition.columnTypes && childDataTypeDefinition.columnTypes && childDataTypeDefinition.appendColumnTypes) {\n      mergedDataTypeDefinition.columnTypes = [\n        ...this.convertColumnTypes(parentDataTypeDefinition.columnTypes),\n        ...this.convertColumnTypes(childDataTypeDefinition.columnTypes)\n      ];\n    }\n    return mergedDataTypeDefinition;\n  }\n  processDataTypeDefinition(dataTypeDefinition, dataTypeDefinitions, alreadyProcessedDataTypes, defaultDataTypes) {\n    let mergedDataTypeDefinition;\n    const extendsCellDataType = dataTypeDefinition.extendsDataType;\n    if (dataTypeDefinition.columnTypes) {\n      this.isColumnTypeOverrideInDataTypeDefinitions = true;\n    }\n    if (dataTypeDefinition.extendsDataType === dataTypeDefinition.baseDataType) {\n      let baseDataTypeDefinition = defaultDataTypes[extendsCellDataType];\n      const overriddenBaseDataTypeDefinition = dataTypeDefinitions[extendsCellDataType];\n      if (baseDataTypeDefinition && overriddenBaseDataTypeDefinition) {\n        baseDataTypeDefinition = overriddenBaseDataTypeDefinition;\n      }\n      if (!this.validateDataTypeDefinition(dataTypeDefinition, baseDataTypeDefinition, extendsCellDataType)) {\n        return void 0;\n      }\n      mergedDataTypeDefinition = this.mergeDataTypeDefinitions(\n        baseDataTypeDefinition,\n        dataTypeDefinition\n      );\n    } else {\n      if (alreadyProcessedDataTypes.includes(extendsCellDataType)) {\n        warnOnce('Data type definition hierarchies (via the \"extendsDataType\" property) cannot contain circular references.');\n        return void 0;\n      }\n      const extendedDataTypeDefinition = dataTypeDefinitions[extendsCellDataType];\n      if (!this.validateDataTypeDefinition(dataTypeDefinition, extendedDataTypeDefinition, extendsCellDataType)) {\n        return void 0;\n      }\n      const mergedExtendedDataTypeDefinition = this.processDataTypeDefinition(\n        extendedDataTypeDefinition,\n        dataTypeDefinitions,\n        [...alreadyProcessedDataTypes, extendsCellDataType],\n        defaultDataTypes\n      );\n      if (!mergedExtendedDataTypeDefinition) {\n        return void 0;\n      }\n      mergedDataTypeDefinition = this.mergeDataTypeDefinitions(\n        mergedExtendedDataTypeDefinition,\n        dataTypeDefinition\n      );\n    }\n    return __spreadProps(__spreadValues({}, mergedDataTypeDefinition), {\n      groupSafeValueFormatter: this.createGroupSafeValueFormatter(mergedDataTypeDefinition)\n    });\n  }\n  validateDataTypeDefinition(dataTypeDefinition, parentDataTypeDefinition, parentCellDataType) {\n    if (!parentDataTypeDefinition) {\n      warnOnce(`The data type definition ${parentCellDataType} does not exist.`);\n      return false;\n    }\n    if (parentDataTypeDefinition.baseDataType !== dataTypeDefinition.baseDataType) {\n      warnOnce('The \"baseDataType\" property of a data type definition must match that of its parent.');\n      return false;\n    }\n    return true;\n  }\n  createGroupSafeValueFormatter(dataTypeDefinition) {\n    if (!dataTypeDefinition.valueFormatter) {\n      return void 0;\n    }\n    return (params) => {\n      var _a, _b;\n      if ((_a = params.node) == null ? void 0 : _a.group) {\n        const aggFunc = params.column.getAggFunc();\n        if (aggFunc) {\n          if (aggFunc === \"first\" || aggFunc === \"last\") {\n            return dataTypeDefinition.valueFormatter(params);\n          }\n          if (dataTypeDefinition.baseDataType === \"number\" && aggFunc !== \"count\") {\n            if (typeof params.value === \"number\") {\n              return dataTypeDefinition.valueFormatter(params);\n            }\n            if (typeof params.value === \"object\") {\n              if (!params.value) {\n                return void 0;\n              }\n              if (\"toNumber\" in params.value) {\n                return dataTypeDefinition.valueFormatter(__spreadProps(__spreadValues({}, params), {\n                  value: params.value.toNumber()\n                }));\n              }\n              if (\"value\" in params.value) {\n                return dataTypeDefinition.valueFormatter(__spreadProps(__spreadValues({}, params), {\n                  value: params.value.value\n                }));\n              }\n            }\n          }\n        }\n        if (!this.gos.get(\"suppressGroupMaintainValueType\")) {\n          return void 0;\n        }\n      } else if (this.groupHideOpenParents && params.column.isRowGroupActive()) {\n        if (typeof params.value !== \"string\" || ((_b = dataTypeDefinition.dataTypeMatcher) == null ? void 0 : _b.call(dataTypeDefinition, params.value))) {\n          return dataTypeDefinition.valueFormatter(params);\n        }\n        if (!this.gos.get(\"suppressGroupMaintainValueType\")) {\n          return void 0;\n        }\n      }\n      return dataTypeDefinition.valueFormatter(params);\n    };\n  }\n  updateColDefAndGetDataTypeDefinitionColumnType(colDef, userColDef, colId) {\n    let { cellDataType } = userColDef;\n    const { field } = userColDef;\n    if (cellDataType === void 0) {\n      cellDataType = colDef.cellDataType;\n    }\n    if (cellDataType == null || cellDataType === true) {\n      cellDataType = this.canInferCellDataType(colDef, userColDef) ? this.inferCellDataType(field, colId) : false;\n    }\n    if (!cellDataType) {\n      colDef.cellDataType = false;\n      return void 0;\n    }\n    const dataTypeDefinition = this.dataTypeDefinitions[cellDataType];\n    if (!dataTypeDefinition) {\n      warnOnce(`Missing data type definition - \"${cellDataType}\"`);\n      return void 0;\n    }\n    colDef.cellDataType = cellDataType;\n    if (dataTypeDefinition.groupSafeValueFormatter) {\n      colDef.valueFormatter = dataTypeDefinition.groupSafeValueFormatter;\n    }\n    if (dataTypeDefinition.valueParser) {\n      colDef.valueParser = dataTypeDefinition.valueParser;\n    }\n    if (!dataTypeDefinition.suppressDefaultProperties) {\n      this.setColDefPropertiesForBaseDataType(colDef, dataTypeDefinition, colId);\n    }\n    return dataTypeDefinition.columnTypes;\n  }\n  updateColDefAndGetColumnType(colDef, userColDef, colId) {\n    var _a, _b;\n    const dataTypeDefinitionColumnType = this.updateColDefAndGetDataTypeDefinitionColumnType(colDef, userColDef, colId);\n    const columnTypes = (_b = (_a = userColDef.type) != null ? _a : dataTypeDefinitionColumnType) != null ? _b : colDef.type;\n    colDef.type = columnTypes;\n    return columnTypes ? this.convertColumnTypes(columnTypes) : void 0;\n  }\n  addColumnListeners(column) {\n    if (!this.isWaitingForRowData) {\n      return;\n    }\n    const columnStateUpdates = this.columnStateUpdatesPendingInference[column.getColId()];\n    if (!columnStateUpdates) {\n      return;\n    }\n    const columnListener = (event) => {\n      columnStateUpdates.add(event.key);\n    };\n    column.addEventListener(Column.EVENT_STATE_UPDATED, columnListener);\n    this.columnStateUpdateListenerDestroyFuncs.push(() => column.removeEventListener(Column.EVENT_STATE_UPDATED, columnListener));\n  }\n  canInferCellDataType(colDef, userColDef) {\n    var _a;\n    if (this.rowModel.getType() !== \"clientSide\") {\n      return false;\n    }\n    const propsToCheckForInference = { cellRenderer: true, valueGetter: true, valueParser: true, refData: true };\n    if (this.doColDefPropsPreventInference(userColDef, propsToCheckForInference)) {\n      return false;\n    }\n    const columnTypes = userColDef.type === null ? colDef.type : userColDef.type;\n    if (columnTypes) {\n      const columnTypeDefs = (_a = this.gos.get(\"columnTypes\")) != null ? _a : {};\n      const hasPropsPreventingInference = this.convertColumnTypes(columnTypes).some((columnType) => {\n        const columnTypeDef = columnTypeDefs[columnType.trim()];\n        return columnTypeDef && this.doColDefPropsPreventInference(columnTypeDef, propsToCheckForInference);\n      });\n      if (hasPropsPreventingInference) {\n        return false;\n      }\n    }\n    return !this.doColDefPropsPreventInference(colDef, propsToCheckForInference);\n  }\n  doColDefPropsPreventInference(colDef, propsToCheckForInference) {\n    return [\n      [\"cellRenderer\", \"agSparklineCellRenderer\"],\n      [\"valueGetter\", void 0],\n      [\"valueParser\", void 0],\n      [\"refData\", void 0]\n    ].some(([prop, comparisonValue]) => this.doesColDefPropPreventInference(colDef, propsToCheckForInference, prop, comparisonValue));\n  }\n  doesColDefPropPreventInference(colDef, checkProps, prop, comparisonValue) {\n    if (!checkProps[prop]) {\n      return false;\n    }\n    const value = colDef[prop];\n    if (value === null) {\n      checkProps[prop] = false;\n      return false;\n    } else {\n      return comparisonValue === void 0 ? !!value : value === comparisonValue;\n    }\n  }\n  inferCellDataType(field, colId) {\n    var _a;\n    if (!field) {\n      return void 0;\n    }\n    let value;\n    const initialData = this.getInitialData();\n    if (initialData) {\n      const fieldContainsDots = field.indexOf(\".\") >= 0 && !this.gos.get(\"suppressFieldDotNotation\");\n      value = getValueUsingField(initialData, field, fieldContainsDots);\n    } else {\n      this.initWaitForRowData(colId);\n    }\n    if (value == null) {\n      return void 0;\n    }\n    const [cellDataType] = (_a = Object.entries(this.dataTypeMatchers).find(([_cellDataType, dataTypeMatcher]) => dataTypeMatcher(value))) != null ? _a : [\"object\"];\n    return cellDataType;\n  }\n  getInitialData() {\n    const rowData = this.gos.get(\"rowData\");\n    if (rowData == null ? void 0 : rowData.length) {\n      return rowData[0];\n    } else if (this.initialData) {\n      return this.initialData;\n    } else {\n      const rowNodes = this.rowModel.getRootNode().allLeafChildren;\n      if (rowNodes == null ? void 0 : rowNodes.length) {\n        return rowNodes[0].data;\n      }\n    }\n    return null;\n  }\n  initWaitForRowData(colId) {\n    this.columnStateUpdatesPendingInference[colId] = /* @__PURE__ */ new Set();\n    if (this.isWaitingForRowData) {\n      return;\n    }\n    this.isWaitingForRowData = true;\n    const columnTypeOverridesExist = this.isColumnTypeOverrideInDataTypeDefinitions;\n    if (columnTypeOverridesExist) {\n      this.columnModel.queueResizeOperations();\n    }\n    const destroyFunc = this.addManagedListener(this.eventService, Events.EVENT_ROW_DATA_UPDATE_STARTED, (event) => {\n      const { firstRowData } = event;\n      if (!firstRowData) {\n        return;\n      }\n      destroyFunc == null ? void 0 : destroyFunc();\n      this.isWaitingForRowData = false;\n      this.processColumnsPendingInference(firstRowData, columnTypeOverridesExist);\n      this.columnStateUpdatesPendingInference = {};\n      if (columnTypeOverridesExist) {\n        this.columnModel.processResizeOperations();\n      }\n      const dataTypesInferredEvent = {\n        type: Events.EVENT_DATA_TYPES_INFERRED\n      };\n      this.eventService.dispatchEvent(dataTypesInferredEvent);\n    });\n  }\n  isPendingInference() {\n    return this.isWaitingForRowData;\n  }\n  processColumnsPendingInference(firstRowData, columnTypeOverridesExist) {\n    this.initialData = firstRowData;\n    const state = [];\n    this.columnStateUpdateListenerDestroyFuncs.forEach((destroyFunc) => destroyFunc());\n    this.columnStateUpdateListenerDestroyFuncs = [];\n    const newRowGroupColumnStateWithoutIndex = {};\n    const newPivotColumnStateWithoutIndex = {};\n    Object.entries(this.columnStateUpdatesPendingInference).forEach(([colId, columnStateUpdates]) => {\n      const column = this.columnModel.getGridColumn(colId);\n      if (!column) {\n        return;\n      }\n      const oldColDef = column.getColDef();\n      if (!this.columnModel.resetColumnDefIntoColumn(column, \"cellDataTypeInferred\")) {\n        return;\n      }\n      const newColDef = column.getColDef();\n      if (columnTypeOverridesExist && newColDef.type && newColDef.type !== oldColDef.type) {\n        const updatedColumnState = this.getUpdatedColumnState(column, columnStateUpdates);\n        if (updatedColumnState.rowGroup && updatedColumnState.rowGroupIndex == null) {\n          newRowGroupColumnStateWithoutIndex[colId] = updatedColumnState;\n        }\n        if (updatedColumnState.pivot && updatedColumnState.pivotIndex == null) {\n          newPivotColumnStateWithoutIndex[colId] = updatedColumnState;\n        }\n        state.push(updatedColumnState);\n      }\n    });\n    if (columnTypeOverridesExist) {\n      state.push(...this.columnModel.generateColumnStateForRowGroupAndPivotIndexes(newRowGroupColumnStateWithoutIndex, newPivotColumnStateWithoutIndex));\n    }\n    if (state.length) {\n      this.columnModel.applyColumnState({ state }, \"cellDataTypeInferred\");\n    }\n    this.initialData = null;\n  }\n  getUpdatedColumnState(column, columnStateUpdates) {\n    const columnState = this.columnModel.getColumnStateFromColDef(column);\n    columnStateUpdates.forEach((key) => {\n      delete columnState[key];\n      if (key === \"rowGroup\") {\n        delete columnState.rowGroupIndex;\n      } else if (key === \"pivot\") {\n        delete columnState.pivotIndex;\n      }\n    });\n    return columnState;\n  }\n  checkObjectValueHandlers(defaultDataTypes) {\n    const resolvedObjectDataTypeDefinition = this.dataTypeDefinitions.object;\n    const defaultObjectDataTypeDefinition = defaultDataTypes.object;\n    this.hasObjectValueParser = resolvedObjectDataTypeDefinition.valueParser !== defaultObjectDataTypeDefinition.valueParser;\n    this.hasObjectValueFormatter = resolvedObjectDataTypeDefinition.valueFormatter !== defaultObjectDataTypeDefinition.valueFormatter;\n  }\n  convertColumnTypes(type) {\n    let typeKeys = [];\n    if (type instanceof Array) {\n      const invalidArray = type.some((a) => typeof a !== \"string\");\n      if (invalidArray) {\n        console.warn(\"if colDef.type is supplied an array it should be of type 'string[]'\");\n      } else {\n        typeKeys = type;\n      }\n    } else if (typeof type === \"string\") {\n      typeKeys = type.split(\",\");\n    } else {\n      console.warn(\"colDef.type should be of type 'string' | 'string[]'\");\n    }\n    return typeKeys;\n  }\n  getDateStringTypeDefinition(column) {\n    var _a;\n    if (!column) {\n      return this.dataTypeDefinitions.dateString;\n    }\n    return (_a = this.getDataTypeDefinition(column)) != null ? _a : this.dataTypeDefinitions.dateString;\n  }\n  getDateParserFunction(column) {\n    return this.getDateStringTypeDefinition(column).dateParser;\n  }\n  getDateFormatterFunction(column) {\n    return this.getDateStringTypeDefinition(column).dateFormatter;\n  }\n  getDataTypeDefinition(column) {\n    const colDef = column.getColDef();\n    if (!colDef.cellDataType) {\n      return void 0;\n    }\n    return this.dataTypeDefinitions[colDef.cellDataType];\n  }\n  getBaseDataType(column) {\n    var _a;\n    return (_a = this.getDataTypeDefinition(column)) == null ? void 0 : _a.baseDataType;\n  }\n  checkType(column, value) {\n    var _a;\n    if (value == null) {\n      return true;\n    }\n    const dataTypeMatcher = (_a = this.getDataTypeDefinition(column)) == null ? void 0 : _a.dataTypeMatcher;\n    if (!dataTypeMatcher) {\n      return true;\n    }\n    return dataTypeMatcher(value);\n  }\n  validateColDef(colDef) {\n    if (colDef.cellDataType === \"object\") {\n      if (colDef.valueFormatter === this.dataTypeDefinitions.object.groupSafeValueFormatter && !this.hasObjectValueFormatter) {\n        warnOnce('Cell data type is \"object\" but no value formatter has been provided. Please either provide an object data type definition with a value formatter, or set \"colDef.valueFormatter\"');\n      }\n      if (colDef.editable && colDef.valueParser === this.dataTypeDefinitions.object.valueParser && !this.hasObjectValueParser) {\n        warnOnce('Cell data type is \"object\" but no value parser has been provided. Please either provide an object data type definition with a value parser, or set \"colDef.valueParser\"');\n      }\n    }\n  }\n  setColDefPropertiesForBaseDataType(colDef, dataTypeDefinition, colId) {\n    const formatValue = (column, node, value) => {\n      let valueFormatter = column.getColDef().valueFormatter;\n      if (valueFormatter === dataTypeDefinition.groupSafeValueFormatter) {\n        valueFormatter = dataTypeDefinition.valueFormatter;\n      }\n      return this.valueService.formatValue(column, node, value, valueFormatter);\n    };\n    const usingSetFilter = ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/set-filter\" /* SetFilterModule */, this.context.getGridId());\n    const translate = this.localeService.getLocaleTextFunc();\n    const mergeFilterParams = (params) => {\n      const { filterParams } = colDef;\n      colDef.filterParams = typeof filterParams === \"object\" ? __spreadValues(__spreadValues({}, filterParams), params) : params;\n    };\n    switch (dataTypeDefinition.baseDataType) {\n      case \"number\": {\n        colDef.cellEditor = \"agNumberCellEditor\";\n        if (usingSetFilter) {\n          mergeFilterParams({\n            comparator: (a, b) => {\n              const valA = a == null ? 0 : parseInt(a);\n              const valB = b == null ? 0 : parseInt(b);\n              if (valA === valB)\n                return 0;\n              return valA > valB ? 1 : -1;\n            }\n          });\n        }\n        break;\n      }\n      case \"boolean\": {\n        colDef.cellEditor = \"agCheckboxCellEditor\";\n        colDef.cellRenderer = \"agCheckboxCellRenderer\";\n        colDef.suppressKeyboardEvent = (params) => !!params.colDef.editable && params.event.key === KeyCode.SPACE;\n        if (usingSetFilter) {\n          mergeFilterParams({\n            valueFormatter: (params) => {\n              if (!exists(params.value)) {\n                return translate(\"blanks\", \"(Blanks)\");\n              }\n              return translate(String(params.value), params.value ? \"True\" : \"False\");\n            }\n          });\n        } else {\n          mergeFilterParams({\n            maxNumConditions: 1,\n            debounceMs: 0,\n            filterOptions: [\n              \"empty\",\n              {\n                displayKey: \"true\",\n                displayName: \"True\",\n                predicate: (_filterValues, cellValue) => cellValue,\n                numberOfInputs: 0\n              },\n              {\n                displayKey: \"false\",\n                displayName: \"False\",\n                predicate: (_filterValues, cellValue) => cellValue === false,\n                numberOfInputs: 0\n              }\n            ]\n          });\n        }\n        break;\n      }\n      case \"date\": {\n        colDef.cellEditor = \"agDateCellEditor\";\n        colDef.keyCreator = (params) => formatValue(params.column, params.node, params.value);\n        if (usingSetFilter) {\n          mergeFilterParams({\n            valueFormatter: (params) => {\n              const valueFormatted = formatValue(params.column, params.node, params.value);\n              return exists(valueFormatted) ? valueFormatted : translate(\"blanks\", \"(Blanks)\");\n            },\n            treeList: true,\n            treeListFormatter: (pathKey, level) => {\n              if (level === 1 && pathKey != null) {\n                const monthKey = MONTH_KEYS[Number(pathKey) - 1];\n                return translate(monthKey, MONTH_LOCALE_TEXT[monthKey]);\n              }\n              return pathKey != null ? pathKey : translate(\"blanks\", \"(Blanks)\");\n            }\n          });\n        }\n        break;\n      }\n      case \"dateString\": {\n        colDef.cellEditor = \"agDateStringCellEditor\";\n        colDef.keyCreator = (params) => formatValue(params.column, params.node, params.value);\n        const convertToDate = dataTypeDefinition.dateParser;\n        if (usingSetFilter) {\n          mergeFilterParams({\n            valueFormatter: (params) => {\n              const valueFormatted = formatValue(params.column, params.node, params.value);\n              return exists(valueFormatted) ? valueFormatted : translate(\"blanks\", \"(Blanks)\");\n            },\n            treeList: true,\n            treeListPathGetter: (value) => {\n              const date = convertToDate(value != null ? value : void 0);\n              return date ? [String(date.getFullYear()), String(date.getMonth() + 1), String(date.getDate())] : null;\n            },\n            treeListFormatter: (pathKey, level) => {\n              if (level === 1 && pathKey != null) {\n                const monthKey = MONTH_KEYS[Number(pathKey) - 1];\n                return translate(monthKey, MONTH_LOCALE_TEXT[monthKey]);\n              }\n              return pathKey != null ? pathKey : translate(\"blanks\", \"(Blanks)\");\n            }\n          });\n        } else {\n          mergeFilterParams({\n            comparator: (filterDate, cellValue) => {\n              const cellAsDate = convertToDate(cellValue);\n              if (cellValue == null || cellAsDate < filterDate) {\n                return -1;\n              }\n              if (cellAsDate > filterDate) {\n                return 1;\n              }\n              return 0;\n            }\n          });\n        }\n        break;\n      }\n      case \"object\": {\n        colDef.cellEditorParams = {\n          useFormatter: true\n        };\n        colDef.comparator = (a, b) => {\n          const column = this.columnModel.getPrimaryColumn(colId);\n          const colDef2 = column == null ? void 0 : column.getColDef();\n          if (!column || !colDef2) {\n            return 0;\n          }\n          const valA = a == null ? \"\" : formatValue(column, null, a);\n          const valB = b == null ? \"\" : formatValue(column, null, b);\n          if (valA === valB)\n            return 0;\n          return valA > valB ? 1 : -1;\n        };\n        colDef.keyCreator = (params) => formatValue(params.column, params.node, params.value);\n        if (usingSetFilter) {\n          mergeFilterParams({\n            valueFormatter: (params) => {\n              const valueFormatted = formatValue(params.column, params.node, params.value);\n              return exists(valueFormatted) ? valueFormatted : translate(\"blanks\", \"(Blanks)\");\n            }\n          });\n        } else {\n          colDef.filterValueGetter = (params) => formatValue(\n            params.column,\n            params.node,\n            this.valueService.getValue(params.column, params.node)\n          );\n        }\n        break;\n      }\n    }\n  }\n  getDefaultDataTypes() {\n    const defaultDateFormatMatcher = (value) => !!value.match(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\");\n    const translate = this.localeService.getLocaleTextFunc();\n    return {\n      number: {\n        baseDataType: \"number\",\n        // can be empty space with legacy copy\n        valueParser: (params) => {\n          var _a, _b;\n          return ((_b = (_a = params.newValue) == null ? void 0 : _a.trim) == null ? void 0 : _b.call(_a)) === \"\" ? null : Number(params.newValue);\n        },\n        valueFormatter: (params) => {\n          if (params.value == null) {\n            return \"\";\n          }\n          if (typeof params.value !== \"number\" || isNaN(params.value)) {\n            return translate(\"invalidNumber\", \"Invalid Number\");\n          }\n          return String(params.value);\n        },\n        dataTypeMatcher: (value) => typeof value === \"number\"\n      },\n      text: {\n        baseDataType: \"text\",\n        valueParser: (params) => params.newValue === \"\" ? null : toStringOrNull(params.newValue),\n        dataTypeMatcher: (value) => typeof value === \"string\"\n      },\n      boolean: {\n        baseDataType: \"boolean\",\n        valueParser: (params) => {\n          var _a, _b;\n          if (params.newValue == null) {\n            return params.newValue;\n          }\n          return ((_b = (_a = params.newValue) == null ? void 0 : _a.trim) == null ? void 0 : _b.call(_a)) === \"\" ? null : String(params.newValue).toLowerCase() === \"true\";\n        },\n        valueFormatter: (params) => params.value == null ? \"\" : String(params.value),\n        dataTypeMatcher: (value) => typeof value === \"boolean\"\n      },\n      date: {\n        baseDataType: \"date\",\n        valueParser: (params) => parseDateTimeFromString(params.newValue == null ? null : String(params.newValue)),\n        valueFormatter: (params) => {\n          var _a;\n          if (params.value == null) {\n            return \"\";\n          }\n          if (!(params.value instanceof Date) || isNaN(params.value.getTime())) {\n            return translate(\"invalidDate\", \"Invalid Date\");\n          }\n          return (_a = serialiseDate(params.value, false)) != null ? _a : \"\";\n        },\n        dataTypeMatcher: (value) => value instanceof Date\n      },\n      dateString: {\n        baseDataType: \"dateString\",\n        dateParser: (value) => {\n          var _a;\n          return (_a = parseDateTimeFromString(value)) != null ? _a : void 0;\n        },\n        dateFormatter: (value) => {\n          var _a;\n          return (_a = serialiseDate(value != null ? value : null, false)) != null ? _a : void 0;\n        },\n        valueParser: (params) => defaultDateFormatMatcher(String(params.newValue)) ? params.newValue : null,\n        valueFormatter: (params) => defaultDateFormatMatcher(String(params.value)) ? params.value : \"\",\n        dataTypeMatcher: (value) => typeof value === \"string\" && defaultDateFormatMatcher(value)\n      },\n      object: {\n        baseDataType: \"object\",\n        valueParser: () => null,\n        valueFormatter: (params) => {\n          var _a;\n          return (_a = toStringOrNull(params.value)) != null ? _a : \"\";\n        }\n      }\n    };\n  }\n};\n__decorateClass([\n  Autowired(\"rowModel\")\n], DataTypeService.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], DataTypeService.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"valueService\")\n], DataTypeService.prototype, \"valueService\", 2);\n__decorateClass([\n  PostConstruct\n], DataTypeService.prototype, \"init\", 1);\nDataTypeService = __decorateClass([\n  Bean(\"dataTypeService\")\n], DataTypeService);\n\n// community-modules/core/src/syncService.ts\nvar SyncService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.waitingForColumns = false;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"columnDefs\", (event) => this.setColumnDefs(event));\n  }\n  start() {\n    this.ctrlsService.whenReady(() => {\n      const columnDefs = this.gos.get(\"columnDefs\");\n      if (columnDefs) {\n        this.setColumnsAndData(columnDefs);\n      } else {\n        this.waitingForColumns = true;\n      }\n      this.gridReady();\n    });\n  }\n  setColumnsAndData(columnDefs) {\n    this.columnModel.setColumnDefs(columnDefs != null ? columnDefs : [], \"gridInitializing\");\n    this.rowModel.start();\n  }\n  gridReady() {\n    this.dispatchGridReadyEvent();\n    const isEnterprise = ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/core\" /* EnterpriseCoreModule */, this.context.getGridId());\n    const logger = new Logger(\"AG Grid\", () => this.gos.get(\"debug\"));\n    logger.log(`initialised successfully, enterprise = ${isEnterprise}`);\n  }\n  dispatchGridReadyEvent() {\n    const readyEvent = {\n      type: Events.EVENT_GRID_READY\n    };\n    this.eventService.dispatchEvent(readyEvent);\n  }\n  setColumnDefs(event) {\n    const columnDefs = this.gos.get(\"columnDefs\");\n    if (!columnDefs) {\n      return;\n    }\n    if (this.waitingForColumns) {\n      this.waitingForColumns = false;\n      this.setColumnsAndData(columnDefs);\n      return;\n    }\n    this.columnModel.setColumnDefs(columnDefs, convertSourceType(event.source));\n  }\n};\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], SyncService.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], SyncService.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"rowModel\")\n], SyncService.prototype, \"rowModel\", 2);\n__decorateClass([\n  PostConstruct\n], SyncService.prototype, \"postConstruct\", 1);\nSyncService = __decorateClass([\n  Bean(\"syncService\")\n], SyncService);\n\n// community-modules/core/src/rendering/overlays/overlayService.ts\nvar OverlayService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.manuallyDisplayed = false;\n  }\n  postConstruct() {\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_DATA_UPDATED, () => this.onRowDataUpdated());\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, () => this.onNewColumnsLoaded());\n  }\n  registerOverlayWrapperComp(overlayWrapperComp) {\n    this.overlayWrapperComp = overlayWrapperComp;\n    if (!this.gos.get(\"columnDefs\") || this.gos.isRowModelType(\"clientSide\") && !this.gos.get(\"rowData\")) {\n      this.showLoadingOverlay();\n    }\n  }\n  showLoadingOverlay() {\n    if (this.gos.get(\"suppressLoadingOverlay\")) {\n      return;\n    }\n    const params = {};\n    const compDetails = this.userComponentFactory.getLoadingOverlayCompDetails(params);\n    this.showOverlay(compDetails, \"ag-overlay-loading-wrapper\", \"loadingOverlayComponentParams\");\n  }\n  showNoRowsOverlay() {\n    if (this.gos.get(\"suppressNoRowsOverlay\")) {\n      return;\n    }\n    const params = {};\n    const compDetails = this.userComponentFactory.getNoRowsOverlayCompDetails(params);\n    this.showOverlay(compDetails, \"ag-overlay-no-rows-wrapper\", \"noRowsOverlayComponentParams\");\n  }\n  showOverlay(compDetails, wrapperCssClass, gridOption) {\n    const promise = compDetails.newAgStackInstance();\n    const listenerDestroyFunc = this.addManagedPropertyListener(gridOption, ({ currentValue }) => {\n      promise.then((comp) => {\n        if (comp.refresh) {\n          comp.refresh(this.gos.addGridCommonParams(__spreadValues({}, currentValue != null ? currentValue : {})));\n        }\n      });\n    });\n    this.manuallyDisplayed = this.columnModel.isReady() && !this.paginationProxy.isEmpty();\n    this.overlayWrapperComp.showOverlay(promise, wrapperCssClass, listenerDestroyFunc);\n  }\n  hideOverlay() {\n    this.manuallyDisplayed = false;\n    this.overlayWrapperComp.hideOverlay();\n  }\n  showOrHideOverlay() {\n    const isEmpty = this.paginationProxy.isEmpty();\n    const isSuppressNoRowsOverlay = this.gos.get(\"suppressNoRowsOverlay\");\n    if (isEmpty && !isSuppressNoRowsOverlay) {\n      this.showNoRowsOverlay();\n    } else {\n      this.hideOverlay();\n    }\n  }\n  onRowDataUpdated() {\n    this.showOrHideOverlay();\n  }\n  onNewColumnsLoaded() {\n    if (this.columnModel.isReady() && !this.paginationProxy.isEmpty() && !this.manuallyDisplayed) {\n      this.hideOverlay();\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"userComponentFactory\")\n], OverlayService.prototype, \"userComponentFactory\", 2);\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], OverlayService.prototype, \"paginationProxy\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], OverlayService.prototype, \"columnModel\", 2);\n__decorateClass([\n  PostConstruct\n], OverlayService.prototype, \"postConstruct\", 1);\nOverlayService = __decorateClass([\n  Bean(\"overlayService\")\n], OverlayService);\n\n// community-modules/core/src/misc/stateService.ts\nvar StateService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.suppressEvents = true;\n    this.queuedUpdateSources = /* @__PURE__ */ new Set();\n    this.dispatchStateUpdateEventDebounced = debounce(() => this.dispatchQueuedStateUpdateEvents(), 0);\n    // If user is doing a manual expand all node by node, we don't want to process one at a time.\n    // EVENT_ROW_GROUP_OPENED is already async, so no impact of making the state async here.\n    this.onRowGroupOpenedDebounced = debounce(() => this.updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState()), 0);\n    // similar to row expansion, want to debounce. However, selection is synchronous, so need to mark as stale in case `getState` is called.\n    this.onRowSelectedDebounced = debounce(() => {\n      this.staleStateKeys.delete(\"rowSelection\");\n      this.updateCachedState(\"rowSelection\", this.getRowSelectionState());\n    }, 0);\n    this.staleStateKeys = /* @__PURE__ */ new Set();\n  }\n  postConstruct() {\n    var _a;\n    this.isClientSideRowModel = this.rowModel.getType() === \"clientSide\";\n    this.cachedState = (_a = this.gos.get(\"initialState\")) != null ? _a : {};\n    this.ctrlsService.whenReady(() => this.suppressEventsAndDispatchInitEvent(() => this.setupStateOnGridReady()));\n    const newColumnsLoadedDestroyFunc = this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, ({ source }) => {\n      if (source === \"gridInitializing\") {\n        newColumnsLoadedDestroyFunc == null ? void 0 : newColumnsLoadedDestroyFunc();\n        this.suppressEventsAndDispatchInitEvent(() => this.setupStateOnColumnsInitialised());\n      }\n    });\n    const rowCountReadyDestroyFunc = this.addManagedListener(this.eventService, Events.EVENT_ROW_COUNT_READY, () => {\n      rowCountReadyDestroyFunc == null ? void 0 : rowCountReadyDestroyFunc();\n      this.suppressEventsAndDispatchInitEvent(() => this.setupStateOnRowCountReady());\n    });\n    const firstDataRenderedDestroyFunc = this.addManagedListener(this.eventService, Events.EVENT_FIRST_DATA_RENDERED, () => {\n      firstDataRenderedDestroyFunc == null ? void 0 : firstDataRenderedDestroyFunc();\n      this.suppressEventsAndDispatchInitEvent(() => this.setupStateOnFirstDataRendered());\n    });\n  }\n  getState() {\n    if (this.staleStateKeys.size) {\n      this.refreshStaleState();\n    }\n    return this.cachedState;\n  }\n  setupStateOnGridReady() {\n    this.updateCachedState(\"sideBar\", this.getSideBarState());\n    this.addManagedListener(this.eventService, Events.EVENT_TOOL_PANEL_VISIBLE_CHANGED, () => this.updateCachedState(\"sideBar\", this.getSideBarState()));\n    this.addManagedListener(this.eventService, Events.EVENT_SIDE_BAR_UPDATED, () => this.updateCachedState(\"sideBar\", this.getSideBarState()));\n  }\n  setupStateOnColumnsInitialised() {\n    var _a;\n    const initialState = (_a = this.gos.get(\"initialState\")) != null ? _a : {};\n    this.setColumnState(initialState);\n    this.setColumnGroupState(initialState);\n    this.updateColumnState([\n      \"aggregation\",\n      \"columnOrder\",\n      \"columnPinning\",\n      \"columnSizing\",\n      \"columnVisibility\",\n      \"pivot\",\n      \"pivot\",\n      \"rowGroup\",\n      \"sort\"\n    ]);\n    this.updateCachedState(\"columnGroup\", this.getColumnGroupState());\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VALUE_CHANGED, () => this.updateColumnState([\"aggregation\"]));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_MOVED, () => this.updateColumnState([\"columnOrder\"]));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PINNED, () => this.updateColumnState([\"columnPinning\"]));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_RESIZED, () => this.updateColumnState([\"columnSizing\"]));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VISIBLE, () => this.updateColumnState([\"columnVisibility\"]));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_CHANGED, () => this.updateColumnState([\"pivot\"]));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, () => this.updateColumnState([\"pivot\"]));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, () => this.updateColumnState([\"rowGroup\"]));\n    this.addManagedListener(this.eventService, Events.EVENT_SORT_CHANGED, () => this.updateColumnState([\"sort\"]));\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, () => this.updateColumnState([\n      \"aggregation\",\n      \"columnOrder\",\n      \"columnPinning\",\n      \"columnSizing\",\n      \"columnVisibility\",\n      \"pivot\",\n      \"pivot\",\n      \"rowGroup\",\n      \"sort\"\n    ]));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_GROUP_OPENED, () => this.updateCachedState(\"columnGroup\", this.getColumnGroupState()));\n  }\n  setupStateOnRowCountReady() {\n    var _a;\n    const {\n      filter: filterState,\n      rowGroupExpansion: rowGroupExpansionState,\n      rowSelection: rowSelectionState,\n      pagination: paginationState\n    } = (_a = this.gos.get(\"initialState\")) != null ? _a : {};\n    const advancedFilterModel = this.gos.get(\"advancedFilterModel\");\n    if (filterState || advancedFilterModel) {\n      this.setFilterState(filterState, advancedFilterModel);\n    }\n    if (rowGroupExpansionState) {\n      this.setRowGroupExpansionState(rowGroupExpansionState);\n    }\n    if (rowSelectionState) {\n      this.setRowSelectionState(rowSelectionState);\n    }\n    if (paginationState) {\n      this.setPaginationState(paginationState);\n    }\n    this.updateCachedState(\"filter\", this.getFilterState());\n    this.updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState());\n    this.updateCachedState(\"rowSelection\", this.getRowSelectionState());\n    this.updateCachedState(\"pagination\", this.getPaginationState());\n    this.addManagedListener(this.eventService, Events.EVENT_FILTER_CHANGED, () => this.updateCachedState(\"filter\", this.getFilterState()));\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_GROUP_OPENED, () => this.onRowGroupOpenedDebounced());\n    this.addManagedListener(this.eventService, Events.EVENT_EXPAND_COLLAPSE_ALL, () => this.updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState()));\n    this.addManagedListener(this.eventService, Events.EVENT_SELECTION_CHANGED, () => {\n      this.staleStateKeys.add(\"rowSelection\");\n      this.onRowSelectedDebounced();\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_PAGINATION_CHANGED, (event) => {\n      if (event.newPage || event.newPageSize) {\n        this.updateCachedState(\"pagination\", this.getPaginationState());\n      }\n    });\n  }\n  setupStateOnFirstDataRendered() {\n    var _a;\n    const {\n      scroll: scrollState,\n      rangeSelection: rangeSelectionState,\n      focusedCell: focusedCellState,\n      columnOrder: columnOrderState\n    } = (_a = this.gos.get(\"initialState\")) != null ? _a : {};\n    if (focusedCellState) {\n      this.setFocusedCellState(focusedCellState);\n    }\n    if (rangeSelectionState) {\n      this.setRangeSelectionState(rangeSelectionState);\n    }\n    if (scrollState) {\n      this.setScrollState(scrollState);\n    }\n    this.setColumnPivotState(!!(columnOrderState == null ? void 0 : columnOrderState.orderedColIds));\n    this.updateCachedState(\"sideBar\", this.getSideBarState());\n    this.updateCachedState(\"focusedCell\", this.getFocusedCellState());\n    this.updateCachedState(\"rangeSelection\", this.getRangeSelectionState());\n    this.updateCachedState(\"scroll\", this.getScrollState());\n    this.addManagedListener(this.eventService, Events.EVENT_CELL_FOCUSED, () => this.updateCachedState(\"focusedCell\", this.getFocusedCellState()));\n    this.addManagedListener(this.eventService, Events.EVENT_RANGE_SELECTION_CHANGED, (event) => {\n      if (event.finished) {\n        this.updateCachedState(\"rangeSelection\", this.getRangeSelectionState());\n      }\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_BODY_SCROLL_END, () => this.updateCachedState(\"scroll\", this.getScrollState()));\n  }\n  getColumnState() {\n    const pivotMode = this.columnModel.isPivotMode();\n    const sortColumns = [];\n    const groupColIds = [];\n    const aggregationColumns = [];\n    const pivotColIds = [];\n    const leftColIds = [];\n    const rightColIds = [];\n    const hiddenColIds = [];\n    const columnSizes = [];\n    const columns = [];\n    const columnState = this.columnModel.getColumnState();\n    for (let i = 0; i < columnState.length; i++) {\n      const {\n        colId,\n        sort,\n        sortIndex,\n        rowGroup,\n        rowGroupIndex,\n        aggFunc,\n        pivot,\n        pivotIndex,\n        pinned,\n        hide,\n        width,\n        flex\n      } = columnState[i];\n      columns.push(colId);\n      if (sort) {\n        sortColumns[sortIndex != null ? sortIndex : 0] = { colId, sort };\n      }\n      if (rowGroup) {\n        groupColIds[rowGroupIndex != null ? rowGroupIndex : 0] = colId;\n      }\n      if (typeof aggFunc === \"string\") {\n        aggregationColumns.push({ colId, aggFunc });\n      }\n      if (pivot) {\n        pivotColIds[pivotIndex != null ? pivotIndex : 0] = colId;\n      }\n      if (pinned) {\n        (pinned === \"right\" ? rightColIds : leftColIds).push(colId);\n      }\n      if (hide) {\n        hiddenColIds.push(colId);\n      }\n      if (flex || width) {\n        columnSizes.push({ colId, flex: flex != null ? flex : void 0, width });\n      }\n    }\n    return {\n      sort: sortColumns.length ? { sortModel: sortColumns } : void 0,\n      rowGroup: groupColIds.length ? { groupColIds } : void 0,\n      aggregation: aggregationColumns.length ? { aggregationModel: aggregationColumns } : void 0,\n      pivot: pivotColIds.length || pivotMode ? { pivotMode, pivotColIds } : void 0,\n      columnPinning: leftColIds.length || rightColIds.length ? { leftColIds, rightColIds } : void 0,\n      columnVisibility: hiddenColIds.length ? { hiddenColIds } : void 0,\n      columnSizing: columnSizes.length ? { columnSizingModel: columnSizes } : void 0,\n      columnOrder: columns.length ? { orderedColIds: columns } : void 0\n    };\n  }\n  setColumnState(initialState) {\n    const {\n      sort: sortState,\n      rowGroup: groupState,\n      aggregation: aggregationState,\n      pivot: pivotState,\n      columnPinning: columnPinningState,\n      columnVisibility: columnVisibilityState,\n      columnSizing: columnSizingState,\n      columnOrder: columnOrderState\n    } = initialState;\n    const columnStateMap = {};\n    const getColumnState = (colId) => {\n      let columnState = columnStateMap[colId];\n      if (columnState) {\n        return columnState;\n      }\n      columnState = { colId };\n      columnStateMap[colId] = columnState;\n      return columnState;\n    };\n    if (sortState) {\n      sortState.sortModel.forEach(({ colId, sort }, sortIndex) => {\n        const columnState = getColumnState(colId);\n        columnState.sort = sort;\n        columnState.sortIndex = sortIndex;\n      });\n    }\n    if (groupState) {\n      groupState.groupColIds.forEach((colId, rowGroupIndex) => {\n        const columnState = getColumnState(colId);\n        columnState.rowGroup = true;\n        columnState.rowGroupIndex = rowGroupIndex;\n      });\n    }\n    if (aggregationState) {\n      aggregationState.aggregationModel.forEach(({ colId, aggFunc }) => {\n        getColumnState(colId).aggFunc = aggFunc;\n      });\n    }\n    if (pivotState) {\n      pivotState.pivotColIds.forEach((colId, pivotIndex) => {\n        const columnState = getColumnState(colId);\n        columnState.pivot = true;\n        columnState.pivotIndex = pivotIndex;\n      });\n      this.gos.updateGridOptions({ options: { pivotMode: pivotState.pivotMode }, source: \"gridInitializing\" });\n    }\n    if (columnPinningState) {\n      columnPinningState.leftColIds.forEach((colId) => {\n        getColumnState(colId).pinned = \"left\";\n      });\n      columnPinningState.rightColIds.forEach((colId) => {\n        getColumnState(colId).pinned = \"right\";\n      });\n    }\n    if (columnVisibilityState) {\n      columnVisibilityState.hiddenColIds.forEach((colId) => {\n        getColumnState(colId).hide = true;\n      });\n    }\n    if (columnSizingState) {\n      columnSizingState.columnSizingModel.forEach(({ colId, flex, width }) => {\n        const columnState = getColumnState(colId);\n        columnState.flex = flex != null ? flex : null;\n        columnState.width = width;\n      });\n    }\n    const columns = columnOrderState == null ? void 0 : columnOrderState.orderedColIds;\n    const applyOrder = !!(columns == null ? void 0 : columns.length);\n    const columnStates = applyOrder ? columns.map((colId) => getColumnState(colId)) : Object.values(columnStateMap);\n    if (columnStates.length) {\n      this.columnStates = columnStates;\n      const defaultState = {\n        sort: null,\n        sortIndex: null,\n        rowGroup: null,\n        rowGroupIndex: null,\n        aggFunc: null,\n        pivot: null,\n        pivotIndex: null,\n        pinned: null,\n        hide: null,\n        flex: null\n      };\n      this.columnModel.applyColumnState({\n        state: columnStates,\n        applyOrder,\n        defaultState\n      }, \"gridInitializing\");\n    }\n  }\n  setColumnPivotState(applyOrder) {\n    const columnStates = this.columnStates;\n    this.columnStates = void 0;\n    const columnGroupStates = this.columnGroupStates;\n    this.columnGroupStates = void 0;\n    if (!this.columnModel.isSecondaryColumnsPresent()) {\n      return;\n    }\n    if (columnStates) {\n      let secondaryColumnStates = [];\n      for (const columnState of columnStates) {\n        if (this.columnModel.getSecondaryColumn(columnState.colId)) {\n          secondaryColumnStates.push(columnState);\n        }\n      }\n      this.columnModel.applyColumnState({\n        state: secondaryColumnStates,\n        applyOrder\n      }, \"gridInitializing\");\n    }\n    if (columnGroupStates) {\n      this.columnModel.setColumnGroupState(columnGroupStates, \"gridInitializing\");\n    }\n  }\n  getColumnGroupState() {\n    const columnGroupState = this.columnModel.getColumnGroupState();\n    const openColumnGroups = [];\n    columnGroupState.forEach(({ groupId, open }) => {\n      if (open) {\n        openColumnGroups.push(groupId);\n      }\n    });\n    return openColumnGroups.length ? { openColumnGroupIds: openColumnGroups } : void 0;\n  }\n  setColumnGroupState(initialState) {\n    var _a;\n    if (!initialState.hasOwnProperty(\"columnGroup\")) {\n      return;\n    }\n    const openColumnGroups = new Set((_a = initialState.columnGroup) == null ? void 0 : _a.openColumnGroupIds);\n    const existingColumnGroupState = this.columnModel.getColumnGroupState();\n    const stateItems = existingColumnGroupState.map(({ groupId }) => {\n      const open = openColumnGroups.has(groupId);\n      if (open) {\n        openColumnGroups.delete(groupId);\n      }\n      return {\n        groupId,\n        open\n      };\n    });\n    openColumnGroups.forEach((groupId) => {\n      stateItems.push({\n        groupId,\n        open: true\n      });\n    });\n    if (stateItems.length) {\n      this.columnGroupStates = stateItems;\n    }\n    this.columnModel.setColumnGroupState(stateItems, \"gridInitializing\");\n  }\n  getFilterState() {\n    var _a;\n    let filterModel = this.filterManager.getFilterModel();\n    if (filterModel && Object.keys(filterModel).length === 0) {\n      filterModel = void 0;\n    }\n    const advancedFilterModel = (_a = this.filterManager.getAdvancedFilterModel()) != null ? _a : void 0;\n    return filterModel || advancedFilterModel ? { filterModel, advancedFilterModel } : void 0;\n  }\n  setFilterState(filterState, gridOptionAdvancedFilterModel) {\n    const { filterModel, advancedFilterModel } = filterState != null ? filterState : { advancedFilterModel: gridOptionAdvancedFilterModel };\n    if (filterModel) {\n      this.filterManager.setFilterModel(filterModel, \"columnFilter\");\n    }\n    if (advancedFilterModel) {\n      this.filterManager.setAdvancedFilterModel(advancedFilterModel);\n    }\n  }\n  getRangeSelectionState() {\n    var _a;\n    const cellRanges = (_a = this.rangeService) == null ? void 0 : _a.getCellRanges().map((cellRange) => {\n      const { id, type, startRow, endRow, columns, startColumn } = cellRange;\n      return {\n        id,\n        type,\n        startRow,\n        endRow,\n        colIds: columns.map((column) => column.getColId()),\n        startColId: startColumn.getColId()\n      };\n    });\n    return (cellRanges == null ? void 0 : cellRanges.length) ? { cellRanges } : void 0;\n  }\n  setRangeSelectionState(rangeSelectionState) {\n    if (!this.gos.get(\"enableRangeSelection\") || !this.rangeService) {\n      return;\n    }\n    const cellRanges = [];\n    rangeSelectionState.cellRanges.forEach((cellRange) => {\n      const columns = [];\n      cellRange.colIds.forEach((colId) => {\n        const column = this.columnModel.getGridColumn(colId);\n        if (column) {\n          columns.push(column);\n        }\n      });\n      if (!columns.length) {\n        return;\n      }\n      let startColumn = this.columnModel.getGridColumn(cellRange.startColId);\n      if (!startColumn) {\n        const allColumns = this.columnModel.getAllDisplayedColumns();\n        const columnSet = new Set(columns);\n        startColumn = allColumns.find((column) => columnSet.has(column));\n      }\n      cellRanges.push(__spreadProps(__spreadValues({}, cellRange), {\n        columns,\n        startColumn\n      }));\n    });\n    this.rangeService.setCellRanges(cellRanges);\n  }\n  getScrollState() {\n    var _a, _b, _c;\n    if (!this.isClientSideRowModel) {\n      return void 0;\n    }\n    const scrollFeature = (_a = this.ctrlsService.getGridBodyCtrl()) == null ? void 0 : _a.getScrollFeature();\n    const { left } = (_b = scrollFeature == null ? void 0 : scrollFeature.getHScrollPosition()) != null ? _b : { left: 0 };\n    const { top } = (_c = scrollFeature == null ? void 0 : scrollFeature.getVScrollPosition()) != null ? _c : { top: 0 };\n    return top || left ? {\n      top,\n      left\n    } : void 0;\n  }\n  setScrollState(scrollState) {\n    var _a;\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    const { top, left } = scrollState;\n    (_a = this.ctrlsService.getGridBodyCtrl()) == null ? void 0 : _a.getScrollFeature().setScrollPosition(top, left);\n  }\n  getSideBarState() {\n    var _a, _b;\n    return (_b = (_a = this.sideBarService) == null ? void 0 : _a.getSideBarComp()) == null ? void 0 : _b.getState();\n  }\n  getFocusedCellState() {\n    if (!this.isClientSideRowModel) {\n      return void 0;\n    }\n    const focusedCell = this.focusService.getFocusedCell();\n    if (focusedCell) {\n      const { column, rowIndex, rowPinned } = focusedCell;\n      return {\n        colId: column.getColId(),\n        rowIndex,\n        rowPinned\n      };\n    }\n    return void 0;\n  }\n  setFocusedCellState(focusedCellState) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    const { colId, rowIndex, rowPinned } = focusedCellState;\n    this.focusService.setFocusedCell({\n      column: this.columnModel.getGridColumn(colId),\n      rowIndex,\n      rowPinned,\n      forceBrowserFocus: true,\n      preventScrollOnBrowserFocus: true\n    });\n  }\n  getPaginationState() {\n    const page = this.paginationProxy.getCurrentPage();\n    const pageSize = !this.gos.get(\"paginationAutoPageSize\") ? this.paginationProxy.getPageSize() : void 0;\n    if (!page && !pageSize) {\n      return;\n    }\n    return { page, pageSize };\n  }\n  setPaginationState(paginationState) {\n    if (paginationState.pageSize && !this.gos.get(\"paginationAutoPageSize\")) {\n      this.paginationProxy.setPageSize(paginationState.pageSize, \"initialState\");\n    }\n    if (typeof paginationState.page === \"number\") {\n      this.paginationProxy.setPage(paginationState.page);\n    }\n  }\n  getRowSelectionState() {\n    var _a;\n    const selectionState = this.selectionService.getSelectionState();\n    const noSelections = !selectionState || !Array.isArray(selectionState) && (selectionState.selectAll === false || selectionState.selectAllChildren === false) && !((_a = selectionState == null ? void 0 : selectionState.toggledNodes) == null ? void 0 : _a.length);\n    return noSelections ? void 0 : selectionState;\n  }\n  setRowSelectionState(rowSelectionState) {\n    this.selectionService.setSelectionState(rowSelectionState, \"gridInitializing\");\n  }\n  getRowGroupExpansionState() {\n    const expandedRowGroups = this.expansionService.getExpandedRows();\n    return expandedRowGroups.length ? {\n      expandedRowGroupIds: expandedRowGroups\n    } : void 0;\n  }\n  setRowGroupExpansionState(rowGroupExpansionState) {\n    this.expansionService.expandRows(rowGroupExpansionState.expandedRowGroupIds);\n  }\n  updateColumnState(features) {\n    const newColumnState = this.getColumnState();\n    let hasChanged = false;\n    Object.entries(newColumnState).forEach(([key, value]) => {\n      if (!jsonEquals(value, this.cachedState[key])) {\n        hasChanged = true;\n      }\n    });\n    this.cachedState = __spreadValues(__spreadValues({}, this.cachedState), newColumnState);\n    if (hasChanged) {\n      this.dispatchStateUpdateEvent(features);\n    }\n  }\n  updateCachedState(key, value) {\n    const existingValue = this.cachedState[key];\n    this.setCachedStateValue(key, value);\n    if (!jsonEquals(value, existingValue)) {\n      this.dispatchStateUpdateEvent([key]);\n    }\n  }\n  setCachedStateValue(key, value) {\n    this.cachedState = __spreadProps(__spreadValues({}, this.cachedState), {\n      [key]: value\n    });\n  }\n  refreshStaleState() {\n    this.staleStateKeys.forEach((key) => {\n      switch (key) {\n        case \"rowSelection\":\n          this.setCachedStateValue(key, this.getRowSelectionState());\n          break;\n      }\n    });\n    this.staleStateKeys.clear();\n  }\n  dispatchStateUpdateEvent(sources) {\n    if (this.suppressEvents) {\n      return;\n    }\n    sources.forEach((source) => this.queuedUpdateSources.add(source));\n    this.dispatchStateUpdateEventDebounced();\n  }\n  dispatchQueuedStateUpdateEvents() {\n    const sources = Array.from(this.queuedUpdateSources);\n    this.queuedUpdateSources.clear();\n    const event = {\n      type: Events.EVENT_STATE_UPDATED,\n      sources,\n      state: this.cachedState\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  suppressEventsAndDispatchInitEvent(updateFunc) {\n    this.suppressEvents = true;\n    this.columnAnimationService.setSuppressAnimation(true);\n    updateFunc();\n    setTimeout(() => {\n      this.suppressEvents = false;\n      this.queuedUpdateSources.clear();\n      if (!this.isAlive()) {\n        return;\n      }\n      this.columnAnimationService.setSuppressAnimation(false);\n      this.dispatchStateUpdateEvent([\"gridInitializing\"]);\n    });\n  }\n};\n__decorateClass([\n  Autowired(\"filterManager\")\n], StateService.prototype, \"filterManager\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], StateService.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"focusService\")\n], StateService.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], StateService.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], StateService.prototype, \"paginationProxy\", 2);\n__decorateClass([\n  Autowired(\"rowModel\")\n], StateService.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"selectionService\")\n], StateService.prototype, \"selectionService\", 2);\n__decorateClass([\n  Autowired(\"expansionService\")\n], StateService.prototype, \"expansionService\", 2);\n__decorateClass([\n  Autowired(\"columnAnimationService\")\n], StateService.prototype, \"columnAnimationService\", 2);\n__decorateClass([\n  Optional(\"sideBarService\")\n], StateService.prototype, \"sideBarService\", 2);\n__decorateClass([\n  Optional(\"rangeService\")\n], StateService.prototype, \"rangeService\", 2);\n__decorateClass([\n  PostConstruct\n], StateService.prototype, \"postConstruct\", 1);\nStateService = __decorateClass([\n  Bean(\"stateService\")\n], StateService);\n\n// community-modules/core/src/validation/validationService.ts\nvar ValidationService = class extends BeanStub {\n  init() {\n    this.processGridOptions(this.gridOptions);\n  }\n  processGridOptions(options) {\n    this.processOptions(options, GRID_OPTIONS_VALIDATORS);\n  }\n  processColumnDefs(options) {\n    this.processOptions(options, COL_DEF_VALIDATORS);\n  }\n  processOptions(options, validator) {\n    const { validations, deprecations, allProperties, propertyExceptions, objectName, docsUrl } = validator;\n    if (allProperties && this.gridOptions.suppressPropertyNamesCheck !== true) {\n      this.checkProperties(\n        options,\n        [...propertyExceptions != null ? propertyExceptions : [], ...Object.keys(deprecations)],\n        allProperties,\n        objectName,\n        docsUrl\n      );\n    }\n    const warnings = /* @__PURE__ */ new Set();\n    const optionKeys = Object.keys(options);\n    optionKeys.forEach((key) => {\n      var _a;\n      const deprecation = deprecations[key];\n      if (deprecation) {\n        if (\"renamed\" in deprecation) {\n          const { renamed, version } = deprecation;\n          warnings.add(`As of v${version}, ${String(key)} is deprecated. Please use ${String(renamed)} instead.`);\n          options[renamed] = options[key];\n        } else {\n          const { message, version } = deprecation;\n          warnings.add(`As of v${version}, ${String(key)} is deprecated. ${message != null ? message : \"\"}`);\n        }\n      }\n      const value = options[key];\n      if (value == null || value === false) {\n        return;\n      }\n      const rulesOrGetter = validations[key];\n      let rules;\n      if (!rulesOrGetter) {\n        return;\n      } else if (typeof rulesOrGetter === \"function\") {\n        const fromGetter = rulesOrGetter(options, this.gridOptions);\n        if (!fromGetter) {\n          return;\n        }\n        if (\"objectName\" in fromGetter) {\n          const value2 = options[key];\n          if (Array.isArray(value2)) {\n            value2.forEach((item) => {\n              this.processOptions(item, fromGetter);\n            });\n            return;\n          }\n          this.processOptions(options[key], fromGetter);\n          return;\n        }\n        rules = fromGetter;\n      } else {\n        rules = rulesOrGetter;\n      }\n      const { module, dependencies, supportedRowModels } = rules;\n      if (supportedRowModels) {\n        const rowModel = (_a = this.gridOptions.rowModelType) != null ? _a : \"clientSide\";\n        if (!supportedRowModels.includes(rowModel)) {\n          warnings.add(`${String(key)} is not supported with the '${rowModel}' row model.`);\n          return;\n        }\n      }\n      if (module) {\n        const modules = Array.isArray(module) ? module : [module];\n        let allRegistered = true;\n        modules.forEach((m) => {\n          if (!ModuleRegistry.__assertRegistered(m, String(key), this.context.getGridId())) {\n            allRegistered = false;\n            warnings.add(`${String(key)} is only available when ${m} is loaded.`);\n          }\n        });\n        if (!allRegistered) {\n          return;\n        }\n      }\n      if (dependencies) {\n        const warning = this.checkForWarning(key, dependencies, options);\n        if (warning) {\n          warnings.add(warning);\n          return;\n        }\n      }\n    });\n    if (warnings.size > 0) {\n      warnings.forEach((warning) => {\n        warnOnce(warning);\n      });\n    }\n  }\n  checkForWarning(key, validator, options) {\n    if (typeof validator === \"function\") {\n      return validator(options, this.gridOptions);\n    }\n    const optionEntries = Object.entries(validator);\n    const failed = optionEntries.find(([key2, value]) => {\n      const gridOptionValue = options[key2];\n      return !value.includes(gridOptionValue);\n    });\n    if (!failed) {\n      return null;\n    }\n    const [failedKey, possibleOptions] = failed;\n    if (possibleOptions.length > 1) {\n      return `'${String(key)}' requires '${failedKey}' to be one of [${possibleOptions.join(\", \")}].`;\n    }\n    return `'${String(key)}' requires '${failedKey}' to be ${possibleOptions[0]}.`;\n  }\n  checkProperties(object, exceptions, validProperties, containerName, docsUrl) {\n    const VUE_FRAMEWORK_PROPS = [\"__ob__\", \"__v_skip\", \"__metadata__\"];\n    const invalidProperties = fuzzyCheckStrings(\n      Object.getOwnPropertyNames(object),\n      [...VUE_FRAMEWORK_PROPS, ...exceptions, ...validProperties],\n      validProperties\n    );\n    iterateObject(invalidProperties, (key, value) => {\n      warnOnce(`invalid ${containerName} property '${key}' did you mean any of these: ${value.slice(0, 8).join(\", \")}`);\n    });\n    if (Object.keys(invalidProperties).length > 0 && docsUrl) {\n      const url = this.getFrameworkOverrides().getDocLink(docsUrl);\n      warnOnce(`to see all the valid ${containerName} properties please check: ${url}`);\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"gridOptions\")\n], ValidationService.prototype, \"gridOptions\", 2);\n__decorateClass([\n  PostConstruct\n], ValidationService.prototype, \"init\", 1);\nValidationService = __decorateClass([\n  Bean(\"validationService\")\n], ValidationService);\n\n// community-modules/core/src/misc/apiEventService.ts\nvar ApiEventService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.syncEventListeners = /* @__PURE__ */ new Map();\n    this.asyncEventListeners = /* @__PURE__ */ new Map();\n    this.syncGlobalEventListeners = /* @__PURE__ */ new Set();\n    this.globalEventListenerPairs = /* @__PURE__ */ new Map();\n  }\n  postConstruct() {\n    this.frameworkEventWrappingService = new FrameworkEventListenerService(this.getFrameworkOverrides());\n  }\n  addEventListener(eventType, userListener) {\n    const listener = this.frameworkEventWrappingService.wrap(userListener);\n    const async = this.gos.useAsyncEvents() && !ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType);\n    ;\n    const listeners = async ? this.asyncEventListeners : this.syncEventListeners;\n    if (!listeners.has(eventType)) {\n      listeners.set(eventType, /* @__PURE__ */ new Set());\n    }\n    listeners.get(eventType).add(listener);\n    this.eventService.addEventListener(eventType, listener, async);\n  }\n  removeEventListener(eventType, userListener) {\n    var _a;\n    const listener = this.frameworkEventWrappingService.unwrap(userListener);\n    const asyncListeners = this.asyncEventListeners.get(eventType);\n    const hasAsync = !!(asyncListeners == null ? void 0 : asyncListeners.delete(listener));\n    if (!hasAsync) {\n      (_a = this.syncEventListeners.get(eventType)) == null ? void 0 : _a.delete(listener);\n    }\n    this.eventService.removeEventListener(eventType, listener, hasAsync);\n  }\n  addGlobalListener(userListener) {\n    const listener = this.frameworkEventWrappingService.wrapGlobal(userListener);\n    const async = this.gos.useAsyncEvents();\n    if (async) {\n      const syncListener = (eventType, event) => {\n        if (ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType)) {\n          listener(eventType, event);\n        }\n      };\n      const asyncListener = (eventType, event) => {\n        if (!ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType)) {\n          listener(eventType, event);\n        }\n      };\n      this.globalEventListenerPairs.set(userListener, { syncListener, asyncListener });\n      this.eventService.addGlobalListener(syncListener, false);\n      this.eventService.addGlobalListener(asyncListener, true);\n    } else {\n      this.syncGlobalEventListeners.add(listener);\n      this.eventService.addGlobalListener(listener, false);\n    }\n  }\n  removeGlobalListener(userListener) {\n    const listener = this.frameworkEventWrappingService.unwrapGlobal(userListener);\n    const hasAsync = this.globalEventListenerPairs.has(listener);\n    if (hasAsync) {\n      const { syncListener, asyncListener } = this.globalEventListenerPairs.get(listener);\n      this.eventService.removeGlobalListener(syncListener, false);\n      this.eventService.removeGlobalListener(asyncListener, true);\n      this.globalEventListenerPairs.delete(userListener);\n    } else {\n      this.syncGlobalEventListeners.delete(listener);\n      this.eventService.removeGlobalListener(listener, false);\n    }\n  }\n  destroyEventListeners(map, async) {\n    map.forEach((listeners, eventType) => {\n      listeners.forEach((listener) => this.eventService.removeEventListener(eventType, listener, async));\n      listeners.clear();\n    });\n    map.clear();\n  }\n  destroyGlobalListeners(set, async) {\n    set.forEach((listener) => this.eventService.removeGlobalListener(listener, async));\n    set.clear();\n  }\n  destroy() {\n    super.destroy();\n    this.destroyEventListeners(this.syncEventListeners, false);\n    this.destroyEventListeners(this.asyncEventListeners, true);\n    this.destroyGlobalListeners(this.syncGlobalEventListeners, false);\n    this.globalEventListenerPairs.forEach(({ syncListener, asyncListener }) => {\n      this.eventService.removeGlobalListener(syncListener, false);\n      this.eventService.removeGlobalListener(asyncListener, true);\n    });\n    this.globalEventListenerPairs.clear();\n  }\n};\n__decorateClass([\n  PostConstruct\n], ApiEventService.prototype, \"postConstruct\", 1);\nApiEventService = __decorateClass([\n  Bean(\"apiEventService\")\n], ApiEventService);\n\n// community-modules/core/src/pagination/pageSizeSelector/pageSizeSelectorComp.ts\nvar PageSizeSelectorComp = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `<span class=\"ag-paging-page-size\"></span>`\n    );\n    this.hasEmptyOption = false;\n    this.handlePageSizeItemSelected = () => {\n      if (!this.selectPageSizeComp) {\n        return;\n      }\n      const newValue = this.selectPageSizeComp.getValue();\n      if (!newValue) {\n        return;\n      }\n      const paginationPageSize = Number(newValue);\n      if (isNaN(paginationPageSize) || paginationPageSize < 1 || paginationPageSize === this.paginationProxy.getPageSize()) {\n        return;\n      }\n      this.paginationProxy.setPageSize(paginationPageSize, \"pageSizeSelector\");\n      if (this.hasEmptyOption) {\n        this.toggleSelectDisplay(true);\n      }\n      this.selectPageSizeComp.getFocusableElement().focus();\n    };\n  }\n  init() {\n    this.addManagedPropertyListener(\"paginationPageSizeSelector\", () => {\n      this.onPageSizeSelectorValuesChange();\n    });\n    this.addManagedListener(\n      this.eventService,\n      Events.EVENT_PAGINATION_CHANGED,\n      (event) => this.handlePaginationChanged(event)\n    );\n  }\n  handlePaginationChanged(paginationChangedEvent) {\n    if (!this.selectPageSizeComp || !(paginationChangedEvent == null ? void 0 : paginationChangedEvent.newPageSize)) {\n      return;\n    }\n    const paginationPageSize = this.paginationProxy.getPageSize();\n    if (this.getPageSizeSelectorValues().includes(paginationPageSize)) {\n      this.selectPageSizeComp.setValue(paginationPageSize.toString());\n    } else {\n      if (this.hasEmptyOption) {\n        this.selectPageSizeComp.setValue(\"\");\n      } else {\n        this.toggleSelectDisplay(true);\n      }\n    }\n  }\n  toggleSelectDisplay(show) {\n    if (this.selectPageSizeComp) {\n      this.reset();\n    }\n    if (!show) {\n      return;\n    }\n    this.reloadPageSizesSelector();\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n    this.appendChild(this.selectPageSizeComp);\n  }\n  reset() {\n    clearElement(this.getGui());\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n    this.destroyBean(this.selectPageSizeComp);\n    this.selectPageSizeComp = void 0;\n  }\n  onPageSizeSelectorValuesChange() {\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n    if (this.shouldShowPageSizeSelector()) {\n      this.reloadPageSizesSelector();\n    }\n  }\n  shouldShowPageSizeSelector() {\n    return this.gos.get(\"pagination\") && !this.gos.get(\"suppressPaginationPanel\") && !this.gos.get(\"paginationAutoPageSize\") && this.gos.get(\"paginationPageSizeSelector\") !== false;\n  }\n  reloadPageSizesSelector() {\n    const pageSizeOptions = this.getPageSizeSelectorValues();\n    const paginationPageSizeOption = this.paginationProxy.getPageSize();\n    const shouldAddAndSelectEmptyOption = !paginationPageSizeOption || !pageSizeOptions.includes(paginationPageSizeOption);\n    if (shouldAddAndSelectEmptyOption) {\n      pageSizeOptions.unshift(\"\");\n      warnOnce(\n        `The paginationPageSize grid option is set to a value that is not in the list of page size options.\n                Please make sure that the paginationPageSize grid option is set to one of the values in the \n                paginationPageSizeSelector array, or set the paginationPageSizeSelector to false to hide the page size selector.`\n      );\n    }\n    if (this.selectPageSizeComp) {\n      this.destroyBean(this.selectPageSizeComp);\n      this.selectPageSizeComp = void 0;\n    }\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const localisedLabel = localeTextFunc(\"pageSizeSelectorLabel\", \"Page Size:\");\n    const options = pageSizeOptions.map((value) => ({\n      value: String(value),\n      text: String(value)\n    }));\n    const localisedAriaLabel = localeTextFunc(\"ariaPageSizeSelectorLabel\", \"Page Size\");\n    this.selectPageSizeComp = this.createManagedBean(new AgSelect()).addOptions(options).setValue(String(shouldAddAndSelectEmptyOption ? \"\" : paginationPageSizeOption)).setAriaLabel(localisedAriaLabel).setLabel(localisedLabel).onValueChange(() => this.handlePageSizeItemSelected());\n    this.hasEmptyOption = shouldAddAndSelectEmptyOption;\n  }\n  getPageSizeSelectorValues() {\n    const defaultValues = [20, 50, 100];\n    const paginationPageSizeSelectorValues = this.gos.get(\"paginationPageSizeSelector\");\n    if (!Array.isArray(paginationPageSizeSelectorValues) || !this.validateValues(paginationPageSizeSelectorValues)) {\n      return defaultValues;\n    }\n    return [...paginationPageSizeSelectorValues].sort((a, b) => a - b);\n  }\n  validateValues(values2) {\n    if (!values2.length) {\n      warnOnce(\n        `The paginationPageSizeSelector grid option is an empty array. This is most likely a mistake.\n                If you want to hide the page size selector, please set the paginationPageSizeSelector to false.`\n      );\n      return false;\n    }\n    for (let i = 0; i < values2.length; i++) {\n      const value = values2[i];\n      const isNumber = typeof value === \"number\";\n      const isPositive = value > 0;\n      if (!isNumber) {\n        warnOnce(\n          `The paginationPageSizeSelector grid option contains a non-numeric value.\n                    Please make sure that all values in the paginationPageSizeSelector array are numbers.`\n        );\n        return false;\n      }\n      if (!isPositive) {\n        warnOnce(\n          `The paginationPageSizeSelector grid option contains a negative number or zero.\n                    Please make sure that all values in the paginationPageSizeSelector array are positive.`\n        );\n        return false;\n      }\n    }\n    return true;\n  }\n  destroy() {\n    this.toggleSelectDisplay(false);\n    super.destroy();\n  }\n};\n__decorateClass([\n  Autowired(\"paginationProxy\")\n], PageSizeSelectorComp.prototype, \"paginationProxy\", 2);\n__decorateClass([\n  PostConstruct\n], PageSizeSelectorComp.prototype, \"init\", 1);\n\n// community-modules/core/src/rendering/ariaAnnouncementService.ts\nvar AriaAnnouncementService = class extends BeanStub {\n  constructor() {\n    super();\n    this.descriptionContainer = null;\n    this.announceValue = debounce(this.announceValue.bind(this), 200);\n  }\n  postConstruct() {\n    const eDocument = this.gos.getDocument();\n    const div = this.descriptionContainer = eDocument.createElement(\"div\");\n    div.classList.add(\"ag-aria-description-container\");\n    setAriaLive(div, \"polite\");\n    setAriaRelevant(div, \"additions text\");\n    setAriaAtomic(div, true);\n    this.eGridDiv.appendChild(div);\n  }\n  announceValue(value) {\n    if (!this.descriptionContainer) {\n      return;\n    }\n    this.descriptionContainer.textContent = \"\";\n    setTimeout(() => {\n      if (this.isAlive() && this.descriptionContainer) {\n        this.descriptionContainer.textContent = value;\n      }\n    }, 50);\n  }\n  destroy() {\n    super.destroy();\n    const { descriptionContainer } = this;\n    if (descriptionContainer) {\n      clearElement(descriptionContainer);\n      if (descriptionContainer.parentElement) {\n        descriptionContainer.parentElement.removeChild(descriptionContainer);\n      }\n    }\n    this.descriptionContainer = null;\n    this.eGridDiv = null;\n  }\n};\n__decorateClass([\n  Autowired(\"eGridDiv\")\n], AriaAnnouncementService.prototype, \"eGridDiv\", 2);\n__decorateClass([\n  PostConstruct\n], AriaAnnouncementService.prototype, \"postConstruct\", 1);\nAriaAnnouncementService = __decorateClass([\n  Bean(\"ariaAnnouncementService\")\n], AriaAnnouncementService);\n\n// community-modules/core/src/grid.ts\nvar GlobalGridOptions = class {\n};\nGlobalGridOptions.gridOptions = void 0;\nfunction provideGlobalGridOptions(gridOptions) {\n  GlobalGridOptions.gridOptions = gridOptions;\n}\nfunction createGrid(eGridDiv, gridOptions, params) {\n  if (!gridOptions) {\n    errorOnce(\"No gridOptions provided to createGrid\");\n    return {};\n  }\n  const api = new GridCoreCreator().create(eGridDiv, gridOptions, (context) => {\n    const gridComp = new GridComp(eGridDiv);\n    context.createBean(gridComp);\n  }, void 0, params);\n  if (!Object.isFrozen(gridOptions) && !(params == null ? void 0 : params.frameworkOverrides)) {\n    const apiUrl = \"https://ag-grid.com/javascript-data-grid/grid-interface/#grid-api\";\n    Object.defineProperty(gridOptions, \"api\", {\n      get: () => {\n        errorOnce(`gridOptions.api is no longer supported. See ${apiUrl}.`);\n        return void 0;\n      },\n      configurable: true\n    });\n    Object.defineProperty(gridOptions, \"columnApi\", {\n      get: () => {\n        errorOnce(`gridOptions.columnApi is no longer supported and all methods moved to the grid api. See ${apiUrl}.`);\n        return void 0;\n      },\n      configurable: true\n    });\n  }\n  return api;\n}\nvar Grid = class {\n  // Not typed to enable setting api / columnApi for backwards compatibility\n  constructor(eGridDiv, gridOptions, params) {\n    warnOnce(\"Since v31 new Grid(...) is deprecated. Use createGrid instead: `const gridApi = createGrid(...)`. The grid api is returned from createGrid and will not be available on gridOptions.\");\n    if (!gridOptions) {\n      errorOnce(\"No gridOptions provided to the grid\");\n      return;\n    }\n    this.gridOptions = gridOptions;\n    const api = new GridCoreCreator().create(\n      eGridDiv,\n      gridOptions,\n      (context) => {\n        const gridComp = new GridComp(eGridDiv);\n        const bean = context.createBean(gridComp);\n        bean.addDestroyFunc(() => {\n          this.destroy();\n        });\n      },\n      void 0,\n      params\n    );\n    this.gridOptions.api = api;\n    this.gridOptions.columnApi = new ColumnApi(api);\n  }\n  destroy() {\n    var _a;\n    if (this.gridOptions) {\n      (_a = this.gridOptions.api) == null ? void 0 : _a.destroy();\n      delete this.gridOptions.api;\n      delete this.gridOptions.columnApi;\n    }\n  }\n};\nvar nextGridId = 1;\nvar GridCoreCreator = class {\n  create(eGridDiv, providedOptions, createUi, acceptChanges, params) {\n    var _a;\n    let mergedGridOps = {};\n    if (GlobalGridOptions.gridOptions) {\n      mergeDeep(mergedGridOps, GlobalGridOptions.gridOptions, true, true);\n      mergedGridOps = __spreadValues(__spreadValues({}, mergedGridOps), providedOptions);\n    } else {\n      mergedGridOps = providedOptions;\n    }\n    const gridOptions = GridOptionsService.getCoercedGridOptions(mergedGridOps);\n    const debug = !!gridOptions.debug;\n    const gridId = (_a = gridOptions.gridId) != null ? _a : String(nextGridId++);\n    const registeredModules = this.getRegisteredModules(params, gridId);\n    const beanClasses = this.createBeansList(gridOptions.rowModelType, registeredModules, gridId);\n    const providedBeanInstances = this.createProvidedBeans(eGridDiv, gridOptions, params);\n    if (!beanClasses) {\n      errorOnce(\"Failed to create grid.\");\n      return void 0;\n    }\n    const contextParams = {\n      providedBeanInstances,\n      beanClasses,\n      debug,\n      gridId\n    };\n    const contextLogger = new Logger(\"Context\", () => contextParams.debug);\n    const context = new Context(contextParams, contextLogger);\n    const beans = context.getBean(\"beans\");\n    this.registerModuleUserComponents(beans, registeredModules);\n    this.registerStackComponents(beans, registeredModules);\n    this.registerControllers(beans, registeredModules);\n    createUi(context);\n    beans.syncService.start();\n    if (acceptChanges) {\n      acceptChanges(context);\n    }\n    const gridApi = context.getBean(\"gridApi\");\n    return gridApi;\n  }\n  registerControllers(beans, registeredModules) {\n    registeredModules.forEach((module) => {\n      if (module.controllers) {\n        module.controllers.forEach((meta) => beans.ctrlsFactory.register(meta));\n      }\n    });\n  }\n  registerStackComponents(beans, registeredModules) {\n    const agStackComponents = this.createAgStackComponentsList(registeredModules);\n    beans.agStackComponentsRegistry.setupComponents(agStackComponents);\n  }\n  getRegisteredModules(params, gridId) {\n    const passedViaConstructor = params ? params.modules : null;\n    const registered = ModuleRegistry.__getRegisteredModules(gridId);\n    const allModules = [];\n    const mapNames = {};\n    const addModule = (moduleBased, mod, gridId2) => {\n      const addIndividualModule = (currentModule) => {\n        if (!mapNames[currentModule.moduleName]) {\n          mapNames[currentModule.moduleName] = true;\n          allModules.push(currentModule);\n          ModuleRegistry.__register(currentModule, moduleBased, gridId2);\n        }\n      };\n      addIndividualModule(mod);\n      if (mod.dependantModules) {\n        mod.dependantModules.forEach((m) => addModule(moduleBased, m, gridId2));\n      }\n    };\n    if (passedViaConstructor) {\n      passedViaConstructor.forEach((m) => addModule(true, m, gridId));\n    }\n    if (registered) {\n      registered.forEach((m) => addModule(!ModuleRegistry.__isPackageBased(), m, void 0));\n    }\n    return allModules;\n  }\n  registerModuleUserComponents(beans, registeredModules) {\n    const moduleUserComps = this.extractModuleEntity(\n      registeredModules,\n      (module) => module.userComponents ? module.userComponents : []\n    );\n    moduleUserComps.forEach((compMeta) => {\n      beans.userComponentRegistry.registerDefaultComponent(compMeta.componentName, compMeta.componentClass);\n    });\n  }\n  createProvidedBeans(eGridDiv, gridOptions, params) {\n    let frameworkOverrides = params ? params.frameworkOverrides : null;\n    if (missing(frameworkOverrides)) {\n      frameworkOverrides = new VanillaFrameworkOverrides();\n    }\n    const seed = {\n      gridOptions,\n      eGridDiv,\n      globalEventListener: params ? params.globalEventListener : null,\n      globalSyncEventListener: params ? params.globalSyncEventListener : null,\n      frameworkOverrides\n    };\n    if (params && params.providedBeanInstances) {\n      Object.assign(seed, params.providedBeanInstances);\n    }\n    return seed;\n  }\n  createAgStackComponentsList(registeredModules) {\n    let components = [\n      { componentName: \"AgCheckbox\", componentClass: AgCheckbox },\n      { componentName: \"AgRadioButton\", componentClass: AgRadioButton },\n      { componentName: \"AgToggleButton\", componentClass: AgToggleButton },\n      { componentName: \"AgInputTextField\", componentClass: AgInputTextField },\n      { componentName: \"AgInputTextArea\", componentClass: AgInputTextArea },\n      { componentName: \"AgInputNumberField\", componentClass: AgInputNumberField },\n      { componentName: \"AgInputDateField\", componentClass: AgInputDateField },\n      { componentName: \"AgInputRange\", componentClass: AgInputRange },\n      { componentName: \"AgRichSelect\", componentClass: AgRichSelect },\n      { componentName: \"AgSelect\", componentClass: AgSelect },\n      { componentName: \"AgSlider\", componentClass: AgSlider },\n      { componentName: \"AgGridBody\", componentClass: GridBodyComp },\n      { componentName: \"AgHeaderRoot\", componentClass: GridHeaderComp },\n      { componentName: \"AgSortIndicator\", componentClass: SortIndicatorComp },\n      { componentName: \"AgPagination\", componentClass: PaginationComp },\n      { componentName: \"AgPageSizeSelector\", componentClass: PageSizeSelectorComp },\n      { componentName: \"AgOverlayWrapper\", componentClass: OverlayWrapperComponent },\n      { componentName: \"AgGroupComponent\", componentClass: AgGroupComponent },\n      { componentName: \"AgRowContainer\", componentClass: RowContainerComp },\n      { componentName: \"AgFakeHorizontalScroll\", componentClass: FakeHScrollComp },\n      { componentName: \"AgFakeVerticalScroll\", componentClass: FakeVScrollComp },\n      { componentName: \"AgAutocomplete\", componentClass: AgAutocomplete }\n    ];\n    const moduleAgStackComps = this.extractModuleEntity(\n      registeredModules,\n      (module) => module.agStackComponents ? module.agStackComponents : []\n    );\n    components = components.concat(moduleAgStackComps);\n    return components;\n  }\n  createBeansList(rowModelType = \"clientSide\", registeredModules, gridId) {\n    const rowModelModules = registeredModules.filter((module) => !module.rowModel || module.rowModel === rowModelType);\n    const rowModelModuleNames = {\n      clientSide: \"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */,\n      infinite: \"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */,\n      serverSide: \"@ag-grid-enterprise/server-side-row-model\" /* ServerSideRowModelModule */,\n      viewport: \"@ag-grid-enterprise/viewport-row-model\" /* ViewportRowModelModule */\n    };\n    if (!rowModelModuleNames[rowModelType]) {\n      errorOnce(\"Could not find row model for rowModelType = \" + rowModelType);\n      return;\n    }\n    if (!ModuleRegistry.__assertRegistered(rowModelModuleNames[rowModelType], `rowModelType = '${rowModelType}'`, gridId)) {\n      return;\n    }\n    const beans = [\n      Beans,\n      RowPositionUtils,\n      CellPositionUtils,\n      HeaderPositionUtils,\n      PaginationAutoPageSizeService,\n      GridApi,\n      UserComponentRegistry,\n      AgComponentUtils,\n      ComponentMetadataProvider,\n      ResizeObserverService,\n      UserComponentFactory,\n      RowContainerHeightService,\n      HorizontalResizeService,\n      LocaleService,\n      ValidationService,\n      PinnedRowModel,\n      DragService,\n      DisplayedGroupCreator,\n      EventService,\n      GridOptionsService,\n      PopupService,\n      SelectionService,\n      FilterManager,\n      ColumnModel,\n      HeaderNavigationService,\n      PaginationProxy,\n      RowRenderer,\n      ExpressionService,\n      ColumnFactory,\n      AlignedGridsService,\n      NavigationService,\n      ValueCache,\n      ValueService,\n      LoggerFactory,\n      AutoWidthCalculator,\n      StandardMenuFactory,\n      DragAndDropService,\n      ColumnApi,\n      FocusService,\n      MouseEventService,\n      Environment,\n      CellNavigationService,\n      StylingService,\n      ScrollVisibleService,\n      SortController,\n      ColumnHoverService,\n      ColumnAnimationService,\n      SelectableService,\n      AutoGroupColService,\n      ChangeDetectionService,\n      AnimationFrameService,\n      UndoRedoService,\n      AgStackComponentsRegistry,\n      ColumnDefFactory,\n      RowCssClassCalculator,\n      RowNodeBlockLoader,\n      RowNodeSorter,\n      CtrlsService,\n      PinnedWidthService,\n      RowNodeEventThrottle,\n      CtrlsFactory,\n      DataTypeService,\n      QuickFilterService,\n      SyncService,\n      OverlayService,\n      StateService,\n      ExpansionService,\n      ApiEventService,\n      AriaAnnouncementService,\n      MenuService\n    ];\n    const moduleBeans = this.extractModuleEntity(rowModelModules, (module) => module.beans ? module.beans : []);\n    beans.push(...moduleBeans);\n    const beansNoDuplicates = [];\n    beans.forEach((bean) => {\n      if (beansNoDuplicates.indexOf(bean) < 0) {\n        beansNoDuplicates.push(bean);\n      }\n    });\n    return beansNoDuplicates;\n  }\n  extractModuleEntity(moduleEntities, extractor) {\n    return [].concat(...moduleEntities.map(extractor));\n  }\n};\n\n// community-modules/core/src/components/framework/frameworkComponentWrapper.ts\nvar BaseComponentWrapper = class {\n  wrap(OriginalConstructor, mandatoryMethodList, optionalMethodList = [], componentType) {\n    const wrapper = this.createWrapper(OriginalConstructor, componentType);\n    mandatoryMethodList.forEach((methodName) => {\n      this.createMethod(wrapper, methodName, true);\n    });\n    optionalMethodList.forEach((methodName) => {\n      this.createMethod(wrapper, methodName, false);\n    });\n    return wrapper;\n  }\n  unwrap(comp) {\n    return comp;\n  }\n  createMethod(wrapper, methodName, mandatory) {\n    wrapper.addMethod(methodName, this.createMethodProxy(wrapper, methodName, mandatory));\n  }\n  createMethodProxy(wrapper, methodName, mandatory) {\n    return function() {\n      if (wrapper.hasMethod(methodName)) {\n        return wrapper.callMethod(methodName, arguments);\n      }\n      if (mandatory) {\n        console.warn(\"AG Grid: Framework component is missing the method \" + methodName + \"()\");\n      }\n      return null;\n    };\n  }\n};\n\n// community-modules/core/src/interfaces/iChartOptions.ts\nvar ChartMappings = class {\n};\nChartMappings.CHART_TYPE_TO_SERIES_TYPE = {\n  column: \"bar\",\n  groupedColumn: \"bar\",\n  stackedColumn: \"bar\",\n  normalizedColumn: \"bar\",\n  bar: \"bar\",\n  groupedBar: \"bar\",\n  stackedBar: \"bar\",\n  normalizedBar: \"bar\",\n  line: \"line\",\n  scatter: \"scatter\",\n  bubble: \"bubble\",\n  pie: \"pie\",\n  donut: \"donut\",\n  doughnut: \"donut\",\n  area: \"area\",\n  stackedArea: \"area\",\n  normalizedArea: \"area\",\n  histogram: \"histogram\",\n  radarLine: \"radar-line\",\n  radarArea: \"radar-area\",\n  nightingale: \"nightingale\",\n  radialColumn: \"radial-column\",\n  radialBar: \"radial-bar\",\n  sunburst: \"sunburst\",\n  rangeBar: \"range-bar\",\n  rangeArea: \"range-area\",\n  boxPlot: \"box-plot\",\n  treemap: \"treemap\",\n  heatmap: \"heatmap\",\n  waterfall: \"waterfall\"\n};\nChartMappings.COMBO_CHART_TYPES = [\"columnLineCombo\", \"areaColumnCombo\", \"customCombo\"];\nChartMappings.SERIES_GROUP_TYPES = [\"grouped\", \"stacked\", \"normalized\"];\n\n// community-modules/core/src/interfaces/iSparklineCellRendererParams.ts\nvar BarColumnLabelPlacement = /* @__PURE__ */ ((BarColumnLabelPlacement2) => {\n  BarColumnLabelPlacement2[\"InsideBase\"] = \"insideBase\";\n  BarColumnLabelPlacement2[\"InsideEnd\"] = \"insideEnd\";\n  BarColumnLabelPlacement2[\"Center\"] = \"center\";\n  BarColumnLabelPlacement2[\"OutsideEnd\"] = \"outsideEnd\";\n  return BarColumnLabelPlacement2;\n})(BarColumnLabelPlacement || {});\n\n// community-modules/core/src/main.ts\nvar globalObj = typeof global === \"undefined\" ? {} : global;\nglobalObj.HTMLElement = typeof HTMLElement === \"undefined\" ? {} : HTMLElement;\nglobalObj.HTMLButtonElement = typeof HTMLButtonElement === \"undefined\" ? {} : HTMLButtonElement;\nglobalObj.HTMLSelectElement = typeof HTMLSelectElement === \"undefined\" ? {} : HTMLSelectElement;\nglobalObj.HTMLInputElement = typeof HTMLInputElement === \"undefined\" ? {} : HTMLInputElement;\nglobalObj.Node = typeof Node === \"undefined\" ? {} : Node;\nglobalObj.MouseEvent = typeof MouseEvent === \"undefined\" ? {} : MouseEvent;\n\n// community-modules/client-side-row-model/src/clientSideRowModel/clientSideNodeManager.ts\nvar _ClientSideNodeManager = class _ClientSideNodeManager {\n  constructor(rootNode, gos, eventService, columnModel, selectionService, beans) {\n    this.nextId = 0;\n    // has row data actually been set\n    this.rowCountReady = false;\n    // when user is provide the id's, we also keep a map of ids to row nodes for convenience\n    this.allNodesMap = {};\n    this.rootNode = rootNode;\n    this.gos = gos;\n    this.eventService = eventService;\n    this.columnModel = columnModel;\n    this.beans = beans;\n    this.selectionService = selectionService;\n    this.rootNode.group = true;\n    this.rootNode.level = -1;\n    this.rootNode.id = _ClientSideNodeManager.ROOT_NODE_ID;\n    this.rootNode.allLeafChildren = [];\n    this.rootNode.childrenAfterGroup = [];\n    this.rootNode.childrenAfterSort = [];\n    this.rootNode.childrenAfterAggFilter = [];\n    this.rootNode.childrenAfterFilter = [];\n  }\n  getCopyOfNodesMap() {\n    return _.cloneObject(this.allNodesMap);\n  }\n  getRowNode(id) {\n    return this.allNodesMap[id];\n  }\n  setRowData(rowData) {\n    if (typeof rowData === \"string\") {\n      console.warn(\"AG Grid: rowData must be an array.\");\n      return;\n    }\n    this.rowCountReady = true;\n    this.dispatchRowDataUpdateStartedEvent(rowData);\n    const rootNode = this.rootNode;\n    const sibling = this.rootNode.sibling;\n    rootNode.childrenAfterFilter = null;\n    rootNode.childrenAfterGroup = null;\n    rootNode.childrenAfterAggFilter = null;\n    rootNode.childrenAfterSort = null;\n    rootNode.childrenMapped = null;\n    rootNode.updateHasChildren();\n    this.nextId = 0;\n    this.allNodesMap = {};\n    if (rowData) {\n      rootNode.allLeafChildren = rowData.map((dataItem) => this.createNode(dataItem, this.rootNode, _ClientSideNodeManager.TOP_LEVEL));\n    } else {\n      rootNode.allLeafChildren = [];\n      rootNode.childrenAfterGroup = [];\n    }\n    if (sibling) {\n      sibling.childrenAfterFilter = rootNode.childrenAfterFilter;\n      sibling.childrenAfterGroup = rootNode.childrenAfterGroup;\n      sibling.childrenAfterAggFilter = rootNode.childrenAfterAggFilter;\n      sibling.childrenAfterSort = rootNode.childrenAfterSort;\n      sibling.childrenMapped = rootNode.childrenMapped;\n      sibling.allLeafChildren = rootNode.allLeafChildren;\n    }\n  }\n  updateRowData(rowDataTran, rowNodeOrder) {\n    this.rowCountReady = true;\n    this.dispatchRowDataUpdateStartedEvent(rowDataTran.add);\n    const rowNodeTransaction = {\n      remove: [],\n      update: [],\n      add: []\n    };\n    const nodesToUnselect = [];\n    this.executeRemove(rowDataTran, rowNodeTransaction, nodesToUnselect);\n    this.executeUpdate(rowDataTran, rowNodeTransaction, nodesToUnselect);\n    this.executeAdd(rowDataTran, rowNodeTransaction);\n    this.updateSelection(nodesToUnselect, \"rowDataChanged\");\n    if (rowNodeOrder) {\n      _.sortRowNodesByOrder(this.rootNode.allLeafChildren, rowNodeOrder);\n    }\n    return rowNodeTransaction;\n  }\n  isRowCountReady() {\n    return this.rowCountReady;\n  }\n  dispatchRowDataUpdateStartedEvent(rowData) {\n    const event = {\n      type: Events.EVENT_ROW_DATA_UPDATE_STARTED,\n      firstRowData: (rowData == null ? void 0 : rowData.length) ? rowData[0] : null\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  updateSelection(nodesToUnselect, source) {\n    const selectionChanged = nodesToUnselect.length > 0;\n    if (selectionChanged) {\n      this.selectionService.setNodesSelected({\n        newValue: false,\n        nodes: nodesToUnselect,\n        suppressFinishActions: true,\n        source\n      });\n    }\n    this.selectionService.updateGroupsFromChildrenSelections(source);\n    if (selectionChanged) {\n      const event = {\n        type: Events.EVENT_SELECTION_CHANGED,\n        source\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  executeAdd(rowDataTran, rowNodeTransaction) {\n    var _a;\n    const { add, addIndex } = rowDataTran;\n    if (_.missingOrEmpty(add)) {\n      return;\n    }\n    const newNodes = add.map((item) => this.createNode(item, this.rootNode, _ClientSideNodeManager.TOP_LEVEL));\n    if (typeof addIndex === \"number\" && addIndex >= 0) {\n      const { allLeafChildren } = this.rootNode;\n      const len = allLeafChildren.length;\n      let normalisedAddIndex = addIndex;\n      const isTreeData = this.gos.get(\"treeData\");\n      if (isTreeData && addIndex > 0 && len > 0) {\n        for (let i = 0; i < len; i++) {\n          if (((_a = allLeafChildren[i]) == null ? void 0 : _a.rowIndex) == addIndex - 1) {\n            normalisedAddIndex = i + 1;\n            break;\n          }\n        }\n      }\n      const nodesBeforeIndex = allLeafChildren.slice(0, normalisedAddIndex);\n      const nodesAfterIndex = allLeafChildren.slice(normalisedAddIndex, allLeafChildren.length);\n      this.rootNode.allLeafChildren = [...nodesBeforeIndex, ...newNodes, ...nodesAfterIndex];\n    } else {\n      this.rootNode.allLeafChildren = [...this.rootNode.allLeafChildren, ...newNodes];\n    }\n    if (this.rootNode.sibling) {\n      this.rootNode.sibling.allLeafChildren = this.rootNode.allLeafChildren;\n    }\n    rowNodeTransaction.add = newNodes;\n  }\n  executeRemove(rowDataTran, rowNodeTransaction, nodesToUnselect) {\n    const { remove } = rowDataTran;\n    if (_.missingOrEmpty(remove)) {\n      return;\n    }\n    const rowIdsRemoved = {};\n    remove.forEach((item) => {\n      const rowNode = this.lookupRowNode(item);\n      if (!rowNode) {\n        return;\n      }\n      if (rowNode.isSelected()) {\n        nodesToUnselect.push(rowNode);\n      }\n      rowNode.clearRowTopAndRowIndex();\n      rowIdsRemoved[rowNode.id] = true;\n      delete this.allNodesMap[rowNode.id];\n      rowNodeTransaction.remove.push(rowNode);\n    });\n    this.rootNode.allLeafChildren = this.rootNode.allLeafChildren.filter((rowNode) => !rowIdsRemoved[rowNode.id]);\n    if (this.rootNode.sibling) {\n      this.rootNode.sibling.allLeafChildren = this.rootNode.allLeafChildren;\n    }\n  }\n  executeUpdate(rowDataTran, rowNodeTransaction, nodesToUnselect) {\n    const { update } = rowDataTran;\n    if (_.missingOrEmpty(update)) {\n      return;\n    }\n    update.forEach((item) => {\n      const rowNode = this.lookupRowNode(item);\n      if (!rowNode) {\n        return;\n      }\n      rowNode.updateData(item);\n      if (!rowNode.selectable && rowNode.isSelected()) {\n        nodesToUnselect.push(rowNode);\n      }\n      this.setMasterForRow(rowNode, item, _ClientSideNodeManager.TOP_LEVEL, false);\n      rowNodeTransaction.update.push(rowNode);\n    });\n  }\n  lookupRowNode(data) {\n    const getRowIdFunc = this.gos.getCallback(\"getRowId\");\n    let rowNode;\n    if (getRowIdFunc) {\n      const id = getRowIdFunc({ data, level: 0 });\n      rowNode = this.allNodesMap[id];\n      if (!rowNode) {\n        console.error(`AG Grid: could not find row id=${id}, data item was not found for this id`);\n        return null;\n      }\n    } else {\n      rowNode = this.rootNode.allLeafChildren.find((node) => node.data === data);\n      if (!rowNode) {\n        console.error(`AG Grid: could not find data item as object was not found`, data);\n        console.error(`Consider using getRowId to help the Grid find matching row data`);\n        return null;\n      }\n    }\n    return rowNode || null;\n  }\n  createNode(dataItem, parent, level) {\n    const node = new RowNode(this.beans);\n    node.group = false;\n    this.setMasterForRow(node, dataItem, level, true);\n    const suppressParentsInRowNodes = this.gos.get(\"suppressParentsInRowNodes\");\n    if (parent && !suppressParentsInRowNodes) {\n      node.parent = parent;\n    }\n    node.level = level;\n    node.setDataAndId(dataItem, this.nextId.toString());\n    if (this.allNodesMap[node.id]) {\n      console.warn(`AG Grid: duplicate node id '${node.id}' detected from getRowId callback, this could cause issues in your grid.`);\n    }\n    this.allNodesMap[node.id] = node;\n    this.nextId++;\n    return node;\n  }\n  setMasterForRow(rowNode, data, level, setExpanded) {\n    const isTreeData = this.gos.get(\"treeData\");\n    if (isTreeData) {\n      rowNode.setMaster(false);\n      if (setExpanded) {\n        rowNode.expanded = false;\n      }\n    } else {\n      const masterDetail = this.gos.get(\"masterDetail\");\n      if (masterDetail) {\n        const isRowMasterFunc = this.gos.get(\"isRowMaster\");\n        if (isRowMasterFunc) {\n          rowNode.setMaster(isRowMasterFunc(data));\n        } else {\n          rowNode.setMaster(true);\n        }\n      } else {\n        rowNode.setMaster(false);\n      }\n      if (setExpanded) {\n        const rowGroupColumns = this.columnModel.getRowGroupColumns();\n        const numRowGroupColumns = rowGroupColumns ? rowGroupColumns.length : 0;\n        const masterRowLevel = level + numRowGroupColumns;\n        rowNode.expanded = rowNode.master ? this.isExpanded(masterRowLevel) : false;\n      }\n    }\n  }\n  isExpanded(level) {\n    const expandByDefault = this.gos.get(\"groupDefaultExpanded\");\n    if (expandByDefault === -1) {\n      return true;\n    }\n    return level < expandByDefault;\n  }\n};\n_ClientSideNodeManager.TOP_LEVEL = 0;\n_ClientSideNodeManager.ROOT_NODE_ID = \"ROOT_NODE_ID\";\nvar ClientSideNodeManager = _ClientSideNodeManager;\n\n// community-modules/client-side-row-model/src/clientSideRowModel/clientSideRowModel.ts\nvar ClientSideRowModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.onRowHeightChanged_debounced = _.debounce(this.onRowHeightChanged.bind(this), 100);\n    this.rowsToDisplay = [];\n    /** Has the start method been called */\n    this.hasStarted = false;\n    /** E.g. data has been set into the node manager already */\n    this.shouldSkipSettingDataOnStart = false;\n    /**\n     * This is to prevent refresh model being called when it's already being called.\n     * E.g. the group stage can trigger initial state filter model to be applied. This fires onFilterChanged,\n     * which then triggers the listener here that calls refresh model again but at the filter stage\n     * (which is about to be run by the original call).\n     */\n    this.isRefreshingModel = false;\n    this.rowCountReady = false;\n  }\n  init() {\n    const refreshEverythingFunc = this.refreshModel.bind(this, { step: \"group\" /* EVERYTHING */ });\n    const animate = !this.gos.get(\"suppressAnimationFrame\");\n    const refreshEverythingAfterColsChangedFunc = this.refreshModel.bind(this, {\n      step: \"group\" /* EVERYTHING */,\n      // after cols change, row grouping (the first stage) could of changed\n      afterColumnsChanged: true,\n      keepRenderedRows: true,\n      // we want animations cos sorting or filtering could be applied\n      animate\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, refreshEverythingAfterColsChangedFunc);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, refreshEverythingFunc);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VALUE_CHANGED, this.onValueChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_CHANGED, this.refreshModel.bind(this, { step: \"pivot\" /* PIVOT */ }));\n    this.addManagedListener(this.eventService, Events.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_SORT_CHANGED, this.onSortChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, refreshEverythingFunc);\n    this.addManagedListener(this.eventService, Events.EVENT_GRID_STYLES_CHANGED, this.onGridStylesChanges.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_GRID_READY, () => this.onGridReady());\n    this.addPropertyListeners();\n    this.rootNode = new RowNode(this.beans);\n    this.nodeManager = new ClientSideNodeManager(\n      this.rootNode,\n      this.gos,\n      this.eventService,\n      this.columnModel,\n      this.selectionService,\n      this.beans\n    );\n  }\n  addPropertyListeners() {\n    const resetProps = /* @__PURE__ */ new Set([\n      \"treeData\",\n      \"masterDetail\"\n    ]);\n    const groupStageRefreshProps = /* @__PURE__ */ new Set([\n      \"suppressParentsInRowNodes\",\n      \"groupDefaultExpanded\",\n      \"groupAllowUnbalanced\",\n      \"initialGroupOrderComparator\",\n      \"groupHideOpenParents\",\n      \"groupDisplayType\"\n    ]);\n    const filterStageRefreshProps = /* @__PURE__ */ new Set([\n      \"excludeChildrenWhenTreeDataFiltering\"\n    ]);\n    const pivotStageRefreshProps = /* @__PURE__ */ new Set([\n      \"removePivotHeaderRowWhenSingleValueColumn\",\n      \"pivotRowTotals\",\n      \"pivotColumnGroupTotals\",\n      \"suppressExpandablePivotGroups\"\n    ]);\n    const aggregateStageRefreshProps = /* @__PURE__ */ new Set([\n      \"getGroupRowAgg\",\n      \"alwaysAggregateAtRootLevel\",\n      \"groupIncludeTotalFooter\",\n      \"suppressAggFilteredOnly\",\n      \"grandTotalRow\"\n    ]);\n    const sortStageRefreshProps = /* @__PURE__ */ new Set([\n      \"postSortRows\",\n      \"groupDisplayType\",\n      \"accentedSort\"\n    ]);\n    const filterAggStageRefreshProps = /* @__PURE__ */ new Set([]);\n    const flattenStageRefreshProps = /* @__PURE__ */ new Set([\n      \"groupRemoveSingleChildren\",\n      \"groupRemoveLowestSingleChildren\",\n      \"groupIncludeFooter\",\n      \"groupTotalRow\"\n    ]);\n    const allProps = [\n      ...resetProps,\n      ...groupStageRefreshProps,\n      ...filterStageRefreshProps,\n      ...pivotStageRefreshProps,\n      ...pivotStageRefreshProps,\n      ...aggregateStageRefreshProps,\n      ...sortStageRefreshProps,\n      ...filterAggStageRefreshProps,\n      ...flattenStageRefreshProps\n    ];\n    this.addManagedPropertyListeners(allProps, (params) => {\n      var _a;\n      const properties = (_a = params.changeSet) == null ? void 0 : _a.properties;\n      if (!properties) {\n        return;\n      }\n      ;\n      const arePropertiesImpacted = (propSet) => properties.some((prop) => propSet.has(prop));\n      if (arePropertiesImpacted(resetProps)) {\n        this.setRowData(this.rootNode.allLeafChildren.map((child) => child.data));\n        return;\n      }\n      if (arePropertiesImpacted(groupStageRefreshProps)) {\n        this.refreshModel({ step: \"group\" /* EVERYTHING */ });\n        return;\n      }\n      if (arePropertiesImpacted(filterStageRefreshProps)) {\n        this.refreshModel({ step: \"filter\" /* FILTER */ });\n        return;\n      }\n      if (arePropertiesImpacted(pivotStageRefreshProps)) {\n        this.refreshModel({ step: \"pivot\" /* PIVOT */ });\n        return;\n      }\n      if (arePropertiesImpacted(aggregateStageRefreshProps)) {\n        this.refreshModel({ step: \"aggregate\" /* AGGREGATE */ });\n        return;\n      }\n      if (arePropertiesImpacted(sortStageRefreshProps)) {\n        this.refreshModel({ step: \"sort\" /* SORT */ });\n        return;\n      }\n      if (arePropertiesImpacted(filterAggStageRefreshProps)) {\n        this.refreshModel({ step: \"filter_aggregates\" /* FILTER_AGGREGATES */ });\n        return;\n      }\n      if (arePropertiesImpacted(flattenStageRefreshProps)) {\n        this.refreshModel({ step: \"map\" /* MAP */ });\n      }\n    });\n    this.addManagedPropertyListener(\"rowHeight\", () => this.resetRowHeights());\n  }\n  start() {\n    this.hasStarted = true;\n    if (this.shouldSkipSettingDataOnStart) {\n      this.dispatchUpdateEventsAndRefresh();\n    } else {\n      this.setInitialData();\n    }\n  }\n  setInitialData() {\n    const rowData = this.gos.get(\"rowData\");\n    if (rowData) {\n      this.shouldSkipSettingDataOnStart = true;\n      this.setRowData(rowData);\n    }\n  }\n  ensureRowHeightsValid(startPixel, endPixel, startLimitIndex, endLimitIndex) {\n    let atLeastOneChange;\n    let res = false;\n    do {\n      atLeastOneChange = false;\n      const rowAtStartPixel = this.getRowIndexAtPixel(startPixel);\n      const rowAtEndPixel = this.getRowIndexAtPixel(endPixel);\n      const firstRow = Math.max(rowAtStartPixel, startLimitIndex);\n      const lastRow = Math.min(rowAtEndPixel, endLimitIndex);\n      for (let rowIndex = firstRow; rowIndex <= lastRow; rowIndex++) {\n        const rowNode = this.getRow(rowIndex);\n        if (rowNode.rowHeightEstimated) {\n          const rowHeight = this.gos.getRowHeightForNode(rowNode);\n          rowNode.setRowHeight(rowHeight.height);\n          atLeastOneChange = true;\n          res = true;\n        }\n      }\n      if (atLeastOneChange) {\n        this.setRowTopAndRowIndex();\n      }\n    } while (atLeastOneChange);\n    return res;\n  }\n  setRowTopAndRowIndex() {\n    const defaultRowHeight = this.environment.getDefaultRowHeight();\n    let nextRowTop = 0;\n    const displayedRowsMapped = /* @__PURE__ */ new Set();\n    const allowEstimate = this.gos.isDomLayout(\"normal\");\n    for (let i = 0; i < this.rowsToDisplay.length; i++) {\n      const rowNode = this.rowsToDisplay[i];\n      if (rowNode.id != null) {\n        displayedRowsMapped.add(rowNode.id);\n      }\n      if (rowNode.rowHeight == null) {\n        const rowHeight = this.gos.getRowHeightForNode(rowNode, allowEstimate, defaultRowHeight);\n        rowNode.setRowHeight(rowHeight.height, rowHeight.estimated);\n      }\n      rowNode.setRowTop(nextRowTop);\n      rowNode.setRowIndex(i);\n      nextRowTop += rowNode.rowHeight;\n    }\n    return displayedRowsMapped;\n  }\n  clearRowTopAndRowIndex(changedPath, displayedRowsMapped) {\n    const changedPathActive = changedPath.isActive();\n    const clearIfNotDisplayed = (rowNode) => {\n      if (rowNode && rowNode.id != null && !displayedRowsMapped.has(rowNode.id)) {\n        rowNode.clearRowTopAndRowIndex();\n      }\n    };\n    const recurse = (rowNode) => {\n      clearIfNotDisplayed(rowNode);\n      clearIfNotDisplayed(rowNode.detailNode);\n      clearIfNotDisplayed(rowNode.sibling);\n      if (rowNode.hasChildren()) {\n        if (rowNode.childrenAfterGroup) {\n          const isRootNode = rowNode.level == -1;\n          const skipChildren = changedPathActive && !isRootNode && !rowNode.expanded;\n          if (!skipChildren) {\n            rowNode.childrenAfterGroup.forEach(recurse);\n          }\n        }\n      }\n    };\n    recurse(this.rootNode);\n  }\n  // returns false if row was moved, otherwise true\n  ensureRowsAtPixel(rowNodes, pixel, increment = 0) {\n    const indexAtPixelNow = this.getRowIndexAtPixel(pixel);\n    const rowNodeAtPixelNow = this.getRow(indexAtPixelNow);\n    const animate = !this.gos.get(\"suppressAnimationFrame\");\n    if (rowNodeAtPixelNow === rowNodes[0]) {\n      return false;\n    }\n    rowNodes.forEach((rowNode) => {\n      _.removeFromArray(this.rootNode.allLeafChildren, rowNode);\n    });\n    rowNodes.forEach((rowNode, idx) => {\n      _.insertIntoArray(this.rootNode.allLeafChildren, rowNode, Math.max(indexAtPixelNow + increment, 0) + idx);\n    });\n    this.refreshModel({\n      step: \"group\" /* EVERYTHING */,\n      keepRenderedRows: true,\n      keepEditingRows: true,\n      animate\n    });\n    return true;\n  }\n  highlightRowAtPixel(rowNode, pixel) {\n    const indexAtPixelNow = pixel != null ? this.getRowIndexAtPixel(pixel) : null;\n    const rowNodeAtPixelNow = indexAtPixelNow != null ? this.getRow(indexAtPixelNow) : null;\n    if (!rowNodeAtPixelNow || !rowNode || rowNodeAtPixelNow === rowNode || pixel == null) {\n      if (this.lastHighlightedRow) {\n        this.lastHighlightedRow.setHighlighted(null);\n        this.lastHighlightedRow = null;\n      }\n      return;\n    }\n    const highlight = this.getHighlightPosition(pixel, rowNodeAtPixelNow);\n    if (this.lastHighlightedRow && this.lastHighlightedRow !== rowNodeAtPixelNow) {\n      this.lastHighlightedRow.setHighlighted(null);\n      this.lastHighlightedRow = null;\n    }\n    rowNodeAtPixelNow.setHighlighted(highlight);\n    this.lastHighlightedRow = rowNodeAtPixelNow;\n  }\n  getHighlightPosition(pixel, rowNode) {\n    if (!rowNode) {\n      const index = this.getRowIndexAtPixel(pixel);\n      rowNode = this.getRow(index || 0);\n      if (!rowNode) {\n        return 1 /* Below */;\n      }\n    }\n    const { rowTop, rowHeight } = rowNode;\n    return pixel - rowTop < rowHeight / 2 ? 0 /* Above */ : 1 /* Below */;\n  }\n  getLastHighlightedRowNode() {\n    return this.lastHighlightedRow;\n  }\n  isLastRowIndexKnown() {\n    return true;\n  }\n  getRowCount() {\n    if (this.rowsToDisplay) {\n      return this.rowsToDisplay.length;\n    }\n    return 0;\n  }\n  getTopLevelRowCount() {\n    const showingRootNode = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;\n    if (showingRootNode) {\n      return 1;\n    }\n    const filteredChildren = this.rootNode.childrenAfterAggFilter;\n    return filteredChildren ? filteredChildren.length : 0;\n  }\n  getTopLevelRowDisplayedIndex(topLevelIndex) {\n    const showingRootNode = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;\n    if (showingRootNode) {\n      return topLevelIndex;\n    }\n    let rowNode = this.rootNode.childrenAfterSort[topLevelIndex];\n    if (this.gos.get(\"groupHideOpenParents\")) {\n      while (rowNode.expanded && rowNode.childrenAfterSort && rowNode.childrenAfterSort.length > 0) {\n        rowNode = rowNode.childrenAfterSort[0];\n      }\n    }\n    return rowNode.rowIndex;\n  }\n  getRowBounds(index) {\n    if (_.missing(this.rowsToDisplay)) {\n      return null;\n    }\n    const rowNode = this.rowsToDisplay[index];\n    if (rowNode) {\n      return {\n        rowTop: rowNode.rowTop,\n        rowHeight: rowNode.rowHeight\n      };\n    }\n    return null;\n  }\n  onRowGroupOpened() {\n    const animate = this.gos.isAnimateRows();\n    this.refreshModel({ step: \"map\" /* MAP */, keepRenderedRows: true, animate });\n  }\n  onFilterChanged(event) {\n    if (event.afterDataChange) {\n      return;\n    }\n    const animate = this.gos.isAnimateRows();\n    const primaryOrQuickFilterChanged = event.columns.length === 0 || event.columns.some((col) => col.isPrimary());\n    const step = primaryOrQuickFilterChanged ? \"filter\" /* FILTER */ : \"filter_aggregates\" /* FILTER_AGGREGATES */;\n    this.refreshModel({ step, keepRenderedRows: true, animate });\n  }\n  onSortChanged() {\n    const animate = this.gos.isAnimateRows();\n    this.refreshModel({ step: \"sort\" /* SORT */, keepRenderedRows: true, animate, keepEditingRows: true });\n  }\n  getType() {\n    return \"clientSide\";\n  }\n  onValueChanged() {\n    if (this.columnModel.isPivotActive()) {\n      this.refreshModel({ step: \"pivot\" /* PIVOT */ });\n    } else {\n      this.refreshModel({ step: \"aggregate\" /* AGGREGATE */ });\n    }\n  }\n  createChangePath(rowNodeTransactions) {\n    const noTransactions = _.missingOrEmpty(rowNodeTransactions);\n    const changedPath = new ChangedPath(false, this.rootNode);\n    if (noTransactions || this.gos.get(\"treeData\")) {\n      changedPath.setInactive();\n    }\n    return changedPath;\n  }\n  isSuppressModelUpdateAfterUpdateTransaction(params) {\n    if (!this.gos.get(\"suppressModelUpdateAfterUpdateTransaction\")) {\n      return false;\n    }\n    if (params.rowNodeTransactions == null) {\n      return false;\n    }\n    const transWithAddsOrDeletes = params.rowNodeTransactions.filter(\n      (tx) => tx.add != null && tx.add.length > 0 || tx.remove != null && tx.remove.length > 0\n    );\n    const transactionsContainUpdatesOnly = transWithAddsOrDeletes == null || transWithAddsOrDeletes.length == 0;\n    return transactionsContainUpdatesOnly;\n  }\n  buildRefreshModelParams(step) {\n    let paramsStep = \"group\" /* EVERYTHING */;\n    const stepsMapped = {\n      everything: \"group\" /* EVERYTHING */,\n      group: \"group\" /* EVERYTHING */,\n      filter: \"filter\" /* FILTER */,\n      map: \"map\" /* MAP */,\n      aggregate: \"aggregate\" /* AGGREGATE */,\n      sort: \"sort\" /* SORT */,\n      pivot: \"pivot\" /* PIVOT */\n    };\n    if (_.exists(step)) {\n      paramsStep = stepsMapped[step];\n    }\n    if (_.missing(paramsStep)) {\n      console.error(`AG Grid: invalid step ${step}, available steps are ${Object.keys(stepsMapped).join(\", \")}`);\n      return void 0;\n    }\n    const animate = !this.gos.get(\"suppressAnimationFrame\");\n    const modelParams = {\n      step: paramsStep,\n      keepRenderedRows: true,\n      keepEditingRows: true,\n      animate\n    };\n    return modelParams;\n  }\n  refreshModel(paramsOrStep) {\n    if (!this.hasStarted || this.isRefreshingModel || this.columnModel.shouldRowModelIgnoreRefresh()) {\n      return;\n    }\n    let params = typeof paramsOrStep === \"object\" && \"step\" in paramsOrStep ? paramsOrStep : this.buildRefreshModelParams(paramsOrStep);\n    if (!params) {\n      return;\n    }\n    if (this.isSuppressModelUpdateAfterUpdateTransaction(params)) {\n      return;\n    }\n    const changedPath = this.createChangePath(params.rowNodeTransactions);\n    this.isRefreshingModel = true;\n    switch (params.step) {\n      case \"group\" /* EVERYTHING */:\n        this.doRowGrouping(\n          params.rowNodeTransactions,\n          params.rowNodeOrder,\n          changedPath,\n          !!params.afterColumnsChanged\n        );\n      case \"filter\" /* FILTER */:\n        this.doFilter(changedPath);\n      case \"pivot\" /* PIVOT */:\n        this.doPivot(changedPath);\n      case \"aggregate\" /* AGGREGATE */:\n        this.doAggregate(changedPath);\n      case \"filter_aggregates\" /* FILTER_AGGREGATES */:\n        this.doFilterAggregates(changedPath);\n      case \"sort\" /* SORT */:\n        this.doSort(params.rowNodeTransactions, changedPath);\n      case \"map\" /* MAP */:\n        this.doRowsToDisplay();\n    }\n    const displayedNodesMapped = this.setRowTopAndRowIndex();\n    this.clearRowTopAndRowIndex(changedPath, displayedNodesMapped);\n    this.isRefreshingModel = false;\n    const event = {\n      type: Events.EVENT_MODEL_UPDATED,\n      animate: params.animate,\n      keepRenderedRows: params.keepRenderedRows,\n      newData: params.newData,\n      newPage: false,\n      keepUndoRedoStack: params.keepUndoRedoStack\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  isEmpty() {\n    const rowsMissing = _.missing(this.rootNode.allLeafChildren) || this.rootNode.allLeafChildren.length === 0;\n    return _.missing(this.rootNode) || rowsMissing || !this.columnModel.isReady();\n  }\n  isRowsToRender() {\n    return _.exists(this.rowsToDisplay) && this.rowsToDisplay.length > 0;\n  }\n  getNodesInRangeForSelection(firstInRange, lastInRange) {\n    let started = !lastInRange;\n    let finished = false;\n    const result = [];\n    const groupsSelectChildren = this.gos.get(\"groupSelectsChildren\");\n    this.forEachNodeAfterFilterAndSort((rowNode) => {\n      if (finished) {\n        return;\n      }\n      if (started) {\n        if (rowNode === lastInRange || rowNode === firstInRange) {\n          finished = true;\n          if (rowNode.group && groupsSelectChildren) {\n            result.push(...rowNode.allLeafChildren);\n            return;\n          }\n        }\n      }\n      if (!started) {\n        if (rowNode !== lastInRange && rowNode !== firstInRange) {\n          return;\n        }\n        started = true;\n      }\n      const includeThisNode = !rowNode.group || !groupsSelectChildren;\n      if (includeThisNode) {\n        result.push(rowNode);\n        return;\n      }\n    });\n    return result;\n  }\n  setDatasource(datasource) {\n    console.error(\"AG Grid: should never call setDatasource on clientSideRowController\");\n  }\n  getTopLevelNodes() {\n    return this.rootNode ? this.rootNode.childrenAfterGroup : null;\n  }\n  getRootNode() {\n    return this.rootNode;\n  }\n  getRow(index) {\n    return this.rowsToDisplay[index];\n  }\n  isRowPresent(rowNode) {\n    return this.rowsToDisplay.indexOf(rowNode) >= 0;\n  }\n  getRowIndexAtPixel(pixelToMatch) {\n    if (this.isEmpty() || this.rowsToDisplay.length === 0) {\n      return -1;\n    }\n    let bottomPointer = 0;\n    let topPointer = this.rowsToDisplay.length - 1;\n    if (pixelToMatch <= 0) {\n      return 0;\n    }\n    const lastNode = _.last(this.rowsToDisplay);\n    if (lastNode.rowTop <= pixelToMatch) {\n      return this.rowsToDisplay.length - 1;\n    }\n    let oldBottomPointer = -1;\n    let oldTopPointer = -1;\n    while (true) {\n      const midPointer = Math.floor((bottomPointer + topPointer) / 2);\n      const currentRowNode = this.rowsToDisplay[midPointer];\n      if (this.isRowInPixel(currentRowNode, pixelToMatch)) {\n        return midPointer;\n      }\n      if (currentRowNode.rowTop < pixelToMatch) {\n        bottomPointer = midPointer + 1;\n      } else if (currentRowNode.rowTop > pixelToMatch) {\n        topPointer = midPointer - 1;\n      }\n      const caughtInInfiniteLoop = oldBottomPointer === bottomPointer && oldTopPointer === topPointer;\n      if (caughtInInfiniteLoop) {\n        return midPointer;\n      }\n      oldBottomPointer = bottomPointer;\n      oldTopPointer = topPointer;\n    }\n  }\n  isRowInPixel(rowNode, pixelToMatch) {\n    const topPixel = rowNode.rowTop;\n    const bottomPixel = rowNode.rowTop + rowNode.rowHeight;\n    const pixelInRow = topPixel <= pixelToMatch && bottomPixel > pixelToMatch;\n    return pixelInRow;\n  }\n  forEachLeafNode(callback) {\n    if (this.rootNode.allLeafChildren) {\n      this.rootNode.allLeafChildren.forEach((rowNode, index) => callback(rowNode, index));\n    }\n  }\n  forEachNode(callback, includeFooterNodes = false) {\n    this.recursivelyWalkNodesAndCallback({\n      nodes: [...this.rootNode.childrenAfterGroup || []],\n      callback,\n      recursionType: 0 /* Normal */,\n      index: 0,\n      includeFooterNodes\n    });\n  }\n  forEachNodeAfterFilter(callback, includeFooterNodes = false) {\n    this.recursivelyWalkNodesAndCallback({\n      nodes: [...this.rootNode.childrenAfterAggFilter || []],\n      callback,\n      recursionType: 1 /* AfterFilter */,\n      index: 0,\n      includeFooterNodes\n    });\n  }\n  forEachNodeAfterFilterAndSort(callback, includeFooterNodes = false) {\n    this.recursivelyWalkNodesAndCallback({\n      nodes: [...this.rootNode.childrenAfterSort || []],\n      callback,\n      recursionType: 2 /* AfterFilterAndSort */,\n      index: 0,\n      includeFooterNodes\n    });\n  }\n  forEachPivotNode(callback, includeFooterNodes = false) {\n    this.recursivelyWalkNodesAndCallback({\n      nodes: [this.rootNode],\n      callback,\n      recursionType: 3 /* PivotNodes */,\n      index: 0,\n      includeFooterNodes\n    });\n  }\n  // iterates through each item in memory, and calls the callback function\n  // nodes - the rowNodes to traverse\n  // callback - the user provided callback\n  // recursion type - need this to know what child nodes to recurse, eg if looking at all nodes, or filtered notes etc\n  // index - works similar to the index in forEach in javascript's array function\n  recursivelyWalkNodesAndCallback(params) {\n    const { nodes, callback, recursionType, includeFooterNodes } = params;\n    let { index } = params;\n    const addFooters = (position) => {\n      var _a;\n      const parentNode = (_a = nodes[0]) == null ? void 0 : _a.parent;\n      if (!parentNode)\n        return;\n      const grandTotal = includeFooterNodes && this.gos.getGrandTotalRow();\n      const isGroupIncludeFooter = this.gos.getGroupTotalRowCallback();\n      const groupTotal = includeFooterNodes && isGroupIncludeFooter({ node: parentNode });\n      const isRootNode = parentNode === this.rootNode;\n      if (isRootNode) {\n        if (grandTotal === position) {\n          parentNode.createFooter();\n          callback(parentNode.sibling, index++);\n        }\n        return;\n      }\n      if (groupTotal === position) {\n        parentNode.createFooter();\n        callback(parentNode.sibling, index++);\n      }\n    };\n    addFooters(\"top\");\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      callback(node, index++);\n      if (node.hasChildren() && !node.footer) {\n        let nodeChildren = null;\n        switch (recursionType) {\n          case 0 /* Normal */:\n            nodeChildren = node.childrenAfterGroup;\n            break;\n          case 1 /* AfterFilter */:\n            nodeChildren = node.childrenAfterAggFilter;\n            break;\n          case 2 /* AfterFilterAndSort */:\n            nodeChildren = node.childrenAfterSort;\n            break;\n          case 3 /* PivotNodes */:\n            nodeChildren = !node.leafGroup ? node.childrenAfterSort : null;\n            break;\n        }\n        if (nodeChildren) {\n          index = this.recursivelyWalkNodesAndCallback({\n            nodes: [...nodeChildren],\n            callback,\n            recursionType,\n            index,\n            includeFooterNodes\n          });\n        }\n      }\n    }\n    addFooters(\"bottom\");\n    return index;\n  }\n  // it's possible to recompute the aggregate without doing the other parts\n  // + api.refreshClientSideRowModel('aggregate')\n  doAggregate(changedPath) {\n    var _a;\n    (_a = this.aggregationStage) == null ? void 0 : _a.execute({ rowNode: this.rootNode, changedPath });\n  }\n  doFilterAggregates(changedPath) {\n    if (this.filterAggregatesStage) {\n      this.filterAggregatesStage.execute({ rowNode: this.rootNode, changedPath });\n    } else {\n      this.rootNode.childrenAfterAggFilter = this.rootNode.childrenAfterFilter;\n    }\n  }\n  // + gridApi.expandAll()\n  // + gridApi.collapseAll()\n  expandOrCollapseAll(expand) {\n    const usingTreeData = this.gos.get(\"treeData\");\n    const usingPivotMode = this.columnModel.isPivotActive();\n    const recursiveExpandOrCollapse = (rowNodes) => {\n      if (!rowNodes) {\n        return;\n      }\n      rowNodes.forEach((rowNode) => {\n        const actionRow = () => {\n          rowNode.expanded = expand;\n          recursiveExpandOrCollapse(rowNode.childrenAfterGroup);\n        };\n        if (usingTreeData) {\n          const hasChildren = _.exists(rowNode.childrenAfterGroup);\n          if (hasChildren) {\n            actionRow();\n          }\n          return;\n        }\n        if (usingPivotMode) {\n          const notLeafGroup = !rowNode.leafGroup;\n          if (notLeafGroup) {\n            actionRow();\n          }\n          return;\n        }\n        const isRowGroup = rowNode.group;\n        if (isRowGroup) {\n          actionRow();\n        }\n      });\n    };\n    if (this.rootNode) {\n      recursiveExpandOrCollapse(this.rootNode.childrenAfterGroup);\n    }\n    this.refreshModel({ step: \"map\" /* MAP */ });\n    const eventSource = expand ? \"expandAll\" : \"collapseAll\";\n    const event = {\n      type: Events.EVENT_EXPAND_COLLAPSE_ALL,\n      source: eventSource\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  doSort(rowNodeTransactions, changedPath) {\n    this.sortStage.execute({\n      rowNode: this.rootNode,\n      rowNodeTransactions,\n      changedPath\n    });\n  }\n  doRowGrouping(rowNodeTransactions, rowNodeOrder, changedPath, afterColumnsChanged) {\n    if (this.groupStage) {\n      if (rowNodeTransactions) {\n        this.groupStage.execute({\n          rowNode: this.rootNode,\n          rowNodeTransactions,\n          rowNodeOrder,\n          changedPath\n        });\n      } else {\n        this.groupStage.execute({\n          rowNode: this.rootNode,\n          changedPath,\n          afterColumnsChanged\n        });\n      }\n      if (this.gos.get(\"groupSelectsChildren\")) {\n        const selectionChanged = this.selectionService.updateGroupsFromChildrenSelections(\"rowGroupChanged\", changedPath);\n        if (selectionChanged) {\n          const event = {\n            type: Events.EVENT_SELECTION_CHANGED,\n            source: \"rowGroupChanged\"\n          };\n          this.eventService.dispatchEvent(event);\n        }\n      }\n    } else {\n      this.rootNode.childrenAfterGroup = this.rootNode.allLeafChildren;\n      if (this.rootNode.sibling) {\n        this.rootNode.sibling.childrenAfterGroup = this.rootNode.childrenAfterGroup;\n      }\n      this.rootNode.updateHasChildren();\n    }\n    if (this.nodeManager.isRowCountReady()) {\n      this.rowCountReady = true;\n      this.eventService.dispatchEventOnce({\n        type: Events.EVENT_ROW_COUNT_READY\n      });\n    }\n  }\n  doFilter(changedPath) {\n    this.filterStage.execute({ rowNode: this.rootNode, changedPath });\n  }\n  doPivot(changedPath) {\n    var _a;\n    (_a = this.pivotStage) == null ? void 0 : _a.execute({ rowNode: this.rootNode, changedPath });\n  }\n  getCopyOfNodesMap() {\n    return this.nodeManager.getCopyOfNodesMap();\n  }\n  getRowNode(id) {\n    const idIsGroup = typeof id == \"string\" && id.indexOf(RowNode.ID_PREFIX_ROW_GROUP) == 0;\n    if (idIsGroup) {\n      let res = void 0;\n      this.forEachNode((node) => {\n        if (node.id === id) {\n          res = node;\n        }\n      });\n      return res;\n    }\n    return this.nodeManager.getRowNode(id);\n  }\n  // rows: the rows to put into the model\n  setRowData(rowData) {\n    this.selectionService.reset(\"rowDataChanged\");\n    this.nodeManager.setRowData(rowData);\n    if (this.hasStarted) {\n      this.dispatchUpdateEventsAndRefresh();\n    }\n  }\n  dispatchUpdateEventsAndRefresh() {\n    const rowDataUpdatedEvent = {\n      type: Events.EVENT_ROW_DATA_UPDATED\n    };\n    this.eventService.dispatchEvent(rowDataUpdatedEvent);\n    this.refreshModel({\n      step: \"group\" /* EVERYTHING */,\n      newData: true\n    });\n  }\n  batchUpdateRowData(rowDataTransaction, callback) {\n    if (this.applyAsyncTransactionsTimeout == null) {\n      this.rowDataTransactionBatch = [];\n      const waitMillis = this.gos.getAsyncTransactionWaitMillis();\n      this.applyAsyncTransactionsTimeout = window.setTimeout(() => {\n        this.executeBatchUpdateRowData();\n      }, waitMillis);\n    }\n    this.rowDataTransactionBatch.push({ rowDataTransaction, callback });\n  }\n  flushAsyncTransactions() {\n    if (this.applyAsyncTransactionsTimeout != null) {\n      clearTimeout(this.applyAsyncTransactionsTimeout);\n      this.executeBatchUpdateRowData();\n    }\n  }\n  executeBatchUpdateRowData() {\n    this.valueCache.onDataChanged();\n    const callbackFuncsBound = [];\n    const rowNodeTrans = [];\n    let forceRowNodeOrder = false;\n    if (this.rowDataTransactionBatch) {\n      this.rowDataTransactionBatch.forEach((tranItem) => {\n        const rowNodeTran = this.nodeManager.updateRowData(tranItem.rowDataTransaction, void 0);\n        rowNodeTrans.push(rowNodeTran);\n        if (tranItem.callback) {\n          callbackFuncsBound.push(tranItem.callback.bind(null, rowNodeTran));\n        }\n        if (typeof tranItem.rowDataTransaction.addIndex === \"number\") {\n          forceRowNodeOrder = true;\n        }\n      });\n    }\n    this.commonUpdateRowData(rowNodeTrans, void 0, forceRowNodeOrder);\n    if (callbackFuncsBound.length > 0) {\n      window.setTimeout(() => {\n        callbackFuncsBound.forEach((func) => func());\n      }, 0);\n    }\n    if (rowNodeTrans.length > 0) {\n      const event = {\n        type: Events.EVENT_ASYNC_TRANSACTIONS_FLUSHED,\n        results: rowNodeTrans\n      };\n      this.eventService.dispatchEvent(event);\n    }\n    this.rowDataTransactionBatch = null;\n    this.applyAsyncTransactionsTimeout = void 0;\n  }\n  updateRowData(rowDataTran, rowNodeOrder) {\n    this.valueCache.onDataChanged();\n    const rowNodeTran = this.nodeManager.updateRowData(rowDataTran, rowNodeOrder);\n    const forceRowNodeOrder = typeof rowDataTran.addIndex === \"number\";\n    this.commonUpdateRowData([rowNodeTran], rowNodeOrder, forceRowNodeOrder);\n    return rowNodeTran;\n  }\n  createRowNodeOrder() {\n    const suppressSortOrder = this.gos.get(\"suppressMaintainUnsortedOrder\");\n    if (suppressSortOrder) {\n      return;\n    }\n    const orderMap = {};\n    if (this.rootNode && this.rootNode.allLeafChildren) {\n      for (let index = 0; index < this.rootNode.allLeafChildren.length; index++) {\n        const node = this.rootNode.allLeafChildren[index];\n        orderMap[node.id] = index;\n      }\n    }\n    return orderMap;\n  }\n  // common to updateRowData and batchUpdateRowData\n  commonUpdateRowData(rowNodeTrans, rowNodeOrder, forceRowNodeOrder) {\n    if (!this.hasStarted) {\n      return;\n    }\n    const animate = !this.gos.get(\"suppressAnimationFrame\");\n    if (forceRowNodeOrder) {\n      rowNodeOrder = this.createRowNodeOrder();\n    }\n    const event = {\n      type: Events.EVENT_ROW_DATA_UPDATED\n    };\n    this.eventService.dispatchEvent(event);\n    this.refreshModel({\n      step: \"group\" /* EVERYTHING */,\n      rowNodeTransactions: rowNodeTrans,\n      rowNodeOrder,\n      keepRenderedRows: true,\n      keepEditingRows: true,\n      animate\n    });\n  }\n  doRowsToDisplay() {\n    this.rowsToDisplay = this.flattenStage.execute({ rowNode: this.rootNode });\n  }\n  onRowHeightChanged() {\n    this.refreshModel({ step: \"map\" /* MAP */, keepRenderedRows: true, keepEditingRows: true, keepUndoRedoStack: true });\n  }\n  /** This method is debounced. It is used for row auto-height. If we don't debounce,\n   * then the Row Models will end up recalculating each row position\n   * for each row height change and result in the Row Renderer laying out rows.\n   * This is particularly bad if using print layout, and showing eg 1,000 rows,\n   * each row will change it's height, causing Row Model to update 1,000 times.\n   */\n  onRowHeightChangedDebounced() {\n    this.onRowHeightChanged_debounced();\n  }\n  resetRowHeights() {\n    const atLeastOne = this.resetRowHeightsForAllRowNodes();\n    this.rootNode.setRowHeight(this.rootNode.rowHeight, true);\n    if (this.rootNode.sibling) {\n      this.rootNode.sibling.setRowHeight(this.rootNode.sibling.rowHeight, true);\n    }\n    if (atLeastOne) {\n      this.onRowHeightChanged();\n    }\n  }\n  resetRowHeightsForAllRowNodes() {\n    let atLeastOne = false;\n    this.forEachNode((rowNode) => {\n      rowNode.setRowHeight(rowNode.rowHeight, true);\n      const detailNode = rowNode.detailNode;\n      if (detailNode) {\n        detailNode.setRowHeight(detailNode.rowHeight, true);\n      }\n      if (rowNode.sibling) {\n        rowNode.sibling.setRowHeight(rowNode.sibling.rowHeight, true);\n      }\n      atLeastOne = true;\n    });\n    return atLeastOne;\n  }\n  onGridStylesChanges() {\n    if (this.columnModel.isAutoRowHeightActive()) {\n      return;\n    }\n    this.resetRowHeights();\n  }\n  onGridReady() {\n    if (this.hasStarted) {\n      return;\n    }\n    this.setInitialData();\n  }\n  isRowDataLoaded() {\n    return this.rowCountReady;\n  }\n};\n__decorateClass([\n  Autowired(\"columnModel\")\n], ClientSideRowModel.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"selectionService\")\n], ClientSideRowModel.prototype, \"selectionService\", 2);\n__decorateClass([\n  Autowired(\"valueCache\")\n], ClientSideRowModel.prototype, \"valueCache\", 2);\n__decorateClass([\n  Autowired(\"beans\")\n], ClientSideRowModel.prototype, \"beans\", 2);\n__decorateClass([\n  Autowired(\"filterStage\")\n], ClientSideRowModel.prototype, \"filterStage\", 2);\n__decorateClass([\n  Autowired(\"sortStage\")\n], ClientSideRowModel.prototype, \"sortStage\", 2);\n__decorateClass([\n  Autowired(\"flattenStage\")\n], ClientSideRowModel.prototype, \"flattenStage\", 2);\n__decorateClass([\n  Optional(\"groupStage\")\n], ClientSideRowModel.prototype, \"groupStage\", 2);\n__decorateClass([\n  Optional(\"aggregationStage\")\n], ClientSideRowModel.prototype, \"aggregationStage\", 2);\n__decorateClass([\n  Optional(\"pivotStage\")\n], ClientSideRowModel.prototype, \"pivotStage\", 2);\n__decorateClass([\n  Optional(\"filterAggregatesStage\")\n], ClientSideRowModel.prototype, \"filterAggregatesStage\", 2);\n__decorateClass([\n  PostConstruct\n], ClientSideRowModel.prototype, \"init\", 1);\nClientSideRowModel = __decorateClass([\n  Bean(\"rowModel\")\n], ClientSideRowModel);\n\n// community-modules/client-side-row-model/src/clientSideRowModel/filterStage.ts\nvar FilterStage = class extends BeanStub {\n  execute(params) {\n    const { changedPath } = params;\n    this.filterService.filter(changedPath);\n  }\n};\n__decorateClass([\n  Autowired(\"filterService\")\n], FilterStage.prototype, \"filterService\", 2);\nFilterStage = __decorateClass([\n  Bean(\"filterStage\")\n], FilterStage);\n\n// community-modules/client-side-row-model/src/clientSideRowModel/sortStage.ts\nvar SortStage = class extends BeanStub {\n  execute(params) {\n    const sortOptions = this.sortController.getSortOptions();\n    const sortActive = _.exists(sortOptions) && sortOptions.length > 0;\n    const deltaSort = sortActive && _.exists(params.rowNodeTransactions) && this.gos.get(\"deltaSort\");\n    const sortContainsGroupColumns = sortOptions.some((opt) => {\n      const isSortingCoupled = this.gos.isColumnsSortingCoupledToGroup();\n      if (isSortingCoupled) {\n        return opt.column.isPrimary() && opt.column.isRowGroupActive();\n      }\n      return !!opt.column.getColDef().showRowGroup;\n    });\n    this.sortService.sort(sortOptions, sortActive, deltaSort, params.rowNodeTransactions, params.changedPath, sortContainsGroupColumns);\n  }\n};\n__decorateClass([\n  Autowired(\"sortService\")\n], SortStage.prototype, \"sortService\", 2);\n__decorateClass([\n  Autowired(\"sortController\")\n], SortStage.prototype, \"sortController\", 2);\nSortStage = __decorateClass([\n  Bean(\"sortStage\")\n], SortStage);\n\n// community-modules/client-side-row-model/src/clientSideRowModel/flattenStage.ts\nvar FlattenStage = class extends BeanStub {\n  execute(params) {\n    const rootNode = params.rowNode;\n    const result = [];\n    const skipLeafNodes = this.beans.columnModel.isPivotMode();\n    const showRootNode = skipLeafNodes && rootNode.leafGroup;\n    const topList = showRootNode ? [rootNode] : rootNode.childrenAfterSort;\n    const details = this.getFlattenDetails();\n    this.recursivelyAddToRowsToDisplay(details, topList, result, skipLeafNodes, 0);\n    const atLeastOneRowPresent = result.length > 0;\n    const includeGrandTotalRow = !showRootNode && atLeastOneRowPresent && details.grandTotalRow;\n    if (includeGrandTotalRow) {\n      rootNode.createFooter();\n      const addToTop = details.grandTotalRow === \"top\";\n      this.addRowNodeToRowsToDisplay(details, rootNode.sibling, result, 0, addToTop);\n    }\n    return result;\n  }\n  getFlattenDetails() {\n    const groupRemoveSingleChildren = this.gos.get(\"groupRemoveSingleChildren\");\n    const groupRemoveLowestSingleChildren = !groupRemoveSingleChildren && this.gos.get(\"groupRemoveLowestSingleChildren\");\n    return {\n      groupRemoveLowestSingleChildren,\n      groupRemoveSingleChildren,\n      isGroupMultiAutoColumn: this.gos.isGroupMultiAutoColumn(),\n      hideOpenParents: this.gos.get(\"groupHideOpenParents\"),\n      grandTotalRow: this.gos.getGrandTotalRow(),\n      groupTotalRow: this.gos.getGroupTotalRowCallback()\n    };\n  }\n  recursivelyAddToRowsToDisplay(details, rowsToFlatten, result, skipLeafNodes, uiLevel) {\n    if (_.missingOrEmpty(rowsToFlatten)) {\n      return;\n    }\n    for (let i = 0; i < rowsToFlatten.length; i++) {\n      const rowNode = rowsToFlatten[i];\n      const isParent = rowNode.hasChildren();\n      const isSkippedLeafNode = skipLeafNodes && !isParent;\n      const isRemovedSingleChildrenGroup = details.groupRemoveSingleChildren && isParent && rowNode.childrenAfterGroup.length === 1;\n      const isRemovedLowestSingleChildrenGroup = details.groupRemoveLowestSingleChildren && isParent && rowNode.leafGroup && rowNode.childrenAfterGroup.length === 1;\n      const neverAllowToExpand = skipLeafNodes && rowNode.leafGroup;\n      const isHiddenOpenParent = details.hideOpenParents && rowNode.expanded && !rowNode.master && !neverAllowToExpand;\n      const thisRowShouldBeRendered = !isSkippedLeafNode && !isHiddenOpenParent && !isRemovedSingleChildrenGroup && !isRemovedLowestSingleChildrenGroup;\n      if (thisRowShouldBeRendered) {\n        this.addRowNodeToRowsToDisplay(details, rowNode, result, uiLevel);\n      }\n      if (skipLeafNodes && rowNode.leafGroup) {\n        continue;\n      }\n      if (isParent) {\n        const excludedParent = isRemovedSingleChildrenGroup || isRemovedLowestSingleChildrenGroup;\n        if (rowNode.expanded || excludedParent) {\n          const doesRowShowFooter = details.groupTotalRow({ node: rowNode });\n          if (!doesRowShowFooter) {\n            rowNode.destroyFooter();\n          }\n          const uiLevelForChildren = excludedParent ? uiLevel : uiLevel + 1;\n          if (doesRowShowFooter === \"top\") {\n            rowNode.createFooter();\n            this.addRowNodeToRowsToDisplay(details, rowNode.sibling, result, uiLevelForChildren);\n          }\n          this.recursivelyAddToRowsToDisplay(\n            details,\n            rowNode.childrenAfterSort,\n            result,\n            skipLeafNodes,\n            uiLevelForChildren\n          );\n          if (doesRowShowFooter === \"bottom\") {\n            rowNode.createFooter();\n            this.addRowNodeToRowsToDisplay(details, rowNode.sibling, result, uiLevelForChildren);\n          }\n        }\n      } else if (rowNode.master && rowNode.expanded) {\n        const detailNode = this.createDetailNode(rowNode);\n        this.addRowNodeToRowsToDisplay(details, detailNode, result, uiLevel);\n      }\n    }\n  }\n  // duplicated method, it's also in floatingRowModel\n  addRowNodeToRowsToDisplay(details, rowNode, result, uiLevel, addToTop) {\n    if (addToTop) {\n      result.unshift(rowNode);\n    } else {\n      result.push(rowNode);\n    }\n    rowNode.setUiLevel(details.isGroupMultiAutoColumn ? 0 : uiLevel);\n  }\n  createDetailNode(masterNode) {\n    if (_.exists(masterNode.detailNode)) {\n      return masterNode.detailNode;\n    }\n    const detailNode = new RowNode(this.beans);\n    detailNode.detail = true;\n    detailNode.selectable = false;\n    detailNode.parent = masterNode;\n    if (_.exists(masterNode.id)) {\n      detailNode.id = \"detail_\" + masterNode.id;\n    }\n    detailNode.data = masterNode.data;\n    detailNode.level = masterNode.level + 1;\n    masterNode.detailNode = detailNode;\n    return detailNode;\n  }\n};\n__decorateClass([\n  Autowired(\"beans\")\n], FlattenStage.prototype, \"beans\", 2);\nFlattenStage = __decorateClass([\n  Bean(\"flattenStage\")\n], FlattenStage);\n\n// community-modules/client-side-row-model/src/clientSideRowModel/sortService.ts\nvar SortService = class extends BeanStub {\n  sort(sortOptions, sortActive, useDeltaSort, rowNodeTransactions, changedPath, sortContainsGroupColumns) {\n    const groupMaintainOrder = this.gos.get(\"groupMaintainOrder\");\n    const groupColumnsPresent = this.columnModel.getAllGridColumns().some((c) => c.isRowGroupActive());\n    let allDirtyNodes = {};\n    if (useDeltaSort && rowNodeTransactions) {\n      allDirtyNodes = this.calculateDirtyNodes(rowNodeTransactions);\n    }\n    const isPivotMode = this.columnModel.isPivotMode();\n    const postSortFunc = this.gos.getCallback(\"postSortRows\");\n    const callback = (rowNode) => {\n      var _a;\n      this.pullDownGroupDataForHideOpenParents(rowNode.childrenAfterAggFilter, true);\n      const skipSortingPivotLeafs = isPivotMode && rowNode.leafGroup;\n      let skipSortingGroups = groupMaintainOrder && groupColumnsPresent && !rowNode.leafGroup && !sortContainsGroupColumns;\n      if (skipSortingGroups) {\n        const nextGroup = (_a = this.columnModel.getRowGroupColumns()) == null ? void 0 : _a[rowNode.level + 1];\n        const wasSortExplicitlyRemoved = (nextGroup == null ? void 0 : nextGroup.getSort()) === null;\n        const childrenToBeSorted = rowNode.childrenAfterAggFilter.slice(0);\n        if (rowNode.childrenAfterSort && !wasSortExplicitlyRemoved) {\n          const indexedOrders = {};\n          rowNode.childrenAfterSort.forEach((node, idx) => {\n            indexedOrders[node.id] = idx;\n          });\n          childrenToBeSorted.sort((row1, row2) => {\n            var _a2, _b;\n            return ((_a2 = indexedOrders[row1.id]) != null ? _a2 : 0) - ((_b = indexedOrders[row2.id]) != null ? _b : 0);\n          });\n        }\n        rowNode.childrenAfterSort = childrenToBeSorted;\n      } else if (!sortActive || skipSortingPivotLeafs) {\n        rowNode.childrenAfterSort = rowNode.childrenAfterAggFilter.slice(0);\n      } else if (useDeltaSort) {\n        rowNode.childrenAfterSort = this.doDeltaSort(rowNode, allDirtyNodes, changedPath, sortOptions);\n      } else {\n        rowNode.childrenAfterSort = this.rowNodeSorter.doFullSort(rowNode.childrenAfterAggFilter, sortOptions);\n      }\n      if (rowNode.sibling) {\n        rowNode.sibling.childrenAfterSort = rowNode.childrenAfterSort;\n      }\n      this.updateChildIndexes(rowNode);\n      if (postSortFunc) {\n        const params = { nodes: rowNode.childrenAfterSort };\n        postSortFunc(params);\n      }\n    };\n    if (changedPath) {\n      changedPath.forEachChangedNodeDepthFirst(callback);\n    }\n    this.updateGroupDataForHideOpenParents(changedPath);\n  }\n  calculateDirtyNodes(rowNodeTransactions) {\n    const dirtyNodes = {};\n    const addNodesFunc = (rowNodes) => {\n      if (rowNodes) {\n        rowNodes.forEach((rowNode) => dirtyNodes[rowNode.id] = true);\n      }\n    };\n    if (rowNodeTransactions) {\n      rowNodeTransactions.forEach((tran) => {\n        addNodesFunc(tran.add);\n        addNodesFunc(tran.update);\n        addNodesFunc(tran.remove);\n      });\n    }\n    return dirtyNodes;\n  }\n  doDeltaSort(rowNode, allTouchedNodes, changedPath, sortOptions) {\n    const unsortedRows = rowNode.childrenAfterAggFilter;\n    const oldSortedRows = rowNode.childrenAfterSort;\n    if (!oldSortedRows) {\n      return this.rowNodeSorter.doFullSort(unsortedRows, sortOptions);\n    }\n    const untouchedRowsMap = {};\n    const touchedRows = [];\n    unsortedRows.forEach((row) => {\n      if (allTouchedNodes[row.id] || !changedPath.canSkip(row)) {\n        touchedRows.push(row);\n      } else {\n        untouchedRowsMap[row.id] = true;\n      }\n    });\n    const sortedUntouchedRows = oldSortedRows.filter((child) => untouchedRowsMap[child.id]);\n    const mapNodeToSortedNode = (rowNode2, pos) => ({ currentPos: pos, rowNode: rowNode2 });\n    const sortedChangedRows = touchedRows.map(mapNodeToSortedNode).sort((a, b) => this.rowNodeSorter.compareRowNodes(sortOptions, a, b));\n    return this.mergeSortedArrays(\n      sortOptions,\n      sortedChangedRows,\n      sortedUntouchedRows.map(mapNodeToSortedNode)\n    ).map(({ rowNode: rowNode2 }) => rowNode2);\n  }\n  // Merge two sorted arrays into each other\n  mergeSortedArrays(sortOptions, arr1, arr2) {\n    const res = [];\n    let i = 0;\n    let j = 0;\n    while (i < arr1.length && j < arr2.length) {\n      const compareResult = this.rowNodeSorter.compareRowNodes(sortOptions, arr1[i], arr2[j]);\n      if (compareResult < 0) {\n        res.push(arr1[i++]);\n      } else {\n        res.push(arr2[j++]);\n      }\n    }\n    while (i < arr1.length) {\n      res.push(arr1[i++]);\n    }\n    while (j < arr2.length) {\n      res.push(arr2[j++]);\n    }\n    return res;\n  }\n  updateChildIndexes(rowNode) {\n    if (_.missing(rowNode.childrenAfterSort)) {\n      return;\n    }\n    const listToSort = rowNode.childrenAfterSort;\n    for (let i = 0; i < listToSort.length; i++) {\n      const child = listToSort[i];\n      const firstChild = i === 0;\n      const lastChild = i === rowNode.childrenAfterSort.length - 1;\n      child.setFirstChild(firstChild);\n      child.setLastChild(lastChild);\n      child.setChildIndex(i);\n    }\n  }\n  updateGroupDataForHideOpenParents(changedPath) {\n    if (!this.gos.get(\"groupHideOpenParents\")) {\n      return;\n    }\n    if (this.gos.get(\"treeData\")) {\n      _.warnOnce(`The property hideOpenParents dose not work with Tree Data. This is because Tree Data has values at the group level, it doesn't make sense to hide them.`);\n      return false;\n    }\n    const callback = (rowNode) => {\n      this.pullDownGroupDataForHideOpenParents(rowNode.childrenAfterSort, false);\n      rowNode.childrenAfterSort.forEach((child) => {\n        if (child.hasChildren()) {\n          callback(child);\n        }\n      });\n    };\n    if (changedPath) {\n      changedPath.executeFromRootNode((rowNode) => callback(rowNode));\n    }\n  }\n  pullDownGroupDataForHideOpenParents(rowNodes, clearOperation) {\n    if (!this.gos.get(\"groupHideOpenParents\") || _.missing(rowNodes)) {\n      return;\n    }\n    rowNodes.forEach((childRowNode) => {\n      const groupDisplayCols = this.columnModel.getGroupDisplayColumns();\n      groupDisplayCols.forEach((groupDisplayCol) => {\n        const showRowGroup = groupDisplayCol.getColDef().showRowGroup;\n        if (typeof showRowGroup !== \"string\") {\n          console.error(\"AG Grid: groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup\");\n          return;\n        }\n        const displayingGroupKey = showRowGroup;\n        const rowGroupColumn = this.columnModel.getPrimaryColumn(displayingGroupKey);\n        const thisRowNodeMatches = rowGroupColumn === childRowNode.rowGroupColumn;\n        if (thisRowNodeMatches) {\n          return;\n        }\n        if (clearOperation) {\n          childRowNode.setGroupValue(groupDisplayCol.getId(), void 0);\n        } else {\n          const parentToStealFrom = childRowNode.getFirstChildOfFirstChild(rowGroupColumn);\n          if (parentToStealFrom) {\n            childRowNode.setGroupValue(groupDisplayCol.getId(), parentToStealFrom.key);\n          }\n        }\n      });\n    });\n  }\n};\n__decorateClass([\n  Autowired(\"columnModel\")\n], SortService.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"rowNodeSorter\")\n], SortService.prototype, \"rowNodeSorter\", 2);\nSortService = __decorateClass([\n  Bean(\"sortService\")\n], SortService);\n\n// community-modules/client-side-row-model/src/clientSideRowModel/filterService.ts\nvar FilterService = class extends BeanStub {\n  filter(changedPath) {\n    const filterActive = this.filterManager.isChildFilterPresent();\n    this.filterNodes(filterActive, changedPath);\n  }\n  filterNodes(filterActive, changedPath) {\n    const filterCallback = (rowNode, includeChildNodes) => {\n      if (rowNode.hasChildren()) {\n        if (filterActive && !includeChildNodes) {\n          rowNode.childrenAfterFilter = rowNode.childrenAfterGroup.filter((childNode) => {\n            const passBecauseChildren = childNode.childrenAfterFilter && childNode.childrenAfterFilter.length > 0;\n            const passBecauseDataPasses = childNode.data && this.filterManager.doesRowPassFilter({ rowNode: childNode });\n            return passBecauseChildren || passBecauseDataPasses;\n          });\n        } else {\n          rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n        }\n      } else {\n        rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n      }\n      if (rowNode.sibling) {\n        rowNode.sibling.childrenAfterFilter = rowNode.childrenAfterFilter;\n      }\n    };\n    if (this.doingTreeDataFiltering()) {\n      const treeDataDepthFirstFilter = (rowNode, alreadyFoundInParent) => {\n        if (rowNode.childrenAfterGroup) {\n          for (let i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n            const childNode = rowNode.childrenAfterGroup[i];\n            const foundInParent = alreadyFoundInParent || this.filterManager.doesRowPassFilter({ rowNode: childNode });\n            if (childNode.childrenAfterGroup) {\n              treeDataDepthFirstFilter(rowNode.childrenAfterGroup[i], foundInParent);\n            } else {\n              filterCallback(childNode, foundInParent);\n            }\n          }\n        }\n        filterCallback(rowNode, alreadyFoundInParent);\n      };\n      const treeDataFilterCallback = (rowNode) => treeDataDepthFirstFilter(rowNode, false);\n      changedPath.executeFromRootNode(treeDataFilterCallback);\n    } else {\n      const defaultFilterCallback = (rowNode) => filterCallback(rowNode, false);\n      changedPath.forEachChangedNodeDepthFirst(defaultFilterCallback, true);\n    }\n  }\n  doingTreeDataFiltering() {\n    return this.gos.get(\"treeData\") && !this.gos.get(\"excludeChildrenWhenTreeDataFiltering\");\n  }\n};\n__decorateClass([\n  Autowired(\"filterManager\")\n], FilterService.prototype, \"filterManager\", 2);\nFilterService = __decorateClass([\n  Bean(\"filterService\")\n], FilterService);\n\n// community-modules/client-side-row-model/src/clientSideRowModel/immutableService.ts\nvar ImmutableService = class extends BeanStub {\n  postConstruct() {\n    if (this.rowModel.getType() === \"clientSide\") {\n      this.clientSideRowModel = this.rowModel;\n      this.addManagedPropertyListener(\"rowData\", () => this.onRowDataUpdated());\n    }\n  }\n  isActive() {\n    const getRowIdProvided = this.gos.exists(\"getRowId\");\n    const resetRowDataOnUpdate = this.gos.get(\"resetRowDataOnUpdate\");\n    if (resetRowDataOnUpdate) {\n      return false;\n    }\n    return getRowIdProvided;\n  }\n  setRowData(rowData) {\n    const transactionAndMap = this.createTransactionForRowData(rowData);\n    if (!transactionAndMap) {\n      return;\n    }\n    const [transaction, orderIdMap] = transactionAndMap;\n    this.clientSideRowModel.updateRowData(transaction, orderIdMap);\n  }\n  // converts the setRowData() command to a transaction\n  createTransactionForRowData(rowData) {\n    if (_.missing(this.clientSideRowModel)) {\n      console.error(\"AG Grid: ImmutableService only works with ClientSideRowModel\");\n      return;\n    }\n    const getRowIdFunc = this.gos.getCallback(\"getRowId\");\n    if (getRowIdFunc == null) {\n      console.error(\"AG Grid: ImmutableService requires getRowId() callback to be implemented, your row data needs IDs!\");\n      return;\n    }\n    const transaction = {\n      remove: [],\n      update: [],\n      add: []\n    };\n    const existingNodesMap = this.clientSideRowModel.getCopyOfNodesMap();\n    const suppressSortOrder = this.gos.get(\"suppressMaintainUnsortedOrder\");\n    const orderMap = suppressSortOrder ? void 0 : {};\n    if (_.exists(rowData)) {\n      rowData.forEach((data, index) => {\n        const id = getRowIdFunc({ data, level: 0 });\n        const existingNode = existingNodesMap[id];\n        if (orderMap) {\n          orderMap[id] = index;\n        }\n        if (existingNode) {\n          const dataHasChanged = existingNode.data !== data;\n          if (dataHasChanged) {\n            transaction.update.push(data);\n          }\n          existingNodesMap[id] = void 0;\n        } else {\n          transaction.add.push(data);\n        }\n      });\n    }\n    _.iterateObject(existingNodesMap, (id, rowNode) => {\n      if (rowNode) {\n        transaction.remove.push(rowNode.data);\n      }\n    });\n    return [transaction, orderMap];\n  }\n  onRowDataUpdated() {\n    const rowData = this.gos.get(\"rowData\");\n    if (!rowData) {\n      return;\n    }\n    if (this.isActive()) {\n      this.setRowData(rowData);\n    } else {\n      this.selectionService.reset(\"rowDataChanged\");\n      this.clientSideRowModel.setRowData(rowData);\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"rowModel\")\n], ImmutableService.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired(\"rowRenderer\")\n], ImmutableService.prototype, \"rowRenderer\", 2);\n__decorateClass([\n  Autowired(\"selectionService\")\n], ImmutableService.prototype, \"selectionService\", 2);\n__decorateClass([\n  PostConstruct\n], ImmutableService.prototype, \"postConstruct\", 1);\nImmutableService = __decorateClass([\n  Bean(\"immutableService\")\n], ImmutableService);\n\n// community-modules/client-side-row-model/src/version.ts\nvar VERSION = \"31.3.2\";\n\n// community-modules/client-side-row-model/src/clientSideRowModelModule.ts\nvar ClientSideRowModelModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */,\n  rowModel: \"clientSide\",\n  beans: [ClientSideRowModel, FilterStage, SortStage, FlattenStage, SortService, FilterService, ImmutableService]\n};\n\n// community-modules/infinite-row-model/dist/package/main.esm.mjs\nvar __defProp2 = Object.defineProperty;\nvar __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;\nvar __decorateClass2 = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc2(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp2(target, key, result);\n  return result;\n};\nvar __decorateParam2 = (index, decorator) => (target, key) => decorator(target, key, index);\nvar InfiniteBlock = class extends RowNodeBlock {\n  constructor(id, parentCache, params) {\n    super(id);\n    this.parentCache = parentCache;\n    this.params = params;\n    this.startRow = id * params.blockSize;\n    this.endRow = this.startRow + params.blockSize;\n  }\n  postConstruct() {\n    this.createRowNodes();\n  }\n  getBlockStateJson() {\n    return {\n      id: \"\" + this.getId(),\n      state: {\n        blockNumber: this.getId(),\n        startRow: this.getStartRow(),\n        endRow: this.getEndRow(),\n        pageStatus: this.getState()\n      }\n    };\n  }\n  setDataAndId(rowNode, data, index) {\n    if (_.exists(data)) {\n      rowNode.setDataAndId(data, index.toString());\n    } else {\n      rowNode.setDataAndId(void 0, void 0);\n    }\n  }\n  loadFromDatasource() {\n    const params = this.createLoadParams();\n    if (_.missing(this.params.datasource.getRows)) {\n      console.warn(`AG Grid: datasource is missing getRows method`);\n      return;\n    }\n    window.setTimeout(() => {\n      this.params.datasource.getRows(params);\n    }, 0);\n  }\n  processServerFail() {\n  }\n  createLoadParams() {\n    const params = {\n      startRow: this.getStartRow(),\n      endRow: this.getEndRow(),\n      successCallback: this.pageLoaded.bind(this, this.getVersion()),\n      failCallback: this.pageLoadFailed.bind(this, this.getVersion()),\n      sortModel: this.params.sortModel,\n      filterModel: this.params.filterModel,\n      context: this.gos.getGridCommonParams().context\n    };\n    return params;\n  }\n  forEachNode(callback, sequence, rowCount) {\n    this.rowNodes.forEach((rowNode, index) => {\n      const rowIndex = this.startRow + index;\n      if (rowIndex < rowCount) {\n        callback(rowNode, sequence.next());\n      }\n    });\n  }\n  getLastAccessed() {\n    return this.lastAccessed;\n  }\n  getRow(rowIndex, dontTouchLastAccessed = false) {\n    if (!dontTouchLastAccessed) {\n      this.lastAccessed = this.params.lastAccessedSequence.next();\n    }\n    const localIndex = rowIndex - this.startRow;\n    return this.rowNodes[localIndex];\n  }\n  getStartRow() {\n    return this.startRow;\n  }\n  getEndRow() {\n    return this.endRow;\n  }\n  // creates empty row nodes, data is missing as not loaded yet\n  createRowNodes() {\n    this.rowNodes = [];\n    for (let i = 0; i < this.params.blockSize; i++) {\n      const rowIndex = this.startRow + i;\n      const rowNode = new RowNode(this.beans);\n      rowNode.setRowHeight(this.params.rowHeight);\n      rowNode.uiLevel = 0;\n      rowNode.setRowIndex(rowIndex);\n      rowNode.setRowTop(this.params.rowHeight * rowIndex);\n      this.rowNodes.push(rowNode);\n    }\n  }\n  processServerResult(params) {\n    this.rowNodes.forEach((rowNode, index) => {\n      const data = params.rowData ? params.rowData[index] : void 0;\n      if (!rowNode.id && rowNode.alreadyRendered && data) {\n        this.rowNodes[index] = new RowNode(this.beans);\n        this.rowNodes[index].setRowIndex(rowNode.rowIndex);\n        this.rowNodes[index].setRowTop(rowNode.rowTop);\n        this.rowNodes[index].setRowHeight(rowNode.rowHeight);\n        rowNode.clearRowTopAndRowIndex();\n      }\n      this.setDataAndId(this.rowNodes[index], data, this.startRow + index);\n    });\n    const finalRowCount = params.rowCount != null && params.rowCount >= 0 ? params.rowCount : void 0;\n    this.parentCache.pageLoaded(this, finalRowCount);\n  }\n  destroyRowNodes() {\n    this.rowNodes.forEach((rowNode) => {\n      rowNode.clearRowTopAndRowIndex();\n    });\n  }\n};\n__decorateClass2([\n  Autowired(\"beans\")\n], InfiniteBlock.prototype, \"beans\", 2);\n__decorateClass2([\n  PostConstruct\n], InfiniteBlock.prototype, \"postConstruct\", 1);\n__decorateClass2([\n  PreDestroy\n], InfiniteBlock.prototype, \"destroyRowNodes\", 1);\nvar _InfiniteCache = class _InfiniteCache2 extends BeanStub {\n  constructor(params) {\n    super();\n    this.lastRowIndexKnown = false;\n    this.blocks = {};\n    this.blockCount = 0;\n    this.rowCount = params.initialRowCount;\n    this.params = params;\n  }\n  setBeans(loggerFactory) {\n    this.logger = loggerFactory.create(\"InfiniteCache\");\n  }\n  // the rowRenderer will not pass dontCreatePage, meaning when rendering the grid,\n  // it will want new pages in the cache as it asks for rows. only when we are inserting /\n  // removing rows via the api is dontCreatePage set, where we move rows between the pages.\n  getRow(rowIndex, dontCreatePage = false) {\n    const blockId = Math.floor(rowIndex / this.params.blockSize);\n    let block = this.blocks[blockId];\n    if (!block) {\n      if (dontCreatePage) {\n        return void 0;\n      }\n      block = this.createBlock(blockId);\n    }\n    return block.getRow(rowIndex);\n  }\n  createBlock(blockNumber) {\n    const newBlock = this.createBean(new InfiniteBlock(blockNumber, this, this.params));\n    this.blocks[newBlock.getId()] = newBlock;\n    this.blockCount++;\n    this.purgeBlocksIfNeeded(newBlock);\n    this.params.rowNodeBlockLoader.addBlock(newBlock);\n    return newBlock;\n  }\n  // we have this on infinite row model only, not server side row model,\n  // because for server side, it would leave the children in inconsistent\n  // state - eg if a node had children, but after the refresh it had data\n  // for a different row, then the children would be with the wrong row node.\n  refreshCache() {\n    const nothingToRefresh = this.blockCount == 0;\n    if (nothingToRefresh) {\n      this.purgeCache();\n      return;\n    }\n    this.getBlocksInOrder().forEach((block) => block.setStateWaitingToLoad());\n    this.params.rowNodeBlockLoader.checkBlockToLoad();\n  }\n  destroyAllBlocks() {\n    this.getBlocksInOrder().forEach((block) => this.destroyBlock(block));\n  }\n  getRowCount() {\n    return this.rowCount;\n  }\n  isLastRowIndexKnown() {\n    return this.lastRowIndexKnown;\n  }\n  // block calls this, when page loaded\n  pageLoaded(block, lastRow) {\n    if (!this.isAlive()) {\n      return;\n    }\n    this.logger.log(`onPageLoaded: page = ${block.getId()}, lastRow = ${lastRow}`);\n    this.checkRowCount(block, lastRow);\n    this.onCacheUpdated();\n  }\n  purgeBlocksIfNeeded(blockToExclude) {\n    const blocksForPurging = this.getBlocksInOrder().filter((b) => b != blockToExclude);\n    const lastAccessedComparator = (a, b) => b.getLastAccessed() - a.getLastAccessed();\n    blocksForPurging.sort(lastAccessedComparator);\n    const maxBlocksProvided = this.params.maxBlocksInCache > 0;\n    const blocksToKeep = maxBlocksProvided ? this.params.maxBlocksInCache - 1 : null;\n    const emptyBlocksToKeep = _InfiniteCache2.MAX_EMPTY_BLOCKS_TO_KEEP - 1;\n    blocksForPurging.forEach((block, index) => {\n      const purgeBecauseBlockEmpty = block.getState() === InfiniteBlock.STATE_WAITING_TO_LOAD && index >= emptyBlocksToKeep;\n      const purgeBecauseCacheFull = maxBlocksProvided ? index >= blocksToKeep : false;\n      if (purgeBecauseBlockEmpty || purgeBecauseCacheFull) {\n        if (this.isBlockCurrentlyDisplayed(block)) {\n          return;\n        }\n        if (this.isBlockFocused(block)) {\n          return;\n        }\n        this.removeBlockFromCache(block);\n      }\n    });\n  }\n  isBlockFocused(block) {\n    const focusedCell = this.focusService.getFocusCellToUseAfterRefresh();\n    if (!focusedCell) {\n      return false;\n    }\n    if (focusedCell.rowPinned != null) {\n      return false;\n    }\n    const blockIndexStart = block.getStartRow();\n    const blockIndexEnd = block.getEndRow();\n    const hasFocus = focusedCell.rowIndex >= blockIndexStart && focusedCell.rowIndex < blockIndexEnd;\n    return hasFocus;\n  }\n  isBlockCurrentlyDisplayed(block) {\n    const startIndex = block.getStartRow();\n    const endIndex = block.getEndRow() - 1;\n    return this.rowRenderer.isRangeInRenderedViewport(startIndex, endIndex);\n  }\n  removeBlockFromCache(blockToRemove) {\n    if (!blockToRemove) {\n      return;\n    }\n    this.destroyBlock(blockToRemove);\n  }\n  checkRowCount(block, lastRow) {\n    if (typeof lastRow === \"number\" && lastRow >= 0) {\n      this.rowCount = lastRow;\n      this.lastRowIndexKnown = true;\n    } else if (!this.lastRowIndexKnown) {\n      const lastRowIndex = (block.getId() + 1) * this.params.blockSize;\n      const lastRowIndexPlusOverflow = lastRowIndex + this.params.overflowSize;\n      if (this.rowCount < lastRowIndexPlusOverflow) {\n        this.rowCount = lastRowIndexPlusOverflow;\n      }\n    }\n  }\n  setRowCount(rowCount, lastRowIndexKnown) {\n    this.rowCount = rowCount;\n    if (_.exists(lastRowIndexKnown)) {\n      this.lastRowIndexKnown = lastRowIndexKnown;\n    }\n    if (!this.lastRowIndexKnown) {\n      if (this.rowCount % this.params.blockSize === 0) {\n        this.rowCount++;\n      }\n    }\n    this.onCacheUpdated();\n  }\n  forEachNodeDeep(callback) {\n    const sequence = new NumberSequence();\n    this.getBlocksInOrder().forEach((block) => block.forEachNode(callback, sequence, this.rowCount));\n  }\n  getBlocksInOrder() {\n    const blockComparator = (a, b) => a.getId() - b.getId();\n    const blocks = _.getAllValuesInObject(this.blocks).sort(blockComparator);\n    return blocks;\n  }\n  destroyBlock(block) {\n    delete this.blocks[block.getId()];\n    this.destroyBean(block);\n    this.blockCount--;\n    this.params.rowNodeBlockLoader.removeBlock(block);\n  }\n  // gets called 1) row count changed 2) cache purged 3) items inserted\n  onCacheUpdated() {\n    if (this.isAlive()) {\n      this.destroyAllBlocksPastVirtualRowCount();\n      const event = {\n        type: Events.EVENT_STORE_UPDATED\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  destroyAllBlocksPastVirtualRowCount() {\n    const blocksToDestroy = [];\n    this.getBlocksInOrder().forEach((block) => {\n      const startRow = block.getId() * this.params.blockSize;\n      if (startRow >= this.rowCount) {\n        blocksToDestroy.push(block);\n      }\n    });\n    if (blocksToDestroy.length > 0) {\n      blocksToDestroy.forEach((block) => this.destroyBlock(block));\n    }\n  }\n  purgeCache() {\n    this.getBlocksInOrder().forEach((block) => this.removeBlockFromCache(block));\n    this.lastRowIndexKnown = false;\n    if (this.rowCount === 0) {\n      this.rowCount = this.params.initialRowCount;\n    }\n    this.onCacheUpdated();\n  }\n  getRowNodesInRange(firstInRange, lastInRange) {\n    const result = [];\n    let lastBlockId = -1;\n    let inActiveRange = false;\n    const numberSequence = new NumberSequence();\n    if (_.missing(firstInRange)) {\n      inActiveRange = true;\n    }\n    let foundGapInSelection = false;\n    this.getBlocksInOrder().forEach((block) => {\n      if (foundGapInSelection) {\n        return;\n      }\n      if (inActiveRange && lastBlockId + 1 !== block.getId()) {\n        foundGapInSelection = true;\n        return;\n      }\n      lastBlockId = block.getId();\n      block.forEachNode((rowNode) => {\n        const hitFirstOrLast = rowNode === firstInRange || rowNode === lastInRange;\n        if (inActiveRange || hitFirstOrLast) {\n          result.push(rowNode);\n        }\n        if (hitFirstOrLast) {\n          inActiveRange = !inActiveRange;\n        }\n      }, numberSequence, this.rowCount);\n    });\n    const invalidRange = foundGapInSelection || inActiveRange;\n    return invalidRange ? [] : result;\n  }\n};\n_InfiniteCache.MAX_EMPTY_BLOCKS_TO_KEEP = 2;\n__decorateClass2([\n  Autowired(\"rowRenderer\")\n], _InfiniteCache.prototype, \"rowRenderer\", 2);\n__decorateClass2([\n  Autowired(\"focusService\")\n], _InfiniteCache.prototype, \"focusService\", 2);\n__decorateClass2([\n  __decorateParam2(0, Qualifier(\"loggerFactory\"))\n], _InfiniteCache.prototype, \"setBeans\", 1);\n__decorateClass2([\n  PreDestroy\n], _InfiniteCache.prototype, \"destroyAllBlocks\", 1);\nvar InfiniteCache = _InfiniteCache;\nvar InfiniteRowModel = class extends BeanStub {\n  getRowBounds(index) {\n    return {\n      rowHeight: this.rowHeight,\n      rowTop: this.rowHeight * index\n    };\n  }\n  // we don't implement as lazy row heights is not supported in this row model\n  ensureRowHeightsValid(startPixel, endPixel, startLimitIndex, endLimitIndex) {\n    return false;\n  }\n  init() {\n    if (!this.gos.isRowModelType(\"infinite\")) {\n      return;\n    }\n    this.rowHeight = this.gos.getRowHeightAsNumber();\n    this.addEventListeners();\n    this.addDestroyFunc(() => this.destroyCache());\n    this.verifyProps();\n  }\n  verifyProps() {\n    if (this.gos.exists(\"initialGroupOrderComparator\")) {\n      _.warnOnce(\"initialGroupOrderComparator cannot be used with Infinite Row Model as sorting is done on the server side\");\n    }\n  }\n  start() {\n    this.setDatasource(this.gos.get(\"datasource\"));\n  }\n  destroyDatasource() {\n    if (this.datasource) {\n      this.getContext().destroyBean(this.datasource);\n      this.rowRenderer.datasourceChanged();\n      this.datasource = null;\n    }\n  }\n  addEventListeners() {\n    this.addManagedListener(this.eventService, Events.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_SORT_CHANGED, this.onSortChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onColumnEverything.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_STORE_UPDATED, this.onCacheUpdated.bind(this));\n    this.addManagedPropertyListener(\"datasource\", () => this.setDatasource(this.gos.get(\"datasource\")));\n    this.addManagedPropertyListener(\"cacheBlockSize\", () => this.resetCache());\n    this.addManagedPropertyListener(\"rowHeight\", () => {\n      this.rowHeight = this.gos.getRowHeightAsNumber();\n      this.cacheParams.rowHeight = this.rowHeight;\n      this.updateRowHeights();\n    });\n  }\n  onFilterChanged() {\n    this.reset();\n  }\n  onSortChanged() {\n    this.reset();\n  }\n  onColumnEverything() {\n    let resetRequired;\n    if (this.cacheParams) {\n      resetRequired = this.isSortModelDifferent();\n    } else {\n      resetRequired = true;\n    }\n    if (resetRequired) {\n      this.reset();\n    }\n  }\n  isSortModelDifferent() {\n    return !_.jsonEquals(this.cacheParams.sortModel, this.sortController.getSortModel());\n  }\n  getType() {\n    return \"infinite\";\n  }\n  setDatasource(datasource) {\n    this.destroyDatasource();\n    this.datasource = datasource;\n    if (datasource) {\n      this.reset();\n    }\n  }\n  isEmpty() {\n    return !this.infiniteCache;\n  }\n  isRowsToRender() {\n    return !!this.infiniteCache;\n  }\n  getNodesInRangeForSelection(firstInRange, lastInRange) {\n    return this.infiniteCache ? this.infiniteCache.getRowNodesInRange(firstInRange, lastInRange) : [];\n  }\n  reset() {\n    if (!this.datasource) {\n      return;\n    }\n    const getRowIdFunc = this.gos.getCallback(\"getRowId\");\n    const userGeneratingIds = getRowIdFunc != null;\n    if (!userGeneratingIds) {\n      this.selectionService.reset(\"rowDataChanged\");\n    }\n    this.resetCache();\n  }\n  createModelUpdatedEvent() {\n    return {\n      type: Events.EVENT_MODEL_UPDATED,\n      // not sure if these should all be false - noticed if after implementing,\n      // maybe they should be true?\n      newPage: false,\n      newPageSize: false,\n      newData: false,\n      keepRenderedRows: true,\n      animate: false\n    };\n  }\n  resetCache() {\n    this.destroyCache();\n    this.cacheParams = {\n      // the user provided datasource\n      datasource: this.datasource,\n      // sort and filter model\n      filterModel: this.filterManager.getFilterModel(),\n      sortModel: this.sortController.getSortModel(),\n      rowNodeBlockLoader: this.rowNodeBlockLoader,\n      // properties - this way we take a snapshot of them, so if user changes any, they will be\n      // used next time we create a new cache, which is generally after a filter or sort change,\n      // or a new datasource is set\n      initialRowCount: this.gos.get(\"infiniteInitialRowCount\"),\n      maxBlocksInCache: this.gos.get(\"maxBlocksInCache\"),\n      rowHeight: this.gos.getRowHeightAsNumber(),\n      // if user doesn't provide overflow, we use default overflow of 1, so user can scroll past\n      // the current page and request first row of next page\n      overflowSize: this.gos.get(\"cacheOverflowSize\"),\n      // page size needs to be 1 or greater. having it at 1 would be silly, as you would be hitting the\n      // server for one page at a time. so the default if not specified is 100.\n      blockSize: this.gos.get(\"cacheBlockSize\"),\n      // the cache could create this, however it is also used by the pages, so handy to create it\n      // here as the settings are also passed to the pages\n      lastAccessedSequence: new NumberSequence()\n    };\n    this.infiniteCache = this.createBean(new InfiniteCache(this.cacheParams));\n    this.eventService.dispatchEventOnce({\n      type: Events.EVENT_ROW_COUNT_READY\n    });\n    const event = this.createModelUpdatedEvent();\n    this.eventService.dispatchEvent(event);\n  }\n  updateRowHeights() {\n    this.forEachNode((node) => {\n      node.setRowHeight(this.rowHeight);\n      node.setRowTop(this.rowHeight * node.rowIndex);\n    });\n    const event = this.createModelUpdatedEvent();\n    this.eventService.dispatchEvent(event);\n  }\n  destroyCache() {\n    if (this.infiniteCache) {\n      this.infiniteCache = this.destroyBean(this.infiniteCache);\n    }\n  }\n  onCacheUpdated() {\n    const event = this.createModelUpdatedEvent();\n    this.eventService.dispatchEvent(event);\n  }\n  getRow(rowIndex) {\n    if (!this.infiniteCache) {\n      return void 0;\n    }\n    if (rowIndex >= this.infiniteCache.getRowCount()) {\n      return void 0;\n    }\n    return this.infiniteCache.getRow(rowIndex);\n  }\n  getRowNode(id) {\n    let result;\n    this.forEachNode((rowNode) => {\n      if (rowNode.id === id) {\n        result = rowNode;\n      }\n    });\n    return result;\n  }\n  forEachNode(callback) {\n    if (this.infiniteCache) {\n      this.infiniteCache.forEachNodeDeep(callback);\n    }\n  }\n  getTopLevelRowCount() {\n    return this.getRowCount();\n  }\n  getTopLevelRowDisplayedIndex(topLevelIndex) {\n    return topLevelIndex;\n  }\n  getRowIndexAtPixel(pixel) {\n    if (this.rowHeight !== 0) {\n      const rowIndexForPixel = Math.floor(pixel / this.rowHeight);\n      const lastRowIndex = this.getRowCount() - 1;\n      if (rowIndexForPixel > lastRowIndex) {\n        return lastRowIndex;\n      }\n      return rowIndexForPixel;\n    }\n    return 0;\n  }\n  getRowCount() {\n    return this.infiniteCache ? this.infiniteCache.getRowCount() : 0;\n  }\n  isRowPresent(rowNode) {\n    const foundRowNode = this.getRowNode(rowNode.id);\n    return !!foundRowNode;\n  }\n  refreshCache() {\n    if (this.infiniteCache) {\n      this.infiniteCache.refreshCache();\n    }\n  }\n  purgeCache() {\n    if (this.infiniteCache) {\n      this.infiniteCache.purgeCache();\n    }\n  }\n  // for iRowModel\n  isLastRowIndexKnown() {\n    if (this.infiniteCache) {\n      return this.infiniteCache.isLastRowIndexKnown();\n    }\n    return false;\n  }\n  setRowCount(rowCount, lastRowIndexKnown) {\n    if (this.infiniteCache) {\n      this.infiniteCache.setRowCount(rowCount, lastRowIndexKnown);\n    }\n  }\n};\n__decorateClass2([\n  Autowired(\"filterManager\")\n], InfiniteRowModel.prototype, \"filterManager\", 2);\n__decorateClass2([\n  Autowired(\"sortController\")\n], InfiniteRowModel.prototype, \"sortController\", 2);\n__decorateClass2([\n  Autowired(\"selectionService\")\n], InfiniteRowModel.prototype, \"selectionService\", 2);\n__decorateClass2([\n  Autowired(\"rowRenderer\")\n], InfiniteRowModel.prototype, \"rowRenderer\", 2);\n__decorateClass2([\n  Autowired(\"rowNodeBlockLoader\")\n], InfiniteRowModel.prototype, \"rowNodeBlockLoader\", 2);\n__decorateClass2([\n  PostConstruct\n], InfiniteRowModel.prototype, \"init\", 1);\n__decorateClass2([\n  PreDestroy\n], InfiniteRowModel.prototype, \"destroyDatasource\", 1);\nInfiniteRowModel = __decorateClass2([\n  Bean(\"rowModel\")\n], InfiniteRowModel);\nvar VERSION2 = \"31.3.2\";\nvar InfiniteRowModelModule = {\n  version: VERSION2,\n  moduleName: \"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */,\n  rowModel: \"infinite\",\n  beans: [InfiniteRowModel]\n};\n\n// community-modules/csv-export/dist/package/main.esm.mjs\nvar __defProp3 = Object.defineProperty;\nvar __defProps2 = Object.defineProperties;\nvar __getOwnPropDesc3 = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs2 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols2 = Object.getOwnPropertySymbols;\nvar __hasOwnProp2 = Object.prototype.hasOwnProperty;\nvar __propIsEnum2 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp2 = (obj, key, value) => key in obj ? __defProp3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues2 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp2.call(b, prop))\n      __defNormalProp2(a, prop, b[prop]);\n  if (__getOwnPropSymbols2)\n    for (var prop of __getOwnPropSymbols2(b)) {\n      if (__propIsEnum2.call(b, prop))\n        __defNormalProp2(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps2 = (a, b) => __defProps2(a, __getOwnPropDescs2(b));\nvar __decorateClass3 = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc3(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp3(target, key, result);\n  return result;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nvar BaseCreator = class {\n  setBeans(beans) {\n    this.beans = beans;\n  }\n  getFileName(fileName) {\n    const extension = this.getDefaultFileExtension();\n    if (fileName == null || !fileName.length) {\n      fileName = this.getDefaultFileName();\n    }\n    return fileName.indexOf(\".\") === -1 ? `${fileName}.${extension}` : fileName;\n  }\n  getData(params) {\n    const serializingSession = this.createSerializingSession(params);\n    return this.beans.gridSerializer.serialize(serializingSession, params);\n  }\n  getDefaultFileName() {\n    return `export.${this.getDefaultFileExtension()}`;\n  }\n};\nvar BaseGridSerializingSession = class {\n  constructor(config) {\n    this.groupColumns = [];\n    const {\n      columnModel,\n      valueService,\n      gos,\n      processCellCallback,\n      processHeaderCallback,\n      processGroupHeaderCallback,\n      processRowGroupCallback\n    } = config;\n    this.columnModel = columnModel;\n    this.valueService = valueService;\n    this.gos = gos;\n    this.processCellCallback = processCellCallback;\n    this.processHeaderCallback = processHeaderCallback;\n    this.processGroupHeaderCallback = processGroupHeaderCallback;\n    this.processRowGroupCallback = processRowGroupCallback;\n  }\n  prepare(columnsToExport) {\n    this.groupColumns = columnsToExport.filter((col) => !!col.getColDef().showRowGroup);\n  }\n  extractHeaderValue(column) {\n    const value = this.getHeaderName(this.processHeaderCallback, column);\n    return value != null ? value : \"\";\n  }\n  extractRowCellValue(column, index, accumulatedRowIndex, type, node) {\n    const hideOpenParents = this.gos.get(\"groupHideOpenParents\");\n    const value = (!hideOpenParents || node.footer) && this.shouldRenderGroupSummaryCell(node, column, index) ? this.createValueForGroupNode(column, node) : this.valueService.getValue(column, node);\n    const processedValue = this.processCell({\n      accumulatedRowIndex,\n      rowNode: node,\n      column,\n      value,\n      processCellCallback: this.processCellCallback,\n      type\n    });\n    return processedValue;\n  }\n  shouldRenderGroupSummaryCell(node, column, currentColumnIndex) {\n    var _a;\n    const isGroupNode = node && node.group;\n    if (!isGroupNode) {\n      return false;\n    }\n    const currentColumnGroupIndex = this.groupColumns.indexOf(column);\n    if (currentColumnGroupIndex !== -1) {\n      if (((_a = node.groupData) == null ? void 0 : _a[column.getId()]) != null) {\n        return true;\n      }\n      if (this.gos.isRowModelType(\"serverSide\") && node.group) {\n        return true;\n      }\n      if (node.footer && node.level === -1) {\n        const colDef = column.getColDef();\n        const isFullWidth = colDef == null || colDef.showRowGroup === true;\n        return isFullWidth || colDef.showRowGroup === this.columnModel.getRowGroupColumns()[0].getId();\n      }\n    }\n    const isGroupUseEntireRow = this.gos.isGroupUseEntireRow(this.columnModel.isPivotMode());\n    return currentColumnIndex === 0 && isGroupUseEntireRow;\n  }\n  getHeaderName(callback, column) {\n    if (callback) {\n      return callback(this.gos.addGridCommonParams({ column }));\n    }\n    return this.columnModel.getDisplayNameForColumn(column, \"csv\", true);\n  }\n  createValueForGroupNode(column, node) {\n    if (this.processRowGroupCallback) {\n      return this.processRowGroupCallback(this.gos.addGridCommonParams({ column, node }));\n    }\n    const isTreeData = this.gos.get(\"treeData\");\n    const isSuppressGroupMaintainValueType = this.gos.get(\"suppressGroupMaintainValueType\");\n    const getValueFromNode = (node2) => {\n      var _a, _b;\n      if (isTreeData || isSuppressGroupMaintainValueType) {\n        return node2.key;\n      }\n      const value = (_a = node2.groupData) == null ? void 0 : _a[column.getId()];\n      if (!value || !node2.rowGroupColumn || node2.rowGroupColumn.getColDef().useValueFormatterForExport === false) {\n        return value;\n      }\n      return (_b = this.valueService.formatValue(node2.rowGroupColumn, node2, value)) != null ? _b : value;\n    };\n    const isFooter = node.footer;\n    const keys2 = [getValueFromNode(node)];\n    if (!this.gos.isGroupMultiAutoColumn()) {\n      while (node.parent) {\n        node = node.parent;\n        keys2.push(getValueFromNode(node));\n      }\n    }\n    const groupValue = keys2.reverse().join(\" -> \");\n    return isFooter ? `Total ${groupValue}` : groupValue;\n  }\n  processCell(params) {\n    var _a;\n    const { accumulatedRowIndex, rowNode, column, value, processCellCallback, type } = params;\n    if (processCellCallback) {\n      return {\n        value: (_a = processCellCallback(this.gos.addGridCommonParams({\n          accumulatedRowIndex,\n          column,\n          node: rowNode,\n          value,\n          type,\n          parseValue: (valueToParse) => this.valueService.parseValue(column, rowNode, valueToParse, this.valueService.getValue(column, rowNode)),\n          formatValue: (valueToFormat) => {\n            var _a2;\n            return (_a2 = this.valueService.formatValue(column, rowNode, valueToFormat)) != null ? _a2 : valueToFormat;\n          }\n        }))) != null ? _a : \"\"\n      };\n    }\n    if (column.getColDef().useValueFormatterForExport !== false) {\n      return {\n        value: value != null ? value : \"\",\n        valueFormatted: this.valueService.formatValue(column, rowNode, value)\n      };\n    }\n    return { value: value != null ? value : \"\" };\n  }\n};\nvar Downloader = class {\n  static download(fileName, content) {\n    const win = document.defaultView || window;\n    if (!win) {\n      console.warn(\"AG Grid: There is no `window` associated with the current `document`\");\n      return;\n    }\n    const element = document.createElement(\"a\");\n    const url = win.URL.createObjectURL(content);\n    element.setAttribute(\"href\", url);\n    element.setAttribute(\"download\", fileName);\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n    element.dispatchEvent(new MouseEvent(\"click\", {\n      bubbles: false,\n      cancelable: true,\n      view: win\n    }));\n    document.body.removeChild(element);\n    win.setTimeout(() => {\n      win.URL.revokeObjectURL(url);\n    }, 0);\n  }\n};\nvar LINE_SEPARATOR = \"\\r\\n\";\nvar CsvSerializingSession = class extends BaseGridSerializingSession {\n  constructor(config) {\n    super(config);\n    this.isFirstLine = true;\n    this.result = \"\";\n    const { suppressQuotes, columnSeparator } = config;\n    this.suppressQuotes = suppressQuotes;\n    this.columnSeparator = columnSeparator;\n  }\n  addCustomContent(content) {\n    if (!content) {\n      return;\n    }\n    if (typeof content === \"string\") {\n      if (!/^\\s*\\n/.test(content)) {\n        this.beginNewLine();\n      }\n      content = content.replace(/\\r?\\n/g, LINE_SEPARATOR);\n      this.result += content;\n    } else {\n      content.forEach((row) => {\n        this.beginNewLine();\n        row.forEach((cell, index) => {\n          if (index !== 0) {\n            this.result += this.columnSeparator;\n          }\n          this.result += this.putInQuotes(cell.data.value || \"\");\n          if (cell.mergeAcross) {\n            this.appendEmptyCells(cell.mergeAcross);\n          }\n        });\n      });\n    }\n  }\n  onNewHeaderGroupingRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewHeaderGroupingRowColumn.bind(this)\n    };\n  }\n  onNewHeaderGroupingRowColumn(columnGroup, header, index, span) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    this.result += this.putInQuotes(header);\n    this.appendEmptyCells(span);\n  }\n  appendEmptyCells(count) {\n    for (let i = 1; i <= count; i++) {\n      this.result += this.columnSeparator + this.putInQuotes(\"\");\n    }\n  }\n  onNewHeaderRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewHeaderRowColumn.bind(this)\n    };\n  }\n  onNewHeaderRowColumn(column, index) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    this.result += this.putInQuotes(this.extractHeaderValue(column));\n  }\n  onNewBodyRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewBodyRowColumn.bind(this)\n    };\n  }\n  onNewBodyRowColumn(column, index, node) {\n    var _a;\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    const rowCellValue = this.extractRowCellValue(column, index, index, \"csv\", node);\n    this.result += this.putInQuotes((_a = rowCellValue.valueFormatted) != null ? _a : rowCellValue.value);\n  }\n  putInQuotes(value) {\n    if (this.suppressQuotes) {\n      return value;\n    }\n    if (value === null || value === void 0) {\n      return '\"\"';\n    }\n    let stringValue;\n    if (typeof value === \"string\") {\n      stringValue = value;\n    } else if (typeof value.toString === \"function\") {\n      stringValue = value.toString();\n    } else {\n      console.warn(\"AG Grid: unknown value type during csv conversion\");\n      stringValue = \"\";\n    }\n    const valueEscaped = stringValue.replace(/\"/g, '\"\"');\n    return '\"' + valueEscaped + '\"';\n  }\n  parse() {\n    return this.result;\n  }\n  beginNewLine() {\n    if (!this.isFirstLine) {\n      this.result += LINE_SEPARATOR;\n    }\n    this.isFirstLine = false;\n  }\n};\nvar CsvCreator = class extends BaseCreator {\n  postConstruct() {\n    this.setBeans({\n      gridSerializer: this.gridSerializer,\n      gos: this.gos\n    });\n  }\n  getMergedParams(params) {\n    const baseParams = this.gos.get(\"defaultCsvExportParams\");\n    return Object.assign({}, baseParams, params);\n  }\n  export(userParams) {\n    if (this.isExportSuppressed()) {\n      console.warn(`AG Grid: Export cancelled. Export is not allowed as per your configuration.`);\n      return;\n    }\n    const mergedParams = this.getMergedParams(userParams);\n    const data = this.getData(mergedParams);\n    const packagedFile = new Blob([\"\\uFEFF\", data], { type: \"text/plain\" });\n    const fileName = typeof mergedParams.fileName === \"function\" ? mergedParams.fileName(this.gos.getGridCommonParams()) : mergedParams.fileName;\n    Downloader.download(this.getFileName(fileName), packagedFile);\n  }\n  exportDataAsCsv(params) {\n    this.export(params);\n  }\n  getDataAsCsv(params, skipDefaultParams = false) {\n    const mergedParams = skipDefaultParams ? Object.assign({}, params) : this.getMergedParams(params);\n    return this.getData(mergedParams);\n  }\n  getDefaultFileExtension() {\n    return \"csv\";\n  }\n  createSerializingSession(params) {\n    const { columnModel, valueService, gos } = this;\n    const {\n      processCellCallback,\n      processHeaderCallback,\n      processGroupHeaderCallback,\n      processRowGroupCallback,\n      suppressQuotes,\n      columnSeparator\n    } = params;\n    return new CsvSerializingSession({\n      columnModel,\n      valueService,\n      gos,\n      processCellCallback: processCellCallback || void 0,\n      processHeaderCallback: processHeaderCallback || void 0,\n      processGroupHeaderCallback: processGroupHeaderCallback || void 0,\n      processRowGroupCallback: processRowGroupCallback || void 0,\n      suppressQuotes: suppressQuotes || false,\n      columnSeparator: columnSeparator || \",\"\n    });\n  }\n  isExportSuppressed() {\n    return this.gos.get(\"suppressCsvExport\");\n  }\n};\n__decorateClass3([\n  Autowired(\"columnModel\")\n], CsvCreator.prototype, \"columnModel\", 2);\n__decorateClass3([\n  Autowired(\"valueService\")\n], CsvCreator.prototype, \"valueService\", 2);\n__decorateClass3([\n  Autowired(\"gridSerializer\")\n], CsvCreator.prototype, \"gridSerializer\", 2);\n__decorateClass3([\n  Autowired(\"gridOptionsService\")\n], CsvCreator.prototype, \"gos\", 2);\n__decorateClass3([\n  PostConstruct\n], CsvCreator.prototype, \"postConstruct\", 1);\nCsvCreator = __decorateClass3([\n  Bean(\"csvCreator\")\n], CsvCreator);\nvar RowType = /* @__PURE__ */ ((RowType2) => {\n  RowType2[RowType2[\"HEADER_GROUPING\"] = 0] = \"HEADER_GROUPING\";\n  RowType2[RowType2[\"HEADER\"] = 1] = \"HEADER\";\n  RowType2[RowType2[\"BODY\"] = 2] = \"BODY\";\n  return RowType2;\n})(RowType || {});\nvar GridSerializer = class extends BeanStub {\n  serialize(gridSerializingSession, params = {}) {\n    const { allColumns, columnKeys, skipRowGroups } = params;\n    const columnsToExport = this.getColumnsToExport(allColumns, skipRowGroups, columnKeys);\n    const serializeChain = _.compose(\n      // first pass, put in the header names of the cols\n      this.prepareSession(columnsToExport),\n      this.prependContent(params),\n      this.exportColumnGroups(params, columnsToExport),\n      this.exportHeaders(params, columnsToExport),\n      this.processPinnedTopRows(params, columnsToExport),\n      this.processRows(params, columnsToExport),\n      this.processPinnedBottomRows(params, columnsToExport),\n      this.appendContent(params)\n    );\n    return serializeChain(gridSerializingSession).parse();\n  }\n  processRow(gridSerializingSession, params, columnsToExport, node) {\n    const rowSkipper = params.shouldRowBeSkipped || (() => false);\n    const skipSingleChildrenGroup = this.gos.get(\"groupRemoveSingleChildren\");\n    const skipLowestSingleChildrenGroup = this.gos.get(\"groupRemoveLowestSingleChildren\");\n    const isClipboardExport = params.rowPositions != null;\n    const isExplicitExportSelection = isClipboardExport || !!params.onlySelected;\n    const hideOpenParents = this.gos.get(\"groupHideOpenParents\") && !isExplicitExportSelection;\n    const isLeafNode = this.columnModel.isPivotMode() ? node.leafGroup : !node.group;\n    const isFooter = !!node.footer;\n    const skipRowGroups = params.skipRowGroups;\n    const shouldSkipLowestGroup = skipLowestSingleChildrenGroup && node.leafGroup;\n    const shouldSkipCurrentGroup = node.allChildrenCount === 1 && (skipSingleChildrenGroup || shouldSkipLowestGroup);\n    if (!isLeafNode && !isFooter && (params.skipRowGroups || shouldSkipCurrentGroup || hideOpenParents) || params.onlySelected && !node.isSelected() || params.skipPinnedTop && node.rowPinned === \"top\" || params.skipPinnedBottom && node.rowPinned === \"bottom\") {\n      return;\n    }\n    const nodeIsRootNode = node.level === -1;\n    if (nodeIsRootNode && !isLeafNode && !isFooter) {\n      return;\n    }\n    const shouldRowBeSkipped = rowSkipper(this.gos.addGridCommonParams({ node }));\n    if (shouldRowBeSkipped) {\n      return;\n    }\n    const rowAccumulator = gridSerializingSession.onNewBodyRow(node);\n    columnsToExport.forEach((column, index) => {\n      rowAccumulator.onColumn(column, index, node);\n    });\n    if (params.getCustomContentBelowRow) {\n      const content = params.getCustomContentBelowRow(this.gos.addGridCommonParams({ node }));\n      if (content) {\n        gridSerializingSession.addCustomContent(content);\n      }\n    }\n  }\n  appendContent(params) {\n    return (gridSerializingSession) => {\n      const appendContent = params.appendContent;\n      if (appendContent) {\n        gridSerializingSession.addCustomContent(appendContent);\n      }\n      return gridSerializingSession;\n    };\n  }\n  prependContent(params) {\n    return (gridSerializingSession) => {\n      const prependContent = params.prependContent;\n      if (prependContent) {\n        gridSerializingSession.addCustomContent(prependContent);\n      }\n      return gridSerializingSession;\n    };\n  }\n  prepareSession(columnsToExport) {\n    return (gridSerializingSession) => {\n      gridSerializingSession.prepare(columnsToExport);\n      return gridSerializingSession;\n    };\n  }\n  exportColumnGroups(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      if (!params.skipColumnGroupHeaders) {\n        const groupInstanceIdCreator = new GroupInstanceIdCreator();\n        const displayedGroups = this.displayedGroupCreator.createDisplayedGroups(\n          columnsToExport,\n          groupInstanceIdCreator,\n          null\n        );\n        this.recursivelyAddHeaderGroups(displayedGroups, gridSerializingSession, params.processGroupHeaderCallback);\n      }\n      return gridSerializingSession;\n    };\n  }\n  exportHeaders(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      if (!params.skipColumnHeaders) {\n        const gridRowIterator = gridSerializingSession.onNewHeaderRow();\n        columnsToExport.forEach((column, index) => {\n          gridRowIterator.onColumn(column, index, void 0);\n        });\n      }\n      return gridSerializingSession;\n    };\n  }\n  processPinnedTopRows(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      if (params.rowPositions) {\n        params.rowPositions.filter((position) => position.rowPinned === \"top\").sort((a, b) => a.rowIndex - b.rowIndex).map((position) => this.pinnedRowModel.getPinnedTopRow(position.rowIndex)).forEach(processRow);\n      } else {\n        this.pinnedRowModel.forEachPinnedTopRow(processRow);\n      }\n      return gridSerializingSession;\n    };\n  }\n  processRows(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      const rowModel = this.rowModel;\n      const rowModelType = rowModel.getType();\n      const usingCsrm = rowModelType === \"clientSide\";\n      const usingSsrm = rowModelType === \"serverSide\";\n      const onlySelectedNonStandardModel = !usingCsrm && params.onlySelected;\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      const {\n        exportedRows = \"filteredAndSorted\"\n      } = params;\n      if (params.rowPositions) {\n        params.rowPositions.filter((position) => position.rowPinned == null).sort((a, b) => a.rowIndex - b.rowIndex).map((position) => rowModel.getRow(position.rowIndex)).forEach(processRow);\n      } else if (this.columnModel.isPivotMode()) {\n        if (usingCsrm) {\n          rowModel.forEachPivotNode(processRow, true);\n        } else if (usingSsrm) {\n          rowModel.forEachNodeAfterFilterAndSort(processRow, true);\n        } else {\n          rowModel.forEachNode(processRow);\n        }\n      } else {\n        if (params.onlySelectedAllPages || onlySelectedNonStandardModel) {\n          const selectedNodes = this.selectionService.getSelectedNodes();\n          this.replicateSortedOrder(selectedNodes);\n          selectedNodes.forEach(processRow);\n        } else {\n          if (exportedRows === \"all\") {\n            rowModel.forEachNode(processRow);\n          } else if (usingCsrm) {\n            rowModel.forEachNodeAfterFilterAndSort(processRow, true);\n          } else if (usingSsrm) {\n            rowModel.forEachNodeAfterFilterAndSort(processRow, true);\n          } else {\n            rowModel.forEachNode(processRow);\n          }\n        }\n      }\n      return gridSerializingSession;\n    };\n  }\n  replicateSortedOrder(rows) {\n    const sortOptions = this.sortController.getSortOptions();\n    const compareNodes = (rowA, rowB) => {\n      var _a, _b, _c, _d;\n      if (rowA.rowIndex != null && rowB.rowIndex != null) {\n        return rowA.rowIndex - rowB.rowIndex;\n      }\n      if (rowA.level === rowB.level) {\n        if (((_a = rowA.parent) == null ? void 0 : _a.id) === ((_b = rowB.parent) == null ? void 0 : _b.id)) {\n          return this.rowNodeSorter.compareRowNodes(sortOptions, {\n            rowNode: rowA,\n            currentPos: (_c = rowA.rowIndex) != null ? _c : -1\n          }, {\n            rowNode: rowB,\n            currentPos: (_d = rowB.rowIndex) != null ? _d : -1\n          });\n        }\n        return compareNodes(rowA.parent, rowB.parent);\n      }\n      if (rowA.level > rowB.level) {\n        return compareNodes(rowA.parent, rowB);\n      }\n      return compareNodes(rowA, rowB.parent);\n    };\n    rows.sort(compareNodes);\n  }\n  processPinnedBottomRows(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      if (params.rowPositions) {\n        params.rowPositions.filter((position) => position.rowPinned === \"bottom\").sort((a, b) => a.rowIndex - b.rowIndex).map((position) => this.pinnedRowModel.getPinnedBottomRow(position.rowIndex)).forEach(processRow);\n      } else {\n        this.pinnedRowModel.forEachPinnedBottomRow(processRow);\n      }\n      return gridSerializingSession;\n    };\n  }\n  getColumnsToExport(allColumns = false, skipRowGroups = false, columnKeys) {\n    const isPivotMode = this.columnModel.isPivotMode();\n    if (columnKeys && columnKeys.length) {\n      return this.columnModel.getGridColumns(columnKeys);\n    }\n    const isTreeData = this.gos.get(\"treeData\");\n    let columnsToExport = [];\n    if (allColumns && !isPivotMode) {\n      columnsToExport = this.columnModel.getAllGridColumns();\n    } else {\n      columnsToExport = this.columnModel.getAllDisplayedColumns();\n    }\n    if (skipRowGroups && !isTreeData) {\n      columnsToExport = columnsToExport.filter((column) => column.getColId() !== GROUP_AUTO_COLUMN_ID);\n    }\n    return columnsToExport;\n  }\n  recursivelyAddHeaderGroups(displayedGroups, gridSerializingSession, processGroupHeaderCallback) {\n    const directChildrenHeaderGroups = [];\n    displayedGroups.forEach((columnGroupChild) => {\n      const columnGroup = columnGroupChild;\n      if (!columnGroup.getChildren) {\n        return;\n      }\n      columnGroup.getChildren().forEach((it) => directChildrenHeaderGroups.push(it));\n    });\n    if (displayedGroups.length > 0 && displayedGroups[0] instanceof ColumnGroup) {\n      this.doAddHeaderHeader(gridSerializingSession, displayedGroups, processGroupHeaderCallback);\n    }\n    if (directChildrenHeaderGroups && directChildrenHeaderGroups.length > 0) {\n      this.recursivelyAddHeaderGroups(directChildrenHeaderGroups, gridSerializingSession, processGroupHeaderCallback);\n    }\n  }\n  doAddHeaderHeader(gridSerializingSession, displayedGroups, processGroupHeaderCallback) {\n    const gridRowIterator = gridSerializingSession.onNewHeaderGroupingRow();\n    let columnIndex = 0;\n    displayedGroups.forEach((columnGroupChild) => {\n      const columnGroup = columnGroupChild;\n      let name;\n      if (processGroupHeaderCallback) {\n        name = processGroupHeaderCallback(this.gos.addGridCommonParams({\n          columnGroup\n        }));\n      } else {\n        name = this.columnModel.getDisplayNameForColumnGroup(columnGroup, \"header\");\n      }\n      const collapsibleGroupRanges = columnGroup.getLeafColumns().reduce((collapsibleGroups, currentColumn, currentIdx, arr) => {\n        let lastGroup = _.last(collapsibleGroups);\n        const groupShow = currentColumn.getColumnGroupShow() === \"open\";\n        if (!groupShow) {\n          if (lastGroup && lastGroup[1] == null) {\n            lastGroup[1] = currentIdx - 1;\n          }\n        } else if (!lastGroup || lastGroup[1] != null) {\n          lastGroup = [currentIdx];\n          collapsibleGroups.push(lastGroup);\n        }\n        if (currentIdx === arr.length - 1 && lastGroup && lastGroup[1] == null) {\n          lastGroup[1] = currentIdx;\n        }\n        return collapsibleGroups;\n      }, []);\n      gridRowIterator.onColumn(columnGroup, name || \"\", columnIndex++, columnGroup.getLeafColumns().length - 1, collapsibleGroupRanges);\n    });\n  }\n};\n__decorateClass3([\n  Autowired(\"displayedGroupCreator\")\n], GridSerializer.prototype, \"displayedGroupCreator\", 2);\n__decorateClass3([\n  Autowired(\"columnModel\")\n], GridSerializer.prototype, \"columnModel\", 2);\n__decorateClass3([\n  Autowired(\"rowModel\")\n], GridSerializer.prototype, \"rowModel\", 2);\n__decorateClass3([\n  Autowired(\"pinnedRowModel\")\n], GridSerializer.prototype, \"pinnedRowModel\", 2);\n__decorateClass3([\n  Autowired(\"selectionService\")\n], GridSerializer.prototype, \"selectionService\", 2);\n__decorateClass3([\n  Autowired(\"rowNodeSorter\")\n], GridSerializer.prototype, \"rowNodeSorter\", 2);\n__decorateClass3([\n  Autowired(\"sortController\")\n], GridSerializer.prototype, \"sortController\", 2);\nGridSerializer = __decorateClass3([\n  Bean(\"gridSerializer\")\n], GridSerializer);\nvar VERSION3 = \"31.3.2\";\nvar CsvExportModule = {\n  version: VERSION3,\n  moduleName: \"@ag-grid-community/csv-export\" /* CsvExportModule */,\n  beans: [CsvCreator, GridSerializer]\n};\nvar LINE_SEPARATOR2 = \"\\r\\n\";\nvar XmlFactory = class {\n  static createHeader(headerElement = {}) {\n    const headerStart = \"<?\";\n    const headerEnd = \"?>\";\n    const keys2 = [\"version\"];\n    if (!headerElement.version) {\n      headerElement.version = \"1.0\";\n    }\n    if (headerElement.encoding) {\n      keys2.push(\"encoding\");\n    }\n    if (headerElement.standalone) {\n      keys2.push(\"standalone\");\n    }\n    const att = keys2.map((key) => `${key}=\"${headerElement[key]}\"`).join(\" \");\n    return `${headerStart}xml ${att} ${headerEnd}`;\n  }\n  static createXml(xmlElement, booleanTransformer) {\n    let props = \"\";\n    if (xmlElement.properties) {\n      if (xmlElement.properties.prefixedAttributes) {\n        xmlElement.properties.prefixedAttributes.forEach((prefixedSet) => {\n          Object.keys(prefixedSet.map).forEach((key) => {\n            props += this.returnAttributeIfPopulated(prefixedSet.prefix + key, prefixedSet.map[key], booleanTransformer);\n          });\n        });\n      }\n      if (xmlElement.properties.rawMap) {\n        Object.keys(xmlElement.properties.rawMap).forEach((key) => {\n          props += this.returnAttributeIfPopulated(key, xmlElement.properties.rawMap[key], booleanTransformer);\n        });\n      }\n    }\n    let result = \"<\" + xmlElement.name + props;\n    if (!xmlElement.children && xmlElement.textNode == null) {\n      return result + \"/>\" + LINE_SEPARATOR2;\n    }\n    if (xmlElement.textNode != null) {\n      return result + \">\" + xmlElement.textNode + \"</\" + xmlElement.name + \">\" + LINE_SEPARATOR2;\n    }\n    result += \">\" + LINE_SEPARATOR2;\n    if (xmlElement.children) {\n      xmlElement.children.forEach((it) => {\n        result += this.createXml(it, booleanTransformer);\n      });\n    }\n    return result + \"</\" + xmlElement.name + \">\" + LINE_SEPARATOR2;\n  }\n  static returnAttributeIfPopulated(key, value, booleanTransformer) {\n    if (!value && value !== \"\" && value !== 0) {\n      return \"\";\n    }\n    let xmlValue = value;\n    if (typeof value === \"boolean\") {\n      if (booleanTransformer) {\n        xmlValue = booleanTransformer(value);\n      }\n    }\n    return ` ${key}=\"${xmlValue}\"`;\n  }\n};\nvar convertTime = (date) => {\n  let time = date.getHours();\n  time <<= 6;\n  time = time | date.getMinutes();\n  time <<= 5;\n  time = time | date.getSeconds() / 2;\n  return time;\n};\nvar convertDate = (date) => {\n  let dt = date.getFullYear() - 1980;\n  dt <<= 4;\n  dt = dt | date.getMonth() + 1;\n  dt <<= 5;\n  dt = dt | date.getDate();\n  return dt;\n};\nfunction convertDecToHex(number, bytes) {\n  let hex = \"\";\n  for (let i = 0; i < bytes; i++) {\n    hex += String.fromCharCode(number & 255);\n    number >>>= 8;\n  }\n  return hex;\n}\nvar getCrcFromCrc32TableAndByteArray = (content) => {\n  if (!content.length) {\n    return 0;\n  }\n  let crc = 0 ^ -1;\n  let j = 0;\n  let k = 0;\n  let l = 0;\n  for (let i = 0; i < content.length; i++) {\n    j = content[i];\n    k = (crc ^ j) & 255;\n    l = crcTable[k];\n    crc = crc >>> 8 ^ l;\n  }\n  return crc ^ -1;\n};\nvar getCrcFromCrc32Table = (content) => {\n  if (!content.length) {\n    return 0;\n  }\n  if (typeof content === \"string\") {\n    return getCrcFromCrc32TableAndByteArray(\n      new TextEncoder().encode(content)\n    );\n  }\n  return getCrcFromCrc32TableAndByteArray(content);\n};\nvar crcTable = new Uint32Array([\n  0,\n  1996959894,\n  3993919788,\n  2567524794,\n  124634137,\n  1886057615,\n  3915621685,\n  2657392035,\n  249268274,\n  2044508324,\n  3772115230,\n  2547177864,\n  162941995,\n  2125561021,\n  3887607047,\n  2428444049,\n  498536548,\n  1789927666,\n  4089016648,\n  2227061214,\n  450548861,\n  1843258603,\n  4107580753,\n  2211677639,\n  325883990,\n  1684777152,\n  4251122042,\n  2321926636,\n  335633487,\n  1661365465,\n  4195302755,\n  2366115317,\n  997073096,\n  1281953886,\n  3579855332,\n  2724688242,\n  1006888145,\n  1258607687,\n  3524101629,\n  2768942443,\n  901097722,\n  1119000684,\n  3686517206,\n  2898065728,\n  853044451,\n  1172266101,\n  3705015759,\n  2882616665,\n  651767980,\n  1373503546,\n  3369554304,\n  3218104598,\n  565507253,\n  1454621731,\n  3485111705,\n  3099436303,\n  671266974,\n  1594198024,\n  3322730930,\n  2970347812,\n  795835527,\n  1483230225,\n  3244367275,\n  3060149565,\n  1994146192,\n  31158534,\n  2563907772,\n  4023717930,\n  1907459465,\n  112637215,\n  2680153253,\n  3904427059,\n  2013776290,\n  251722036,\n  2517215374,\n  3775830040,\n  2137656763,\n  141376813,\n  2439277719,\n  3865271297,\n  1802195444,\n  476864866,\n  2238001368,\n  4066508878,\n  1812370925,\n  453092731,\n  2181625025,\n  4111451223,\n  1706088902,\n  314042704,\n  2344532202,\n  4240017532,\n  1658658271,\n  366619977,\n  2362670323,\n  4224994405,\n  1303535960,\n  984961486,\n  2747007092,\n  3569037538,\n  1256170817,\n  1037604311,\n  2765210733,\n  3554079995,\n  1131014506,\n  879679996,\n  2909243462,\n  3663771856,\n  1141124467,\n  855842277,\n  2852801631,\n  3708648649,\n  1342533948,\n  654459306,\n  3188396048,\n  3373015174,\n  1466479909,\n  544179635,\n  3110523913,\n  3462522015,\n  1591671054,\n  702138776,\n  2966460450,\n  3352799412,\n  1504918807,\n  783551873,\n  3082640443,\n  3233442989,\n  3988292384,\n  2596254646,\n  62317068,\n  1957810842,\n  3939845945,\n  2647816111,\n  81470997,\n  1943803523,\n  3814918930,\n  2489596804,\n  225274430,\n  2053790376,\n  3826175755,\n  2466906013,\n  167816743,\n  2097651377,\n  4027552580,\n  2265490386,\n  503444072,\n  1762050814,\n  4150417245,\n  2154129355,\n  426522225,\n  1852507879,\n  4275313526,\n  2312317920,\n  282753626,\n  1742555852,\n  4189708143,\n  2394877945,\n  397917763,\n  1622183637,\n  3604390888,\n  2714866558,\n  953729732,\n  1340076626,\n  3518719985,\n  2797360999,\n  1068828381,\n  1219638859,\n  3624741850,\n  2936675148,\n  906185462,\n  1090812512,\n  3747672003,\n  2825379669,\n  829329135,\n  1181335161,\n  3412177804,\n  3160834842,\n  628085408,\n  1382605366,\n  3423369109,\n  3138078467,\n  570562233,\n  1426400815,\n  3317316542,\n  2998733608,\n  733239954,\n  1555261956,\n  3268935591,\n  3050360625,\n  752459403,\n  1541320221,\n  2607071920,\n  3965973030,\n  1969922972,\n  40735498,\n  2617837225,\n  3943577151,\n  1913087877,\n  83908371,\n  2512341634,\n  3803740692,\n  2075208622,\n  213261112,\n  2463272603,\n  3855990285,\n  2094854071,\n  198958881,\n  2262029012,\n  4057260610,\n  1759359992,\n  534414190,\n  2176718541,\n  4139329115,\n  1873836001,\n  414664567,\n  2282248934,\n  4279200368,\n  1711684554,\n  285281116,\n  2405801727,\n  4167216745,\n  1634467795,\n  376229701,\n  2685067896,\n  3608007406,\n  1308918612,\n  956543938,\n  2808555105,\n  3495958263,\n  1231636301,\n  1047427035,\n  2932959818,\n  3654703836,\n  1088359270,\n  936918e3,\n  2847714899,\n  3736837829,\n  1202900863,\n  817233897,\n  3183342108,\n  3401237130,\n  1404277552,\n  615818150,\n  3134207493,\n  3453421203,\n  1423857449,\n  601450431,\n  3009837614,\n  3294710456,\n  1567103746,\n  711928724,\n  3020668471,\n  3272380065,\n  1510334235,\n  755167117\n]);\nvar compressBlob = (data) => __async(void 0, null, function* () {\n  let chunksSize = 0;\n  const chunks = [];\n  const writeCompressedData = new WritableStream({\n    write: (chunk) => {\n      chunks.push(chunk);\n      chunksSize += chunk.length;\n    }\n  });\n  const readable = new ReadableStream({\n    start: (controller) => {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        var _a;\n        if ((_a = e.target) == null ? void 0 : _a.result) {\n          controller.enqueue(e.target.result);\n        }\n        controller.close();\n      };\n      reader.readAsArrayBuffer(data);\n    }\n  });\n  const compressStream = new window.CompressionStream(\"deflate-raw\");\n  yield readable.pipeThrough(compressStream).pipeTo(writeCompressedData);\n  return {\n    size: chunksSize,\n    content: new Blob(chunks)\n  };\n});\nvar deflateLocalFile = (rawContent) => __async(void 0, null, function* () {\n  const contentAsBlob = new Blob([rawContent]);\n  const {\n    size: compressedSize,\n    content: compressedContent\n  } = yield compressBlob(contentAsBlob);\n  const compressedContentAsUint8Array = new Uint8Array(yield compressedContent.arrayBuffer());\n  return {\n    size: compressedSize,\n    content: compressedContentAsUint8Array\n  };\n});\nvar { utf8_encode: utf8_encode2 } = _;\nvar getDeflatedHeaderAndContent = (currentFile, offset) => __async(void 0, null, function* () {\n  const { content } = currentFile;\n  const { size, content: rawContent } = !content ? { size: 0, content: Uint8Array.from([]) } : getDecodedContent(content);\n  let deflatedContent = void 0;\n  let deflatedSize = void 0;\n  let deflationPerformed = false;\n  const shouldDeflate = currentFile.type === \"file\" && rawContent && size > 0;\n  if (shouldDeflate) {\n    const result = yield deflateLocalFile(rawContent);\n    deflatedContent = result.content;\n    deflatedSize = result.size;\n    deflationPerformed = true;\n  }\n  const headers = getHeaders(\n    currentFile,\n    deflationPerformed,\n    offset,\n    size,\n    rawContent,\n    deflatedSize\n  );\n  return __spreadProps2(__spreadValues2({}, headers), {\n    content: deflatedContent || rawContent,\n    isCompressed: deflationPerformed\n  });\n});\nvar getHeaderAndContent = (currentFile, offset) => {\n  const { content } = currentFile;\n  const { content: rawContent } = !content ? { content: Uint8Array.from([]) } : getDecodedContent(content);\n  const headers = getHeaders(\n    currentFile,\n    false,\n    offset,\n    rawContent.length,\n    rawContent,\n    void 0\n  );\n  return __spreadProps2(__spreadValues2({}, headers), {\n    content: rawContent,\n    isCompressed: false\n  });\n};\nvar getHeaders = (currentFile, isCompressed, offset, rawSize, rawContent, deflatedSize) => {\n  const {\n    content,\n    path,\n    created: creationDate\n  } = currentFile;\n  const time = convertTime(creationDate);\n  const dt = convertDate(creationDate);\n  const crcFlag = getCrcFromCrc32Table(rawContent);\n  const zipSize = deflatedSize !== void 0 ? deflatedSize : rawSize;\n  const utfPath = utf8_encode2(path);\n  const isUTF8 = utfPath !== path;\n  let extraFields = \"\";\n  if (isUTF8) {\n    const uExtraFieldPath = convertDecToHex(1, 1) + convertDecToHex(getCrcFromCrc32Table(utfPath), 4) + utfPath;\n    extraFields = \"up\" + convertDecToHex(uExtraFieldPath.length, 2) + uExtraFieldPath;\n  }\n  const commonHeader = \"\u0014\\0\" + // version needed to extract\n  (isUTF8 ? \"\\0\\b\" : \"\\0\\0\") + // Language encoding flag (EFS) (12th bit turned on)\n  convertDecToHex(isCompressed ? 8 : 0, 2) + // As per ECMA-376 Part 2 specs\n  convertDecToHex(time, 2) + // last modified time\n  convertDecToHex(dt, 2) + // last modified date\n  convertDecToHex(zipSize ? crcFlag : 0, 4) + convertDecToHex(deflatedSize != null ? deflatedSize : rawSize, 4) + // compressed size\n  convertDecToHex(rawSize, 4) + // uncompressed size\n  convertDecToHex(utfPath.length, 2) + // file name length\n  convertDecToHex(extraFields.length, 2);\n  const localFileHeader = \"PK\u0003\u0004\" + commonHeader + utfPath + extraFields;\n  const centralDirectoryHeader = \"PK\u0001\u0002\u0014\\0\" + commonHeader + // file header\n  \"\\0\\0\\0\\0\\0\\0\" + (content ? \"\\0\\0\\0\\0\" : \"\u0010\\0\\0\\0\") + // external file attributes\n  convertDecToHex(offset, 4) + // relative offset of local header\n  utfPath + // file name\n  extraFields;\n  return {\n    localFileHeader: Uint8Array.from(localFileHeader, (c) => c.charCodeAt(0)),\n    centralDirectoryHeader: Uint8Array.from(centralDirectoryHeader, (c) => c.charCodeAt(0))\n  };\n};\nvar buildCentralDirectoryEnd = (tLen, cLen, lLen) => {\n  const str = \"PK\u0005\u0006\\0\\0\\0\\0\" + convertDecToHex(tLen, 2) + // total number of entries in the central folder\n  convertDecToHex(tLen, 2) + // total number of entries in the central folder\n  convertDecToHex(cLen, 4) + // size of the central folder\n  convertDecToHex(lLen, 4) + // central folder start offset\n  \"\\0\\0\";\n  return Uint8Array.from(str, (c) => c.charCodeAt(0));\n};\nvar convertStringToByteArray = (str) => {\n  const bytes = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n  return bytes;\n};\nvar getDecodedContent = (content) => {\n  let contentToUse;\n  if (typeof content === \"string\") {\n    const base64String = atob(content.split(\";base64,\")[1]);\n    contentToUse = convertStringToByteArray(base64String);\n  } else {\n    contentToUse = content;\n  }\n  return {\n    size: contentToUse.length,\n    content: contentToUse\n  };\n};\nvar ZipContainer = class {\n  static addFolders(paths) {\n    paths.forEach(this.addFolder.bind(this));\n  }\n  static addFolder(path) {\n    this.folders.push({\n      path,\n      created: /* @__PURE__ */ new Date(),\n      isBase64: false,\n      type: \"folder\"\n    });\n  }\n  static addFile(path, content, isBase64 = false) {\n    this.files.push({\n      path,\n      created: /* @__PURE__ */ new Date(),\n      content: isBase64 ? content : new TextEncoder().encode(content),\n      isBase64,\n      type: \"file\"\n    });\n  }\n  static getZipFile(mimeType = \"application/zip\") {\n    return __async(this, null, function* () {\n      const textOutput = yield this.buildCompressedFileStream();\n      this.clearStream();\n      return new Blob([textOutput], { type: mimeType });\n    });\n  }\n  static getUncompressedZipFile(mimeType = \"application/zip\") {\n    const textOutput = this.buildFileStream();\n    this.clearStream();\n    return new Blob([textOutput], { type: mimeType });\n  }\n  static clearStream() {\n    this.folders = [];\n    this.files = [];\n  }\n  static packageFiles(files) {\n    let fileData = new Uint8Array(0);\n    let folderData = new Uint8Array(0);\n    let filesContentAndHeaderLength = 0;\n    let folderHeadersLength = 0;\n    for (const currentFile of files) {\n      const {\n        localFileHeader,\n        centralDirectoryHeader,\n        content\n      } = currentFile;\n      const dataWithHeader = new Uint8Array(fileData.length + localFileHeader.length);\n      dataWithHeader.set(fileData);\n      dataWithHeader.set(localFileHeader, fileData.length);\n      fileData = dataWithHeader;\n      const dataWithContent = new Uint8Array(fileData.length + content.length);\n      dataWithContent.set(fileData);\n      dataWithContent.set(content, fileData.length);\n      fileData = dataWithContent;\n      const folderDataWithFolderHeader = new Uint8Array(folderData.length + centralDirectoryHeader.length);\n      folderDataWithFolderHeader.set(folderData);\n      folderDataWithFolderHeader.set(centralDirectoryHeader, folderData.length);\n      folderData = folderDataWithFolderHeader;\n      filesContentAndHeaderLength += localFileHeader.length + content.length;\n      folderHeadersLength += centralDirectoryHeader.length;\n    }\n    const folderEnd = buildCentralDirectoryEnd(\n      files.length,\n      folderHeadersLength,\n      filesContentAndHeaderLength\n    );\n    const result = new Uint8Array(fileData.length + folderData.length + folderEnd.length);\n    result.set(fileData);\n    result.set(folderData, fileData.length);\n    result.set(folderEnd, fileData.length + folderData.length);\n    return result;\n  }\n  static buildCompressedFileStream() {\n    return __async(this, null, function* () {\n      const totalFiles = [...this.folders, ...this.files];\n      const readyFiles = [];\n      let lL = 0;\n      for (const currentFile of totalFiles) {\n        const output = yield getDeflatedHeaderAndContent(currentFile, lL);\n        const { localFileHeader, content } = output;\n        readyFiles.push(output);\n        lL += localFileHeader.length + content.length;\n      }\n      return this.packageFiles(readyFiles);\n    });\n  }\n  static buildFileStream() {\n    const totalFiles = [...this.folders, ...this.files];\n    const readyFiles = [];\n    let lL = 0;\n    for (const currentFile of totalFiles) {\n      const readyFile = getHeaderAndContent(currentFile, lL);\n      const { localFileHeader, content } = readyFile;\n      readyFiles.push(readyFile);\n      lL += localFileHeader.length + content.length;\n    }\n    return this.packageFiles(readyFiles);\n  }\n};\nZipContainer.folders = [];\nZipContainer.files = [];\n\n// packages/ag-grid-community/src/main.ts\nModuleRegistry.__registerModules([ClientSideRowModelModule, InfiniteRowModelModule, CsvExportModule], false, void 0);\nexport {\n  ALWAYS_SYNC_GLOBAL_EVENTS,\n  AbstractHeaderCellCtrl,\n  AgAbstractField,\n  AgAbstractLabel,\n  AgAutocomplete,\n  AgCheckbox,\n  AgDialog,\n  AgGroupComponent,\n  AgInputDateField,\n  AgInputNumberField,\n  AgInputRange,\n  AgInputTextArea,\n  AgInputTextField,\n  AgMenuItemComponent,\n  AgMenuItemRenderer,\n  AgMenuList,\n  AgMenuPanel,\n  AgPanel,\n  AgPickerField,\n  AgPromise,\n  AgPromiseStatus,\n  AgRadioButton,\n  AgRichSelect,\n  AgSelect,\n  AgSlider,\n  AgStackComponentsRegistry,\n  AgToggleButton,\n  AlignedGridsService,\n  AnimateShowChangeCellRenderer,\n  AnimateSlideCellRenderer,\n  AnimationFrameService,\n  AutoScrollService,\n  AutoWidthCalculator,\n  Autowired,\n  BarColumnLabelPlacement,\n  BaseComponentWrapper,\n  BaseCreator,\n  BaseGridSerializingSession,\n  Bean,\n  BeanStub,\n  Beans,\n  BodyDropPivotTarget,\n  BodyDropTarget,\n  CellComp,\n  CellCtrl,\n  CellNavigationService,\n  CellPositionUtils,\n  CellRangeType,\n  ChangedPath,\n  ChartMappings,\n  CheckboxCellEditor,\n  CheckboxCellRenderer,\n  CheckboxSelectionComponent,\n  ClientSideRowModelModule,\n  ClientSideRowModelSteps,\n  Column,\n  ColumnApi,\n  ColumnFactory,\n  ColumnGroup,\n  ColumnKeyCreator,\n  ColumnModel,\n  Component,\n  ComponentUtil,\n  Context,\n  CssClassApplier,\n  CssClassManager,\n  CsvCreator,\n  CsvExportModule,\n  CtrlsService,\n  DataTypeService,\n  DateCellEditor,\n  DateFilter,\n  DateStringCellEditor,\n  DisplayedGroupCreator,\n  Downloader,\n  DragAndDropService,\n  DragService,\n  DragSourceType,\n  Environment,\n  EventService,\n  Events,\n  ExcelFactoryMode,\n  ExpansionService,\n  ExpressionService,\n  FilterManager,\n  FilterWrapperComp,\n  FloatingFilterMapper,\n  FocusService,\n  GROUP_AUTO_COLUMN_ID,\n  Grid,\n  GridApi,\n  GridBodyComp,\n  GridBodyCtrl,\n  GridComp,\n  GridCoreCreator,\n  GridCtrl,\n  GridHeaderComp,\n  GridHeaderCtrl,\n  GridOptionsService,\n  GridSerializer,\n  GroupCellRenderer,\n  GroupCellRendererCtrl,\n  GroupInstanceIdCreator,\n  HeaderCellCtrl,\n  HeaderFilterCellComp,\n  HeaderFilterCellCtrl,\n  HeaderGroupCellCtrl,\n  HeaderNavigationDirection,\n  HeaderNavigationService,\n  HeaderPositionUtils,\n  HeaderRowComp,\n  HeaderRowContainerComp,\n  HeaderRowContainerCtrl,\n  HeaderRowCtrl,\n  HeaderRowType,\n  HorizontalDirection,\n  HorizontalResizeService,\n  InfiniteRowModelModule,\n  KeyCode,\n  LargeTextCellEditor,\n  LayoutCssClasses,\n  LocaleService,\n  Logger,\n  LoggerFactory,\n  ManagedFocusFeature,\n  MenuService,\n  ModuleNames,\n  ModuleRegistry,\n  MouseEventService,\n  MoveColumnFeature,\n  NavigationService,\n  NumberCellEditor,\n  NumberFilter,\n  NumberSequence,\n  Optional,\n  PaginationProxy,\n  PillDragComp,\n  PillDropZonePanel,\n  PinnedRowModel,\n  PopupComponent,\n  PopupEditorWrapper,\n  PopupService,\n  PositionableFeature,\n  PostConstruct,\n  PreConstruct,\n  PreDestroy,\n  PropertyKeys,\n  ProvidedColumnGroup,\n  ProvidedFilter,\n  Qualifier,\n  QuerySelector,\n  RefSelector,\n  ResizeObserverService,\n  RowAnimationCssClasses,\n  RowContainerComp,\n  RowContainerCtrl,\n  RowContainerName,\n  RowContainerType,\n  RowCtrl,\n  RowHighlightPosition,\n  RowNode,\n  RowNodeBlock,\n  RowNodeBlockLoader,\n  RowNodeSorter,\n  RowPositionUtils,\n  RowRenderer,\n  RowType,\n  ScalarFilter,\n  ScrollVisibleService,\n  SelectCellEditor,\n  SelectableService,\n  SelectionHandleType,\n  ServerSideTransactionResultStatus,\n  SetLeftFeature,\n  SimpleFilter,\n  SortController,\n  SortIndicatorComp,\n  StandardMenuFactory,\n  StylingService,\n  TabGuardClassNames,\n  TabGuardComp,\n  TabGuardCtrl,\n  TabbedLayout,\n  TextCellEditor,\n  TextFilter,\n  TextFloatingFilter,\n  Timer,\n  TooltipFeature,\n  TooltipStateManager,\n  TouchListener,\n  UserComponentFactory,\n  UserComponentRegistry,\n  ValueCache,\n  ValueService,\n  VanillaFrameworkOverrides,\n  VerticalDirection,\n  VirtualList,\n  VirtualListDragFeature,\n  XmlFactory,\n  ZipContainer,\n  _,\n  createGrid,\n  getRowContainerTypeForName,\n  provideGlobalGridOptions\n};\n"],
  "mappings": "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",
  "names": ["React", "ReactDebugCurrentFrame", "error", "prefix", "sanitizeURL", "_", "Component", "values", "useContext", "useState", "useMemo", "useRef", "useLayoutEffect", "useCallback", "noop", "onError", "fatalError", "renderToStaticMarkup", "React", "ReactDebugCurrentFrame", "error", "prefix", "sanitizeURL", "_", "Component", "values", "useContext", "useState", "useMemo", "useRef", "useLayoutEffect", "useCallback", "noop", "_ModuleRegistry", "_Column", "_ProvidedColumnGroup", "process", "_BeanStub", "_ColumnGroup", "counter", "_PropertyKeys", "_ComponentUtil", "_TooltipStateManager", "_Component", "_ManagedFocusFeature", "_ProvidedFilter", "_AgList", "_AgSelect", "_SimpleFilter", "_DateFilter", "_NumberFilter", "_TextFilter", "_TouchListener", "_SortIndicatorComp", "_HeaderComp", "_HeaderGroupComp", "_LargeTextCellEditor", "_RowNode", "_GroupCellRenderer", "_LoadingCellRenderer", "_SkeletonCellRenderer", "_LoadingOverlayComponent", "_NoRowsOverlayComponent", "_CheckboxCellRenderer", "_HeaderFilterCellComp", "_CellCtrl", "_RowCtrl", "_RowContainerCtrl", "_PopupEditorWrapper", "_HeaderCellComp", "_HeaderGroupCellComp", "_AbstractHeaderCellCtrl", "_HeaderRowContainerComp", "_GridHeaderComp", "_TabbedLayout", "_RowNodeBlock", "_VirtualList", "_AgSlider", "_AgGroupComponent", "_DefaultTitleBar", "_AgMenuItemComponent", "_AgPanel", "_AgAutocompleteList", "_AgAutocomplete", "_PillDragComp", "_PillDropZonePanel", "counter", "_OverlayWrapperComponent", "_UndoRedoStack", "process", "_FakeHScrollComp", "_FakeVScrollComp", "_ClientSideNodeManager", "import_react", "import_react", "import_react", "import_react_dom", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react_dom", "import_react", "import_react", "__defProp", "__defProps", "__getOwnPropDescs", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__spreadProps", "React", "_PortalManager", "React2", "ReactDOM", "GroupCellRenderer", "useState2", "React3", "HeaderCellComp", "useContext2", "useState3", "useRef2", "useCallback2", "useLayoutEffect2", "useEffect2", "useMemo2", "React4", "memo2", "HeaderGroupCellComp", "useContext3", "useState4", "setAriaExpanded", "useMemo3", "useRef3", "useCallback3", "useLayoutEffect3", "useEffect3", "React5", "memo3", "HeaderFilterCellComp", "useContext4", "useState5", "useRef4", "useCallback4", "useLayoutEffect4", "useMemo4", "React6", "memo4", "HeaderRowComp", "useMemo5", "useState6", "useRef5", "useCallback5", "React7", "memo5", "HeaderRowContainerComp", "setDisplayed", "useState7", "useContext5", "useRef6", "useCallback6", "React8", "memo6", "GridHeaderComp", "useState8", "useContext6", "useRef7", "useCallback7", "useMemo7", "React9", "memo7", "useEffect4", "useRef8", "useState9", "useEffect5", "useState10", "useContext7", "React10", "createPortal2", "memo8", "useContext8", "useCallback8", "useEffect6", "React11", "CellComp", "useContext9", "useState11", "useMemo8", "useRef9", "useCallback9", "useLayoutEffect5", "memo9", "RowComp", "useContext10", "useRef10", "useState12", "useEffect7", "useCallback10", "useLayoutEffect6", "useMemo9", "React12", "memo10", "RowContainerComp", "useContext11", "useMemo10", "useRef11", "useState13", "useCallback11", "React13", "memo11", "GridBodyComp", "useContext12", "useState14", "useRef12", "useCallback12", "useMemo11", "React14", "memo12", "useContext13", "useRef13", "useImperativeHandle2", "useCallback13", "React15", "TabGuardComp", "forwardRef2", "memo13", "GridComp", "useState15", "useRef14", "useCallback14", "useMemo12", "useEffect8", "React16", "memo14", "useRef15", "useState16", "useCallback15", "useMemo13", "useEffect9", "React17", "forwardRef3", "useContext14", "useImperativeHandle3", "Component2", "React18", "useContext15"]
}
